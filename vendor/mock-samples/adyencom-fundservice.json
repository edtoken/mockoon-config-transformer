{
  "uuid": "22ddac1b-bb4b-41f9-a4e3-026662bb5aca",
  "lastMigration": 24,
  "name": "Adyen for Platforms: Fund API",
  "endpointPrefix": "cal/services/Fund/v6",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "33fee8b7-892d-48db-9ed2-c06dc8607c5f",
      "documentation": "Retrieve the balance(s) of an account holder.",
      "method": "post",
      "endpoint": "accountHolderBalance",
      "responses": [
        {
          "uuid": "04093a89-1419-4a62-a3b4-d5aeeadbcae1",
          "body": "{\n  \"balancePerAccount\": [\n    {\n      \"accountCode\": \"\",\n      \"detailBalance\": {\n        \"balance\": [\n          {\n            \"currency\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"onHoldBalance\": [\n          {\n            \"currency\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"pendingBalance\": [\n          {\n            \"currency\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        ]\n      }\n    }\n  ],\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\",\n  \"totalBalance\": {\n    \"balance\": [\n      {\n        \"currency\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"onHoldBalance\": [\n      {\n        \"currency\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"pendingBalance\": [\n      {\n        \"currency\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d157428a-f658-46e8-9fce-4ca31fc0b4bd",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a105d05-2e4d-421e-bf10-6fd85a5c9d7d",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25e6969c-cd61-4057-b613-56127496b3fc",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "857caeea-0a3a-4abb-9555-d8a2e3307ea8",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23bc39e5-9d46-40e8-9878-6c72b323a02c",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37ca7c0a-52a0-47ef-8b6c-16b090187a95",
      "documentation": "Retrieve a list of transactions.",
      "method": "post",
      "endpoint": "accountHolderTransactionList",
      "responses": [
        {
          "uuid": "38dac704-e8bf-4247-9fda-8239baadd7ba",
          "body": "{\n  \"accountTransactionLists\": [\n    {\n      \"accountCode\": \"\",\n      \"hasNextPage\": {{faker 'datatype.boolean'}},\n      \"transactions\": [\n        {\n          \"amount\": {\n            \"currency\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"bankAccountDetail\": {\n            \"accountNumber\": \"\",\n            \"accountType\": \"\",\n            \"bankAccountName\": \"\",\n            \"bankAccountReference\": \"\",\n            \"bankAccountUUID\": \"\",\n            \"bankBicSwift\": \"\",\n            \"bankCity\": \"\",\n            \"bankCode\": \"\",\n            \"bankName\": \"\",\n            \"branchCode\": \"\",\n            \"checkCode\": \"\",\n            \"countryCode\": \"\",\n            \"currencyCode\": \"\",\n            \"iban\": \"\",\n            \"ownerCity\": \"\",\n            \"ownerCountryCode\": \"\",\n            \"ownerDateOfBirth\": \"\",\n            \"ownerHouseNumberOrName\": \"\",\n            \"ownerName\": \"\",\n            \"ownerNationality\": \"\",\n            \"ownerPostalCode\": \"\",\n            \"ownerState\": \"\",\n            \"ownerStreet\": \"\",\n            \"primaryAccount\": {{faker 'datatype.boolean'}},\n            \"taxId\": \"\",\n            \"urlForVerification\": \"\"\n          },\n          \"captureMerchantReference\": \"\",\n          \"capturePspReference\": \"\",\n          \"creationDate\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"destinationAccountCode\": \"\",\n          \"disputePspReference\": \"\",\n          \"disputeReasonCode\": \"\",\n          \"merchantReference\": \"\",\n          \"paymentPspReference\": \"\",\n          \"payoutPspReference\": \"\",\n          \"pspReference\": \"\",\n          \"sourceAccountCode\": \"\",\n          \"transactionStatus\": \"{{oneOf (array 'BalanceNotPaidOutTransfer' 'Chargeback' 'ChargebackCorrection' 'ChargebackCorrectionReceived' 'ChargebackReceived' 'ChargebackReversed' 'ChargebackReversedCorrection' 'ChargebackReversedCorrectionReceived' 'ChargebackReversedReceived' 'Converted' 'CreditClosed' 'CreditFailed' 'CreditReversed' 'CreditReversedReceived' 'CreditSuspended' 'Credited' 'DebitFailed' 'DebitReversedReceived' 'Debited' 'DebitedReversed' 'DepositCorrectionCredited' 'DepositCorrectionDebited' 'Fee' 'FundTransfer' 'FundTransferReversed' 'InvoiceDeductionCredited' 'InvoiceDeductionDebited' 'ManualCorrected' 'ManualCorrectionCredited' 'ManualCorrectionDebited' 'MerchantPayin' 'MerchantPayinReversed' 'Payout' 'PayoutReversed' 'PendingCredit' 'PendingDebit' 'PendingFundTransfer' 'SecondChargeback' 'SecondChargebackCorrection' 'SecondChargebackCorrectionReceived' 'SecondChargebackReceived')}}\",\n          \"transferCode\": \"\"\n        }\n      ]\n    }\n  ],\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6af95a1c-4018-439c-9575-a45ddb8b3ef7",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d40adeeb-e58c-4c9e-aeed-cc8bd1e5b216",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27826311-db21-4f02-b173-54355b1fb2d1",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f0835c1-7531-48ab-b957-e8fd06c34013",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0426e14f-83e7-4fb0-a106-486857fbb81b",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4d49ede-fa8d-4b86-89ae-cdd112dc2122",
      "documentation": "Send a direct debit request.",
      "method": "post",
      "endpoint": "debitAccountHolder",
      "responses": [
        {
          "uuid": "3606a773-30d4-4903-baec-797f0916c83a",
          "body": "{\n  \"accountHolderCode\": \"\",\n  \"bankAccountUUID\": \"\",\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReferences\": [\n    \"\"\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "feead9cb-faff-4606-91a0-159ef686e7c1",
          "body": "{\n  \"accountHolderCode\": \"\",\n  \"bankAccountUUID\": \"\",\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReferences\": [\n    \"\"\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3dcced89-787c-4ae1-839f-16371b42b610",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "295cd4b5-75a8-45be-9545-f05869b138a9",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edc95f59-ecb3-4f97-87d8-08e9ee2669a4",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00a00d8c-ed07-49b6-abff-f7624a8e537a",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2dbbe0f6-5213-4352-88c4-992f46102ce3",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4b04be1-4d2d-4186-9796-994a96914549",
      "documentation": "Disburse a specified amount from an account to the account holder.",
      "method": "post",
      "endpoint": "payoutAccountHolder",
      "responses": [
        {
          "uuid": "c719fdf1-7090-41c6-9a53-f5e9f6fcc952",
          "body": "{\n  \"bankAccountUUID\": \"\",\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"payoutSpeed\": \"{{oneOf (array 'INSTANT' 'SAME_DAY' 'STANDARD')}}\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc7aa62a-ba5d-406a-89be-612c55e87d19",
          "body": "{\n  \"bankAccountUUID\": \"\",\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"payoutSpeed\": \"{{oneOf (array 'INSTANT' 'SAME_DAY' 'STANDARD')}}\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1890ff8-2d3c-4dba-9a5a-07ccd1c5ed56",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44e3aa3f-2431-49c1-aa43-3fbf4f3eab60",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f38493d-5032-427f-927a-212a53e565ed",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad4e38b6-dd20-414e-9c2a-337bfe9babcc",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06b6ada4-55a7-4080-b8e2-0a619a242095",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "597e235d-bad2-4889-ab2e-8caa0e326435",
      "documentation": "Make a refund of the existing transfer funds transfer.",
      "method": "post",
      "endpoint": "refundFundsTransfer",
      "responses": [
        {
          "uuid": "4821960e-26d1-4ae4-9bf5-f634b870a77a",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"message\": \"\",\n  \"originalReference\": \"\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "829e46db-ce94-4f4f-a55a-923e079ca793",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"message\": \"\",\n  \"originalReference\": \"\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33ab6087-b30d-404a-9dd3-79116914569b",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0011b535-2e46-4e37-9d58-ffd5cd8a95ce",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0af8a8e2-ba1d-44b8-a707-116ceb68512f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c811dd7d-1f97-4c0d-9d12-2af8be710072",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed2aa3aa-fecc-4552-9b29-dba607ce0928",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3acc8fc-632b-42a2-b3f9-a8b45772c1ae",
      "documentation": "Refund all transactions of an account since the most recent payout.",
      "method": "post",
      "endpoint": "refundNotPaidOutTransfers",
      "responses": [
        {
          "uuid": "5cbe5d2d-0df2-4022-bb23-e2279318b7e5",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0eee5da-f2b9-4e61-af16-390af14b5985",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3aed88a-de1c-46a0-9723-989eee3013e3",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfd12580-39b5-4683-94d4-ac3f9bfed868",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd660488-ad49-4c40-9cfa-2d6c0612364c",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d03a1fd7-23a6-408c-a9f0-f3e1af054bdf",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "129ac9f0-7609-45cf-b0db-884e2b6faf1c",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b97fa8d2-731b-43a5-901d-d952b1d2facd",
      "documentation": "Designate an account to be the beneficiary of a separate account and transfer the benefactor's current balance to the beneficiary.",
      "method": "post",
      "endpoint": "setupBeneficiary",
      "responses": [
        {
          "uuid": "fd4a0ca1-80a7-4533-bc37-2ec5f5a8eb82",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c443bc38-aae8-4fd2-9099-1fa331464997",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8d98508-34d0-4477-95d3-70be1ae44e2d",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e42b409-9dfe-4bda-b4e1-017d5ecb139e",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "313378b7-6174-492e-8405-f01fff59c594",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5c6d740-9cfb-4771-a9d2-e59fb24e4b4a",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6138319e-6c32-4750-b196-3a4529f2d01a",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97169c2b-f5ad-4289-9458-4adec71d7522",
      "documentation": "Transfer funds from one platform account to another.",
      "method": "post",
      "endpoint": "transferFunds",
      "responses": [
        {
          "uuid": "b2d7c2d2-60a5-4e5d-8d19-7041590b1f1c",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e328061c-e48d-4b70-aa45-57d64154a1f3",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"merchantReference\": \"\",\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted - the request has been accepted for processing, but the processing has not been completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bf10758-4988-4fe8-af99-91c975491895",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ce2c7de-671c-4256-9b3f-ce4593dbee07",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37299910-2d0d-47a1-89f1-da72a4f55667",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "167f27c1-a52b-4bcc-b0e2-5cdf183d513f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c517074-520b-47d6-96a7-7949b6ea2aee",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}