{
  "uuid": "4d310500-d602-481a-9d1d-f8f237e4bbeb",
  "lastMigration": 24,
  "name": "Adyen for Platforms: Notification Configuration API",
  "endpointPrefix": "cal/services/Notification/v6",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "db53cf34-5b5a-4326-95da-dc7417f3e7d9",
      "documentation": "Subscribe to notifications.",
      "method": "post",
      "endpoint": "createNotificationConfiguration",
      "responses": [
        {
          "uuid": "f3a7217f-caf9-4d8e-b223-da966262122e",
          "body": "{\n  \"configurationDetails\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"apiVersion\": {{faker 'datatype.number'}},\n    \"description\": \"\",\n    \"eventConfigs\": [\n      {\n        \"eventType\": \"{{oneOf (array 'ACCOUNT_CLOSED' 'ACCOUNT_CREATED' 'ACCOUNT_FUNDS_BELOW_THRESHOLD' 'ACCOUNT_HOLDER_CREATED' 'ACCOUNT_HOLDER_LIMIT_REACHED' 'ACCOUNT_HOLDER_PAYOUT' 'ACCOUNT_HOLDER_STATUS_CHANGE' 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE' 'ACCOUNT_HOLDER_UPCOMING_DEADLINE' 'ACCOUNT_HOLDER_UPDATED' 'ACCOUNT_HOLDER_VERIFICATION' 'ACCOUNT_UPDATED' 'BENEFICIARY_SETUP' 'COMPENSATE_NEGATIVE_BALANCE' 'DIRECT_DEBIT_INITIATED' 'PAYMENT_FAILURE' 'REFUND_FUNDS_TRANSFER' 'REPORT_AVAILABLE' 'SCHEDULED_REFUNDS' 'TRANSFER_FUNDS' 'TRANSFER_NOT_PAIDOUT_TRANSFERS')}}\",\n        \"includeMode\": \"{{oneOf (array 'EXCLUDE' 'INCLUDE')}}\"\n      }\n    ],\n    \"hmacSignatureKey\": \"\",\n    \"notificationId\": {{faker 'datatype.number'}},\n    \"notifyPassword\": \"\",\n    \"notifyURL\": \"\",\n    \"notifyUsername\": \"\",\n    \"sslProtocol\": \"{{oneOf (array 'SSL' 'SSLInsecureCiphers' 'TLS' 'TLSv10' 'TLSv10InsecureCiphers' 'TLSv11' 'TLSv12')}}\"\n  },\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d4deed4-a5d4-43b4-8191-65f60ac8bb49",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "952787d0-3dc1-4f0e-adfa-4460492baee3",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b24f18d3-3f89-4574-b980-3240654d8766",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "374cbd14-3e7f-4334-a33b-29a8a11f9ab8",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91ee48ff-af68-4ad0-991e-984b10379e6f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afa81a35-0184-484e-aeb1-9839a93011c8",
      "documentation": "Delete an existing notification subscription configuration.",
      "method": "post",
      "endpoint": "deleteNotificationConfigurations",
      "responses": [
        {
          "uuid": "e67b7a51-91c3-4f37-9fb6-a578c1cc926f",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca439148-eee9-4aa8-bebc-87df274f98dc",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b6bfe1f-67ef-41b3-9864-06dfa234c642",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "220629e4-e461-407f-9ba3-9d06e87b18da",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa80a096-174e-45e6-9b19-2977fb04ee47",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c2687d7-bfb8-47ce-940d-30261aec16ac",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6adcb17c-85f2-4798-b521-c4ef567f7159",
      "documentation": "Retrieve an existing notification subscription configuration.",
      "method": "post",
      "endpoint": "getNotificationConfiguration",
      "responses": [
        {
          "uuid": "6208c3ab-5171-4bb8-ad37-c201a5ca3902",
          "body": "{\n  \"configurationDetails\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"apiVersion\": {{faker 'datatype.number'}},\n    \"description\": \"\",\n    \"eventConfigs\": [\n      {\n        \"eventType\": \"{{oneOf (array 'ACCOUNT_CLOSED' 'ACCOUNT_CREATED' 'ACCOUNT_FUNDS_BELOW_THRESHOLD' 'ACCOUNT_HOLDER_CREATED' 'ACCOUNT_HOLDER_LIMIT_REACHED' 'ACCOUNT_HOLDER_PAYOUT' 'ACCOUNT_HOLDER_STATUS_CHANGE' 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE' 'ACCOUNT_HOLDER_UPCOMING_DEADLINE' 'ACCOUNT_HOLDER_UPDATED' 'ACCOUNT_HOLDER_VERIFICATION' 'ACCOUNT_UPDATED' 'BENEFICIARY_SETUP' 'COMPENSATE_NEGATIVE_BALANCE' 'DIRECT_DEBIT_INITIATED' 'PAYMENT_FAILURE' 'REFUND_FUNDS_TRANSFER' 'REPORT_AVAILABLE' 'SCHEDULED_REFUNDS' 'TRANSFER_FUNDS' 'TRANSFER_NOT_PAIDOUT_TRANSFERS')}}\",\n        \"includeMode\": \"{{oneOf (array 'EXCLUDE' 'INCLUDE')}}\"\n      }\n    ],\n    \"hmacSignatureKey\": \"\",\n    \"notificationId\": {{faker 'datatype.number'}},\n    \"notifyPassword\": \"\",\n    \"notifyURL\": \"\",\n    \"notifyUsername\": \"\",\n    \"sslProtocol\": \"{{oneOf (array 'SSL' 'SSLInsecureCiphers' 'TLS' 'TLSv10' 'TLSv10InsecureCiphers' 'TLSv11' 'TLSv12')}}\"\n  },\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "783356ce-e854-4911-b22f-696a26873167",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7eb57e16-1808-4aa0-8f74-b97b064c556e",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a16f8ca4-16c1-4925-92b4-4fca94c4eaaa",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f531419d-9e89-4e1e-b480-a0912b67ccdf",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b08203f-ba56-422f-a728-0c4501735f7d",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a1b8394-79e3-4415-9c02-7ee4f3fdcfb2",
      "documentation": "Retrieve a list of existing notification subscription configurations.",
      "method": "post",
      "endpoint": "getNotificationConfigurationList",
      "responses": [
        {
          "uuid": "2b0f2521-3c44-4131-b372-022b7fcad9da",
          "body": "{\n  \"configurations\": [\n    {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"apiVersion\": {{faker 'datatype.number'}},\n      \"description\": \"\",\n      \"eventConfigs\": [\n        {\n          \"eventType\": \"{{oneOf (array 'ACCOUNT_CLOSED' 'ACCOUNT_CREATED' 'ACCOUNT_FUNDS_BELOW_THRESHOLD' 'ACCOUNT_HOLDER_CREATED' 'ACCOUNT_HOLDER_LIMIT_REACHED' 'ACCOUNT_HOLDER_PAYOUT' 'ACCOUNT_HOLDER_STATUS_CHANGE' 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE' 'ACCOUNT_HOLDER_UPCOMING_DEADLINE' 'ACCOUNT_HOLDER_UPDATED' 'ACCOUNT_HOLDER_VERIFICATION' 'ACCOUNT_UPDATED' 'BENEFICIARY_SETUP' 'COMPENSATE_NEGATIVE_BALANCE' 'DIRECT_DEBIT_INITIATED' 'PAYMENT_FAILURE' 'REFUND_FUNDS_TRANSFER' 'REPORT_AVAILABLE' 'SCHEDULED_REFUNDS' 'TRANSFER_FUNDS' 'TRANSFER_NOT_PAIDOUT_TRANSFERS')}}\",\n          \"includeMode\": \"{{oneOf (array 'EXCLUDE' 'INCLUDE')}}\"\n        }\n      ],\n      \"hmacSignatureKey\": \"\",\n      \"notificationId\": {{faker 'datatype.number'}},\n      \"notifyPassword\": \"\",\n      \"notifyURL\": \"\",\n      \"notifyUsername\": \"\",\n      \"sslProtocol\": \"{{oneOf (array 'SSL' 'SSLInsecureCiphers' 'TLS' 'TLSv10' 'TLSv10InsecureCiphers' 'TLSv11' 'TLSv12')}}\"\n    }\n  ],\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92f0adb3-9c26-4c2e-b78f-803e24ad6140",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "125b11e5-6d8c-47f2-9d46-5b178f5b8a14",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45d35dcc-c8ac-4c0e-8354-8407f3229536",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d41072b1-1385-445c-ade4-c882c650042a",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b452904-3090-401f-8ba2-89ddfece05b8",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ae9e1dd-a7cb-4eca-aaa8-e805a72dd641",
      "documentation": "Test an existing notification configuration.",
      "method": "post",
      "endpoint": "testNotificationConfiguration",
      "responses": [
        {
          "uuid": "b5ee545e-7c00-4b49-a20c-bb43c25244e2",
          "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"eventTypes\": [\n    \"{{oneOf (array 'ACCOUNT_CLOSED' 'ACCOUNT_CREATED' 'ACCOUNT_FUNDS_BELOW_THRESHOLD' 'ACCOUNT_HOLDER_CREATED' 'ACCOUNT_HOLDER_LIMIT_REACHED' 'ACCOUNT_HOLDER_PAYOUT' 'ACCOUNT_HOLDER_STATUS_CHANGE' 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE' 'ACCOUNT_HOLDER_UPCOMING_DEADLINE' 'ACCOUNT_HOLDER_UPDATED' 'ACCOUNT_HOLDER_VERIFICATION' 'ACCOUNT_UPDATED' 'BENEFICIARY_SETUP' 'COMPENSATE_NEGATIVE_BALANCE' 'DIRECT_DEBIT_INITIATED' 'PAYMENT_FAILURE' 'REFUND_FUNDS_TRANSFER' 'REPORT_AVAILABLE' 'SCHEDULED_REFUNDS' 'TRANSFER_FUNDS' 'TRANSFER_NOT_PAIDOUT_TRANSFERS')}}\"\n  ],\n  \"exchangeMessages\": [\n    {\n      \"messageCode\": \"\",\n      \"messageDescription\": \"\"\n    }\n  ],\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"notificationId\": {{faker 'datatype.number'}},\n  \"okMessages\": [\n    \"\"\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "095ec11a-2ab9-43d5-ab10-7f90764ae739",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1eb0c9da-e698-4660-b3d5-5a466a8d94cf",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aff6cd27-5a8e-4afc-9d32-5a13c272e240",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "820539a7-e8fc-4844-9740-60bd80a5db52",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7ffc89e-0608-4ac6-b33a-ff34e618ee6b",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb04c530-33e4-4e75-bd16-df8eff3e22f9",
      "documentation": "Update an existing notification subscription configuration.",
      "method": "post",
      "endpoint": "updateNotificationConfiguration",
      "responses": [
        {
          "uuid": "d2b239ec-f05e-4db4-822a-2a030a851e5b",
          "body": "{\n  \"configurationDetails\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"apiVersion\": {{faker 'datatype.number'}},\n    \"description\": \"\",\n    \"eventConfigs\": [\n      {\n        \"eventType\": \"{{oneOf (array 'ACCOUNT_CLOSED' 'ACCOUNT_CREATED' 'ACCOUNT_FUNDS_BELOW_THRESHOLD' 'ACCOUNT_HOLDER_CREATED' 'ACCOUNT_HOLDER_LIMIT_REACHED' 'ACCOUNT_HOLDER_PAYOUT' 'ACCOUNT_HOLDER_STATUS_CHANGE' 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE' 'ACCOUNT_HOLDER_UPCOMING_DEADLINE' 'ACCOUNT_HOLDER_UPDATED' 'ACCOUNT_HOLDER_VERIFICATION' 'ACCOUNT_UPDATED' 'BENEFICIARY_SETUP' 'COMPENSATE_NEGATIVE_BALANCE' 'DIRECT_DEBIT_INITIATED' 'PAYMENT_FAILURE' 'REFUND_FUNDS_TRANSFER' 'REPORT_AVAILABLE' 'SCHEDULED_REFUNDS' 'TRANSFER_FUNDS' 'TRANSFER_NOT_PAIDOUT_TRANSFERS')}}\",\n        \"includeMode\": \"{{oneOf (array 'EXCLUDE' 'INCLUDE')}}\"\n      }\n    ],\n    \"hmacSignatureKey\": \"\",\n    \"notificationId\": {{faker 'datatype.number'}},\n    \"notifyPassword\": \"\",\n    \"notifyURL\": \"\",\n    \"notifyUsername\": \"\",\n    \"sslProtocol\": \"{{oneOf (array 'SSL' 'SSLInsecureCiphers' 'TLS' 'TLSv10' 'TLSv10InsecureCiphers' 'TLSv11' 'TLSv12')}}\"\n  },\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d20bd141-ea81-4f7c-bfc7-0c50dfe2412f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8bac403-eb01-4504-90c1-792fe9c0c018",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fb47e52-1356-47dd-8ec3-e978ad2d71b4",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48527174-f83c-420d-ba03-d8b469d6f4d7",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0d3c003-273e-41d1-9617-7cab7766dc3f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}