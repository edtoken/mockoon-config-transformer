{
  "uuid": "982790e6-4e91-4ed2-9e87-95e0a0a3927f",
  "lastMigration": 24,
  "name": "Postman API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d1b5ff9d-ebcb-45ea-a4d7-65409daff492",
      "documentation": "Get all APIs",
      "method": "get",
      "endpoint": "apis",
      "responses": [
        {
          "uuid": "92986f36-3817-4bdd-b283-dd0c06fc7155",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "edb2b77b-b563-498f-8e07-0a3f595abd01",
      "documentation": "Create API",
      "method": "post",
      "endpoint": "apis",
      "responses": [
        {
          "uuid": "4c387db0-e868-43d3-ab4e-20a386c1c2c5",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3555d7d-c8cf-43ea-a394-b61481c0f94e",
      "documentation": "Delete an API",
      "method": "delete",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "a2875bd4-128f-4cbc-aafd-51b40fd8d37a",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete an API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e9d5957-ad3f-414a-a8e9-31268e080350",
      "documentation": "Single API",
      "method": "get",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "0405baf7-ecb4-46f1-947f-88431f42f9fd",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get single API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eaaee771-6da6-440b-a751-8525b4982f52",
      "documentation": "Update an API",
      "method": "put",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "5dcab97a-6cfd-4f75-894c-19b43849e84f",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update an API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ca59902-613f-4969-af77-35f920c3aed7",
      "documentation": "Get All API Versions",
      "method": "get",
      "endpoint": "apis/:apiId/versions",
      "responses": [
        {
          "uuid": "86b3e1a9-04b6-4d62-bec1-2ad58e8f5a56",
          "body": "{\n  \"versions\": [\n    {\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"createdBy\": \"5665\",\n      \"description\": \"Description\",\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get All API versions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6e22eba-edbf-4465-ae01-e15086503b91",
      "documentation": "Create API Version",
      "method": "post",
      "endpoint": "apis/:apiId/versions",
      "responses": [
        {
          "uuid": "f8c7cdba-18ff-4ac9-954a-567cd2601e43",
          "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0fb5e5ef-01d8-4ca7-a5e4-307e057b510d",
      "documentation": "Delete an API Version",
      "method": "delete",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "d65ee4e3-bdcf-42fd-8f1d-1b9c5ed6aba6",
          "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08c4b8fc-17a2-42e5-9c13-607676dbc70d",
      "documentation": "Get an API Version",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "0c867150-6910-432b-b08a-6f9daf7efb11",
          "body": "{\n  \"version\": {\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"createdAt\": \"2019-07-21T16:31:15.000Z\",\n    \"createdBy\": \"5665\",\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"updatedAt\": \"2019-07-21T16:31:15.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88314c70-cc8d-44e8-89f1-5fe5b7b5ce1a",
      "documentation": "Update an API Version",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "8e67292a-a019-4a84-8782-0d742244be43",
          "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdAt\": \"2019-07-26T11:24:15.000Z\",\n    \"createdBy\": \"12\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"updatedAt\": \"2019-08-09T09:27:36.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a2a969b-d8a7-4fb8-b8fd-2ca25a047df1",
      "documentation": "Get contract test relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/contracttest",
      "responses": [
        {
          "uuid": "e10c5fdc-11e7-4671-bc75-f2851ac3fbc4",
          "body": "{\n  \"contracttest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get contract test relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4494a6e7-bfec-415d-9887-d6826fd7020e",
      "documentation": "Get  documentation relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/documentation",
      "responses": [
        {
          "uuid": "81e4de25-543c-468e-9c76-5c43ae2c16f5",
          "body": "{\n  \"documentation\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get documentation relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5342aaa5-a1ef-4cbe-a708-708e5c49e171",
      "documentation": "Get environment relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/environment",
      "responses": [
        {
          "uuid": "2e39c4f5-4bef-424b-960d-89f3ae09d270",
          "body": "{\n  \"environment\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get environment relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd9f3aac-3d2c-4a07-baa3-0a14d32970f0",
      "documentation": "Get integration test relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/integrationtest",
      "responses": [
        {
          "uuid": "c9561a05-2524-4d02-8b73-976a0b096e63",
          "body": "{\n  \"integrationtest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get integration test relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95d9e2f2-5588-4538-a9e0-d51281b5d673",
      "documentation": "Get monitor relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/monitor",
      "responses": [
        {
          "uuid": "b996ff8c-dbb8-46a6-a189-8111a7486b7c",
          "body": "{\n  \"monitor\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"monitorId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get monitor relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc9796a0-3710-4b76-bca3-eefc1f11f202",
      "documentation": "Get linked relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
      "responses": [
        {
          "uuid": "b3af7ee1-29d3-4f51-9c47-2b24f2fad398",
          "body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"updatedAt\": \"2019-08-20T10:18:13.000Z\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get linked relations for an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de2b266f-6398-4390-a55d-46eaf997b71d",
      "documentation": "Create relations",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
      "responses": [
        {
          "uuid": "508505d5-7f6d-46c9-994a-b63ea122c072",
          "body": "{\n  \"contracttest\": [\n    \"5bcece87-ca4b-4e75-a967-2a6845626164\"\n  ],\n  \"documentation\": [\n    \"2084eba6-a17b-4751-8f03-ea60f30ba19c\"\n  ],\n  \"testsuite\": [\n    \"e525fa71-035e-4620-acda-ce878524f1e7\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create multiple relations from existing collections",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e58099d5-9e4b-453e-9a8d-73f0f50db06a",
      "documentation": "Create Schema",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas",
      "responses": [
        {
          "uuid": "b3729645-649e-4b2d-a988-f35d865a6f5c",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37b27c57-104f-4f89-a544-5a9f43999e19",
      "documentation": "Get Schema",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
      "responses": [
        {
          "uuid": "62b22182-5b02-4307-9da7-69eec3062e16",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd25c20a-83f7-40ea-b94d-aef1123d3753",
      "documentation": "Update Schema",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
      "responses": [
        {
          "uuid": "0e24e62d-af5e-4ff2-9712-30f105d39b9a",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfd7facf-c334-4a15-8cba-e57d748a78d1",
      "documentation": "Create collection from schema",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections",
      "responses": [
        {
          "uuid": "289c6a6b-6efa-4e0a-ad65-91d6e27dec29",
          "body": "{\n  \"collection\": {\n    \"id\": \"e6b0d46a-8722-4f42-ab86-f5f473187ddf\",\n    \"uid\": \"112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf\"\n  },\n  \"relations\": [\n    {\n      \"id\": \"4b40f06a-5a6a-448f-bfcd-a6dbcb68da22\",\n      \"type\": \"contracttest\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create collection from schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b77874ba-a3e5-48db-9779-acf675e5cb7b",
      "documentation": "Get test suite relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/testsuite",
      "responses": [
        {
          "uuid": "c52de818-4df1-4d40-89ca-edfa4186b8d9",
          "body": "{\n  \"testsuite\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get test suite relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c72989e-2f8d-48d9-bf8b-6da087751b5a",
      "documentation": "Sync relations with schema",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
      "responses": [
        {
          "uuid": "cb21c606-886f-4b54-9621-a41e70ba6baf",
          "body": "{\n  \"success\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful sync",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a700e9ab-d078-4445-876d-63fa3a70221f",
          "body": "{\n  \"error\": {\n    \"message\": \"Unable to validate. Only the OpenAPI 3.0 schema format is supported.\",\n    \"name\": \"validationFailed\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failed to sync",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57218311-a079-4ba7-b189-4c2962ace4a4",
      "documentation": "All Collections",
      "method": "get",
      "endpoint": "collections",
      "responses": [
        {
          "uuid": "d16bf515-e624-4c82-b7aa-e80e1c365f02",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n      \"name\": \"Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-dac5eac9-148d-a32e-b76b-3edee9da28f7\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a46d1b32-9840-419d-a094-2c73326c67eb",
      "documentation": "Create Collection",
      "method": "post",
      "endpoint": "collections",
      "responses": [
        {
          "uuid": "6c8febfd-2ab1-4702-be3a-a86af4a657c5",
          "body": "{\n  \"collection\": {\n    \"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Collection in a Workspace",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "129dc74e-1724-4edd-9b26-4d7abb09caa4",
          "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: name at info\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Malformed Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d5d74f7-b04e-441a-b075-382c1a8e802c",
      "documentation": "Create a Fork",
      "method": "post",
      "endpoint": "collections/fork/:collection_uid",
      "responses": [
        {
          "uuid": "1735c4d5-b414-41d3-a4cb-992f678275fc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2df4cae1-8df5-4d55-9bff-163e39672906",
      "documentation": "Merge a Fork",
      "method": "post",
      "endpoint": "collections/merge",
      "responses": [
        {
          "uuid": "20fe6385-dc60-4ec5-9e3d-a516006a9325",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7c2a872-a235-4a49-acb4-a72e4e41cc5c",
      "documentation": "Delete Collection",
      "method": "delete",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "e03026c0-af4d-4951-b0c9-4adee71b5757",
          "body": "{\n  \"collection\": {\n    \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n    \"uid\": \"5852-a14c6da7-afba-4a84-bf22-4febbaaced6c\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b07eb50-a609-42ad-ba1e-f33777c39531",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Collection Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d577ab08-a3dd-4b65-8e76-ed6343ed968a",
      "documentation": "Single Collection ",
      "method": "get",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "606f112c-9fde-48a1-a911-c32ec0d6f5bb",
          "body": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"f2e66c2e-5297-e4a5-739e-20cbb90900e3\",\n      \"description\": \"This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n      \"name\": \"Sample Collection\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"event\": [\n          {\n            \"listen\": \"test\",\n            \"script\": {\n              \"exec\": \"var responseJSON;\\ntry {\\n    tests[\\\"Body contains headers\\\"] = responseBody.has(\\\"headers\\\");\\n    responseJSON = JSON.parse(responseBody);\\n    tests[\\\"Header contains host\\\"] = \\\"host\\\" in responseJSON.headers;\\n    tests[\\\"Header contains test parameter sent as part of request header\\\"] = \\\"my-sample-header\\\" in responseJSON.headers;\\n}\\ncatch (e) { }\\n\\n\\n\\n\",\n              \"type\": \"text/javascript\"\n            }\n          }\n        ],\n        \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n        \"name\": \"Request Headers\",\n        \"request\": {\n          \"body\": {\n            \"formdata\": [\n              \"\"\n            ],\n            \"mode\": \"formdata\"\n          },\n          \"description\": \"\",\n          \"header\": [\n            {\n              \"description\": \"\",\n              \"key\": \"my-sample-header\",\n              \"value\": \"Lorem ipsum dolor sit amet\"\n            }\n          ],\n          \"method\": \"GET\",\n          \"url\": \"https://echo.getpostman.com/headers\"\n        },\n        \"response\": [\n          \"\"\n        ]\n      }\n    ],\n    \"variables\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14e8a7c8-fb6d-44dd-85a8-91ecece2e305",
      "documentation": "Update Collection",
      "method": "put",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "c8d30a54-ed6c-40ff-8657-0e2c86fee4ef",
          "body": "{\n  \"collection\": {\n    \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bfe8966f-cfc1-417b-b4a1-b81f726a49d7",
          "body": "{\n  \"error\": {\n    \"message\": \"The collection ID in the path does not match the collection ID in the request body.\",\n    \"name\": \"collectionMismatchError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Collection ID Mismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bcf3480-9855-4fc4-a425-1d4b4f0d90fd",
          "body": "{\n  \"error\": {\n    \"message\": \"You do not have enough permissions to perform this action.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Not Enough Permissions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b95b18a-fc94-4903-8116-70d96285404a",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a54\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Collection Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a36a301-12c4-4a71-b892-2fdae8fc88b7",
      "documentation": "All Environments",
      "method": "get",
      "endpoint": "environments",
      "responses": [
        {
          "uuid": "db6deb9d-2fa7-4e82-9a0c-cc2d359e8cb7",
          "body": "{\n  \"environments\": [\n    {\n      \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n      \"name\": \"Postman Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa558d0c-b970-4ceb-9434-c545406a4b85",
      "documentation": "Create Environment",
      "method": "post",
      "endpoint": "environments",
      "responses": [
        {
          "uuid": "f5ff8607-1e6f-42af-a882-d00807603d33",
          "body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d59b914-8b54-4cb2-ab0f-b0aec0b665a3",
          "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: environment\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failure Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "497af6f3-eaa4-465c-bdc0-1281acf587c4",
      "documentation": "Delete Environment",
      "method": "delete",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "58fbcd8c-9319-4472-b11e-b0baa8bf2e00",
          "body": "{\n  \"environment\": {\n    \"id\": \"4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\",\n    \"uid\": \"5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Environment Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "108a12a4-2a4d-4fbc-af51-b04fddfda7c1",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified environment does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Environment Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1aa3afba-2ae0-4ca5-80e0-670b1087cfa4",
      "documentation": "Single Environment",
      "method": "get",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "54c435fb-fdc5-4ad2-ada9-e8d17a5d7791",
          "body": "{\n  \"environment\": {\n    \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n    \"name\": \"Postman Cloud API.template\",\n    \"values\": [\n      {\n        \"enabled\": true,\n        \"hovered\": {{faker 'datatype.boolean'}},\n        \"key\": \"postman_api_key\",\n        \"type\": \"text\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0d9d1c4b-d21d-4f2c-85e1-ad29de5c74a3",
      "documentation": "Update Environment",
      "method": "put",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "696cd03d-59bc-4826-a436-06019f1d1416",
          "body": "{\n  \"environment\": {\n    \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n    \"name\": \"New Name\",\n    \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "acd10d0a-b389-4e42-88e1-3fb4f1c231ef",
          "body": "{\n  \"error\": {\n    \"message\": \"Invalid type: null (expected object) at environment.values.0\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failure Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d894c5ad-e925-4ba0-bee3-262c336fd4a3",
      "documentation": "Import exported data",
      "method": "post",
      "endpoint": "import/exported",
      "responses": [
        {
          "uuid": "88b7cb92-eb73-42d8-805f-2950365a8270",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b18255a3-3772-4683-868b-f156cb6e5570",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Error: Param Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ac810cf-c7da-40c3-b9b9-20d5e1d8d00f",
      "documentation": "Import external API specification",
      "method": "post",
      "endpoint": "import/openapi",
      "responses": [
        {
          "uuid": "dd828430-7fb8-42a9-9530-16a654f68221",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4b4b3ea9-3842-460e-b8ae-6550a77709c3",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Error: Param Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9cf71437-dd07-4568-828a-3e6531659f06",
      "documentation": "API Key Owner",
      "method": "get",
      "endpoint": "me",
      "responses": [
        {
          "uuid": "790a9de1-27ed-4753-b443-ee8923357cbb",
          "body": "{\n  \"operations\": [\n    {\n      \"limit\": 1000000,\n      \"name\": \"mock_usage\",\n      \"overage\": {{faker 'datatype.number'}},\n      \"usage\": 2382\n    }\n  ],\n  \"user\": {\n    \"avatar\": \"https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6\",\n    \"email\": \"janedoe@example.com\",\n    \"fullName\": \"Jane Doe\",\n    \"id\": \"631643\",\n    \"isPublic\": {{faker 'datatype.boolean'}},\n    \"username\": \"janedoe\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27978593-903a-42eb-8316-c82d46cb8499",
      "documentation": "All Mocks",
      "method": "get",
      "endpoint": "mocks",
      "responses": [
        {
          "uuid": "e5312222-45fa-4774-9bbf-ed15b918850e",
          "body": "{\n  \"mocks\": [\n    {\n      \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n      \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n      \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n      \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n      \"owner\": \"1679925\",\n      \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f57a20c4-3349-421d-9d1d-99798034e27d",
      "documentation": "Create Mock",
      "method": "post",
      "endpoint": "mocks",
      "responses": [
        {
          "uuid": "ae864a15-6cf2-4331-aee9-9b1ac1085498",
          "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62f8e33b-9ba6-4ad1-bb41-0605438d79ad",
      "documentation": "Delete Mock",
      "method": "delete",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "e9ae3533-2aba-4cc2-bfa2-cc07ee7a8a47",
          "body": "{\n  \"mock\": {\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4bc2bde-77cc-4ae4-b2a6-0e421a690233",
      "documentation": "Single Mock",
      "method": "get",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "153a1131-f3b0-4921-a61b-42c61f6576ab",
          "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5d841ff-be50-4ef6-820b-da6167d17364",
      "documentation": "Update Mock",
      "method": "put",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "c8f41115-f333-4626-8093-15ee575ee621",
          "body": "{\n  \"mock\": {\n    \"collection\": \"11582779-fd6797e2-de6b-4699-975c-85290e4c2499\",\n    \"config\": {\n      \"headers\": [\n        \"\"\n      ],\n      \"matchBody\": {{faker 'datatype.boolean'}},\n      \"matchQueryParams\": true,\n      \"matchWildcards\": true\n    },\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\",\n    \"mockUrl\": \"https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io\",\n    \"name\": \"My Mock Server\",\n    \"owner\": \"11582779\",\n    \"uid\": \"11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23071bd8-3e8d-4b83-bb57-065a3b1c60d5",
      "documentation": "Publish Mock",
      "method": "post",
      "endpoint": "mocks/:mock_uid/publish",
      "responses": [
        {
          "uuid": "016676e1-f30d-465c-a230-cbc6a1fa1ae4",
          "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8669caf9-d1d3-4f73-9605-e1d7a7f29330",
      "documentation": "Unpublish Mock",
      "method": "delete",
      "endpoint": "mocks/:mock_uid/unpublish",
      "responses": [
        {
          "uuid": "f70d585a-ff25-4064-b066-8edc023ad0ac",
          "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e5dc3bb-4050-4064-96e4-1261ed470cf9",
      "documentation": "All Monitors",
      "method": "get",
      "endpoint": "monitors",
      "responses": [
        {
          "uuid": "53cd4826-e51f-4ccc-b5c0-146a826f56ec",
          "body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6c77-2031-42d0-9948-76d7251b2dd1\",\n      \"name\": \"Batman & Sherlock Holmes Monitor\",\n      \"owner\": \"5852\",\n      \"uid\": \"5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c732adf4-1e5a-4166-8560-96ad16bde2b4",
      "documentation": "Create Monitor",
      "method": "post",
      "endpoint": "monitors",
      "responses": [
        {
          "uuid": "9aad9b7a-4a02-47ae-bca0-3c92f1dfbb68",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Monitor in a Workspace",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3273124-cd18-4948-b592-b1cb3cfd17fd",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"monitor\"\n    },\n    \"message\": \"Parameter is missing in the request.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ccde7470-a9b0-4c08-9b86-ba4744b967f8",
      "documentation": "Delete Monitor",
      "method": "delete",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "450913bb-7e3e-4e22-8a09-4e53eba06b08",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\",\n    \"uid\": \"5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94c2bddf-180e-47bd-ada1-8f2f15e4ccd4",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Monitor Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef9dc0c0-c6c2-4ba9-8227-517d956a63ed",
      "documentation": "Single Monitor",
      "method": "get",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "3e7e9d3f-016b-4227-a563-94d9b8751254",
          "body": "{\n  \"monitor\": {\n    \"collectionUid\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"distribution\": [\n      \"\"\n    ],\n    \"environmentUid\": \"5851-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n    \"lastRun\": {\n      \"finishedAt\": \"2020-03-25T15:45:31.340Z\",\n      \"startedAt\": \"2020-03-25T15:45:29.218Z\",\n      \"stats\": {\n        \"assertions\": {\n          \"failed\": 1,\n          \"total\": 8\n        },\n        \"requests\": {\n          \"total\": 4\n        }\n      },\n      \"status\": \"failed\"\n    },\n    \"name\": \"Postman Echo Monitor\",\n    \"notifications\": {\n      \"onError\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ],\n      \"onFailure\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ]\n    },\n    \"options\": {\n      \"followRedirects\": true,\n      \"requestDelay\": {{faker 'datatype.number'}},\n      \"requestTimeout\": 3000,\n      \"strictSSL\": true\n    },\n    \"owner\": \"5852\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * * *\",\n      \"nextRun\": \"2016-11-30T09:30:00.000Z\",\n      \"timezone\": \"Asia/Calcutta\"\n    },\n    \"uid\": \"5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "06ce7e7e-8982-4af6-8d20-4f8a4c2fbe99",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Monitor Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c0abbd8-fce6-4ea8-a202-8232219a1b5a",
      "documentation": "Update Monitor",
      "method": "put",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "7d3e0265-fbf3-4a70-8451-ef8955dbfb54",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6e2a-c2ad-4090-b750-0df4e6624352\",\n    \"name\": \"Updated Monitor Name\",\n    \"uid\": \"5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f253da29-a05b-4bb4-8be1-6ff7161dd365",
      "documentation": "Run a Monitor",
      "method": "post",
      "endpoint": "monitors/:monitor_uid/run",
      "responses": [
        {
          "uuid": "22fa0764-61a5-404b-af5d-4d9b7b7d7872",
          "body": "{\n  \"run\": {\n    \"executions\": [\n      {\n        \"id\": 1,\n        \"item\": {\n          \"id\": \"b5e8d7dd-909c-4ba7-aef4-8609bc50b586\",\n          \"name\": \"Sample POST Request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 18,\n            \"mode\": \"raw\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\",\n            \"content-length\": 18,\n            \"content-type\": \"application/json\"\n          },\n          \"method\": \"POST\",\n          \"timestamp\": \"2016-12-04T14:30:26.025Z\",\n          \"url\": \"echo.getpostman.com/post\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 298\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 298,\n          \"responseTime\": 26\n        }\n      }\n    ],\n    \"failures\": [\n      {\n        \"assertion\": {\n          \"Status code is 400\": {{faker 'datatype.boolean'}}\n        },\n        \"executionId\": 2,\n        \"message\": \"Expected 'Status code is 400' to be truthy\",\n        \"name\": \"AssertionError\"\n      }\n    ],\n    \"info\": {\n      \"collectionUid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n      \"finishedAt\": \"2016-12-04T14:30:26.000Z\",\n      \"jobId\": \"1e6ba2e3-1aaf-4c10-bd5f-905943284b2a\",\n      \"monitorId\": \"1e6b8970-fd13-4480-b011-b3b3e3cd271d\",\n      \"name\": \"Sample Collection monitor 1 #56\",\n      \"startedAt\": \"2016-12-04T14:30:25.000Z\",\n      \"status\": \"failed\"\n    },\n    \"stats\": {\n      \"assertions\": {\n        \"failed\": 1,\n        \"total\": 1\n      },\n      \"requests\": {\n        \"failed\": 1,\n        \"total\": 3\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Run with Errors",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ace5a3ef-3a4e-4ee6-83b9-c20091b6d671",
      "documentation": "Create Webhook",
      "method": "post",
      "endpoint": "webhooks",
      "responses": [
        {
          "uuid": "695916b4-7cb8-4db8-8d2b-24fdf6d761d3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "58575de3-602d-4e2c-9a0e-028689879a13",
      "documentation": "All workspaces",
      "method": "get",
      "endpoint": "workspaces",
      "responses": [
        {
          "uuid": "96606f9f-d118-4d00-9728-b93cc3541355",
          "body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc588709-e123-404a-8a95-ab38246b9e36",
      "documentation": "Create Workspace",
      "method": "post",
      "endpoint": "workspaces",
      "responses": [
        {
          "uuid": "3b35e1cb-bfca-4cfa-8b49-39553d0416b2",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dfe8215d-a0a4-4f12-964d-5a519623087a",
          "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Instance supplied not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "68607a5b-a607-44df-8dba-2dc154886ed4",
      "documentation": "Delete Workspace",
      "method": "delete",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "3ae0d6ce-2544-4fa4-afc5-d403ffdec71d",
          "body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56bc59e2-9d37-42a1-a6ea-af8ae31469e1",
      "documentation": "Single workspace",
      "method": "get",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "7211d443-7560-4a60-9a27-8388e0bcbb26",
          "body": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      }\n    ],\n    \"description\": \"Demos.\",\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      }\n    ],\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f16b93cd-8057-4dca-98f1-9ad79477e01d",
          "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Workspace Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92db1de8-0f6a-49ae-9e82-89115f6fa19d",
      "documentation": "Update Workspace",
      "method": "put",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "b4e0de71-e1c4-46a8-88f7-25b04e046097",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55ceb793-596c-4b9e-ae75-8512888d0131",
          "body": "{\n  \"error\": {\n    \"message\": \"You do not have access to update this workspace.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Not enough permissions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1629482-84cf-4b51-92a4-8b984201c6c7",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified workspace does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Specified workspace/entities do not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}