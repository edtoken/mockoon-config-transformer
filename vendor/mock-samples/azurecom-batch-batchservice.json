{
  "uuid": "1e98868d-8e85-436a-af6c-1d5c167aa66b",
  "lastMigration": 24,
  "name": "BatchService",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9d9c2645-9876-4efa-beb9-148a23145ea9",
      "documentation": "Lists all of the applications available in the specified Account.",
      "method": "get",
      "endpoint": "applications",
      "responses": [
        {
          "uuid": "08f59e48-a872-4161-ba9f-7ff6f1566ba3",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"versions\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "523da992-d2a1-4836-9dbd-c3331a178813",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9d90c4c-3c0a-4d64-8e47-427bc859901b",
      "documentation": "Gets information about the specified Application.",
      "method": "get",
      "endpoint": "applications/:applicationId",
      "responses": [
        {
          "uuid": "fa55f332-4c62-40c9-b0d0-2719b25ca285",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"versions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the application.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b6f39bea-7dd6-4f59-a878-a6cefd6533e8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2e4499e-4fb6-4c81-aed7-3aaab1adebf2",
      "documentation": "Lists all of the Certificates that have been added to the specified Account.",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "a2a3d15b-e7bb-4195-ad14-4dd52a2bc095",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"deleteCertificateError\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"values\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"publicData\": \"\",\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0daf8423-15ca-4826-91d3-32128162aa02",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "24da61aa-e472-4bcf-b128-9472cf933887",
      "documentation": "Adds a Certificate to the specified Account.",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "d0618005-8baa-4497-887d-03a80049cce2",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f1a76360-1881-47f0-8036-b9adb69530a1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "054b6f4a-b033-4870-a48a-bee16afccdcd",
      "documentation": "Deletes a Certificate from the specified Account.",
      "method": "delete",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "aab3d446-3f6a-4d4c-87a4-4cede1e73295",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55d8fa62-db9c-44bb-a34a-c1d6a3ba8af2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66deec1c-7224-4e47-8cf5-e6745e9d0d6c",
      "documentation": "Gets information about the specified Certificate.",
      "method": "get",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "7021ea44-3fa9-4055-b453-6ed7c919f01e",
          "body": "{\n  \"deleteCertificateError\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"publicData\": \"\",\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"thumbprint\": \"\",\n  \"thumbprintAlgorithm\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32d2a5dd-58b7-43af-8d8a-0bc12409927e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80fb2d0e-f574-43b3-aaeb-ae26c69a5c2d",
      "documentation": "Cancels a failed deletion of a Certificate from the specified Account.",
      "method": "post",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)/canceldelete",
      "responses": [
        {
          "uuid": "285a2092-fb68-403d-839e-7df289898287",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e5d603fa-2363-4054-b49a-3b3c7ec7d786",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9cba675-0f75-4c69-9566-bc9f9ecfcbfe",
      "documentation": "Lists all of the Jobs in the specified Account.",
      "method": "get",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "f7515c01-5982-4ba3-b1c5-4c06f8eb7472",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'datatype.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"subnetId\": \"\"\n      },\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'datatype.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"osFamily\": \"\",\n              \"osVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'datatype.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n            \"maxTasksPerNode\": {{faker 'datatype.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"mountConfiguration\": [\n              {\n                \"azureBlobFileSystemConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"blobfuseOptions\": \"\",\n                  \"containerName\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"sasKey\": \"\"\n                },\n                \"azureFileShareConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"azureFileUrl\": \"\",\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\"\n                },\n                \"cifsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"password\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\",\n                  \"username\": \"\"\n                },\n                \"nfsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\"\n                }\n              }\n            ],\n            \"networkConfiguration\": {\n              \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'datatype.number'}},\n                        \"sourceAddressPrefix\": \"\",\n                        \"sourcePortRanges\": [\n                          \"\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"publicIPs\": [\n                \"\"\n              ],\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                },\n                \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n              \"resourceFiles\": [\n                {\n                  \"autoStorageContainerName\": \"\",\n                  \"blobPrefix\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\",\n                  \"httpUrl\": \"\",\n                  \"storageContainerUrl\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'datatype.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n            \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'datatype.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'datatype.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\",\n                \"windowsUserConfiguration\": {\n                  \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                }\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'datatype.number'}},\n                  \"lun\": {{faker 'datatype.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'datatype.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b650a06-fbd5-4061-bc70-6666f7461523",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95193b9f-9fd9-4fd4-a0a7-c8b30756c5b5",
      "documentation": "Adds a Job to the specified Account.",
      "method": "post",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "980773e3-1263-41ca-91e8-8031097780d6",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f12409a6-4bc5-49c3-87b3-194cc6e0fbb1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3dd8654-5761-4cc9-9256-059fe9032406",
      "documentation": "Deletes a Job.",
      "method": "delete",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "fd6fd872-57a8-4144-9bc6-fb16245b1a74",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5f9cbcd-20c0-4072-be64-579b9154e79e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "236ca3db-9244-46dc-9721-136822c0b43b",
      "documentation": "Gets information about the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "2d836ff6-b815-4454-976e-40aaf8e26b86",
          "body": "{\n  \"commonEnvironmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"maxWallClockTime\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"poolId\": \"\",\n    \"schedulingError\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"terminateReason\": \"\"\n  },\n  \"id\": \"\",\n  \"jobManagerTask\": {\n    \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n    \"applicationPackageReferences\": [\n      {\n        \"applicationId\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"authenticationTokenSettings\": {\n      \"access\": [\n        \"{{oneOf (array 'job')}}\"\n      ]\n    },\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"displayName\": \"\",\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n    \"outputFiles\": [\n      {\n        \"destination\": {\n          \"container\": {\n            \"containerUrl\": \"\",\n            \"path\": \"\"\n          }\n        },\n        \"filePattern\": \"\",\n        \"uploadOptions\": {\n          \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n        }\n      }\n    ],\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"runExclusive\": {{faker 'datatype.boolean'}},\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"jobPreparationTask\": {\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"jobReleaseTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"maxWallClockTime\": \"\",\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"retentionTime\": \"\",\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"networkConfiguration\": {\n    \"subnetId\": \"\"\n  },\n  \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n  \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n  \"poolInfo\": {\n    \"autoPoolSpecification\": {\n      \"autoPoolIdPrefix\": \"\",\n      \"keepAlive\": {{faker 'datatype.boolean'}},\n      \"pool\": {\n        \"applicationLicenses\": [\n          \"\"\n        ],\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"autoScaleEvaluationInterval\": \"\",\n        \"autoScaleFormula\": \"\",\n        \"certificateReferences\": [\n          {\n            \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n            \"storeName\": \"\",\n            \"thumbprint\": \"\",\n            \"thumbprintAlgorithm\": \"\",\n            \"visibility\": [\n              \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n            ]\n          }\n        ],\n        \"cloudServiceConfiguration\": {\n          \"osFamily\": \"\",\n          \"osVersion\": \"\"\n        },\n        \"displayName\": \"\",\n        \"enableAutoScale\": {{faker 'datatype.boolean'}},\n        \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n        \"maxTasksPerNode\": {{faker 'datatype.number'}},\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"mountConfiguration\": [\n          {\n            \"azureBlobFileSystemConfiguration\": {\n              \"accountKey\": \"\",\n              \"accountName\": \"\",\n              \"blobfuseOptions\": \"\",\n              \"containerName\": \"\",\n              \"relativeMountPath\": \"\",\n              \"sasKey\": \"\"\n            },\n            \"azureFileShareConfiguration\": {\n              \"accountKey\": \"\",\n              \"accountName\": \"\",\n              \"azureFileUrl\": \"\",\n              \"mountOptions\": \"\",\n              \"relativeMountPath\": \"\"\n            },\n            \"cifsMountConfiguration\": {\n              \"mountOptions\": \"\",\n              \"password\": \"\",\n              \"relativeMountPath\": \"\",\n              \"source\": \"\",\n              \"username\": \"\"\n            },\n            \"nfsMountConfiguration\": {\n              \"mountOptions\": \"\",\n              \"relativeMountPath\": \"\",\n              \"source\": \"\"\n            }\n          }\n        ],\n        \"networkConfiguration\": {\n          \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n          \"endpointConfiguration\": {\n            \"inboundNATPools\": [\n              {\n                \"backendPort\": {{faker 'datatype.number'}},\n                \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                \"name\": \"\",\n                \"networkSecurityGroupRules\": [\n                  {\n                    \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                    \"priority\": {{faker 'datatype.number'}},\n                    \"sourceAddressPrefix\": \"\",\n                    \"sourcePortRanges\": [\n                      \"\"\n                    ]\n                  }\n                ],\n                \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n              }\n            ]\n          },\n          \"publicIPs\": [\n            \"\"\n          ],\n          \"subnetId\": \"\"\n        },\n        \"resizeTimeout\": \"\",\n        \"startTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'datatype.boolean'}}\n        },\n        \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n        \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n        \"taskSchedulingPolicy\": {\n          \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n        },\n        \"userAccounts\": [\n          {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"linuxUserConfiguration\": {\n              \"gid\": {{faker 'datatype.number'}},\n              \"sshPrivateKey\": \"\",\n              \"uid\": {{faker 'datatype.number'}}\n            },\n            \"name\": \"\",\n            \"password\": \"\",\n            \"windowsUserConfiguration\": {\n              \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n            }\n          }\n        ],\n        \"virtualMachineConfiguration\": {\n          \"containerConfiguration\": {\n            \"containerImageNames\": [\n              \"\"\n            ],\n            \"containerRegistries\": [\n              {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            ],\n            \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n          },\n          \"dataDisks\": [\n            {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n              \"diskSizeGB\": {{faker 'datatype.number'}},\n              \"lun\": {{faker 'datatype.number'}},\n              \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n            }\n          ],\n          \"imageReference\": {\n            \"offer\": \"\",\n            \"publisher\": \"\",\n            \"sku\": \"\",\n            \"version\": \"\",\n            \"virtualMachineImageId\": \"\"\n          },\n          \"licenseType\": \"\",\n          \"nodeAgentSKUId\": \"\",\n          \"windowsConfiguration\": {\n            \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n          }\n        },\n        \"vmSize\": \"\"\n      },\n      \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n    },\n    \"poolId\": \"\"\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"priority\": {{faker 'datatype.number'}},\n  \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'datatype.number'}},\n    \"numSucceededTasks\": {{faker 'datatype.number'}},\n    \"numTaskRetries\": {{faker 'datatype.number'}},\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\",\n  \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5000d295-5a37-4400-86cd-edc0b2069afa",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f56820c-85fc-4ec7-9fe1-8a5f6aebf3c7",
      "documentation": "Updates the properties of the specified Job.",
      "method": "patch",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "9cda4bd2-aba4-427e-98f3-f6b82aa8fa87",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f86d5e7d-2266-4cce-b8aa-55d4e18198ba",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e13ada32-b1b9-4a18-95dc-6451b21751a9",
      "documentation": "Updates the properties of the specified Job.",
      "method": "put",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "e3ad6936-0c0f-41e3-8f26-df9366981c78",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d7e5698a-d064-44fc-a7f8-e41a73bfff16",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11a5231c-9d48-4d9f-81dd-ef9f1ef01503",
      "documentation": "Adds a collection of Tasks to the specified Job.",
      "method": "post",
      "endpoint": "jobs/:jobId/addtaskcollection",
      "responses": [
        {
          "uuid": "85bcd8fe-269d-4820-91fc-50e93adcc72c",
          "body": "{\n  \"value\": [\n    {\n      \"eTag\": \"\",\n      \"error\": {\n        \"code\": \"\",\n        \"message\": {\n          \"lang\": \"\",\n          \"value\": \"\"\n        },\n        \"values\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"status\": \"{{oneOf (array 'success' 'clienterror' 'servererror')}}\",\n      \"taskId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the add Task collection operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f68f406-ca3f-41ab-8ecf-0ed1fd6f7b78",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f40a99ae-7cda-40b6-8909-034aa904dafc",
      "documentation": "Disables the specified Job, preventing new Tasks from running.",
      "method": "post",
      "endpoint": "jobs/:jobId/disable",
      "responses": [
        {
          "uuid": "8ad50cfb-c3ff-4fc4-8233-c5b0ac9ec61d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75e264e5-a322-4d2a-a3eb-ca573c4dae2c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aed3d7e3-ac0a-423a-bebd-31772d1ff09c",
      "documentation": "Enables the specified Job, allowing new Tasks to run.",
      "method": "post",
      "endpoint": "jobs/:jobId/enable",
      "responses": [
        {
          "uuid": "a2870490-6b49-42e8-b8ff-664d19cac24f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4972b478-aa65-47e0-a777-2d67ec2aadc7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83b7766c-e259-466c-8e8f-8644d4c50b8b",
      "documentation": "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.",
      "method": "get",
      "endpoint": "jobs/:jobId/jobpreparationandreleasetaskstatus",
      "responses": [
        {
          "uuid": "6730ad45-caeb-4e01-ac0d-6b480aee81af",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"jobPreparationTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"jobReleaseTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"nodeId\": \"\",\n      \"nodeUrl\": \"\",\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing a list of Job Preparation and Job Release Task statuses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fa8df277-0f52-48ba-ba4b-e8048f2bd465",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eaeade3b-4ffb-4360-924b-13f040abff78",
      "documentation": "Gets the Task counts for the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId/taskcounts",
      "responses": [
        {
          "uuid": "27189dcc-a3f2-4937-a3b9-251d57451d6b",
          "body": "{\n  \"active\": {{faker 'datatype.number'}},\n  \"completed\": {{faker 'datatype.number'}},\n  \"failed\": {{faker 'datatype.number'}},\n  \"running\": {{faker 'datatype.number'}},\n  \"succeeded\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Task counts for the specified Job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7589d524-48fe-42f4-94ac-ae32c0bb4078",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "862cc3b5-8db8-4744-a3b1-5478f9f97537",
      "documentation": "Lists all of the Tasks that are associated with the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "754efae3-1c55-436a-a810-0bd9000b0f45",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityInfo\": {\n        \"affinityId\": \"\"\n      },\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"dependsOn\": {\n        \"taskIdRanges\": [\n          {\n            \"end\": {{faker 'datatype.number'}},\n            \"start\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"taskIds\": [\n          \"\"\n        ]\n      },\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'datatype.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"exitConditions\": {\n        \"default\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"exitCodeRanges\": [\n          {\n            \"end\": {{faker 'datatype.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            },\n            \"start\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"exitCodes\": [\n          {\n            \"code\": {{faker 'datatype.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            }\n          }\n        ],\n        \"fileUploadError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"preProcessingError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"multiInstanceSettings\": {\n        \"commonResourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"coordinationCommandLine\": \"\",\n        \"numberOfInstances\": {{faker 'datatype.number'}}\n      },\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Tasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e842192-7685-46c2-92f0-70eaeb68437d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f87deab1-a7a1-4557-beb7-3c0a9e55c8d3",
      "documentation": "Adds a Task to the specified Job.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "80afded1-0b22-48d1-b396-707ab7002496",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1519da6c-0767-44ed-a907-ee122c0a48e8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ebdb784-668c-4854-81a3-b661245c4665",
      "documentation": "Deletes a Task from the specified Job.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "533fc72a-c533-45ba-89ce-58a331f1b82b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1d1558d-20f7-4221-a284-3e52359e2d88",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ba5a5bc-b51d-4f94-8011-24b746e453c5",
      "documentation": "Gets information about the specified Task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "19c11da5-f7df-45e8-9ba3-abd2ccdc9ffb",
          "body": "{\n  \"affinityInfo\": {\n    \"affinityId\": \"\"\n  },\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"authenticationTokenSettings\": {\n    \"access\": [\n      \"{{oneOf (array 'job')}}\"\n    ]\n  },\n  \"commandLine\": \"\",\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"maxWallClockTime\": \"\",\n    \"retentionTime\": \"\"\n  },\n  \"containerSettings\": {\n    \"containerRunOptions\": \"\",\n    \"imageName\": \"\",\n    \"registry\": {\n      \"password\": \"\",\n      \"registryServer\": \"\",\n      \"username\": \"\"\n    },\n    \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"dependsOn\": {\n    \"taskIdRanges\": [\n      {\n        \"end\": {{faker 'datatype.number'}},\n        \"start\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"taskIds\": [\n      \"\"\n    ]\n  },\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"environmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"executionInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'datatype.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"requeueCount\": {{faker 'datatype.number'}},\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"exitConditions\": {\n    \"default\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"exitCodeRanges\": [\n      {\n        \"end\": {{faker 'datatype.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"start\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"exitCodes\": [\n      {\n        \"code\": {{faker 'datatype.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      }\n    ],\n    \"fileUploadError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"preProcessingError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"multiInstanceSettings\": {\n    \"commonResourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"coordinationCommandLine\": \"\",\n    \"numberOfInstances\": {{faker 'datatype.number'}}\n  },\n  \"nodeInfo\": {\n    \"affinityId\": \"\",\n    \"nodeId\": \"\",\n    \"nodeUrl\": \"\",\n    \"poolId\": \"\",\n    \"taskRootDirectory\": \"\",\n    \"taskRootDirectoryUrl\": \"\"\n  },\n  \"outputFiles\": [\n    {\n      \"destination\": {\n        \"container\": {\n          \"containerUrl\": \"\",\n          \"path\": \"\"\n        }\n      },\n      \"filePattern\": \"\",\n      \"uploadOptions\": {\n        \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n      }\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceFiles\": [\n    {\n      \"autoStorageContainerName\": \"\",\n      \"blobPrefix\": \"\",\n      \"fileMode\": \"\",\n      \"filePath\": \"\",\n      \"httpUrl\": \"\",\n      \"storageContainerUrl\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\",\n  \"userIdentity\": {\n    \"autoUser\": {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n    },\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9515a0cf-895a-43a1-b5b3-20774dc69488",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6d3c6f63-4d02-4491-a1c9-25d94ec0bc99",
      "documentation": "Updates the properties of the specified Task.",
      "method": "put",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "664ae87e-427e-498b-8684-d3216c138217",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05aecd57-1039-44e0-b62f-6857fdc225e5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3672f1f3-3244-47d7-8bd1-02dad0d849c0",
      "documentation": "Lists the files in a Task's directory on its Compute Node.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files",
      "responses": [
        {
          "uuid": "fc8aef83-e1db-42ca-88de-550372026495",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'datatype.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef6a60ec-7f64-4823-922f-74eba80abe32",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "efd8be5d-5b3f-4403-a1cf-4b2260fcb135",
      "documentation": "Deletes the specified Task file from the Compute Node where the Task ran.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "65bf1c58-48d6-487a-baf9-cef579462866",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f8aea3e7-fd82-4483-912a-e07d977ac06e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c3cb8b0-2e1a-4d9e-8760-17f209c82d78",
      "documentation": "Returns the content of the specified Task file.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "7f7213b8-9fb1-4fa9-943f-eec694b5632f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15669d61-1a9d-43fc-85f2-294ca579fdb0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdd0376b-9710-4029-9c95-2b265a534c51",
      "documentation": "Gets the properties of the specified Task file.",
      "method": "head",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "61bf9fd9-f92b-4432-a155-e5203ac8292d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc0998fa-d67d-4261-b3a7-9967da109983",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4fe4c225-52be-4c12-b480-d6709d5edc8e",
      "documentation": "Reactivates a Task, allowing it to run again even if its retry count has been exhausted.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/reactivate",
      "responses": [
        {
          "uuid": "032becdf-6b3d-4334-bd66-6a4f1c011ce5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "274b8bc0-bede-48da-afb7-a271ac22e7a2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c63a271c-5fc3-4495-9413-27cc9fcbe529",
      "documentation": "Lists all of the subtasks that are associated with the specified multi-instance Task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/subtasksinfo",
      "responses": [
        {
          "uuid": "408f2d08-5ea4-46e8-bd66-7141644ce6d8",
          "body": "{\n  \"value\": [\n    {\n      \"containerInfo\": {\n        \"containerId\": \"\",\n        \"error\": \"\",\n        \"state\": \"\"\n      },\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"exitCode\": {{faker 'datatype.number'}},\n      \"failureInfo\": {\n        \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n        \"code\": \"\",\n        \"details\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"message\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"state\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of subtasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29670153-2b44-4f29-a675-28c2f310d7b4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3a139d4-4b87-4978-9636-6ff81399393c",
      "documentation": "Terminates the specified Task.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/terminate",
      "responses": [
        {
          "uuid": "30d3dd96-3e80-4423-94eb-452b05e27682",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab8350bd-cb84-402d-ae06-4396e0a02bcf",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "887ad1ea-a741-4088-a300-77fbad2f9154",
      "documentation": "Terminates the specified Job, marking it as completed.",
      "method": "post",
      "endpoint": "jobs/:jobId/terminate",
      "responses": [
        {
          "uuid": "e2bb23a7-a53e-46c8-9b8a-980a2df5a78c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2cc189a7-82d4-4c14-a8eb-4ff744d53a9b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5ad21cd-60cf-4dd9-9f18-f283c9a4f423",
      "documentation": "Lists all of the Job Schedules in the specified Account.",
      "method": "get",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "27c02903-3c72-4f6a-8219-8e697ba076ad",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n        \"recentJob\": {\n          \"id\": \"\",\n          \"url\": \"\"\n        }\n      },\n      \"id\": \"\",\n      \"jobSpecification\": {\n        \"commonEnvironmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\"\n        },\n        \"displayName\": \"\",\n        \"jobManagerTask\": {\n          \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"authenticationTokenSettings\": {\n            \"access\": [\n              \"{{oneOf (array 'job')}}\"\n            ]\n          },\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"displayName\": \"\",\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n          \"outputFiles\": [\n            {\n              \"destination\": {\n                \"container\": {\n                  \"containerUrl\": \"\",\n                  \"path\": \"\"\n                }\n              },\n              \"filePattern\": \"\",\n              \"uploadOptions\": {\n                \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n              }\n            }\n          ],\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"runExclusive\": {{faker 'datatype.boolean'}},\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"jobPreparationTask\": {\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'datatype.boolean'}}\n        },\n        \"jobReleaseTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"maxWallClockTime\": \"\",\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"retentionTime\": \"\",\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"networkConfiguration\": {\n          \"subnetId\": \"\"\n        },\n        \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n        \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n        \"poolInfo\": {\n          \"autoPoolSpecification\": {\n            \"autoPoolIdPrefix\": \"\",\n            \"keepAlive\": {{faker 'datatype.boolean'}},\n            \"pool\": {\n              \"applicationLicenses\": [\n                \"\"\n              ],\n              \"applicationPackageReferences\": [\n                {\n                  \"applicationId\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"autoScaleEvaluationInterval\": \"\",\n              \"autoScaleFormula\": \"\",\n              \"certificateReferences\": [\n                {\n                  \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                  \"storeName\": \"\",\n                  \"thumbprint\": \"\",\n                  \"thumbprintAlgorithm\": \"\",\n                  \"visibility\": [\n                    \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                  ]\n                }\n              ],\n              \"cloudServiceConfiguration\": {\n                \"osFamily\": \"\",\n                \"osVersion\": \"\"\n              },\n              \"displayName\": \"\",\n              \"enableAutoScale\": {{faker 'datatype.boolean'}},\n              \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n              \"maxTasksPerNode\": {{faker 'datatype.number'}},\n              \"metadata\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"mountConfiguration\": [\n                {\n                  \"azureBlobFileSystemConfiguration\": {\n                    \"accountKey\": \"\",\n                    \"accountName\": \"\",\n                    \"blobfuseOptions\": \"\",\n                    \"containerName\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"sasKey\": \"\"\n                  },\n                  \"azureFileShareConfiguration\": {\n                    \"accountKey\": \"\",\n                    \"accountName\": \"\",\n                    \"azureFileUrl\": \"\",\n                    \"mountOptions\": \"\",\n                    \"relativeMountPath\": \"\"\n                  },\n                  \"cifsMountConfiguration\": {\n                    \"mountOptions\": \"\",\n                    \"password\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"source\": \"\",\n                    \"username\": \"\"\n                  },\n                  \"nfsMountConfiguration\": {\n                    \"mountOptions\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"source\": \"\"\n                  }\n                }\n              ],\n              \"networkConfiguration\": {\n                \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n                \"endpointConfiguration\": {\n                  \"inboundNATPools\": [\n                    {\n                      \"backendPort\": {{faker 'datatype.number'}},\n                      \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                      \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                      \"name\": \"\",\n                      \"networkSecurityGroupRules\": [\n                        {\n                          \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                          \"priority\": {{faker 'datatype.number'}},\n                          \"sourceAddressPrefix\": \"\",\n                          \"sourcePortRanges\": [\n                            \"\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                    }\n                  ]\n                },\n                \"publicIPs\": [\n                  \"\"\n                ],\n                \"subnetId\": \"\"\n              },\n              \"resizeTimeout\": \"\",\n              \"startTask\": {\n                \"commandLine\": \"\",\n                \"containerSettings\": {\n                  \"containerRunOptions\": \"\",\n                  \"imageName\": \"\",\n                  \"registry\": {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  },\n                  \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n                },\n                \"environmentSettings\": [\n                  {\n                    \"name\": \"\",\n                    \"value\": \"\"\n                  }\n                ],\n                \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n                \"resourceFiles\": [\n                  {\n                    \"autoStorageContainerName\": \"\",\n                    \"blobPrefix\": \"\",\n                    \"fileMode\": \"\",\n                    \"filePath\": \"\",\n                    \"httpUrl\": \"\",\n                    \"storageContainerUrl\": \"\"\n                  }\n                ],\n                \"userIdentity\": {\n                  \"autoUser\": {\n                    \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                    \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                  },\n                  \"username\": \"\"\n                },\n                \"waitForSuccess\": {{faker 'datatype.boolean'}}\n              },\n              \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n              \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n              \"taskSchedulingPolicy\": {\n                \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n              },\n              \"userAccounts\": [\n                {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"linuxUserConfiguration\": {\n                    \"gid\": {{faker 'datatype.number'}},\n                    \"sshPrivateKey\": \"\",\n                    \"uid\": {{faker 'datatype.number'}}\n                  },\n                  \"name\": \"\",\n                  \"password\": \"\",\n                  \"windowsUserConfiguration\": {\n                    \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                  }\n                }\n              ],\n              \"virtualMachineConfiguration\": {\n                \"containerConfiguration\": {\n                  \"containerImageNames\": [\n                    \"\"\n                  ],\n                  \"containerRegistries\": [\n                    {\n                      \"password\": \"\",\n                      \"registryServer\": \"\",\n                      \"username\": \"\"\n                    }\n                  ],\n                  \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n                },\n                \"dataDisks\": [\n                  {\n                    \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                    \"diskSizeGB\": {{faker 'datatype.number'}},\n                    \"lun\": {{faker 'datatype.number'}},\n                    \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                  }\n                ],\n                \"imageReference\": {\n                  \"offer\": \"\",\n                  \"publisher\": \"\",\n                  \"sku\": \"\",\n                  \"version\": \"\",\n                  \"virtualMachineImageId\": \"\"\n                },\n                \"licenseType\": \"\",\n                \"nodeAgentSKUId\": \"\",\n                \"windowsConfiguration\": {\n                  \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n                }\n              },\n              \"vmSize\": \"\"\n            },\n            \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n          },\n          \"poolId\": \"\"\n        },\n        \"priority\": {{faker 'datatype.number'}},\n        \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"schedule\": {\n        \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n        \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n        \"recurrenceInterval\": \"\",\n        \"startWindow\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Job Schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07ea7112-c49b-4cba-9d0f-1d2bd0c3e7ef",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa9bc797-8fe6-453d-b44a-e2972ec47df4",
      "documentation": "Adds a Job Schedule to the specified Account.",
      "method": "post",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "3679556f-efe0-439a-b3bb-79c29507a091",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "857c5f8e-74f7-4a1f-8b23-0c83dff0e97a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5142604c-b840-4cf4-af15-81cafaa2e359",
      "documentation": "Deletes a Job Schedule from the specified Account.",
      "method": "delete",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "f1df5f79-f46d-4717-8044-c8ec60e7405e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d315837d-1deb-4a72-aa7c-16c0df91230f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bdb33817-634f-495c-897a-5e89b5aae1ef",
      "documentation": "Gets information about the specified Job Schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "b23defc6-508a-4d73-9f1d-74e9039d4965",
          "body": "{\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n    \"recentJob\": {\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  },\n  \"id\": \"\",\n  \"jobSpecification\": {\n    \"commonEnvironmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\"\n    },\n    \"displayName\": \"\",\n    \"jobManagerTask\": {\n      \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"displayName\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"runExclusive\": {{faker 'datatype.boolean'}},\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"jobPreparationTask\": {\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      },\n      \"waitForSuccess\": {{faker 'datatype.boolean'}}\n    },\n    \"jobReleaseTask\": {\n      \"commandLine\": \"\",\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"maxWallClockTime\": \"\",\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"retentionTime\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"metadata\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"networkConfiguration\": {\n      \"subnetId\": \"\"\n    },\n    \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n    \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n    \"poolInfo\": {\n      \"autoPoolSpecification\": {\n        \"autoPoolIdPrefix\": \"\",\n        \"keepAlive\": {{faker 'datatype.boolean'}},\n        \"pool\": {\n          \"applicationLicenses\": [\n            \"\"\n          ],\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"autoScaleEvaluationInterval\": \"\",\n          \"autoScaleFormula\": \"\",\n          \"certificateReferences\": [\n            {\n              \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n              \"storeName\": \"\",\n              \"thumbprint\": \"\",\n              \"thumbprintAlgorithm\": \"\",\n              \"visibility\": [\n                \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n              ]\n            }\n          ],\n          \"cloudServiceConfiguration\": {\n            \"osFamily\": \"\",\n            \"osVersion\": \"\"\n          },\n          \"displayName\": \"\",\n          \"enableAutoScale\": {{faker 'datatype.boolean'}},\n          \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n          \"maxTasksPerNode\": {{faker 'datatype.number'}},\n          \"metadata\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"mountConfiguration\": [\n            {\n              \"azureBlobFileSystemConfiguration\": {\n                \"accountKey\": \"\",\n                \"accountName\": \"\",\n                \"blobfuseOptions\": \"\",\n                \"containerName\": \"\",\n                \"relativeMountPath\": \"\",\n                \"sasKey\": \"\"\n              },\n              \"azureFileShareConfiguration\": {\n                \"accountKey\": \"\",\n                \"accountName\": \"\",\n                \"azureFileUrl\": \"\",\n                \"mountOptions\": \"\",\n                \"relativeMountPath\": \"\"\n              },\n              \"cifsMountConfiguration\": {\n                \"mountOptions\": \"\",\n                \"password\": \"\",\n                \"relativeMountPath\": \"\",\n                \"source\": \"\",\n                \"username\": \"\"\n              },\n              \"nfsMountConfiguration\": {\n                \"mountOptions\": \"\",\n                \"relativeMountPath\": \"\",\n                \"source\": \"\"\n              }\n            }\n          ],\n          \"networkConfiguration\": {\n            \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n            \"endpointConfiguration\": {\n              \"inboundNATPools\": [\n                {\n                  \"backendPort\": {{faker 'datatype.number'}},\n                  \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                  \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                  \"name\": \"\",\n                  \"networkSecurityGroupRules\": [\n                    {\n                      \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                      \"priority\": {{faker 'datatype.number'}},\n                      \"sourceAddressPrefix\": \"\",\n                      \"sourcePortRanges\": [\n                        \"\"\n                      ]\n                    }\n                  ],\n                  \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                }\n              ]\n            },\n            \"publicIPs\": [\n              \"\"\n            ],\n            \"subnetId\": \"\"\n          },\n          \"resizeTimeout\": \"\",\n          \"startTask\": {\n            \"commandLine\": \"\",\n            \"containerSettings\": {\n              \"containerRunOptions\": \"\",\n              \"imageName\": \"\",\n              \"registry\": {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              },\n              \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n            },\n            \"environmentSettings\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"resourceFiles\": [\n              {\n                \"autoStorageContainerName\": \"\",\n                \"blobPrefix\": \"\",\n                \"fileMode\": \"\",\n                \"filePath\": \"\",\n                \"httpUrl\": \"\",\n                \"storageContainerUrl\": \"\"\n              }\n            ],\n            \"userIdentity\": {\n              \"autoUser\": {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n              },\n              \"username\": \"\"\n            },\n            \"waitForSuccess\": {{faker 'datatype.boolean'}}\n          },\n          \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n          \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n          \"taskSchedulingPolicy\": {\n            \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n          },\n          \"userAccounts\": [\n            {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"linuxUserConfiguration\": {\n                \"gid\": {{faker 'datatype.number'}},\n                \"sshPrivateKey\": \"\",\n                \"uid\": {{faker 'datatype.number'}}\n              },\n              \"name\": \"\",\n              \"password\": \"\",\n              \"windowsUserConfiguration\": {\n                \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n              }\n            }\n          ],\n          \"virtualMachineConfiguration\": {\n            \"containerConfiguration\": {\n              \"containerImageNames\": [\n                \"\"\n              ],\n              \"containerRegistries\": [\n                {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n            },\n            \"dataDisks\": [\n              {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                \"diskSizeGB\": {{faker 'datatype.number'}},\n                \"lun\": {{faker 'datatype.number'}},\n                \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n              }\n            ],\n            \"imageReference\": {\n              \"offer\": \"\",\n              \"publisher\": \"\",\n              \"sku\": \"\",\n              \"version\": \"\",\n              \"virtualMachineImageId\": \"\"\n            },\n            \"licenseType\": \"\",\n            \"nodeAgentSKUId\": \"\",\n            \"windowsConfiguration\": {\n              \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n            }\n          },\n          \"vmSize\": \"\"\n        },\n        \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n      },\n      \"poolId\": \"\"\n    },\n    \"priority\": {{faker 'datatype.number'}},\n    \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"schedule\": {\n    \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n    \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n    \"recurrenceInterval\": \"\",\n    \"startWindow\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'datatype.number'}},\n    \"numSucceededTasks\": {{faker 'datatype.number'}},\n    \"numTaskRetries\": {{faker 'datatype.number'}},\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job Schedule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4737d37-754b-42ca-928e-1399942ed0b7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b22858fe-877f-4b97-a6ab-53bd6544d007",
      "documentation": "Checks the specified Job Schedule exists.",
      "method": "head",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "0f9991a0-8348-4d17-809e-12079992823e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the Job Schedule, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8729cb9f-bdaf-4cb2-94c8-7efde3e37e66",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Job Schedule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eda37f4b-2d4d-4e24-816f-4062f0ba6690",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e02114b9-0421-47ac-870b-5a833c08e030",
      "documentation": "Updates the properties of the specified Job Schedule.",
      "method": "patch",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "f3598c66-8440-45c7-a774-e08ed34ed706",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95c71699-80ee-4484-9ed5-1b3def986518",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73d573ed-d4f8-4c93-aa59-9ab17f72ac30",
      "documentation": "Updates the properties of the specified Job Schedule.",
      "method": "put",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "f14886ee-353e-478c-8171-f60fa98b7ff9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bca2fff1-7f54-43db-99dd-24b26d1556a9",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40b6bcd4-4d81-4bbd-a7a2-1215118c9407",
      "documentation": "Disables a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/disable",
      "responses": [
        {
          "uuid": "c00cb053-fc83-4ee6-bbfc-f4949505a590",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "838235f5-4707-47d2-9dcb-b1ab991f2b3e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06d645dd-cee1-4b73-8abd-a6e471d208c0",
      "documentation": "Enables a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/enable",
      "responses": [
        {
          "uuid": "857331e6-ab21-4102-a66c-6d22e5068dad",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f6bfe309-161d-44d8-8238-f083e1189330",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8bd6c467-e205-4f39-84b7-5f1f0a5ad903",
      "documentation": "Lists the Jobs that have been created under the specified Job Schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId/jobs",
      "responses": [
        {
          "uuid": "42955574-2dd8-4308-81bb-bdba242c7090",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'datatype.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"subnetId\": \"\"\n      },\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'datatype.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"osFamily\": \"\",\n              \"osVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'datatype.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n            \"maxTasksPerNode\": {{faker 'datatype.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"mountConfiguration\": [\n              {\n                \"azureBlobFileSystemConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"blobfuseOptions\": \"\",\n                  \"containerName\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"sasKey\": \"\"\n                },\n                \"azureFileShareConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"azureFileUrl\": \"\",\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\"\n                },\n                \"cifsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"password\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\",\n                  \"username\": \"\"\n                },\n                \"nfsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\"\n                }\n              }\n            ],\n            \"networkConfiguration\": {\n              \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'datatype.number'}},\n                        \"sourceAddressPrefix\": \"\",\n                        \"sourcePortRanges\": [\n                          \"\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"publicIPs\": [\n                \"\"\n              ],\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                },\n                \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n              \"resourceFiles\": [\n                {\n                  \"autoStorageContainerName\": \"\",\n                  \"blobPrefix\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\",\n                  \"httpUrl\": \"\",\n                  \"storageContainerUrl\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'datatype.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n            \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'datatype.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'datatype.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\",\n                \"windowsUserConfiguration\": {\n                  \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                }\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'datatype.number'}},\n                  \"lun\": {{faker 'datatype.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'datatype.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b34013f6-f002-437b-8378-588a8b0923dc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5eb125c-8947-426a-ba01-ab6ce46cc142",
      "documentation": "Terminates a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/terminate",
      "responses": [
        {
          "uuid": "3628b256-04d7-454c-a2b0-43df1af8f318",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de4074b4-3044-4233-ab43-d882342851a0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed1168d2-3b70-4ea6-b0db-41fc78e170e7",
      "documentation": "Gets lifetime summary statistics for all of the Jobs in the specified Account.",
      "method": "get",
      "endpoint": "lifetimejobstats",
      "responses": [
        {
          "uuid": "66704c08-0c72-405b-b368-52685f5aefee",
          "body": "{\n  \"kernelCPUTime\": \"\",\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"numFailedTasks\": {{faker 'datatype.number'}},\n  \"numSucceededTasks\": {{faker 'datatype.number'}},\n  \"numTaskRetries\": {{faker 'datatype.number'}},\n  \"readIOGiB\": {{faker 'datatype.float'}},\n  \"readIOps\": {{faker 'datatype.number'}},\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"userCPUTime\": \"\",\n  \"waitTime\": \"\",\n  \"wallClockTime\": \"\",\n  \"writeIOGiB\": {{faker 'datatype.float'}},\n  \"writeIOps\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job statistics for the lifetime of the Batch Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "526920ab-7c3c-4f15-acaf-919d2b4d7493",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e255fe6b-2877-4d4a-a9e6-edf2c0981df7",
      "documentation": "Gets lifetime summary statistics for all of the Pools in the specified Account.",
      "method": "get",
      "endpoint": "lifetimepoolstats",
      "responses": [
        {
          "uuid": "d5bd7124-1d1d-44e9-90d4-e0848e13bdd2",
          "body": "{\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceStats\": {\n    \"avgCPUPercentage\": {{faker 'datatype.float'}},\n    \"avgDiskGiB\": {{faker 'datatype.float'}},\n    \"avgMemoryGiB\": {{faker 'datatype.float'}},\n    \"diskReadGiB\": {{faker 'datatype.float'}},\n    \"diskReadIOps\": {{faker 'datatype.number'}},\n    \"diskWriteGiB\": {{faker 'datatype.float'}},\n    \"diskWriteIOps\": {{faker 'datatype.number'}},\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"networkReadGiB\": {{faker 'datatype.float'}},\n    \"networkWriteGiB\": {{faker 'datatype.float'}},\n    \"peakDiskGiB\": {{faker 'datatype.float'}},\n    \"peakMemoryGiB\": {{faker 'datatype.float'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"usageStats\": {\n    \"dedicatedCoreTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Pool statistics for the lifetime of the Batch Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0a29e3c-1f8b-4ef9-8a9a-45fb743e3cce",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e96b0ce-fe9d-4f24-bb69-bf8329c6f55b",
      "documentation": "Gets the number of Compute Nodes in each state, grouped by Pool.",
      "method": "get",
      "endpoint": "nodecounts",
      "responses": [
        {
          "uuid": "22705a16-c4eb-46b5-b0ac-ce9577d39012",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dedicated\": {\n        \"creating\": {{faker 'datatype.number'}},\n        \"idle\": {{faker 'datatype.number'}},\n        \"leavingPool\": {{faker 'datatype.number'}},\n        \"offline\": {{faker 'datatype.number'}},\n        \"preempted\": {{faker 'datatype.number'}},\n        \"rebooting\": {{faker 'datatype.number'}},\n        \"reimaging\": {{faker 'datatype.number'}},\n        \"running\": {{faker 'datatype.number'}},\n        \"startTaskFailed\": {{faker 'datatype.number'}},\n        \"starting\": {{faker 'datatype.number'}},\n        \"total\": {{faker 'datatype.number'}},\n        \"unknown\": {{faker 'datatype.number'}},\n        \"unusable\": {{faker 'datatype.number'}},\n        \"waitingForStartTask\": {{faker 'datatype.number'}}\n      },\n      \"lowPriority\": {\n        \"creating\": {{faker 'datatype.number'}},\n        \"idle\": {{faker 'datatype.number'}},\n        \"leavingPool\": {{faker 'datatype.number'}},\n        \"offline\": {{faker 'datatype.number'}},\n        \"preempted\": {{faker 'datatype.number'}},\n        \"rebooting\": {{faker 'datatype.number'}},\n        \"reimaging\": {{faker 'datatype.number'}},\n        \"running\": {{faker 'datatype.number'}},\n        \"startTaskFailed\": {{faker 'datatype.number'}},\n        \"starting\": {{faker 'datatype.number'}},\n        \"total\": {{faker 'datatype.number'}},\n        \"unknown\": {{faker 'datatype.number'}},\n        \"unusable\": {{faker 'datatype.number'}},\n        \"waitingForStartTask\": {{faker 'datatype.number'}}\n      },\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response contains the number of Compute Nodes in each Compute Node state, grouped by Pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c11653d7-94f5-4c57-a69e-27df594ecbfb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01faa462-3afa-4ef3-88e5-e4cbe1781b4e",
      "documentation": "Lists all of the Pools in the specified Account.",
      "method": "get",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "9786796e-bd1f-4256-b0d6-784c0e076618",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n      \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"applicationLicenses\": [\n        \"\"\n      ],\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"autoScaleEvaluationInterval\": \"\",\n      \"autoScaleFormula\": \"\",\n      \"autoScaleRun\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"results\": \"\",\n        \"timestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"cloudServiceConfiguration\": {\n        \"osFamily\": \"\",\n        \"osVersion\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentDedicatedNodes\": {{faker 'datatype.number'}},\n      \"currentLowPriorityNodes\": {{faker 'datatype.number'}},\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"enableAutoScale\": {{faker 'datatype.boolean'}},\n      \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"maxTasksPerNode\": {{faker 'datatype.number'}},\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"mountConfiguration\": [\n        {\n          \"azureBlobFileSystemConfiguration\": {\n            \"accountKey\": \"\",\n            \"accountName\": \"\",\n            \"blobfuseOptions\": \"\",\n            \"containerName\": \"\",\n            \"relativeMountPath\": \"\",\n            \"sasKey\": \"\"\n          },\n          \"azureFileShareConfiguration\": {\n            \"accountKey\": \"\",\n            \"accountName\": \"\",\n            \"azureFileUrl\": \"\",\n            \"mountOptions\": \"\",\n            \"relativeMountPath\": \"\"\n          },\n          \"cifsMountConfiguration\": {\n            \"mountOptions\": \"\",\n            \"password\": \"\",\n            \"relativeMountPath\": \"\",\n            \"source\": \"\",\n            \"username\": \"\"\n          },\n          \"nfsMountConfiguration\": {\n            \"mountOptions\": \"\",\n            \"relativeMountPath\": \"\",\n            \"source\": \"\"\n          }\n        }\n      ],\n      \"networkConfiguration\": {\n        \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n        \"endpointConfiguration\": {\n          \"inboundNATPools\": [\n            {\n              \"backendPort\": {{faker 'datatype.number'}},\n              \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n              \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n              \"name\": \"\",\n              \"networkSecurityGroupRules\": [\n                {\n                  \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                  \"priority\": {{faker 'datatype.number'}},\n                  \"sourceAddressPrefix\": \"\",\n                  \"sourcePortRanges\": [\n                    \"\"\n                  ]\n                }\n              ],\n              \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n            }\n          ]\n        },\n        \"publicIPs\": [\n          \"\"\n        ],\n        \"subnetId\": \"\"\n      },\n      \"resizeErrors\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"resizeTimeout\": \"\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'active' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"resourceStats\": {\n          \"avgCPUPercentage\": {{faker 'datatype.float'}},\n          \"avgDiskGiB\": {{faker 'datatype.float'}},\n          \"avgMemoryGiB\": {{faker 'datatype.float'}},\n          \"diskReadGiB\": {{faker 'datatype.float'}},\n          \"diskReadIOps\": {{faker 'datatype.number'}},\n          \"diskWriteGiB\": {{faker 'datatype.float'}},\n          \"diskWriteIOps\": {{faker 'datatype.number'}},\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"networkReadGiB\": {{faker 'datatype.float'}},\n          \"networkWriteGiB\": {{faker 'datatype.float'}},\n          \"peakDiskGiB\": {{faker 'datatype.float'}},\n          \"peakMemoryGiB\": {{faker 'datatype.float'}},\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"usageStats\": {\n          \"dedicatedCoreTime\": \"\",\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n      \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n      \"taskSchedulingPolicy\": {\n        \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n      },\n      \"url\": \"\",\n      \"userAccounts\": [\n        {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"linuxUserConfiguration\": {\n            \"gid\": {{faker 'datatype.number'}},\n            \"sshPrivateKey\": \"\",\n            \"uid\": {{faker 'datatype.number'}}\n          },\n          \"name\": \"\",\n          \"password\": \"\",\n          \"windowsUserConfiguration\": {\n            \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n          }\n        }\n      ],\n      \"virtualMachineConfiguration\": {\n        \"containerConfiguration\": {\n          \"containerImageNames\": [\n            \"\"\n          ],\n          \"containerRegistries\": [\n            {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n        },\n        \"dataDisks\": [\n          {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n            \"diskSizeGB\": {{faker 'datatype.number'}},\n            \"lun\": {{faker 'datatype.number'}},\n            \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n          }\n        ],\n        \"imageReference\": {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        },\n        \"licenseType\": \"\",\n        \"nodeAgentSKUId\": \"\",\n        \"windowsConfiguration\": {\n          \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Pools.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68288bb1-925c-424a-bad9-240e40cbbf6f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44113f61-b995-4dca-ac25-b2a5de2365b2",
      "documentation": "Adds a Pool to the specified Account.",
      "method": "post",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "39f350e5-468f-4ccd-bc0c-f8a5b6ef0bbe",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23681ef8-5fe0-4c2c-beae-8b7ae78869ae",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d9ac68d-604e-44a6-9a7d-0df95fcd83a4",
      "documentation": "Deletes a Pool from the specified Account.",
      "method": "delete",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "ce950313-ee06-4e9c-b878-eb4039f359cf",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f795e76e-df6c-44e9-a6f2-0f73048b7f1b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0dbc0888-c4b9-4b6a-8c7c-eb2b9aff4d03",
      "documentation": "Gets information about the specified Pool.",
      "method": "get",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "069c550e-6e10-4db5-84e0-bc7b1d7e063e",
          "body": "{\n  \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n  \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"applicationLicenses\": [\n    \"\"\n  ],\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"autoScaleEvaluationInterval\": \"\",\n  \"autoScaleFormula\": \"\",\n  \"autoScaleRun\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    },\n    \"results\": \"\",\n    \"timestamp\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"cloudServiceConfiguration\": {\n    \"osFamily\": \"\",\n    \"osVersion\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"currentDedicatedNodes\": {{faker 'datatype.number'}},\n  \"currentLowPriorityNodes\": {{faker 'datatype.number'}},\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"enableAutoScale\": {{faker 'datatype.boolean'}},\n  \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"maxTasksPerNode\": {{faker 'datatype.number'}},\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"mountConfiguration\": [\n    {\n      \"azureBlobFileSystemConfiguration\": {\n        \"accountKey\": \"\",\n        \"accountName\": \"\",\n        \"blobfuseOptions\": \"\",\n        \"containerName\": \"\",\n        \"relativeMountPath\": \"\",\n        \"sasKey\": \"\"\n      },\n      \"azureFileShareConfiguration\": {\n        \"accountKey\": \"\",\n        \"accountName\": \"\",\n        \"azureFileUrl\": \"\",\n        \"mountOptions\": \"\",\n        \"relativeMountPath\": \"\"\n      },\n      \"cifsMountConfiguration\": {\n        \"mountOptions\": \"\",\n        \"password\": \"\",\n        \"relativeMountPath\": \"\",\n        \"source\": \"\",\n        \"username\": \"\"\n      },\n      \"nfsMountConfiguration\": {\n        \"mountOptions\": \"\",\n        \"relativeMountPath\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ],\n  \"networkConfiguration\": {\n    \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n    \"endpointConfiguration\": {\n      \"inboundNATPools\": [\n        {\n          \"backendPort\": {{faker 'datatype.number'}},\n          \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n          \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"networkSecurityGroupRules\": [\n            {\n              \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n              \"priority\": {{faker 'datatype.number'}},\n              \"sourceAddressPrefix\": \"\",\n              \"sourcePortRanges\": [\n                \"\"\n              ]\n            }\n          ],\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n        }\n      ]\n    },\n    \"publicIPs\": [\n      \"\"\n    ],\n    \"subnetId\": \"\"\n  },\n  \"resizeErrors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"resizeTimeout\": \"\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"state\": \"{{oneOf (array 'active' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"resourceStats\": {\n      \"avgCPUPercentage\": {{faker 'datatype.float'}},\n      \"avgDiskGiB\": {{faker 'datatype.float'}},\n      \"avgMemoryGiB\": {{faker 'datatype.float'}},\n      \"diskReadGiB\": {{faker 'datatype.float'}},\n      \"diskReadIOps\": {{faker 'datatype.number'}},\n      \"diskWriteGiB\": {{faker 'datatype.float'}},\n      \"diskWriteIOps\": {{faker 'datatype.number'}},\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"networkReadGiB\": {{faker 'datatype.float'}},\n      \"networkWriteGiB\": {{faker 'datatype.float'}},\n      \"peakDiskGiB\": {{faker 'datatype.float'}},\n      \"peakMemoryGiB\": {{faker 'datatype.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"usageStats\": {\n      \"dedicatedCoreTime\": \"\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n  \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n  \"taskSchedulingPolicy\": {\n    \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n  },\n  \"url\": \"\",\n  \"userAccounts\": [\n    {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"linuxUserConfiguration\": {\n        \"gid\": {{faker 'datatype.number'}},\n        \"sshPrivateKey\": \"\",\n        \"uid\": {{faker 'datatype.number'}}\n      },\n      \"name\": \"\",\n      \"password\": \"\",\n      \"windowsUserConfiguration\": {\n        \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n      }\n    }\n  ],\n  \"virtualMachineConfiguration\": {\n    \"containerConfiguration\": {\n      \"containerImageNames\": [\n        \"\"\n      ],\n      \"containerRegistries\": [\n        {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n    },\n    \"dataDisks\": [\n      {\n        \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n        \"diskSizeGB\": {{faker 'datatype.number'}},\n        \"lun\": {{faker 'datatype.number'}},\n        \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n      }\n    ],\n    \"imageReference\": {\n      \"offer\": \"\",\n      \"publisher\": \"\",\n      \"sku\": \"\",\n      \"version\": \"\",\n      \"virtualMachineImageId\": \"\"\n    },\n    \"licenseType\": \"\",\n    \"nodeAgentSKUId\": \"\",\n    \"windowsConfiguration\": {\n      \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67123bdb-6fcd-465c-be9c-f9a131493c96",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46d37889-bd1e-4e41-b62e-53f2a859cd8c",
      "documentation": "Gets basic properties of a Pool.",
      "method": "head",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "f090b2e0-71a4-4f6e-95bd-588fb35bdd60",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the Pool, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4503708c-dfec-4455-b548-4437f005fe90",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Pool does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4dcd73c7-a214-4a75-8c00-bf4b4ed2981d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85f3390f-f57a-4628-8294-62b51e3496c8",
      "documentation": "Updates the properties of the specified Pool.",
      "method": "patch",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "902b5423-6ac4-45e6-8380-24adaab61844",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9ac7d784-9f89-46a2-a444-c004a0520cd6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9201d2e0-5fec-4fae-af5f-212dea1cd12a",
      "documentation": "Disables automatic scaling for a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/disableautoscale",
      "responses": [
        {
          "uuid": "fc1c45cc-1c2d-4f16-b011-2ffc7885dfdf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "859edc31-0475-49cd-812e-89ec5a72f21b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a151376-fbe9-4932-8f68-e78ec327f34f",
      "documentation": "Enables automatic scaling for a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/enableautoscale",
      "responses": [
        {
          "uuid": "330a38e1-7206-46e6-8a65-c4d2d18bb8d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab6f8e7c-6e41-4ec9-bc8d-41573389a74e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2fff1451-5f30-4454-8945-f81532b30122",
      "documentation": "Gets the result of evaluating an automatic scaling formula on the Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/evaluateautoscale",
      "responses": [
        {
          "uuid": "9cc37e06-26d6-4b9c-a566-fa13cc53eac4",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"results\": \"\",\n  \"timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the autoscale evaluation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37084c20-2ff9-4691-b888-d602a3c1384c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4128dca-0125-406d-b4ff-3629e6395e92",
      "documentation": "Lists the Compute Nodes in the specified Pool.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes",
      "responses": [
        {
          "uuid": "275122c8-2def-47d1-99b4-db6623ab81c3",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityId\": \"\",\n      \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"endpointConfiguration\": {\n        \"inboundEndpoints\": [\n          {\n            \"backendPort\": {{faker 'datatype.number'}},\n            \"frontendPort\": {{faker 'datatype.number'}},\n            \"name\": \"\",\n            \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n            \"publicFQDN\": \"\",\n            \"publicIPAddress\": \"\"\n          }\n        ]\n      },\n      \"errors\": [\n        {\n          \"code\": \"\",\n          \"errorDetails\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"ipAddress\": \"\",\n      \"isDedicated\": {{faker 'datatype.boolean'}},\n      \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n      \"nodeAgentInfo\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"version\": \"\"\n      },\n      \"recentTasks\": [\n        {\n          \"executionInfo\": {\n            \"containerInfo\": {\n              \"containerId\": \"\",\n              \"error\": \"\",\n              \"state\": \"\"\n            },\n            \"endTime\": \"{{faker 'date.recent' 365}}\",\n            \"exitCode\": {{faker 'datatype.number'}},\n            \"failureInfo\": {\n              \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n              \"code\": \"\",\n              \"details\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"message\": \"\"\n            },\n            \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n            \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n            \"requeueCount\": {{faker 'datatype.number'}},\n            \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n            \"retryCount\": {{faker 'datatype.number'}},\n            \"startTime\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"jobId\": \"\",\n          \"subtaskId\": {{faker 'datatype.number'}},\n          \"taskId\": \"\",\n          \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n          \"taskUrl\": \"\"\n        }\n      ],\n      \"runningTasksCount\": {{faker 'datatype.number'}},\n      \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"startTaskInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n      },\n      \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalTasksRun\": {{faker 'datatype.number'}},\n      \"totalTasksSucceeded\": {{faker 'datatype.number'}},\n      \"url\": \"\",\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Compute Nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "090f1736-9a1c-4b89-b4f6-672fb4bf80f3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6cfdcc5e-f272-4025-a4ac-284db64ad2d1",
      "documentation": "Gets information about the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "64269b45-45ae-4fb8-8b25-87db91fbe1cb",
          "body": "{\n  \"affinityId\": \"\",\n  \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"endpointConfiguration\": {\n    \"inboundEndpoints\": [\n      {\n        \"backendPort\": {{faker 'datatype.number'}},\n        \"frontendPort\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n        \"publicFQDN\": \"\",\n        \"publicIPAddress\": \"\"\n      }\n    ]\n  },\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"errorDetails\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\",\n  \"ipAddress\": \"\",\n  \"isDedicated\": {{faker 'datatype.boolean'}},\n  \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n  \"nodeAgentInfo\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\"\n  },\n  \"recentTasks\": [\n    {\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'datatype.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"jobId\": \"\",\n      \"subtaskId\": {{faker 'datatype.number'}},\n      \"taskId\": \"\",\n      \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"taskUrl\": \"\"\n    }\n  ],\n  \"runningTasksCount\": {{faker 'datatype.number'}},\n  \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"startTaskInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'datatype.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n  },\n  \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"totalTasksRun\": {{faker 'datatype.number'}},\n  \"totalTasksSucceeded\": {{faker 'datatype.number'}},\n  \"url\": \"\",\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Compute Node.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65f504f6-0d9b-4325-8ecd-040ff216d7e5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89295a16-3bc0-4139-9b2e-416593126b6f",
      "documentation": "Disables Task scheduling on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/disablescheduling",
      "responses": [
        {
          "uuid": "db05ecde-aec8-4faa-b60a-9c75f6992afe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a9193e1-053f-4867-a238-81506a27bad7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b9a9581-6696-4582-8aea-762817e33e87",
      "documentation": "Enables Task scheduling on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/enablescheduling",
      "responses": [
        {
          "uuid": "6cdfc4ad-c903-4287-9c85-6eff9cb0689d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b58bee4f-10c1-494e-8faa-63e7594929cb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48780c9f-a579-4104-a5d4-14304bf12461",
      "documentation": "Lists all of the files in Task directories on the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files",
      "responses": [
        {
          "uuid": "28ac1c51-8cdc-4a36-8ba4-f59af915681b",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'datatype.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "17874c02-44f6-4939-b50f-017611765913",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94bdc0f6-49ce-4541-a141-20828bea2408",
      "documentation": "Deletes the specified file from the Compute Node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "71144b3b-5e09-45f1-9388-9bb7399d9547",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b12c4c79-3d4b-4b28-91ca-54af4d337dec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a602b1a8-2d21-4475-b521-a8e2b182e25a",
      "documentation": "Returns the content of the specified Compute Node file.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "ae797374-d9a5-481c-94a3-a58764d08c19",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1b8be057-78d0-4a11-922e-85987d490cf4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fe93ca93-c8e2-465f-b607-518bfe6d7e0d",
      "documentation": "Gets the properties of the specified Compute Node file.",
      "method": "head",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "10539137-b75f-44f9-90e3-f3086eed9d3f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "48430772-fcc9-4054-ade0-0b01450c86c6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "424e5e53-fc07-4ea9-8749-3e5667bb95f3",
      "documentation": "Gets the Remote Desktop Protocol file for the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/rdp",
      "responses": [
        {
          "uuid": "aecca41e-20ff-451b-bf99-b71fbeae699f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the RDP information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "01223612-09a0-4300-b973-ef33f82bd369",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a370deda-f116-48f7-b015-c515b787d5cf",
      "documentation": "Restarts the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reboot",
      "responses": [
        {
          "uuid": "b2c9df80-1d61-4e4b-9320-2eb6c1e9c827",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39b8ff22-171e-44e8-ae69-2f0b5de317b1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e07f63cc-caac-456f-81fc-9a34149ff7c3",
      "documentation": "Reinstalls the operating system on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reimage",
      "responses": [
        {
          "uuid": "2b6911e2-e1a5-4141-95f1-73bc95e16c68",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "60037433-d2e9-466e-ac3b-db93a3b40c3c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6203d600-a9ba-4c22-ab25-808bc25867b1",
      "documentation": "Gets the settings required for remote login to a Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/remoteloginsettings",
      "responses": [
        {
          "uuid": "0222fc9b-79a2-46c6-b6d0-c8e75f706248",
          "body": "{\n  \"remoteLoginIPAddress\": \"\",\n  \"remoteLoginPort\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the login settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1443a90-92b3-4927-8504-267923bd8d05",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3f010ff-38be-4d4d-82fd-492c132d0344",
      "documentation": "Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/uploadbatchservicelogs",
      "responses": [
        {
          "uuid": "556caa40-14d7-4c78-a86f-fdaa7a5a5704",
          "body": "{\n  \"numberOfFilesUploaded\": {{faker 'datatype.number'}},\n  \"virtualDirectoryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "59451196-c7cf-4bde-9554-15bef172044b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f59f7fc-76b4-4d03-928e-1f47ef921af1",
      "documentation": "Adds a user Account to the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/users",
      "responses": [
        {
          "uuid": "bde846d9-bc64-4293-a444-d8add977ae20",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b61e54ea-92d7-4d07-ae27-d5e8d127066a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54b07208-1858-412d-9be1-b4735e825b06",
      "documentation": "Deletes a user Account from the specified Compute Node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "1a98a74c-77fd-42a6-96d6-a2413e4c82dc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91688fb6-877e-4d6a-b9f6-385710bfdb5b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e056806-e8ef-4f13-877e-78f46aed7fac",
      "documentation": "Updates the password and expiration time of a user Account on the specified Compute Node.",
      "method": "put",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "a2a29cfb-46ef-47e3-aedc-e1c7184a31ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e6f99fa-7cc4-49d5-9cf5-1966ecacbfbc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d986e8b5-f674-441f-b806-072c7a822c62",
      "documentation": "Removes Compute Nodes from the specified Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/removenodes",
      "responses": [
        {
          "uuid": "76a1f800-8220-498d-b0cd-c05cf31058e6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "50c5d93f-e91b-4429-9417-adf68ae46a6f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eff98510-7fbf-4777-bffc-38dabeaa70b7",
      "documentation": "Changes the number of Compute Nodes that are assigned to a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/resize",
      "responses": [
        {
          "uuid": "9558031b-208b-48fd-ae64-2ab4311487ee",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "596e36ae-4d0b-49ce-8e12-76a00dbdae00",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca3300a6-793f-43ef-8b69-78e8841d9311",
      "documentation": "Stops an ongoing resize operation on the Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/stopresize",
      "responses": [
        {
          "uuid": "4e8994f2-58ed-486e-ab6c-cb8f7b5f528b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "667be037-0600-480d-8360-f515b0c1c5f0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If you call this API on a Pool which is not in the resizing state, the request fails with HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7469f924-dc32-472a-9ec7-928206768f63",
      "documentation": "Updates the properties of the specified Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/updateproperties",
      "responses": [
        {
          "uuid": "19144e73-9657-4022-8782-8857cf667e2f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a90d515-3c17-4b5f-a8c1-bad87e761d93",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd33182b-6903-4fa0-aaa5-0715e0b50244",
      "documentation": "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.",
      "method": "get",
      "endpoint": "poolusagemetrics",
      "responses": [
        {
          "uuid": "1eae20f0-cf77-4b33-9edf-fd21bea1d926",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"poolId\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalCoreHours\": {{faker 'datatype.float'}},\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Pool usage details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d84c1409-d3eb-4397-a54b-e43fd41305e2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b93c9f5-d747-418c-8a7f-70c4266e4b27",
      "documentation": "Lists all Virtual Machine Images supported by the Azure Batch service.",
      "method": "get",
      "endpoint": "supportedimages",
      "responses": [
        {
          "uuid": "c2899428-11b4-4d9a-9e47-ad6b808b2413",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"batchSupportEndOfLife\": \"{{faker 'date.recent' 365}}\",\n      \"capabilities\": [\n        \"\"\n      ],\n      \"imageReference\": {\n        \"offer\": \"\",\n        \"publisher\": \"\",\n        \"sku\": \"\",\n        \"version\": \"\",\n        \"virtualMachineImageId\": \"\"\n      },\n      \"nodeAgentSKUId\": \"\",\n      \"osType\": \"{{oneOf (array 'linux' 'windows')}}\",\n      \"verificationType\": \"{{oneOf (array 'verified' 'unverified')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of supported Virtual Machine Images.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4e18db5-6a49-4b9e-bc3b-ff00940194a7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}