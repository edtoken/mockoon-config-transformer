{
  "uuid": "9ef65c25-bddf-4537-8d3a-1c3248786325",
  "lastMigration": 24,
  "name": "AWS Performance Insights",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "44f50f8a-a1ee-4f7f-9887-1e5f32db9226",
      "documentation": "<p>For a specific time period, retrieve the top <code>N</code> dimension keys for a metric.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.DescribeDimensionKeys",
      "responses": [
        {
          "uuid": "b496d425-af68-4eea-86fa-62a74598a1c8",
          "body": "{\n  \"AlignedStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"AlignedEndTime\": \"{{faker 'date.recent' 365}}\",\n  \"PartitionKeys\": [\n    {\n      \"Dimensions\": {}\n    }\n  ],\n  \"Keys\": [\n    {\n      \"Dimensions\": {},\n      \"Total\": {{faker 'datatype.float'}},\n      \"Partitions\": [\n        {{faker 'datatype.float'}}\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "031664d9-1ce1-4b51-9def-1b2518a75ebb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "342236a9-2922-4e25-81e9-16485c73f25e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdc7e4ad-873d-4566-984a-3df6ce31bcb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a89fa754-d371-427f-a30b-9ce28324c40f",
      "documentation": "Get the attributes of the specified dimension group for a DB instance or data source. For example, if you specify a SQL ID, <code>GetDimensionKeyDetails</code> retrieves the full text of the dimension <code>db.sql.statement</code> associated with this ID. This operation is useful because <code>GetResourceMetrics</code> and <code>DescribeDimensionKeys</code> don't support retrieval of large SQL statement text.",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.GetDimensionKeyDetails",
      "responses": [
        {
          "uuid": "66c1fbde-890f-4d69-8f5d-872002218f66",
          "body": "{\n  \"Dimensions\": [\n    {\n      \"Value\": \"\",\n      \"Dimension\": \"\",\n      \"Status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6bc74e94-6eb0-4289-82bc-f3c0ade20497",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60dacef5-6ee5-4efe-a46a-e951515034b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0e7dd83-7950-4599-a0ca-c1f8a4c4e05d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "79c4e96e-ea58-4acd-a5ac-11dd8cbfdc60",
      "documentation": "<p>Retrieve Performance Insights metrics for a set of data sources, over a time period. You can provide specific dimension groups and dimensions, and provide aggregation and filtering criteria for each group.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.GetResourceMetrics",
      "responses": [
        {
          "uuid": "1425d4ee-f27c-4afc-b284-f6004e6a19ba",
          "body": "{\n  \"AlignedStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"AlignedEndTime\": \"{{faker 'date.recent' 365}}\",\n  \"Identifier\": \"\",\n  \"MetricList\": [\n    {\n      \"Key\": {\n        \"Metric\": \"\",\n        \"Dimensions\": {}\n      },\n      \"DataPoints\": [\n        {\n          \"Timestamp\": \"{{faker 'date.recent' 365}}\",\n          \"Value\": {{faker 'datatype.float'}}\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6296ad26-cf2a-4a6f-8e84-80bd9940ecb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6778d17-6842-4da4-a561-48eadbbe267d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93b75361-43ce-4a23-b7c7-ee08707efbdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}