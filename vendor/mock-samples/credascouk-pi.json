{
  "uuid": "71ce05bd-272d-492e-a0cf-9eeef2e984a1",
  "lastMigration": 24,
  "name": "Credas API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e5d43f2e-def2-4bc2-9e98-b13f256f5f25",
      "documentation": "Verifies bank account details.",
      "method": "post",
      "endpoint": "api/bank-accounts/verify",
      "responses": [
        {
          "uuid": "03fa2b8e-6cdc-411c-8bca-de623e126101",
          "body": "{\n  \"accountNumber\": \"\",\n  \"accountNumberValidation\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n  \"accountNumberValidationText\": \"\",\n  \"accountStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"accountStatusText\": \"\",\n  \"accountValid\": {{faker 'datatype.boolean'}},\n  \"addressValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n  \"addressValidationText\": \"\",\n  \"checkDate\": \"{{faker 'date.recent' 365}}\",\n  \"checkId\": \"{{faker 'datatype.uuid'}}\",\n  \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"error\": {{faker 'datatype.boolean'}},\n  \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n  \"nameValidation\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"nameValidationText\": \"\",\n  \"referenceId\": \"\",\n  \"sortcode\": \"\",\n  \"sortcodeValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n  \"sortcodeValidationText\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cef12e02-f459-4739-a2a8-9f4768aef15a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e629788-62be-48c3-b1a9-5f7fe55eabd2",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbc225da-b72c-455a-b836-5139cb46b02f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1de7167e-ad3f-44d9-8cd9-46c83485bdd2",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63af097a-a0f0-4868-b826-6d380b4144fa",
      "documentation": "Searches for a company based on its Company Number and returns its details.",
      "method": "post",
      "endpoint": "api/companies",
      "responses": [
        {
          "uuid": "e6758a69-478f-495e-8044-424eab609d19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "010bf4ba-6e6b-4759-a707-cabd1866acde",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5403fcd9-4dc0-4997-a9fa-d7200ddd8e1f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0de61ae-11a1-4489-9bf6-c04f9333fe73",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "If the consumer doesn't have the required permission to use the endpoint.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1970048-1bf9-42ef-a1b3-74801f4b5628",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd78f029-b117-46fc-b24a-c1273fe9ac16",
      "documentation": "",
      "method": "get",
      "endpoint": "api/companies/:companyId",
      "responses": [
        {
          "uuid": "62d9a467-ba62-4080-969f-30e5bd377b5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba9d20dd-1a0c-4672-b65c-b4398eadbdb5",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d081c198-1d29-4387-8acb-20c064be741a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9cafc2b0-f441-457c-908e-3002f53e7105",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "If the consumer doesn't have the required permission to use the endpoint.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6dbc50b-e765-4f4c-9a78-e566f2847725",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17498885-b126-4fae-bb16-9f2c8cc96e87",
      "documentation": "Check includes identifying bankruptcy, insolvency, CCJ's or Company Directorship.",
      "method": "post",
      "endpoint": "api/credit-status/perform",
      "responses": [
        {
          "uuid": "ccecf54b-d641-4534-a403-1e9c6eed11ff",
          "body": "{\n  \"ccj\": [\n    {\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"address3\": \"\",\n      \"address4\": \"\",\n      \"address5\": \"\",\n      \"amount\": \"\",\n      \"caseNumber\": \"\",\n      \"courtName\": \"\",\n      \"dateEnd\": \"{{faker 'date.recent' 365}}\",\n      \"dob\": \"{{faker 'date.recent' 365}}\",\n      \"judgementDate\": \"{{faker 'date.recent' 365}}\",\n      \"judgementType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n      \"judgementTypeText\": \"\",\n      \"name\": \"\",\n      \"postcode\": \"\"\n    }\n  ],\n  \"checkDate\": \"{{faker 'date.recent' 365}}\",\n  \"companyDirector\": [\n    {\n      \"companyAppointments\": [\n        {\n          \"address\": \"\",\n          \"appointmentDate\": \"{{faker 'date.recent' 365}}\",\n          \"appointmentType\": \"\",\n          \"dob\": \"{{faker 'date.recent' 365}}\",\n          \"name\": \"\",\n          \"nationality\": \"\",\n          \"occupation\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"companyName\": \"\",\n      \"companyRegNo\": \"\",\n      \"dateAppointed\": \"{{faker 'date.recent' 365}}\",\n      \"matchType\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"matchTypeText\": \"\",\n      \"registeredOffice\": \"\"\n    }\n  ],\n  \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n  \"insolvency\": [\n    {\n      \"address\": {\n        \"address1\": \"\",\n        \"address2\": \"\",\n        \"address3\": \"\",\n        \"address4\": \"\",\n        \"address5\": \"\",\n        \"dps\": \"\",\n        \"isEmpty\": {{faker 'datatype.boolean'}},\n        \"postcode\": \"\"\n      },\n      \"aliases\": \"\",\n      \"assetTotal\": \"\",\n      \"caseNo\": \"\",\n      \"caseType\": \"\",\n      \"court\": \"\",\n      \"debtTotal\": \"\",\n      \"description\": \"\",\n      \"dob\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"occupation\": \"\",\n      \"presentationDate\": \"{{faker 'date.recent' 365}}\",\n      \"previousAddress\": {\n        \"address1\": \"\",\n        \"address2\": \"\",\n        \"address3\": \"\",\n        \"address4\": \"\",\n        \"address5\": \"\",\n        \"dps\": \"\",\n        \"isEmpty\": {{faker 'datatype.boolean'}},\n        \"postcode\": \"\"\n      },\n      \"serviceOffice\": \"\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"telephoneNumber\": \"\",\n      \"tradingNames\": \"\",\n      \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n      \"typeText\": \"\"\n    }\n  ],\n  \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a279ad0c-1347-4352-a65e-93d562ac331e",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be02480a-69fe-422c-b652-0c5bddbb447a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d9b73aa-e7e4-404e-b793-b26f323c2eff",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fcc31b1-b195-4eb3-bd50-ea1c6310da17",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5de6acd-e186-4ede-91ac-160345df3cc7",
      "documentation": "Creates new data check against a specified registration.",
      "method": "post",
      "endpoint": "api/datachecks",
      "responses": [
        {
          "uuid": "e176d02d-bb1f-42e2-bd2a-25d0ed8e1a25",
          "body": "{\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"regCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of newly added data check.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26fd0b3e-c604-4631-a248-88324aaa6b28",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef4f5bb3-b348-444d-8569-fb6f28351406",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa85589c-a72e-4b93-8256-19416f18a583",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f74aa460-0981-4714-9325-ea067b603979",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1ac32ab-d58e-4aa1-83aa-b20d4e77f055",
      "documentation": "Add an id document image to the specified registration.",
      "method": "post",
      "endpoint": "api/images/id-document",
      "responses": [
        {
          "uuid": "5ec0b864-919e-4819-a065-8cfd582460bf",
          "body": "{\n  \"documentStatus\": \"{{oneOf (array '1' '2' '3')}}\",\n  \"documentType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '11' '12' '13' '14' '15' '16' '17' '18' '19' '20' '21' '22' '23' '24' '25' '26' '27' '28' '29' '30' '41' '42' '43' '44' '45' '46' '48' '49' '50' '51' '52' '53' '54' '55' '56' '57' '58' '59' '60' '61' '62' '63' '64' '65' '66' '67' '68' '69' '70' '71' '72' '73' '74' '75' '76' '77')}}\",\n  \"facialMatch\": {{faker 'datatype.boolean'}},\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"regCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of the processed id document.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e2a66deb-d0a4-4544-921f-bd6a6589e2bd",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92819fca-12ac-4159-9308-e1c06c9c44a3",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6717495c-001b-473a-8d99-94139de75424",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3155606-c7a3-41c3-a77b-d2946d86a62b",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98673d99-ef57-414b-9204-b2e5c3d93429",
      "documentation": "Get all id document images associated with a registration.",
      "method": "get",
      "endpoint": "api/images/id-document/:registrationId",
      "responses": [
        {
          "uuid": "c3261922-8c23-4e79-bf9f-fc1660a4ccde",
          "body": "{\n  \"addressCity\": \"\",\n  \"addressFull\": \"\",\n  \"addressPostcode\": \"\",\n  \"country\": \"\",\n  \"countryCode\": \"\",\n  \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n  \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"documentAnalysisResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '10' '11')}}\",\n  \"documentNumber\": \"\",\n  \"documentSide\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"expiryDate\": \"{{faker 'date.recent' 365}}\",\n  \"facialMatch\": {{faker 'datatype.boolean'}},\n  \"forename\": \"\",\n  \"fullName\": \"\",\n  \"hiResUrl\": \"\",\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"isUnderReview\": {{faker 'datatype.boolean'}},\n  \"manuallyVerified\": {{faker 'datatype.boolean'}},\n  \"middleName\": \"\",\n  \"mrz1\": \"\",\n  \"mrz2\": \"\",\n  \"mrz3\": \"\",\n  \"nameCheck\": {{faker 'datatype.boolean'}},\n  \"nameCheckMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"nfcCheck\": {{faker 'datatype.boolean'}},\n  \"nfcFacialUrl\": \"\",\n  \"nfcReadStatus\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\",\n  \"primaryScanId\": \"{{faker 'datatype.uuid'}}\",\n  \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"surname\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of the id documents associated with the registration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df07af1d-78ea-4119-9e38-ebd5d3a147cf",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30c62e21-8597-4873-b495-c2c32aa92cdc",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63d5cb97-b30e-46e1-9893-e922a9274f8e",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0dde45c-b557-4822-b17c-c5d2803bab56",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27eeb319-f88b-4403-9fbe-8714c773d7f3",
      "documentation": "Add a liveness image (UAP) to the specified registration.",
      "method": "post",
      "endpoint": "api/images/liveness",
      "responses": [
        {
          "uuid": "10f4ed95-23a0-451a-961f-45ef1d6143c1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK response indicating a successful action.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05d16833-e49d-4ad6-95b0-6d9c95522557",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40226d91-a39a-41f8-b076-1a698cf4814d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a07d006a-f58b-4fd5-995a-aecac12ddc9f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab371195-63af-46d3-84ca-6e32a47c5188",
      "documentation": "Retrieve the liveness performed image associated with a registration.",
      "method": "get",
      "endpoint": "api/images/liveness-performed/:registrationId",
      "responses": [
        {
          "uuid": "a001d07f-049c-4654-8840-a6599a4516d8",
          "body": "{\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response containing Liveness performed image details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4501175-b125-4e4c-8b0c-96f4d0e15459",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a16e7cc-22d7-45d8-a8dc-fc6d481b88bf",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61fa5144-d17d-4fe1-84eb-9d1c4eb8da13",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8e1a516-4ce1-4308-a648-17b44d69e7e2",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If the liveness performed image doesn't exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f902eca-0c3d-44e3-ab6b-55745ed55601",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31226ddf-897b-4073-bb2f-360ec6c54f9e",
      "documentation": "Retrieve the liveness action image (UAP) associated with a registration.",
      "method": "get",
      "endpoint": "api/images/liveness/:registrationId",
      "responses": [
        {
          "uuid": "81a7282f-c3b3-49c0-b283-6bde5690cccb",
          "body": "{\n  \"description\": \"\",\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response containing Liveness image details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "74662af1-5270-48fd-a893-b4f15caf6b41",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "beadd396-ed4d-436f-bb17-78303da811a9",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a02d27a5-1899-40cb-9f3b-1596cf141453",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f26c512-1fe8-4a04-9e7c-3e5607eb3606",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13713a8e-69ee-464d-9f16-c7006b7e2fce",
      "documentation": "Add a selfie image to the registration.",
      "method": "post",
      "endpoint": "api/images/selfie",
      "responses": [
        {
          "uuid": "bd7c53e3-e918-4c64-a68a-89a4adde1a4e",
          "body": "{\n  \"livenessConfirmed\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Result of uploading selfie image; including liveness check indicator.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9987fca2-c771-4479-b84c-dce2db402cbd",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7914c975-1298-4042-b7e5-e331f0d0f129",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9d78283-68c5-47c5-bb31-3bd39a3f6a80",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b310b428-86e9-43ad-8d5e-15d2b358d884",
      "documentation": "Retrieve the selfie image associated with a registration.",
      "method": "get",
      "endpoint": "api/images/selfie/:registrationId",
      "responses": [
        {
          "uuid": "e931d25e-2ea1-4315-aec2-9dd6fd7ff573",
          "body": "{\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response containing the selfie image details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b2af7f6-8361-4a0c-ac16-0a577d3a3d35",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cba56e45-2f37-4747-a566-65d092f4fb3f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47f1edf8-3e15-478d-9332-50c61d941742",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3170682b-a249-4ad6-8400-89a604c4d8c7",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "72b2693b-5803-4d8c-9c28-608d72419fc8",
      "documentation": "Creates new property registry check against the registration.",
      "method": "post",
      "endpoint": "api/property-register",
      "responses": [
        {
          "uuid": "c204da9b-84b6-42a9-a29a-6dc44c374a8c",
          "body": "{\n  \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n  \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n  \"matchResultText\": \"\",\n  \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"propertyOwnershipText\": \"\",\n  \"titleNumber\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of newly added data check.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95995767-8a2a-4a1d-9237-7694a8f9d132",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b801062b-3714-4da1-abdc-d645cae2b7f0",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af4e0fad-9f8e-464d-b46d-aebc04fa0c81",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f906a90-7293-4f05-a6e7-b82dcd5e4a76",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb5d2cd0-abcb-4a94-b554-e020ebe81f9d",
      "documentation": "Retrieves property registry check associated with the registration.",
      "method": "get",
      "endpoint": "api/property-register/:id",
      "responses": [
        {
          "uuid": "427720ef-313c-43bb-bc9e-561ffd847952",
          "body": "{\n  \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n  \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n  \"matchResultText\": \"\",\n  \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"propertyOwnershipText\": \"\",\n  \"titleNumber\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of the property register check.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "256b1114-7a54-4f1b-b0e3-20e5a1c73729",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e951d32-0c55-4823-a521-d51700ae34e6",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a38640b6-31a4-4b9c-afd4-16aead7b30e7",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration does not have associated property register check.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31673186-8586-41aa-a893-7ec93a98a8c9",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dfe16d47-0dd3-4b44-a499-702514b0fe8f",
      "documentation": "Gets all available RegTypes.",
      "method": "get",
      "endpoint": "api/reg-types",
      "responses": [
        {
          "uuid": "68871be8-7340-44f6-9b1c-7451da9cdecc",
          "body": "[\n  {\n    \"id\": \"{{faker 'datatype.uuid'}}\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of available RegTypes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed53b9ef-775e-4af5-a2e6-c0164a1eaf09",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c3a737b-58d2-415c-882d-424449a5abc5",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7916193-35ec-4cfa-ae76-bb810f068f0f",
      "documentation": "Creates new registration.",
      "method": "post",
      "endpoint": "api/registrations",
      "responses": [
        {
          "uuid": "e047e7a4-9f15-4d7d-b8cc-dfdc7a1cdc10",
          "body": "{\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"regCode\": \"\",\n  \"webJourneyUrl\": {\n    \"url\": \"\",\n    \"validUntil\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Details of newly added registration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "850b3612-bf26-466c-a9e9-fede518935bc",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c81af4e-f66e-4911-b61c-afe0ed09a0c4",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c54c05f1-f5ba-4c9a-be91-b3e5239b6740",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Error code meaning that the operation was aborted due to insufficient credits.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a037dcc7-0238-48c0-b7b4-ea1998190517",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba337f53-6a5f-4cb5-9817-f989d2c39675",
      "documentation": "Creates new registration record, adds an ID document and optional selfie image in one go.",
      "method": "post",
      "endpoint": "api/registrations/instant",
      "responses": [
        {
          "uuid": "d24c20b0-fe74-48d9-a5a0-c1604a117faf",
          "body": "{\n  \"documentStatus\": \"{{oneOf (array '1' '2' '3')}}\",\n  \"documentType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '11' '12' '13' '14' '15' '16' '17' '18' '19' '20' '21' '22' '23' '24' '25' '26' '27' '28' '29' '30' '41' '42' '43' '44' '45' '46' '48' '49' '50' '51' '52' '53' '54' '55' '56' '57' '58' '59' '60' '61' '62' '63' '64' '65' '66' '67' '68' '69' '70' '71' '72' '73' '74' '75' '76' '77')}}\",\n  \"facialMatch\": {{faker 'datatype.boolean'}},\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"regCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK response with object containing the document information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ed5aba0-c676-43dd-aeb4-baf6ad166984",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "881161d7-f213-44f3-b8d1-d0fb98cf85a0",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98ca0333-acc1-4967-8581-79177e61f3a8",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff6ec399-7975-4192-b393-b1c59f54a899",
      "documentation": "Finds registrations by the ReferenceId.",
      "method": "get",
      "endpoint": "api/registrations/referenceid/:referenceId/summary",
      "responses": [
        {
          "uuid": "5acf499d-2a2b-4884-b20b-067358c5278f",
          "body": "[\n  {\n    \"bankAccountChecks\": [\n      {\n        \"accountNumber\": \"\",\n        \"accountNumberValidation\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n        \"accountNumberValidationText\": \"\",\n        \"accountStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"accountStatusText\": \"\",\n        \"accountValid\": {{faker 'datatype.boolean'}},\n        \"addressValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n        \"addressValidationText\": \"\",\n        \"checkDate\": \"{{faker 'date.recent' 365}}\",\n        \"checkId\": \"{{faker 'datatype.uuid'}}\",\n        \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"error\": {{faker 'datatype.boolean'}},\n        \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n        \"nameValidation\": \"{{oneOf (array '0' '1' '2')}}\",\n        \"nameValidationText\": \"\",\n        \"referenceId\": \"\",\n        \"sortcode\": \"\",\n        \"sortcodeValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n        \"sortcodeValidationText\": \"\"\n      }\n    ],\n    \"creditStatusCheck\": {\n      \"ccj\": [\n        {\n          \"address1\": \"\",\n          \"address2\": \"\",\n          \"address3\": \"\",\n          \"address4\": \"\",\n          \"address5\": \"\",\n          \"amount\": \"\",\n          \"caseNumber\": \"\",\n          \"courtName\": \"\",\n          \"dateEnd\": \"{{faker 'date.recent' 365}}\",\n          \"dob\": \"{{faker 'date.recent' 365}}\",\n          \"judgementDate\": \"{{faker 'date.recent' 365}}\",\n          \"judgementType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n          \"judgementTypeText\": \"\",\n          \"name\": \"\",\n          \"postcode\": \"\"\n        }\n      ],\n      \"checkDate\": \"{{faker 'date.recent' 365}}\",\n      \"companyDirector\": [\n        {\n          \"companyAppointments\": [\n            {\n              \"address\": \"\",\n              \"appointmentDate\": \"{{faker 'date.recent' 365}}\",\n              \"appointmentType\": \"\",\n              \"dob\": \"{{faker 'date.recent' 365}}\",\n              \"name\": \"\",\n              \"nationality\": \"\",\n              \"occupation\": \"\",\n              \"title\": \"\"\n            }\n          ],\n          \"companyName\": \"\",\n          \"companyRegNo\": \"\",\n          \"dateAppointed\": \"{{faker 'date.recent' 365}}\",\n          \"matchType\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n          \"matchTypeText\": \"\",\n          \"registeredOffice\": \"\"\n        }\n      ],\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"insolvency\": [\n        {\n          \"address\": {\n            \"address1\": \"\",\n            \"address2\": \"\",\n            \"address3\": \"\",\n            \"address4\": \"\",\n            \"address5\": \"\",\n            \"dps\": \"\",\n            \"isEmpty\": {{faker 'datatype.boolean'}},\n            \"postcode\": \"\"\n          },\n          \"aliases\": \"\",\n          \"assetTotal\": \"\",\n          \"caseNo\": \"\",\n          \"caseType\": \"\",\n          \"court\": \"\",\n          \"debtTotal\": \"\",\n          \"description\": \"\",\n          \"dob\": \"{{faker 'date.recent' 365}}\",\n          \"name\": \"\",\n          \"occupation\": \"\",\n          \"presentationDate\": \"{{faker 'date.recent' 365}}\",\n          \"previousAddress\": {\n            \"address1\": \"\",\n            \"address2\": \"\",\n            \"address3\": \"\",\n            \"address4\": \"\",\n            \"address5\": \"\",\n            \"dps\": \"\",\n            \"isEmpty\": {{faker 'datatype.boolean'}},\n            \"postcode\": \"\"\n          },\n          \"serviceOffice\": \"\",\n          \"startDate\": \"{{faker 'date.recent' 365}}\",\n          \"status\": \"\",\n          \"telephoneNumber\": \"\",\n          \"tradingNames\": \"\",\n          \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n          \"typeText\": \"\"\n        }\n      ],\n      \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n    },\n    \"customTermsAccepted\": {{faker 'datatype.boolean'}},\n    \"customTermsAcceptedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"customTermsAcceptedVersion\": {{faker 'datatype.number'}},\n    \"dataCheckResult\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n    \"dataCheckSources\": [\n      {\n        \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n        \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n        \"hasPepSanctionsData\": {{faker 'datatype.boolean'}},\n        \"label\": \"\",\n        \"pepSanctionsData\": [\n          {\n            \"addresses\": [\n              {\n                \"lines\": [\n                  \"\"\n                ]\n              }\n            ],\n            \"aliases\": [\n              \"\"\n            ],\n            \"fullName\": \"\",\n            \"id\": \"\",\n            \"positions\": [\n              {\n                \"country\": \"\",\n                \"position\": \"\"\n              }\n            ],\n            \"sanctionBodies\": [\n              \"\"\n            ],\n            \"sanctionDates\": [\n              {\n                \"date\": \"{{faker 'date.recent' 365}}\",\n                \"day\": {{faker 'datatype.number'}},\n                \"month\": {{faker 'datatype.number'}},\n                \"type\": \"{{oneOf (array '0' '1' '2')}}\",\n                \"year\": {{faker 'datatype.number'}}\n              }\n            ]\n          }\n        ],\n        \"remarks\": [\n          {\n            \"category\": \"{{oneOf (array '1' '2' '3' '4')}}\",\n            \"description\": \"\"\n          }\n        ],\n        \"sourceType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10')}}\",\n        \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n      }\n    ],\n    \"dataChecksPerformed\": {{faker 'datatype.boolean'}},\n    \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n    \"email\": \"\",\n    \"forename\": \"\",\n    \"id\": \"{{faker 'datatype.uuid'}}\",\n    \"idDocuments\": [\n      {\n        \"addressCity\": \"\",\n        \"addressFull\": \"\",\n        \"addressPostcode\": \"\",\n        \"country\": \"\",\n        \"countryCode\": \"\",\n        \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n        \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"documentAnalysisResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '10' '11')}}\",\n        \"documentNumber\": \"\",\n        \"documentSide\": \"{{oneOf (array '0' '1' '2')}}\",\n        \"expiryDate\": \"{{faker 'date.recent' 365}}\",\n        \"facialMatch\": {{faker 'datatype.boolean'}},\n        \"forename\": \"\",\n        \"fullName\": \"\",\n        \"id\": \"{{faker 'datatype.uuid'}}\",\n        \"isUnderReview\": {{faker 'datatype.boolean'}},\n        \"manuallyVerified\": {{faker 'datatype.boolean'}},\n        \"middleName\": \"\",\n        \"mrz1\": \"\",\n        \"mrz2\": \"\",\n        \"mrz3\": \"\",\n        \"nameCheck\": {{faker 'datatype.boolean'}},\n        \"nameCheckMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n        \"nfcCheck\": {{faker 'datatype.boolean'}},\n        \"nfcReadStatus\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\",\n        \"primaryScanId\": \"{{faker 'datatype.uuid'}}\",\n        \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"surname\": \"\"\n      }\n    ],\n    \"idVerification\": {\n      \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}}\n    },\n    \"isAgentLed\": {{faker 'datatype.boolean'}},\n    \"livenessMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n    \"livenessStatus\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n    \"livenessVerified\": {{faker 'datatype.boolean'}},\n    \"personalDetails\": {\n      \"address\": {\n        \"addressLine1\": \"\",\n        \"addressLine2\": \"\",\n        \"addressLine3\": \"\",\n        \"city\": \"\",\n        \"country\": \"\",\n        \"county\": \"\",\n        \"postcode\": \"\"\n      },\n      \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n      \"forename\": \"\",\n      \"surname\": \"\"\n    },\n    \"phoneNumber\": \"\",\n    \"proofOfOwnershipCheck\": {\n      \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n      \"matchResultText\": \"\",\n      \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"propertyOwnershipText\": \"\",\n      \"titleNumber\": \"\"\n    },\n    \"referenceId\": \"\",\n    \"regCode\": \"\",\n    \"regTypeId\": \"{{faker 'datatype.uuid'}}\",\n    \"rightToWorkDocumentsProvided\": \"{{oneOf (array '0' '1' '2')}}\",\n    \"status\": \"{{oneOf (array '0' '1' '2' '3' '4' '6')}}\",\n    \"surname\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection of Registration summary objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dc8c8e7f-0cf5-4ba1-bc63-92eecab0f375",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "646db0b7-3614-4f94-8277-11d1e17ce1c6",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94c14d17-b455-46f3-a7cd-8fd203abd694",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36ee8adc-4056-4fc3-9e90-bd77a3a9bbc4",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the RegCode was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07720c03-0bc6-4841-8228-9102a0ac48ab",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d225904-37a5-4088-8c29-1313840b69b4",
      "documentation": "Finds a registration by the RegCode.",
      "method": "get",
      "endpoint": "api/registrations/regcode/:regCode/summary",
      "responses": [
        {
          "uuid": "58fa9fe7-2302-43ea-afcf-032e98e7fdc2",
          "body": "{\n  \"bankAccountChecks\": [\n    {\n      \"accountNumber\": \"\",\n      \"accountNumberValidation\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n      \"accountNumberValidationText\": \"\",\n      \"accountStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"accountStatusText\": \"\",\n      \"accountValid\": {{faker 'datatype.boolean'}},\n      \"addressValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n      \"addressValidationText\": \"\",\n      \"checkDate\": \"{{faker 'date.recent' 365}}\",\n      \"checkId\": \"{{faker 'datatype.uuid'}}\",\n      \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"error\": {{faker 'datatype.boolean'}},\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"nameValidation\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"nameValidationText\": \"\",\n      \"referenceId\": \"\",\n      \"sortcode\": \"\",\n      \"sortcodeValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n      \"sortcodeValidationText\": \"\"\n    }\n  ],\n  \"creditStatusCheck\": {\n    \"ccj\": [\n      {\n        \"address1\": \"\",\n        \"address2\": \"\",\n        \"address3\": \"\",\n        \"address4\": \"\",\n        \"address5\": \"\",\n        \"amount\": \"\",\n        \"caseNumber\": \"\",\n        \"courtName\": \"\",\n        \"dateEnd\": \"{{faker 'date.recent' 365}}\",\n        \"dob\": \"{{faker 'date.recent' 365}}\",\n        \"judgementDate\": \"{{faker 'date.recent' 365}}\",\n        \"judgementType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n        \"judgementTypeText\": \"\",\n        \"name\": \"\",\n        \"postcode\": \"\"\n      }\n    ],\n    \"checkDate\": \"{{faker 'date.recent' 365}}\",\n    \"companyDirector\": [\n      {\n        \"companyAppointments\": [\n          {\n            \"address\": \"\",\n            \"appointmentDate\": \"{{faker 'date.recent' 365}}\",\n            \"appointmentType\": \"\",\n            \"dob\": \"{{faker 'date.recent' 365}}\",\n            \"name\": \"\",\n            \"nationality\": \"\",\n            \"occupation\": \"\",\n            \"title\": \"\"\n          }\n        ],\n        \"companyName\": \"\",\n        \"companyRegNo\": \"\",\n        \"dateAppointed\": \"{{faker 'date.recent' 365}}\",\n        \"matchType\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"matchTypeText\": \"\",\n        \"registeredOffice\": \"\"\n      }\n    ],\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n    \"insolvency\": [\n      {\n        \"address\": {\n          \"address1\": \"\",\n          \"address2\": \"\",\n          \"address3\": \"\",\n          \"address4\": \"\",\n          \"address5\": \"\",\n          \"dps\": \"\",\n          \"isEmpty\": {{faker 'datatype.boolean'}},\n          \"postcode\": \"\"\n        },\n        \"aliases\": \"\",\n        \"assetTotal\": \"\",\n        \"caseNo\": \"\",\n        \"caseType\": \"\",\n        \"court\": \"\",\n        \"debtTotal\": \"\",\n        \"description\": \"\",\n        \"dob\": \"{{faker 'date.recent' 365}}\",\n        \"name\": \"\",\n        \"occupation\": \"\",\n        \"presentationDate\": \"{{faker 'date.recent' 365}}\",\n        \"previousAddress\": {\n          \"address1\": \"\",\n          \"address2\": \"\",\n          \"address3\": \"\",\n          \"address4\": \"\",\n          \"address5\": \"\",\n          \"dps\": \"\",\n          \"isEmpty\": {{faker 'datatype.boolean'}},\n          \"postcode\": \"\"\n        },\n        \"serviceOffice\": \"\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\",\n        \"status\": \"\",\n        \"telephoneNumber\": \"\",\n        \"tradingNames\": \"\",\n        \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n        \"typeText\": \"\"\n      }\n    ],\n    \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n  },\n  \"customTermsAccepted\": {{faker 'datatype.boolean'}},\n  \"customTermsAcceptedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"customTermsAcceptedVersion\": {{faker 'datatype.number'}},\n  \"dataCheckResult\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"dataCheckSources\": [\n    {\n      \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"hasPepSanctionsData\": {{faker 'datatype.boolean'}},\n      \"label\": \"\",\n      \"pepSanctionsData\": [\n        {\n          \"addresses\": [\n            {\n              \"lines\": [\n                \"\"\n              ]\n            }\n          ],\n          \"aliases\": [\n            \"\"\n          ],\n          \"fullName\": \"\",\n          \"id\": \"\",\n          \"positions\": [\n            {\n              \"country\": \"\",\n              \"position\": \"\"\n            }\n          ],\n          \"sanctionBodies\": [\n            \"\"\n          ],\n          \"sanctionDates\": [\n            {\n              \"date\": \"{{faker 'date.recent' 365}}\",\n              \"day\": {{faker 'datatype.number'}},\n              \"month\": {{faker 'datatype.number'}},\n              \"type\": \"{{oneOf (array '0' '1' '2')}}\",\n              \"year\": {{faker 'datatype.number'}}\n            }\n          ]\n        }\n      ],\n      \"remarks\": [\n        {\n          \"category\": \"{{oneOf (array '1' '2' '3' '4')}}\",\n          \"description\": \"\"\n        }\n      ],\n      \"sourceType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10')}}\",\n      \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n    }\n  ],\n  \"dataChecksPerformed\": {{faker 'datatype.boolean'}},\n  \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n  \"email\": \"\",\n  \"forename\": \"\",\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"idDocuments\": [\n    {\n      \"addressCity\": \"\",\n      \"addressFull\": \"\",\n      \"addressPostcode\": \"\",\n      \"country\": \"\",\n      \"countryCode\": \"\",\n      \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n      \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"documentAnalysisResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '10' '11')}}\",\n      \"documentNumber\": \"\",\n      \"documentSide\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"expiryDate\": \"{{faker 'date.recent' 365}}\",\n      \"facialMatch\": {{faker 'datatype.boolean'}},\n      \"forename\": \"\",\n      \"fullName\": \"\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"isUnderReview\": {{faker 'datatype.boolean'}},\n      \"manuallyVerified\": {{faker 'datatype.boolean'}},\n      \"middleName\": \"\",\n      \"mrz1\": \"\",\n      \"mrz2\": \"\",\n      \"mrz3\": \"\",\n      \"nameCheck\": {{faker 'datatype.boolean'}},\n      \"nameCheckMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"nfcCheck\": {{faker 'datatype.boolean'}},\n      \"nfcReadStatus\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\",\n      \"primaryScanId\": \"{{faker 'datatype.uuid'}}\",\n      \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"surname\": \"\"\n    }\n  ],\n  \"idVerification\": {\n    \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}}\n  },\n  \"isAgentLed\": {{faker 'datatype.boolean'}},\n  \"livenessMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"livenessStatus\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n  \"livenessVerified\": {{faker 'datatype.boolean'}},\n  \"personalDetails\": {\n    \"address\": {\n      \"addressLine1\": \"\",\n      \"addressLine2\": \"\",\n      \"addressLine3\": \"\",\n      \"city\": \"\",\n      \"country\": \"\",\n      \"county\": \"\",\n      \"postcode\": \"\"\n    },\n    \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n    \"forename\": \"\",\n    \"surname\": \"\"\n  },\n  \"phoneNumber\": \"\",\n  \"proofOfOwnershipCheck\": {\n    \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n    \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n    \"matchResultText\": \"\",\n    \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n    \"propertyOwnershipText\": \"\",\n    \"titleNumber\": \"\"\n  },\n  \"referenceId\": \"\",\n  \"regCode\": \"\",\n  \"regTypeId\": \"{{faker 'datatype.uuid'}}\",\n  \"rightToWorkDocumentsProvided\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"status\": \"{{oneOf (array '0' '1' '2' '3' '4' '6')}}\",\n  \"surname\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration summary object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b21d8bb0-6623-47e1-b008-7eb4505b3877",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66587a2f-3a29-4e56-8e85-74bc9b77944d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35f49fde-9967-4786-995f-83009eccc84a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20017ebc-a3b2-4e57-8134-0aeeb1e9533c",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the RegCode was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a574946f-37f8-4a67-9a86-a9f196ef1640",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5519b63-64a3-498f-b5e7-1c34636c2a9e",
      "documentation": "Gets paged registration list by search criteria or nothing if there are no matching fields.\r\nOptional parameters may be appended to the query string.\r\nMaximum page size is 50.",
      "method": "get",
      "endpoint": "api/registrations/search",
      "responses": [
        {
          "uuid": "5678fe85-fcb6-4bf6-b20c-35ff3087263a",
          "body": "{\n  \"registrationSummaries\": [\n    {\n      \"bankAccountChecks\": [\n        {\n          \"accountNumber\": \"\",\n          \"accountNumberValidation\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n          \"accountNumberValidationText\": \"\",\n          \"accountStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n          \"accountStatusText\": \"\",\n          \"accountValid\": {{faker 'datatype.boolean'}},\n          \"addressValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n          \"addressValidationText\": \"\",\n          \"checkDate\": \"{{faker 'date.recent' 365}}\",\n          \"checkId\": \"{{faker 'datatype.uuid'}}\",\n          \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n          \"error\": {{faker 'datatype.boolean'}},\n          \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n          \"nameValidation\": \"{{oneOf (array '0' '1' '2')}}\",\n          \"nameValidationText\": \"\",\n          \"referenceId\": \"\",\n          \"sortcode\": \"\",\n          \"sortcodeValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n          \"sortcodeValidationText\": \"\"\n        }\n      ],\n      \"creditStatusCheck\": {\n        \"ccj\": [\n          {\n            \"address1\": \"\",\n            \"address2\": \"\",\n            \"address3\": \"\",\n            \"address4\": \"\",\n            \"address5\": \"\",\n            \"amount\": \"\",\n            \"caseNumber\": \"\",\n            \"courtName\": \"\",\n            \"dateEnd\": \"{{faker 'date.recent' 365}}\",\n            \"dob\": \"{{faker 'date.recent' 365}}\",\n            \"judgementDate\": \"{{faker 'date.recent' 365}}\",\n            \"judgementType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n            \"judgementTypeText\": \"\",\n            \"name\": \"\",\n            \"postcode\": \"\"\n          }\n        ],\n        \"checkDate\": \"{{faker 'date.recent' 365}}\",\n        \"companyDirector\": [\n          {\n            \"companyAppointments\": [\n              {\n                \"address\": \"\",\n                \"appointmentDate\": \"{{faker 'date.recent' 365}}\",\n                \"appointmentType\": \"\",\n                \"dob\": \"{{faker 'date.recent' 365}}\",\n                \"name\": \"\",\n                \"nationality\": \"\",\n                \"occupation\": \"\",\n                \"title\": \"\"\n              }\n            ],\n            \"companyName\": \"\",\n            \"companyRegNo\": \"\",\n            \"dateAppointed\": \"{{faker 'date.recent' 365}}\",\n            \"matchType\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n            \"matchTypeText\": \"\",\n            \"registeredOffice\": \"\"\n          }\n        ],\n        \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n        \"insolvency\": [\n          {\n            \"address\": {\n              \"address1\": \"\",\n              \"address2\": \"\",\n              \"address3\": \"\",\n              \"address4\": \"\",\n              \"address5\": \"\",\n              \"dps\": \"\",\n              \"isEmpty\": {{faker 'datatype.boolean'}},\n              \"postcode\": \"\"\n            },\n            \"aliases\": \"\",\n            \"assetTotal\": \"\",\n            \"caseNo\": \"\",\n            \"caseType\": \"\",\n            \"court\": \"\",\n            \"debtTotal\": \"\",\n            \"description\": \"\",\n            \"dob\": \"{{faker 'date.recent' 365}}\",\n            \"name\": \"\",\n            \"occupation\": \"\",\n            \"presentationDate\": \"{{faker 'date.recent' 365}}\",\n            \"previousAddress\": {\n              \"address1\": \"\",\n              \"address2\": \"\",\n              \"address3\": \"\",\n              \"address4\": \"\",\n              \"address5\": \"\",\n              \"dps\": \"\",\n              \"isEmpty\": {{faker 'datatype.boolean'}},\n              \"postcode\": \"\"\n            },\n            \"serviceOffice\": \"\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\",\n            \"status\": \"\",\n            \"telephoneNumber\": \"\",\n            \"tradingNames\": \"\",\n            \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n            \"typeText\": \"\"\n          }\n        ],\n        \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n      },\n      \"customTermsAccepted\": {{faker 'datatype.boolean'}},\n      \"customTermsAcceptedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"customTermsAcceptedVersion\": {{faker 'datatype.number'}},\n      \"dataCheckResult\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"dataCheckSources\": [\n        {\n          \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n          \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n          \"hasPepSanctionsData\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"pepSanctionsData\": [\n            {\n              \"addresses\": [\n                {\n                  \"lines\": [\n                    \"\"\n                  ]\n                }\n              ],\n              \"aliases\": [\n                \"\"\n              ],\n              \"fullName\": \"\",\n              \"id\": \"\",\n              \"positions\": [\n                {\n                  \"country\": \"\",\n                  \"position\": \"\"\n                }\n              ],\n              \"sanctionBodies\": [\n                \"\"\n              ],\n              \"sanctionDates\": [\n                {\n                  \"date\": \"{{faker 'date.recent' 365}}\",\n                  \"day\": {{faker 'datatype.number'}},\n                  \"month\": {{faker 'datatype.number'}},\n                  \"type\": \"{{oneOf (array '0' '1' '2')}}\",\n                  \"year\": {{faker 'datatype.number'}}\n                }\n              ]\n            }\n          ],\n          \"remarks\": [\n            {\n              \"category\": \"{{oneOf (array '1' '2' '3' '4')}}\",\n              \"description\": \"\"\n            }\n          ],\n          \"sourceType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10')}}\",\n          \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n        }\n      ],\n      \"dataChecksPerformed\": {{faker 'datatype.boolean'}},\n      \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n      \"email\": \"\",\n      \"forename\": \"\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"idDocuments\": [\n        {\n          \"addressCity\": \"\",\n          \"addressFull\": \"\",\n          \"addressPostcode\": \"\",\n          \"country\": \"\",\n          \"countryCode\": \"\",\n          \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n          \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"documentAnalysisResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '10' '11')}}\",\n          \"documentNumber\": \"\",\n          \"documentSide\": \"{{oneOf (array '0' '1' '2')}}\",\n          \"expiryDate\": \"{{faker 'date.recent' 365}}\",\n          \"facialMatch\": {{faker 'datatype.boolean'}},\n          \"forename\": \"\",\n          \"fullName\": \"\",\n          \"id\": \"{{faker 'datatype.uuid'}}\",\n          \"isUnderReview\": {{faker 'datatype.boolean'}},\n          \"manuallyVerified\": {{faker 'datatype.boolean'}},\n          \"middleName\": \"\",\n          \"mrz1\": \"\",\n          \"mrz2\": \"\",\n          \"mrz3\": \"\",\n          \"nameCheck\": {{faker 'datatype.boolean'}},\n          \"nameCheckMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n          \"nfcCheck\": {{faker 'datatype.boolean'}},\n          \"nfcReadStatus\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\",\n          \"primaryScanId\": \"{{faker 'datatype.uuid'}}\",\n          \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n          \"surname\": \"\"\n        }\n      ],\n      \"idVerification\": {\n        \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"hasBeenOverridden\": {{faker 'datatype.boolean'}}\n      },\n      \"isAgentLed\": {{faker 'datatype.boolean'}},\n      \"livenessMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"livenessStatus\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n      \"livenessVerified\": {{faker 'datatype.boolean'}},\n      \"personalDetails\": {\n        \"address\": {\n          \"addressLine1\": \"\",\n          \"addressLine2\": \"\",\n          \"addressLine3\": \"\",\n          \"city\": \"\",\n          \"country\": \"\",\n          \"county\": \"\",\n          \"postcode\": \"\"\n        },\n        \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n        \"forename\": \"\",\n        \"surname\": \"\"\n      },\n      \"phoneNumber\": \"\",\n      \"proofOfOwnershipCheck\": {\n        \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n        \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n        \"matchResultText\": \"\",\n        \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n        \"propertyOwnershipText\": \"\",\n        \"titleNumber\": \"\"\n      },\n      \"referenceId\": \"\",\n      \"regCode\": \"\",\n      \"regTypeId\": \"{{faker 'datatype.uuid'}}\",\n      \"rightToWorkDocumentsProvided\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"status\": \"{{oneOf (array '0' '1' '2' '3' '4' '6')}}\",\n      \"surname\": \"\"\n    }\n  ],\n  \"totalCount\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration summary object list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aa6d19cf-883f-40ff-a1b2-63f814b40eed",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2cf3e27-0d0e-4618-a174-1e6f9af7f447",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5adf8e82-a3f8-4d08-89b5-6852068df233",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb92749c-e3d7-4499-90f8-561a9a33ee95",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72273023-4ec9-48f5-81ab-d7463b9bee6d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4eafc9b0-b6aa-4e4e-b091-6daa9d749731",
      "documentation": "Checks if submitted documents are sufficient to complete registration.",
      "method": "get",
      "endpoint": "api/registrations/:id/check-submitted-id-documents",
      "responses": [
        {
          "uuid": "f01f4d9b-3510-4a9c-b396-b9a0b440ef69",
          "body": "{\n  \"checkCode\": \"{{oneOf (array '1' '2' '3')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK response with object containing the result of the document check.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7aa3c484-6b77-4997-babb-04ceb43e0c9f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77a5483e-e628-4cdf-b83f-da11cc290246",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18025df3-a184-455a-a5cb-e47e5bce822f",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c9ca0d0-f046-4e1f-af17-4b1717d06250",
      "documentation": "Updates a registration's contact details.",
      "method": "put",
      "endpoint": "api/registrations/:id/contact-details",
      "responses": [
        {
          "uuid": "d6505826-ac68-4d26-83b3-70f5fcd1ba69",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration contact details updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c711acc-68e3-4cf5-ba41-624a4ec7da74",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ac15f71-05c4-4be8-89d6-3f4c75387738",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ee7e724-3e13-494f-984d-7a7dd50a23c5",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f47e631c-b6ca-4950-bebd-611a4a1a001e",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3df7566-d300-473a-89fd-97d5dda33778",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "029fc82a-fd6f-4b2d-b5b0-4e63531a3a0f",
      "documentation": "Sets an override for a specific check on the registration.",
      "method": "put",
      "endpoint": "api/registrations/:id/override-check-status",
      "responses": [
        {
          "uuid": "32702223-03bd-46cd-95ea-2d2a3f874714",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Status of the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f82bd4a4-617b-4dd3-beed-038382a0419b",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b20963f9-1f3d-42ca-afea-90a6b6601b1a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60f15f0d-32c4-458f-82a5-52b400ce47ab",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8946f62a-5f34-4c6d-bfca-16fc16e26ab1",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52336024-27c8-49f0-85d6-3ba3979a7097",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "979b296c-e8ed-4666-8721-98ab40d018b0",
      "documentation": "Returns PDF export for a given registration.",
      "method": "get",
      "endpoint": "api/registrations/:id/pdf-export",
      "responses": [
        {
          "uuid": "eb28ad6a-3144-484d-be4a-698736ff154d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "PDF document containing registration extract as byte stream.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "162240b3-e845-4970-a66c-b22895be51a3",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb7aa6fd-24b2-4f18-8413-4450c54caa9d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02d85fed-0f54-4abf-afbe-5a852564bcce",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d009f0fe-0b42-4e9f-bfde-fa60a65a8692",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73f6d205-fcf4-4acc-918a-706411189460",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc1bb82d-1977-4de1-832b-e6cae4ebe3f3",
      "documentation": "Resends any invitation for the specified registration.",
      "method": "post",
      "endpoint": "api/registrations/:id/resend-invitation",
      "responses": [
        {
          "uuid": "987c405c-79c3-4942-8277-51a45d1bce62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Invitation sent.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83a42842-99be-4a54-99d1-06299c1f966a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbb82b9c-4930-4aba-bea5-2ebbea0747c8",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ec2f383-5eff-4140-a845-2a6ebfa95160",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b42ad8ed-7683-468f-8294-93c419e9bca4",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e15fd8ac-c568-4d7f-8e17-1c63e2f4629a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba1260e4-a003-424d-b27b-a2bce583f98b",
      "documentation": "Gets registration settings or nothing if there are no settings associated with the registration.",
      "method": "get",
      "endpoint": "api/registrations/:id/settings",
      "responses": [
        {
          "uuid": "6ce9345c-feed-43c3-bed8-e4bb088ad3c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration settings updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e129ba80-c105-4338-a611-4802ba7c12d5",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0845fc80-3c6c-4d7d-8860-07cd439d5135",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "301b0e41-0a46-496d-bbc6-9e67d224f569",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "930933a0-50a0-4419-b127-0c7571ba3c1a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80cde652-2c3c-447c-a861-674e721031b4",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf173a25-e8e8-4b2d-a074-1a3127355207",
      "documentation": "Updates registration settings.",
      "method": "put",
      "endpoint": "api/registrations/:id/settings",
      "responses": [
        {
          "uuid": "9b341262-0126-401f-8f33-7061ebbbab0c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration settings updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "53d753d4-23ec-42b1-936c-bfd4b9908cbf",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1aad1d68-d62b-4e38-84b9-3a57f3b74c12",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df2a5a0f-f345-4a29-903a-422b2d15103a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a7fad6c-bee9-40a9-a12e-d5e1420e578e",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea2aa094-8dfd-4825-8e1f-5a33159e52ed",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c09149d-4016-4342-a1cb-c60d4dece099",
      "documentation": "Updates the status of the registration to one specified in the request.",
      "method": "put",
      "endpoint": "api/registrations/:id/status",
      "responses": [
        {
          "uuid": "f80c7d49-ed4c-4f73-8e3f-5626d286c91a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Update was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5fff407-c0dc-46fe-b1c9-03c0dee03052",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "454065ac-2c35-424b-ac60-fd48b01d79eb",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "920f6059-b62d-43e7-ba95-104140ed7d07",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If the registration was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66595d8c-b6dc-4656-b011-97b75f715836",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e795b90-385b-4f82-9372-a525e053d9b6",
      "documentation": "Finds a registration by the Id.",
      "method": "get",
      "endpoint": "api/registrations/:id/summary",
      "responses": [
        {
          "uuid": "9d4bd92f-c732-4218-bd8c-7046f31596e6",
          "body": "{\n  \"bankAccountChecks\": [\n    {\n      \"accountNumber\": \"\",\n      \"accountNumberValidation\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n      \"accountNumberValidationText\": \"\",\n      \"accountStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"accountStatusText\": \"\",\n      \"accountValid\": {{faker 'datatype.boolean'}},\n      \"addressValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n      \"addressValidationText\": \"\",\n      \"checkDate\": \"{{faker 'date.recent' 365}}\",\n      \"checkId\": \"{{faker 'datatype.uuid'}}\",\n      \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"error\": {{faker 'datatype.boolean'}},\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"nameValidation\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"nameValidationText\": \"\",\n      \"referenceId\": \"\",\n      \"sortcode\": \"\",\n      \"sortcodeValidation\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n      \"sortcodeValidationText\": \"\"\n    }\n  ],\n  \"creditStatusCheck\": {\n    \"ccj\": [\n      {\n        \"address1\": \"\",\n        \"address2\": \"\",\n        \"address3\": \"\",\n        \"address4\": \"\",\n        \"address5\": \"\",\n        \"amount\": \"\",\n        \"caseNumber\": \"\",\n        \"courtName\": \"\",\n        \"dateEnd\": \"{{faker 'date.recent' 365}}\",\n        \"dob\": \"{{faker 'date.recent' 365}}\",\n        \"judgementDate\": \"{{faker 'date.recent' 365}}\",\n        \"judgementType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n        \"judgementTypeText\": \"\",\n        \"name\": \"\",\n        \"postcode\": \"\"\n      }\n    ],\n    \"checkDate\": \"{{faker 'date.recent' 365}}\",\n    \"companyDirector\": [\n      {\n        \"companyAppointments\": [\n          {\n            \"address\": \"\",\n            \"appointmentDate\": \"{{faker 'date.recent' 365}}\",\n            \"appointmentType\": \"\",\n            \"dob\": \"{{faker 'date.recent' 365}}\",\n            \"name\": \"\",\n            \"nationality\": \"\",\n            \"occupation\": \"\",\n            \"title\": \"\"\n          }\n        ],\n        \"companyName\": \"\",\n        \"companyRegNo\": \"\",\n        \"dateAppointed\": \"{{faker 'date.recent' 365}}\",\n        \"matchType\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n        \"matchTypeText\": \"\",\n        \"registeredOffice\": \"\"\n      }\n    ],\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n    \"insolvency\": [\n      {\n        \"address\": {\n          \"address1\": \"\",\n          \"address2\": \"\",\n          \"address3\": \"\",\n          \"address4\": \"\",\n          \"address5\": \"\",\n          \"dps\": \"\",\n          \"isEmpty\": {{faker 'datatype.boolean'}},\n          \"postcode\": \"\"\n        },\n        \"aliases\": \"\",\n        \"assetTotal\": \"\",\n        \"caseNo\": \"\",\n        \"caseType\": \"\",\n        \"court\": \"\",\n        \"debtTotal\": \"\",\n        \"description\": \"\",\n        \"dob\": \"{{faker 'date.recent' 365}}\",\n        \"name\": \"\",\n        \"occupation\": \"\",\n        \"presentationDate\": \"{{faker 'date.recent' 365}}\",\n        \"previousAddress\": {\n          \"address1\": \"\",\n          \"address2\": \"\",\n          \"address3\": \"\",\n          \"address4\": \"\",\n          \"address5\": \"\",\n          \"dps\": \"\",\n          \"isEmpty\": {{faker 'datatype.boolean'}},\n          \"postcode\": \"\"\n        },\n        \"serviceOffice\": \"\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\",\n        \"status\": \"\",\n        \"telephoneNumber\": \"\",\n        \"tradingNames\": \"\",\n        \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5')}}\",\n        \"typeText\": \"\"\n      }\n    ],\n    \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n  },\n  \"customTermsAccepted\": {{faker 'datatype.boolean'}},\n  \"customTermsAcceptedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"customTermsAcceptedVersion\": {{faker 'datatype.number'}},\n  \"dataCheckResult\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n  \"dataCheckSources\": [\n    {\n      \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n      \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n      \"hasPepSanctionsData\": {{faker 'datatype.boolean'}},\n      \"label\": \"\",\n      \"pepSanctionsData\": [\n        {\n          \"addresses\": [\n            {\n              \"lines\": [\n                \"\"\n              ]\n            }\n          ],\n          \"aliases\": [\n            \"\"\n          ],\n          \"fullName\": \"\",\n          \"id\": \"\",\n          \"positions\": [\n            {\n              \"country\": \"\",\n              \"position\": \"\"\n            }\n          ],\n          \"sanctionBodies\": [\n            \"\"\n          ],\n          \"sanctionDates\": [\n            {\n              \"date\": \"{{faker 'date.recent' 365}}\",\n              \"day\": {{faker 'datatype.number'}},\n              \"month\": {{faker 'datatype.number'}},\n              \"type\": \"{{oneOf (array '0' '1' '2')}}\",\n              \"year\": {{faker 'datatype.number'}}\n            }\n          ]\n        }\n      ],\n      \"remarks\": [\n        {\n          \"category\": \"{{oneOf (array '1' '2' '3' '4')}}\",\n          \"description\": \"\"\n        }\n      ],\n      \"sourceType\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10')}}\",\n      \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\"\n    }\n  ],\n  \"dataChecksPerformed\": {{faker 'datatype.boolean'}},\n  \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n  \"email\": \"\",\n  \"forename\": \"\",\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"idDocuments\": [\n    {\n      \"addressCity\": \"\",\n      \"addressFull\": \"\",\n      \"addressPostcode\": \"\",\n      \"country\": \"\",\n      \"countryCode\": \"\",\n      \"dateCreated\": \"{{faker 'date.recent' 365}}\",\n      \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"documentAnalysisResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '10' '11')}}\",\n      \"documentNumber\": \"\",\n      \"documentSide\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"expiryDate\": \"{{faker 'date.recent' 365}}\",\n      \"facialMatch\": {{faker 'datatype.boolean'}},\n      \"forename\": \"\",\n      \"fullName\": \"\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"isUnderReview\": {{faker 'datatype.boolean'}},\n      \"manuallyVerified\": {{faker 'datatype.boolean'}},\n      \"middleName\": \"\",\n      \"mrz1\": \"\",\n      \"mrz2\": \"\",\n      \"mrz3\": \"\",\n      \"nameCheck\": {{faker 'datatype.boolean'}},\n      \"nameCheckMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n      \"nfcCheck\": {{faker 'datatype.boolean'}},\n      \"nfcReadStatus\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\",\n      \"primaryScanId\": \"{{faker 'datatype.uuid'}}\",\n      \"status\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n      \"surname\": \"\"\n    }\n  ],\n  \"idVerification\": {\n    \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}}\n  },\n  \"isAgentLed\": {{faker 'datatype.boolean'}},\n  \"livenessMethod\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"livenessStatus\": \"{{oneOf (array '0' '1' '2' '3' '4')}}\",\n  \"livenessVerified\": {{faker 'datatype.boolean'}},\n  \"personalDetails\": {\n    \"address\": {\n      \"addressLine1\": \"\",\n      \"addressLine2\": \"\",\n      \"addressLine3\": \"\",\n      \"city\": \"\",\n      \"country\": \"\",\n      \"county\": \"\",\n      \"postcode\": \"\"\n    },\n    \"dateOfBirth\": \"{{faker 'date.recent' 365}}\",\n    \"forename\": \"\",\n    \"surname\": \"\"\n  },\n  \"phoneNumber\": \"\",\n  \"proofOfOwnershipCheck\": {\n    \"checkStatus\": \"{{oneOf (array '0' '1' '2' '3')}}\",\n    \"hasBeenOverridden\": {{faker 'datatype.boolean'}},\n    \"matchResult\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7')}}\",\n    \"matchResultText\": \"\",\n    \"propertyOwnership\": \"{{oneOf (array '0' '1' '2')}}\",\n    \"propertyOwnershipText\": \"\",\n    \"titleNumber\": \"\"\n  },\n  \"referenceId\": \"\",\n  \"regCode\": \"\",\n  \"regTypeId\": \"{{faker 'datatype.uuid'}}\",\n  \"rightToWorkDocumentsProvided\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"status\": \"{{oneOf (array '0' '1' '2' '3' '4' '6')}}\",\n  \"surname\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Registration summary object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70f6d7d6-5fa5-43bf-b3cd-48208f4d87ad",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbc1e079-9488-4f4c-8157-768d89d37bc2",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba782d53-6a53-4c1f-a102-d5cc0d9772d1",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b61bb69-decd-408b-8414-2a59b5708120",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8297bcdb-85b8-4784-8ef5-244f4c04f63c",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f924a280-b2c5-4a41-8b03-4466faca9204",
      "documentation": "Get a list of supported id document for the specified registration id.",
      "method": "get",
      "endpoint": "api/registrations/:id/supported-id-documents",
      "responses": [
        {
          "uuid": "a3e9b9de-7628-4a4d-9754-ea0990a0ac2f",
          "body": "{\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array '0' '1' '2' '3' '4' '5' '6' '7' '8' '9')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of supported id document objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64b43f4c-2441-40ee-955e-50479fcb0c23",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17caa927-34c5-451f-bdbd-59a288db802d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a16399f-2c0d-4a77-8da4-46b6d9fcae78",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "If requesting entity have no permission to access the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1583190-67a7-491f-ae92-2e1be1d8c988",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "If registration matching the Id was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5382f06e-bbd0-4187-acf3-e093e5b389ee",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0f2cde5-29cb-4af5-952f-28a521334ad4",
      "documentation": "Retrieves secure links to registration details pages searching by the Reference Id.",
      "method": "post",
      "endpoint": "api/report-view/by-referenceid",
      "responses": [
        {
          "uuid": "b89faadb-ad52-4b1c-b289-c74e7d35eb2e",
          "body": "{\n  \"results\": [\n    {\n      \"forename\": \"\",\n      \"surname\": \"\",\n      \"url\": \"\",\n      \"validUntil\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results of the query",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0d4ae767-6811-439b-8422-92e704d4100d",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3687cc62-fce1-483c-ad3a-5641a04482ec",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9179927f-0fba-416d-ba79-9c8b455436d6",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ca5cddb-a757-4b93-9190-37aa70ebcff4",
      "documentation": "Retrieves secure link to registration details page searching by the Registration Id.",
      "method": "post",
      "endpoint": "api/report-view/by-registrationid",
      "responses": [
        {
          "uuid": "828b8a89-6a08-4956-ae1a-72d964d754ff",
          "body": "{\n  \"results\": [\n    {\n      \"forename\": \"\",\n      \"surname\": \"\",\n      \"url\": \"\",\n      \"validUntil\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results of the query",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "74ae8dc8-feab-463b-986a-f62f3a3f31d2",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da227741-7732-44e0-b9ac-4ba088cc3ddd",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f5bc0cc-e6dc-460a-8dec-c0a382b9670c",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e984ad85-fc13-40a3-bbc3-e272d5237fa6",
      "documentation": "Retrieves secure links to web verification pages searching by the Reference Id.",
      "method": "post",
      "endpoint": "api/web-verifications/by-referenceid",
      "responses": [
        {
          "uuid": "ca285cd5-2ff8-4628-bc68-39d7653ceb7c",
          "body": "{\n  \"results\": [\n    {\n      \"journeyUrl\": {\n        \"url\": \"\",\n        \"validUntil\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results of the query",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aadf1ecd-5673-4946-be63-72377f47c3e5",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f26f5c52-6ff3-4093-a50b-c4c7f878e3cf",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39404bdc-6217-493b-af21-6562fc44d095",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3baf070b-9273-4731-9d1b-5b0164987521",
      "documentation": "Retrieves secure link to web verification page searching by the Registration Id.",
      "method": "post",
      "endpoint": "api/web-verifications/by-registrationid",
      "responses": [
        {
          "uuid": "bd90cb1c-21c0-4e07-bffb-f2210a6c57c9",
          "body": "{\n  \"results\": [\n    {\n      \"journeyUrl\": {\n        \"url\": \"\",\n        \"validUntil\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results of the query",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d6f7fd48-8ab6-4200-8b26-37183cf5d90a",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If the service was supplied invalid data.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "329e68bc-0e76-4c85-8240-dd3dee3f9a58",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "If credentials supplied were invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a30b397b-390e-4812-8787-f4ad893ea1ed",
          "body": "{\n  \"details\": {},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "If an unexpected exception occurred whilst processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}