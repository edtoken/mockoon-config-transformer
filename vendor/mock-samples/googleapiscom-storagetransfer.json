{
  "uuid": "1608710a-b59b-42c4-9a0c-05829fd80eea",
  "lastMigration": 24,
  "name": "Storage Transfer API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "02eeccb2-60f9-4d80-9c97-1a612a5f6525",
      "documentation": "Returns the Google service account that is used by Storage Transfer Service to access buckets in the project where transfers run or in other projects. Each Google service account is associated with one Google Cloud project. Users should add this service account to the Google Cloud Storage bucket ACLs to grant access to Storage Transfer Service. This service account is created and owned by Storage Transfer Service and can only be used by Storage Transfer Service.",
      "method": "get",
      "endpoint": "v1/googleServiceAccounts/:projectId",
      "responses": [
        {
          "uuid": "e65e350b-18ee-4eb1-93dc-04d4d5599fc9",
          "body": "{\n  \"accountEmail\": \"\",\n  \"subjectId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48a1bf2a-a355-4bca-ab3a-de35153a3124",
      "documentation": "Lists agent pools.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/agentPools",
      "responses": [
        {
          "uuid": "a1c7bf30-455b-4071-adfb-f18151925a7b",
          "body": "{\n  \"agentPools\": [\n    {\n      \"bandwidthLimit\": {\n        \"limitMbps\": \"\"\n      },\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CREATED' 'DELETING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c374520f-e82c-4d33-8dc0-c4b83b34abf1",
      "documentation": "Creates an agent pool resource.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/agentPools",
      "responses": [
        {
          "uuid": "265c0382-7826-459e-8029-045ed3e5bfbb",
          "body": "{\n  \"bandwidthLimit\": {\n    \"limitMbps\": \"\"\n  },\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CREATED' 'DELETING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4fc3dc4e-3e24-4057-b7e5-f8625fda9dea",
      "documentation": "Lists transfer jobs.",
      "method": "get",
      "endpoint": "v1/transferJobs",
      "responses": [
        {
          "uuid": "5712cc0b-0d65-4554-b731-b7f2ccde699e",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"transferJobs\": [\n    {\n      \"creationTime\": \"\",\n      \"deletionTime\": \"\",\n      \"description\": \"\",\n      \"lastModificationTime\": \"\",\n      \"latestOperationName\": \"\",\n      \"loggingConfig\": {\n        \"enableOnpremGcsTransferLogs\": {{faker 'datatype.boolean'}},\n        \"logActionStates\": [\n          \"{{oneOf (array 'LOGGABLE_ACTION_STATE_UNSPECIFIED' 'SUCCEEDED' 'FAILED')}}\"\n        ],\n        \"logActions\": [\n          \"{{oneOf (array 'LOGGABLE_ACTION_UNSPECIFIED' 'FIND' 'DELETE' 'COPY')}}\"\n        ]\n      },\n      \"name\": \"\",\n      \"notificationConfig\": {\n        \"eventTypes\": [\n          \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'TRANSFER_OPERATION_SUCCESS' 'TRANSFER_OPERATION_FAILED' 'TRANSFER_OPERATION_ABORTED')}}\"\n        ],\n        \"payloadFormat\": \"{{oneOf (array 'PAYLOAD_FORMAT_UNSPECIFIED' 'NONE' 'JSON')}}\",\n        \"pubsubTopic\": \"\"\n      },\n      \"projectId\": \"\",\n      \"schedule\": {\n        \"endTimeOfDay\": {\n          \"hours\": {{faker 'datatype.number'}},\n          \"minutes\": {{faker 'datatype.number'}},\n          \"nanos\": {{faker 'datatype.number'}},\n          \"seconds\": {{faker 'datatype.number'}}\n        },\n        \"repeatInterval\": \"\",\n        \"scheduleEndDate\": {\n          \"day\": {{faker 'datatype.number'}},\n          \"month\": {{faker 'datatype.number'}},\n          \"year\": {{faker 'datatype.number'}}\n        },\n        \"scheduleStartDate\": {\n          \"day\": {{faker 'datatype.number'}},\n          \"month\": {{faker 'datatype.number'}},\n          \"year\": {{faker 'datatype.number'}}\n        },\n        \"startTimeOfDay\": {\n          \"hours\": {{faker 'datatype.number'}},\n          \"minutes\": {{faker 'datatype.number'}},\n          \"nanos\": {{faker 'datatype.number'}},\n          \"seconds\": {{faker 'datatype.number'}}\n        }\n      },\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'ENABLED' 'DISABLED' 'DELETED')}}\",\n      \"transferSpec\": {\n        \"awsS3CompatibleDataSource\": {\n          \"bucketName\": \"\",\n          \"endpoint\": \"\",\n          \"path\": \"\",\n          \"region\": \"\",\n          \"s3Metadata\": {\n            \"authMethod\": \"{{oneOf (array 'AUTH_METHOD_UNSPECIFIED' 'AUTH_METHOD_AWS_SIGNATURE_V4' 'AUTH_METHOD_AWS_SIGNATURE_V2')}}\",\n            \"listApi\": \"{{oneOf (array 'LIST_API_UNSPECIFIED' 'LIST_OBJECTS_V2' 'LIST_OBJECTS')}}\",\n            \"protocol\": \"{{oneOf (array 'NETWORK_PROTOCOL_UNSPECIFIED' 'NETWORK_PROTOCOL_HTTPS' 'NETWORK_PROTOCOL_HTTP')}}\",\n            \"requestModel\": \"{{oneOf (array 'REQUEST_MODEL_UNSPECIFIED' 'REQUEST_MODEL_VIRTUAL_HOSTED_STYLE' 'REQUEST_MODEL_PATH_STYLE')}}\"\n          }\n        },\n        \"awsS3DataSource\": {\n          \"awsAccessKey\": {\n            \"accessKeyId\": \"\",\n            \"secretAccessKey\": \"\"\n          },\n          \"bucketName\": \"\",\n          \"path\": \"\",\n          \"roleArn\": \"\"\n        },\n        \"azureBlobStorageDataSource\": {\n          \"azureCredentials\": {\n            \"sasToken\": \"\"\n          },\n          \"container\": \"\",\n          \"path\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"gcsDataSink\": {\n          \"bucketName\": \"\",\n          \"path\": \"\"\n        },\n        \"gcsDataSource\": {\n          \"bucketName\": \"\",\n          \"path\": \"\"\n        },\n        \"gcsIntermediateDataLocation\": {\n          \"bucketName\": \"\",\n          \"path\": \"\"\n        },\n        \"httpDataSource\": {\n          \"listUrl\": \"\"\n        },\n        \"objectConditions\": {\n          \"excludePrefixes\": [\n            \"\"\n          ],\n          \"includePrefixes\": [\n            \"\"\n          ],\n          \"lastModifiedBefore\": \"\",\n          \"lastModifiedSince\": \"\",\n          \"maxTimeElapsedSinceLastModification\": \"\",\n          \"minTimeElapsedSinceLastModification\": \"\"\n        },\n        \"posixDataSink\": {\n          \"rootDirectory\": \"\"\n        },\n        \"posixDataSource\": {\n          \"rootDirectory\": \"\"\n        },\n        \"sinkAgentPoolName\": \"\",\n        \"sourceAgentPoolName\": \"\",\n        \"transferManifest\": {\n          \"location\": \"\"\n        },\n        \"transferOptions\": {\n          \"deleteObjectsFromSourceAfterTransfer\": {{faker 'datatype.boolean'}},\n          \"deleteObjectsUniqueInSink\": {{faker 'datatype.boolean'}},\n          \"metadataOptions\": {\n            \"acl\": \"{{oneOf (array 'ACL_UNSPECIFIED' 'ACL_DESTINATION_BUCKET_DEFAULT' 'ACL_PRESERVE')}}\",\n            \"gid\": \"{{oneOf (array 'GID_UNSPECIFIED' 'GID_SKIP' 'GID_NUMBER')}}\",\n            \"kmsKey\": \"{{oneOf (array 'KMS_KEY_UNSPECIFIED' 'KMS_KEY_DESTINATION_BUCKET_DEFAULT' 'KMS_KEY_PRESERVE')}}\",\n            \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'MODE_SKIP' 'MODE_PRESERVE')}}\",\n            \"storageClass\": \"{{oneOf (array 'STORAGE_CLASS_UNSPECIFIED' 'STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT' 'STORAGE_CLASS_PRESERVE' 'STORAGE_CLASS_STANDARD' 'STORAGE_CLASS_NEARLINE' 'STORAGE_CLASS_COLDLINE' 'STORAGE_CLASS_ARCHIVE')}}\",\n            \"symlink\": \"{{oneOf (array 'SYMLINK_UNSPECIFIED' 'SYMLINK_SKIP' 'SYMLINK_PRESERVE')}}\",\n            \"temporaryHold\": \"{{oneOf (array 'TEMPORARY_HOLD_UNSPECIFIED' 'TEMPORARY_HOLD_SKIP' 'TEMPORARY_HOLD_PRESERVE')}}\",\n            \"timeCreated\": \"{{oneOf (array 'TIME_CREATED_UNSPECIFIED' 'TIME_CREATED_SKIP' 'TIME_CREATED_PRESERVE_AS_CUSTOM_TIME')}}\",\n            \"uid\": \"{{oneOf (array 'UID_UNSPECIFIED' 'UID_SKIP' 'UID_NUMBER')}}\"\n          },\n          \"overwriteObjectsAlreadyExistingInSink\": {{faker 'datatype.boolean'}},\n          \"overwriteWhen\": \"{{oneOf (array 'OVERWRITE_WHEN_UNSPECIFIED' 'DIFFERENT' 'NEVER' 'ALWAYS')}}\"\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f407ab4-1d8d-4f75-89a7-b37877c78980",
      "documentation": "Creates a transfer job that runs periodically.",
      "method": "post",
      "endpoint": "v1/transferJobs",
      "responses": [
        {
          "uuid": "edda5627-cc4e-4acb-a6bc-2de0c8a851b0",
          "body": "{\n  \"creationTime\": \"\",\n  \"deletionTime\": \"\",\n  \"description\": \"\",\n  \"lastModificationTime\": \"\",\n  \"latestOperationName\": \"\",\n  \"loggingConfig\": {\n    \"enableOnpremGcsTransferLogs\": {{faker 'datatype.boolean'}},\n    \"logActionStates\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_STATE_UNSPECIFIED' 'SUCCEEDED' 'FAILED')}}\"\n    ],\n    \"logActions\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_UNSPECIFIED' 'FIND' 'DELETE' 'COPY')}}\"\n    ]\n  },\n  \"name\": \"\",\n  \"notificationConfig\": {\n    \"eventTypes\": [\n      \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'TRANSFER_OPERATION_SUCCESS' 'TRANSFER_OPERATION_FAILED' 'TRANSFER_OPERATION_ABORTED')}}\"\n    ],\n    \"payloadFormat\": \"{{oneOf (array 'PAYLOAD_FORMAT_UNSPECIFIED' 'NONE' 'JSON')}}\",\n    \"pubsubTopic\": \"\"\n  },\n  \"projectId\": \"\",\n  \"schedule\": {\n    \"endTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    },\n    \"repeatInterval\": \"\",\n    \"scheduleEndDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"scheduleStartDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"startTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'ENABLED' 'DISABLED' 'DELETED')}}\",\n  \"transferSpec\": {\n    \"awsS3CompatibleDataSource\": {\n      \"bucketName\": \"\",\n      \"endpoint\": \"\",\n      \"path\": \"\",\n      \"region\": \"\",\n      \"s3Metadata\": {\n        \"authMethod\": \"{{oneOf (array 'AUTH_METHOD_UNSPECIFIED' 'AUTH_METHOD_AWS_SIGNATURE_V4' 'AUTH_METHOD_AWS_SIGNATURE_V2')}}\",\n        \"listApi\": \"{{oneOf (array 'LIST_API_UNSPECIFIED' 'LIST_OBJECTS_V2' 'LIST_OBJECTS')}}\",\n        \"protocol\": \"{{oneOf (array 'NETWORK_PROTOCOL_UNSPECIFIED' 'NETWORK_PROTOCOL_HTTPS' 'NETWORK_PROTOCOL_HTTP')}}\",\n        \"requestModel\": \"{{oneOf (array 'REQUEST_MODEL_UNSPECIFIED' 'REQUEST_MODEL_VIRTUAL_HOSTED_STYLE' 'REQUEST_MODEL_PATH_STYLE')}}\"\n      }\n    },\n    \"awsS3DataSource\": {\n      \"awsAccessKey\": {\n        \"accessKeyId\": \"\",\n        \"secretAccessKey\": \"\"\n      },\n      \"bucketName\": \"\",\n      \"path\": \"\",\n      \"roleArn\": \"\"\n    },\n    \"azureBlobStorageDataSource\": {\n      \"azureCredentials\": {\n        \"sasToken\": \"\"\n      },\n      \"container\": \"\",\n      \"path\": \"\",\n      \"storageAccount\": \"\"\n    },\n    \"gcsDataSink\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsDataSource\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsIntermediateDataLocation\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"httpDataSource\": {\n      \"listUrl\": \"\"\n    },\n    \"objectConditions\": {\n      \"excludePrefixes\": [\n        \"\"\n      ],\n      \"includePrefixes\": [\n        \"\"\n      ],\n      \"lastModifiedBefore\": \"\",\n      \"lastModifiedSince\": \"\",\n      \"maxTimeElapsedSinceLastModification\": \"\",\n      \"minTimeElapsedSinceLastModification\": \"\"\n    },\n    \"posixDataSink\": {\n      \"rootDirectory\": \"\"\n    },\n    \"posixDataSource\": {\n      \"rootDirectory\": \"\"\n    },\n    \"sinkAgentPoolName\": \"\",\n    \"sourceAgentPoolName\": \"\",\n    \"transferManifest\": {\n      \"location\": \"\"\n    },\n    \"transferOptions\": {\n      \"deleteObjectsFromSourceAfterTransfer\": {{faker 'datatype.boolean'}},\n      \"deleteObjectsUniqueInSink\": {{faker 'datatype.boolean'}},\n      \"metadataOptions\": {\n        \"acl\": \"{{oneOf (array 'ACL_UNSPECIFIED' 'ACL_DESTINATION_BUCKET_DEFAULT' 'ACL_PRESERVE')}}\",\n        \"gid\": \"{{oneOf (array 'GID_UNSPECIFIED' 'GID_SKIP' 'GID_NUMBER')}}\",\n        \"kmsKey\": \"{{oneOf (array 'KMS_KEY_UNSPECIFIED' 'KMS_KEY_DESTINATION_BUCKET_DEFAULT' 'KMS_KEY_PRESERVE')}}\",\n        \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'MODE_SKIP' 'MODE_PRESERVE')}}\",\n        \"storageClass\": \"{{oneOf (array 'STORAGE_CLASS_UNSPECIFIED' 'STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT' 'STORAGE_CLASS_PRESERVE' 'STORAGE_CLASS_STANDARD' 'STORAGE_CLASS_NEARLINE' 'STORAGE_CLASS_COLDLINE' 'STORAGE_CLASS_ARCHIVE')}}\",\n        \"symlink\": \"{{oneOf (array 'SYMLINK_UNSPECIFIED' 'SYMLINK_SKIP' 'SYMLINK_PRESERVE')}}\",\n        \"temporaryHold\": \"{{oneOf (array 'TEMPORARY_HOLD_UNSPECIFIED' 'TEMPORARY_HOLD_SKIP' 'TEMPORARY_HOLD_PRESERVE')}}\",\n        \"timeCreated\": \"{{oneOf (array 'TIME_CREATED_UNSPECIFIED' 'TIME_CREATED_SKIP' 'TIME_CREATED_PRESERVE_AS_CUSTOM_TIME')}}\",\n        \"uid\": \"{{oneOf (array 'UID_UNSPECIFIED' 'UID_SKIP' 'UID_NUMBER')}}\"\n      },\n      \"overwriteObjectsAlreadyExistingInSink\": {{faker 'datatype.boolean'}},\n      \"overwriteWhen\": \"{{oneOf (array 'OVERWRITE_WHEN_UNSPECIFIED' 'DIFFERENT' 'NEVER' 'ALWAYS')}}\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "72c1868e-531c-4388-b4c3-51c796749cf9",
      "documentation": "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
      "method": "delete",
      "endpoint": "v1/:jobName",
      "responses": [
        {
          "uuid": "00689059-50fb-41f8-a355-92a4c978f881",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dcff1151-3035-434c-b256-b8d002df91db",
      "documentation": "Gets a transfer job.",
      "method": "get",
      "endpoint": "v1/:jobName",
      "responses": [
        {
          "uuid": "85a12ad2-1c46-41e2-93b4-4bd6ba2800a8",
          "body": "{\n  \"creationTime\": \"\",\n  \"deletionTime\": \"\",\n  \"description\": \"\",\n  \"lastModificationTime\": \"\",\n  \"latestOperationName\": \"\",\n  \"loggingConfig\": {\n    \"enableOnpremGcsTransferLogs\": {{faker 'datatype.boolean'}},\n    \"logActionStates\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_STATE_UNSPECIFIED' 'SUCCEEDED' 'FAILED')}}\"\n    ],\n    \"logActions\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_UNSPECIFIED' 'FIND' 'DELETE' 'COPY')}}\"\n    ]\n  },\n  \"name\": \"\",\n  \"notificationConfig\": {\n    \"eventTypes\": [\n      \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'TRANSFER_OPERATION_SUCCESS' 'TRANSFER_OPERATION_FAILED' 'TRANSFER_OPERATION_ABORTED')}}\"\n    ],\n    \"payloadFormat\": \"{{oneOf (array 'PAYLOAD_FORMAT_UNSPECIFIED' 'NONE' 'JSON')}}\",\n    \"pubsubTopic\": \"\"\n  },\n  \"projectId\": \"\",\n  \"schedule\": {\n    \"endTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    },\n    \"repeatInterval\": \"\",\n    \"scheduleEndDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"scheduleStartDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"startTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'ENABLED' 'DISABLED' 'DELETED')}}\",\n  \"transferSpec\": {\n    \"awsS3CompatibleDataSource\": {\n      \"bucketName\": \"\",\n      \"endpoint\": \"\",\n      \"path\": \"\",\n      \"region\": \"\",\n      \"s3Metadata\": {\n        \"authMethod\": \"{{oneOf (array 'AUTH_METHOD_UNSPECIFIED' 'AUTH_METHOD_AWS_SIGNATURE_V4' 'AUTH_METHOD_AWS_SIGNATURE_V2')}}\",\n        \"listApi\": \"{{oneOf (array 'LIST_API_UNSPECIFIED' 'LIST_OBJECTS_V2' 'LIST_OBJECTS')}}\",\n        \"protocol\": \"{{oneOf (array 'NETWORK_PROTOCOL_UNSPECIFIED' 'NETWORK_PROTOCOL_HTTPS' 'NETWORK_PROTOCOL_HTTP')}}\",\n        \"requestModel\": \"{{oneOf (array 'REQUEST_MODEL_UNSPECIFIED' 'REQUEST_MODEL_VIRTUAL_HOSTED_STYLE' 'REQUEST_MODEL_PATH_STYLE')}}\"\n      }\n    },\n    \"awsS3DataSource\": {\n      \"awsAccessKey\": {\n        \"accessKeyId\": \"\",\n        \"secretAccessKey\": \"\"\n      },\n      \"bucketName\": \"\",\n      \"path\": \"\",\n      \"roleArn\": \"\"\n    },\n    \"azureBlobStorageDataSource\": {\n      \"azureCredentials\": {\n        \"sasToken\": \"\"\n      },\n      \"container\": \"\",\n      \"path\": \"\",\n      \"storageAccount\": \"\"\n    },\n    \"gcsDataSink\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsDataSource\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsIntermediateDataLocation\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"httpDataSource\": {\n      \"listUrl\": \"\"\n    },\n    \"objectConditions\": {\n      \"excludePrefixes\": [\n        \"\"\n      ],\n      \"includePrefixes\": [\n        \"\"\n      ],\n      \"lastModifiedBefore\": \"\",\n      \"lastModifiedSince\": \"\",\n      \"maxTimeElapsedSinceLastModification\": \"\",\n      \"minTimeElapsedSinceLastModification\": \"\"\n    },\n    \"posixDataSink\": {\n      \"rootDirectory\": \"\"\n    },\n    \"posixDataSource\": {\n      \"rootDirectory\": \"\"\n    },\n    \"sinkAgentPoolName\": \"\",\n    \"sourceAgentPoolName\": \"\",\n    \"transferManifest\": {\n      \"location\": \"\"\n    },\n    \"transferOptions\": {\n      \"deleteObjectsFromSourceAfterTransfer\": {{faker 'datatype.boolean'}},\n      \"deleteObjectsUniqueInSink\": {{faker 'datatype.boolean'}},\n      \"metadataOptions\": {\n        \"acl\": \"{{oneOf (array 'ACL_UNSPECIFIED' 'ACL_DESTINATION_BUCKET_DEFAULT' 'ACL_PRESERVE')}}\",\n        \"gid\": \"{{oneOf (array 'GID_UNSPECIFIED' 'GID_SKIP' 'GID_NUMBER')}}\",\n        \"kmsKey\": \"{{oneOf (array 'KMS_KEY_UNSPECIFIED' 'KMS_KEY_DESTINATION_BUCKET_DEFAULT' 'KMS_KEY_PRESERVE')}}\",\n        \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'MODE_SKIP' 'MODE_PRESERVE')}}\",\n        \"storageClass\": \"{{oneOf (array 'STORAGE_CLASS_UNSPECIFIED' 'STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT' 'STORAGE_CLASS_PRESERVE' 'STORAGE_CLASS_STANDARD' 'STORAGE_CLASS_NEARLINE' 'STORAGE_CLASS_COLDLINE' 'STORAGE_CLASS_ARCHIVE')}}\",\n        \"symlink\": \"{{oneOf (array 'SYMLINK_UNSPECIFIED' 'SYMLINK_SKIP' 'SYMLINK_PRESERVE')}}\",\n        \"temporaryHold\": \"{{oneOf (array 'TEMPORARY_HOLD_UNSPECIFIED' 'TEMPORARY_HOLD_SKIP' 'TEMPORARY_HOLD_PRESERVE')}}\",\n        \"timeCreated\": \"{{oneOf (array 'TIME_CREATED_UNSPECIFIED' 'TIME_CREATED_SKIP' 'TIME_CREATED_PRESERVE_AS_CUSTOM_TIME')}}\",\n        \"uid\": \"{{oneOf (array 'UID_UNSPECIFIED' 'UID_SKIP' 'UID_NUMBER')}}\"\n      },\n      \"overwriteObjectsAlreadyExistingInSink\": {{faker 'datatype.boolean'}},\n      \"overwriteWhen\": \"{{oneOf (array 'OVERWRITE_WHEN_UNSPECIFIED' 'DIFFERENT' 'NEVER' 'ALWAYS')}}\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "33dcb306-4412-4e36-be71-0ce238323211",
      "documentation": "Updates a transfer job. Updating a job's transfer spec does not affect transfer operations that are running already. **Note:** The job's status field can be modified using this RPC (for example, to set a job's status to DELETED, DISABLED, or ENABLED).",
      "method": "patch",
      "endpoint": "v1/:jobName",
      "responses": [
        {
          "uuid": "68cd69c3-4beb-4302-b067-2c5c7389fa0f",
          "body": "{\n  \"creationTime\": \"\",\n  \"deletionTime\": \"\",\n  \"description\": \"\",\n  \"lastModificationTime\": \"\",\n  \"latestOperationName\": \"\",\n  \"loggingConfig\": {\n    \"enableOnpremGcsTransferLogs\": {{faker 'datatype.boolean'}},\n    \"logActionStates\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_STATE_UNSPECIFIED' 'SUCCEEDED' 'FAILED')}}\"\n    ],\n    \"logActions\": [\n      \"{{oneOf (array 'LOGGABLE_ACTION_UNSPECIFIED' 'FIND' 'DELETE' 'COPY')}}\"\n    ]\n  },\n  \"name\": \"\",\n  \"notificationConfig\": {\n    \"eventTypes\": [\n      \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'TRANSFER_OPERATION_SUCCESS' 'TRANSFER_OPERATION_FAILED' 'TRANSFER_OPERATION_ABORTED')}}\"\n    ],\n    \"payloadFormat\": \"{{oneOf (array 'PAYLOAD_FORMAT_UNSPECIFIED' 'NONE' 'JSON')}}\",\n    \"pubsubTopic\": \"\"\n  },\n  \"projectId\": \"\",\n  \"schedule\": {\n    \"endTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    },\n    \"repeatInterval\": \"\",\n    \"scheduleEndDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"scheduleStartDate\": {\n      \"day\": {{faker 'datatype.number'}},\n      \"month\": {{faker 'datatype.number'}},\n      \"year\": {{faker 'datatype.number'}}\n    },\n    \"startTimeOfDay\": {\n      \"hours\": {{faker 'datatype.number'}},\n      \"minutes\": {{faker 'datatype.number'}},\n      \"nanos\": {{faker 'datatype.number'}},\n      \"seconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'ENABLED' 'DISABLED' 'DELETED')}}\",\n  \"transferSpec\": {\n    \"awsS3CompatibleDataSource\": {\n      \"bucketName\": \"\",\n      \"endpoint\": \"\",\n      \"path\": \"\",\n      \"region\": \"\",\n      \"s3Metadata\": {\n        \"authMethod\": \"{{oneOf (array 'AUTH_METHOD_UNSPECIFIED' 'AUTH_METHOD_AWS_SIGNATURE_V4' 'AUTH_METHOD_AWS_SIGNATURE_V2')}}\",\n        \"listApi\": \"{{oneOf (array 'LIST_API_UNSPECIFIED' 'LIST_OBJECTS_V2' 'LIST_OBJECTS')}}\",\n        \"protocol\": \"{{oneOf (array 'NETWORK_PROTOCOL_UNSPECIFIED' 'NETWORK_PROTOCOL_HTTPS' 'NETWORK_PROTOCOL_HTTP')}}\",\n        \"requestModel\": \"{{oneOf (array 'REQUEST_MODEL_UNSPECIFIED' 'REQUEST_MODEL_VIRTUAL_HOSTED_STYLE' 'REQUEST_MODEL_PATH_STYLE')}}\"\n      }\n    },\n    \"awsS3DataSource\": {\n      \"awsAccessKey\": {\n        \"accessKeyId\": \"\",\n        \"secretAccessKey\": \"\"\n      },\n      \"bucketName\": \"\",\n      \"path\": \"\",\n      \"roleArn\": \"\"\n    },\n    \"azureBlobStorageDataSource\": {\n      \"azureCredentials\": {\n        \"sasToken\": \"\"\n      },\n      \"container\": \"\",\n      \"path\": \"\",\n      \"storageAccount\": \"\"\n    },\n    \"gcsDataSink\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsDataSource\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"gcsIntermediateDataLocation\": {\n      \"bucketName\": \"\",\n      \"path\": \"\"\n    },\n    \"httpDataSource\": {\n      \"listUrl\": \"\"\n    },\n    \"objectConditions\": {\n      \"excludePrefixes\": [\n        \"\"\n      ],\n      \"includePrefixes\": [\n        \"\"\n      ],\n      \"lastModifiedBefore\": \"\",\n      \"lastModifiedSince\": \"\",\n      \"maxTimeElapsedSinceLastModification\": \"\",\n      \"minTimeElapsedSinceLastModification\": \"\"\n    },\n    \"posixDataSink\": {\n      \"rootDirectory\": \"\"\n    },\n    \"posixDataSource\": {\n      \"rootDirectory\": \"\"\n    },\n    \"sinkAgentPoolName\": \"\",\n    \"sourceAgentPoolName\": \"\",\n    \"transferManifest\": {\n      \"location\": \"\"\n    },\n    \"transferOptions\": {\n      \"deleteObjectsFromSourceAfterTransfer\": {{faker 'datatype.boolean'}},\n      \"deleteObjectsUniqueInSink\": {{faker 'datatype.boolean'}},\n      \"metadataOptions\": {\n        \"acl\": \"{{oneOf (array 'ACL_UNSPECIFIED' 'ACL_DESTINATION_BUCKET_DEFAULT' 'ACL_PRESERVE')}}\",\n        \"gid\": \"{{oneOf (array 'GID_UNSPECIFIED' 'GID_SKIP' 'GID_NUMBER')}}\",\n        \"kmsKey\": \"{{oneOf (array 'KMS_KEY_UNSPECIFIED' 'KMS_KEY_DESTINATION_BUCKET_DEFAULT' 'KMS_KEY_PRESERVE')}}\",\n        \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'MODE_SKIP' 'MODE_PRESERVE')}}\",\n        \"storageClass\": \"{{oneOf (array 'STORAGE_CLASS_UNSPECIFIED' 'STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT' 'STORAGE_CLASS_PRESERVE' 'STORAGE_CLASS_STANDARD' 'STORAGE_CLASS_NEARLINE' 'STORAGE_CLASS_COLDLINE' 'STORAGE_CLASS_ARCHIVE')}}\",\n        \"symlink\": \"{{oneOf (array 'SYMLINK_UNSPECIFIED' 'SYMLINK_SKIP' 'SYMLINK_PRESERVE')}}\",\n        \"temporaryHold\": \"{{oneOf (array 'TEMPORARY_HOLD_UNSPECIFIED' 'TEMPORARY_HOLD_SKIP' 'TEMPORARY_HOLD_PRESERVE')}}\",\n        \"timeCreated\": \"{{oneOf (array 'TIME_CREATED_UNSPECIFIED' 'TIME_CREATED_SKIP' 'TIME_CREATED_PRESERVE_AS_CUSTOM_TIME')}}\",\n        \"uid\": \"{{oneOf (array 'UID_UNSPECIFIED' 'UID_SKIP' 'UID_NUMBER')}}\"\n      },\n      \"overwriteObjectsAlreadyExistingInSink\": {{faker 'datatype.boolean'}},\n      \"overwriteWhen\": \"{{oneOf (array 'OVERWRITE_WHEN_UNSPECIFIED' 'DIFFERENT' 'NEVER' 'ALWAYS')}}\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ecb25350-8b48-4a6e-8c03-a51d809383fe",
      "documentation": "Starts a new operation for the specified transfer job. A `TransferJob` has a maximum of one active `TransferOperation`. If this method is called while a `TransferOperation` is active, an error is returned.",
      "method": "post",
      "endpoint": "v1/:jobName:run",
      "responses": [
        {
          "uuid": "f4bf8906-9763-456e-85bf-0c4e27a4f245",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cedeb42-b202-41de-9f4e-04fc761d7315",
      "documentation": "Deletes an agent pool.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "8eb508cd-34ae-4dc4-98d6-c5f67265080b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a801fb8f-3815-4468-810f-75068be67508",
      "documentation": "Lists transfer operations. Operations are ordered by their creation time in reverse chronological order.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "a4921d98-d893-4bfc-b093-6dcf3d0128e6",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6864177b-bf2b-49f7-946b-c2de848887d4",
      "documentation": "Updates an existing agent pool resource.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "6d05e762-64e1-418e-b10c-08148ad5e4cc",
          "body": "{\n  \"bandwidthLimit\": {\n    \"limitMbps\": \"\"\n  },\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CREATED' 'DELETING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57717d48-65aa-49fc-b545-033548452b6c",
      "documentation": "Cancels a transfer. Use the transferOperations.get method to check if the cancellation succeeded or if the operation completed despite the `cancel` request. When you cancel an operation, the currently running transfer is interrupted. For recurring transfer jobs, the next instance of the transfer job will still run. For example, if your job is configured to run every day at 1pm and you cancel Monday's operation at 1:05pm, Monday's transfer will stop. However, a transfer job will still be attempted on Tuesday. This applies only to currently running operations. If an operation is not currently running, `cancel` does nothing. *Caution:* Canceling a transfer job can leave your data in an unknown state. We recommend that you restore the state at both the destination and the source after the `cancel` request completes so that your data is in a consistent state. When you cancel a job, the next job computes a delta of files and may repair any inconsistent state. For instance, if you run a job every day, and today's job found 10 new files and transferred five files before you canceled the job, tomorrow's transfer operation will compute a new delta with the five files that were not copied today plus any new files discovered tomorrow.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "14a6c6d5-ebb5-4320-8a45-82875cae7c8f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5208b43-995e-47eb-b3de-5f5baefed9b6",
      "documentation": "Pauses a transfer operation.",
      "method": "post",
      "endpoint": "v1/:name:pause",
      "responses": [
        {
          "uuid": "d359a30b-8055-44ae-81fd-ed2c25901ba8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d2731d6c-f39f-4b6a-a20f-6824e6abbb27",
      "documentation": "Resumes a transfer operation that is paused.",
      "method": "post",
      "endpoint": "v1/:name:resume",
      "responses": [
        {
          "uuid": "83ea9582-b4c7-4dfa-8c52-ebc1f2096367",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}