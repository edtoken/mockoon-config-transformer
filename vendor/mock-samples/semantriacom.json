{
  "uuid": "ddf33604-df77-49de-97ac-64e732e9abc4",
  "lastMigration": 24,
  "name": "Semantria",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "03b1fbac-a684-4f93-a7fd-15980ce15805",
      "documentation": "Remove items from blacklist",
      "method": "delete",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "72740219-1c17-4f60-b3c1-c078031b3657",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14b0b19f-a0f2-4b7f-a03e-fc0c1b7a7be5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e55bc9c8-03f6-4c9c-90db-fd0fbe513878",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e61d8424-4e5a-411b-9d45-a0c2962be2ec",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d016e4b8-0473-45dd-8cdb-7f2fb6fac41a",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f98bbfb-20c8-4c56-9704-333923c8a9d1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a82d5e5-143b-48ba-a204-c7ff54a98087",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dfbc1b74-1101-474d-9a97-71cfeaab54bf",
      "documentation": "Retrieve blacklisted items",
      "method": "get",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "0df4aa81-4fe8-48b9-a8a9-c4bf45e41fd2",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the blacklist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e437ff22-918e-4116-9cab-cfc5c98087df",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no blacklist found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a47215e6-a448-477b-9696-493fb8d20227",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c7334d7-4ef4-442a-9353-7545a3a543c6",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59c9de57-bf41-4446-95be-d88bdc34be53",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c659865-0228-4dde-afcc-557914c83916",
      "documentation": "Add items to blacklist",
      "method": "post",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "0e864933-c2ad-447e-be36-1512f64d5fb4",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1fc3b98f-16fd-466b-b7f9-b18f1f693af5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45bbcdc0-675a-4d9f-95f3-2c4043f3b003",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a38270de-6dac-4441-a5fc-b3df2ef40a60",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfc571a5-ce43-4352-a817-ebff44c2c6e1",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edaa8899-b3cb-446b-9f9c-59e2b05aca13",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "702f0c78-f308-44d8-bca0-f290404674e1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa6d5ab3-f3ca-4fc0-a98c-ae66c39d41db",
      "documentation": "Update items in blacklist",
      "method": "put",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "c7dddaf2-808b-4139-b34c-b4be1a557a56",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "478973c0-de11-4f44-b331-23b23ab7aadf",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b358866-7fe7-4816-a550-0e4799a7ad27",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd73ee67-d784-45cf-b495-2c89b4651de7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0068c6f8-b87e-4182-b288-f31291284ac7",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0340e334-1111-4821-92d7-937ebf17a7a0",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83d8cbe5-d030-4134-9201-bdaa7d1c2017",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d1a0918-c6b8-4546-a955-1c93b834d270",
      "documentation": "Remove user categories",
      "method": "delete",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "fb2fe7c2-cc29-4edb-9eab-b0ea3bf1187f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "abd27030-3d3e-403b-a18a-b875280a0298",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c472077-501c-483a-bcbe-a9b7126be4b6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7321cd19-ccca-406f-a6e4-87b3928c20c8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "701a57ce-6609-47e7-b198-2095e0a7f523",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd58e59b-fb1e-4699-a10d-b5660686097d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "976b00d2-5753-4786-87e0-caddf13bedca",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff68f342-e065-42a9-9f19-d5d9e4d1cc66",
      "documentation": "Retrieve user categories",
      "method": "get",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "cd75d762-ba4b-442c-9f30-a4a6aea02f83",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the categories list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d1c4b919-87c0-48ff-9435-595e5e46209e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no categories found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "251f2e81-9304-4664-a85e-261b764b271b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e45d0eb7-354f-4fcf-8bc9-d89c20138066",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1f1c7f0-b87a-423a-b4c0-067ac202b21f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c7fa759-8dfb-4b6d-be16-abafe8e2a23d",
      "documentation": "Add user categories",
      "method": "post",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "ea694b37-9a13-428b-b627-ec42c0e1b122",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "786cd438-8235-4f57-8f8a-af688f0c8c4e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af943bd0-8e6d-4342-904a-435838bdf967",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5003c729-03a9-473c-89a6-4e5856f824aa",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d20ca75f-85bc-4237-a656-322f3935c170",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e5144c2-0a5c-4b4d-a84b-d3dbb86c8783",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65cb0e8d-21f6-4480-a7c6-77ecf4f006b8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca0bbad9-9469-4344-9743-f644f91f1413",
      "documentation": "Updates user categories",
      "method": "put",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "38c1ebac-be87-493f-b0d8-87bffff7fa64",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41a548ec-183f-439f-961c-76c0cae3f919",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6238009c-be0c-479d-bf92-0c6a13c0f35e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a0e2b79-f6ef-4ecb-96f2-3b804aaf3246",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59c03b48-4fa3-48bb-9fa4-652b07d4e0da",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "24923420-7604-430f-9d46-e8aa3ff8a720",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be07d8ba-9ef0-4beb-a3e7-c83824a7dab5",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c27fbec7-94d3-42ea-beb0-446727936ed8",
      "documentation": "Queue collection for analysis",
      "method": "post",
      "endpoint": "collection.:content_type",
      "responses": [
        {
          "uuid": "23fc7984-7a78-45b8-9480-cbfa4119b640",
          "body": "{\n  \"documents\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ac33906-3f5a-415c-9e11-221bcccb7649",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ad51294-bb9e-4d0e-9e9f-c3abced3066a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47c788ee-0259-45c9-8e6e-8fb2cac10a88",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa702e17-8a23-4da4-8547-5cdc193607e9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per collection is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "708a1974-21b2-4bad-8668-774601f65ca2",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for single document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b567a9f-9458-477b-a5d2-8d2cddedb7b1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31f4557c-f90a-43fa-a94c-e4c7d2755807",
      "documentation": "Retrieve collections analysis",
      "method": "get",
      "endpoint": "collection/processed.:content_type",
      "responses": [
        {
          "uuid": "de69c991-60e5-44e7-81d1-3c7e459c7c89",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'datatype.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'datatype.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'datatype.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'datatype.number'}},\n                  \"length\": {{faker 'datatype.number'}},\n                  \"offset\": {{faker 'datatype.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'datatype.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'datatype.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'datatype.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed collections.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90e4a4fa-3e50-4f4c-aa6a-0904fbda5788",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed collections found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92861380-b9d2-40a7-a013-14da5f932d19",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff2dc8b2-145b-4e5d-b758-b78b822b8d1b",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "163323e1-78ec-4adb-b214-a400086e6204",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a6847cd-7750-4298-b938-4b14f8168825",
      "documentation": "Cancel collection analysis",
      "method": "delete",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "408e1a23-d233-43f2-b0b8-04de73ca73cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b813af4e-6212-4d4d-b499-7674a2bbcd77",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3682b5a1-e49a-46b2-8cf3-ded74a1e72d9",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a82e7a7-1582-4a41-94f7-87217cc440a0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d6627a0-c356-4c0d-aad0-0ff0efa4d709",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fe9c2f6c-9e94-4c99-9296-d03ca898ff41",
      "documentation": "Retrieve collection analysis or its status in queue",
      "method": "get",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "7a039885-7e7e-4e5a-a246-25c227741bb3",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'datatype.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'datatype.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'datatype.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'datatype.number'}},\n                  \"length\": {{faker 'datatype.number'}},\n                  \"offset\": {{faker 'datatype.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'datatype.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'datatype.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'datatype.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "58d7dff9-4368-4fef-b1b4-09ebb43443a3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e28893c1-e7bb-4007-889b-a71556f9b3e0",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4178b222-ee93-4680-b516-c458be9db4df",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ad9af90-311e-460f-8247-e39749f5c12c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85f4eba6-06d6-4824-9b40-9971509e19ee",
      "documentation": "Remove user configurations",
      "method": "delete",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "56da59a5-1d72-4016-ae93-8eb67ab5ba88",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc53c3e5-33fa-4cad-924d-9ff234cea03e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ea06694-9d35-49f1-99e7-b67918a9efb2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53edea3b-c5cb-4817-aa52-d736cfd03769",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7afb6728-7db2-482e-b42c-912605bd99b6",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dce98b6f-e4d7-4954-a768-e1706e763dd1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e937b9a-a721-4d6c-8321-9d2215cc2e30",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44dea410-e623-485b-8421-3b0c8b12de20",
      "documentation": "Retrieve user configurations",
      "method": "get",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "7de13fa5-d211-437d-ad83-20c3083f99ed",
          "body": "[\n  {\n    \"auto_response\": {{faker 'datatype.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'datatype.float'}},\n    \"chars_threshold\": {{faker 'datatype.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"facet_atts_limit\": {{faker 'datatype.number'}},\n      \"facet_mentions_limit\": {{faker 'datatype.number'}},\n      \"facets_limit\": {{faker 'datatype.number'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"detect_language\": {{faker 'datatype.boolean'}},\n      \"entity_themes_limit\": {{faker 'datatype.number'}},\n      \"intentions\": {{faker 'datatype.boolean'}},\n      \"model_sentiment\": {{faker 'datatype.boolean'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"named_opinions_limit\": {{faker 'datatype.number'}},\n      \"named_relations_limit\": {{faker 'datatype.number'}},\n      \"phrases_limit\": {{faker 'datatype.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"summary_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}},\n      \"user_opinions_limit\": {{faker 'datatype.number'}},\n      \"user_relations_limit\": {{faker 'datatype.number'}}\n    },\n    \"entities_threshold\": {{faker 'datatype.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'datatype.boolean'}},\n    \"process_html\": {{faker 'datatype.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b3d5114-4ac1-4cd3-b89c-26bb6245d533",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c18901b-2645-47af-a3bb-de3fe8b344ca",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4148130d-b724-4600-9953-2259b5a3624a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3aaef6b3-d6a2-473a-9b9c-7f7354828cb6",
      "documentation": "Create user configurations",
      "method": "post",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "27e68eaa-5fdd-4309-ac5d-b0c54f1a0aa1",
          "body": "[\n  {\n    \"auto_response\": {{faker 'datatype.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'datatype.float'}},\n    \"chars_threshold\": {{faker 'datatype.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"facet_atts_limit\": {{faker 'datatype.number'}},\n      \"facet_mentions_limit\": {{faker 'datatype.number'}},\n      \"facets_limit\": {{faker 'datatype.number'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"detect_language\": {{faker 'datatype.boolean'}},\n      \"entity_themes_limit\": {{faker 'datatype.number'}},\n      \"intentions\": {{faker 'datatype.boolean'}},\n      \"model_sentiment\": {{faker 'datatype.boolean'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"named_opinions_limit\": {{faker 'datatype.number'}},\n      \"named_relations_limit\": {{faker 'datatype.number'}},\n      \"phrases_limit\": {{faker 'datatype.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"summary_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}},\n      \"user_opinions_limit\": {{faker 'datatype.number'}},\n      \"user_relations_limit\": {{faker 'datatype.number'}}\n    },\n    \"entities_threshold\": {{faker 'datatype.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'datatype.boolean'}},\n    \"process_html\": {{faker 'datatype.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c7ffc1a-5add-4fa2-9c30-9a66c9d09507",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "808a086e-04be-4bcb-af8f-31da9f4fbfab",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1cb89258-329e-427e-856e-98a17ce2bf06",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ab6597c-e79c-4d2f-b85b-0b5582941b9f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7bda636-f6e2-43ef-a573-5de70f96cff9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "295a8b76-8b32-47bc-bd98-405d187ec916",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7fd6d4c-0681-4207-8c59-602516dd5c45",
      "documentation": "Update user configurations",
      "method": "put",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "5dfd0c5b-db18-475c-958b-a026c6c4d513",
          "body": "[\n  {\n    \"auto_response\": {{faker 'datatype.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'datatype.float'}},\n    \"chars_threshold\": {{faker 'datatype.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"facet_atts_limit\": {{faker 'datatype.number'}},\n      \"facet_mentions_limit\": {{faker 'datatype.number'}},\n      \"facets_limit\": {{faker 'datatype.number'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'datatype.number'}},\n      \"concept_topics_limit\": {{faker 'datatype.number'}},\n      \"detect_language\": {{faker 'datatype.boolean'}},\n      \"entity_themes_limit\": {{faker 'datatype.number'}},\n      \"intentions\": {{faker 'datatype.boolean'}},\n      \"model_sentiment\": {{faker 'datatype.boolean'}},\n      \"named_entities_limit\": {{faker 'datatype.number'}},\n      \"named_mentions_limit\": {{faker 'datatype.number'}},\n      \"named_opinions_limit\": {{faker 'datatype.number'}},\n      \"named_relations_limit\": {{faker 'datatype.number'}},\n      \"phrases_limit\": {{faker 'datatype.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'datatype.number'}},\n      \"query_topics_limit\": {{faker 'datatype.number'}},\n      \"summary_limit\": {{faker 'datatype.number'}},\n      \"theme_mentions_limit\": {{faker 'datatype.number'}},\n      \"themes_limit\": {{faker 'datatype.number'}},\n      \"user_entities_limit\": {{faker 'datatype.number'}},\n      \"user_mentions_limit\": {{faker 'datatype.number'}},\n      \"user_opinions_limit\": {{faker 'datatype.number'}},\n      \"user_relations_limit\": {{faker 'datatype.number'}}\n    },\n    \"entities_threshold\": {{faker 'datatype.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'datatype.boolean'}},\n    \"process_html\": {{faker 'datatype.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "efb83bc1-0308-43e1-8545-0025c98f90da",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "761db55e-73ea-4767-93a5-9fe3c7555d9e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01ef4807-c285-4ef5-ac3f-90ffb17d44b0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a96d1d6-30b3-41ad-b6d1-67e7e30d03fb",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fee0a5d-dbfd-40ff-a6c6-f4bb06c8d8b9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "686be2da-baf6-484e-8c0a-f769e7e10994",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96bb032e-1682-439b-902c-b070712170ac",
      "documentation": "Queue document for analysis",
      "method": "post",
      "endpoint": "document.:content_type",
      "responses": [
        {
          "uuid": "12d25e71-6e71-4a9e-980b-72e8019d7d7c",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5ccb5a3-5486-43ad-8ef5-bcf1d4760f3b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bc92b22-e685-46c9-b162-a0717af2b91e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dadfddc6-2fb1-4352-8a0e-0f53234e47a6",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4de0f27-73ba-4044-b2b9-01ea5e94981e",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8175ae5f-a9dc-4665-960f-b8f13979e147",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "acea142a-3a41-4409-9dd6-9ddb01d41d99",
      "documentation": "Queue batch of documents for analysis",
      "method": "post",
      "endpoint": "document/batch.:content_type",
      "responses": [
        {
          "uuid": "c1789260-6d53-427b-833c-84a71718e600",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e185d917-bff3-4ba6-831e-4015f7c80d38",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "048ddd5e-91c5-41f5-aaa9-e795f2109a01",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c43bb4c9-a720-4c3c-b781-d4de0e7d6adb",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de4f180a-ae8e-49df-90c6-12514b1cccd5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is forbidden for selected processing mode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e1f0347-de30-46aa-b498-3c1488de588d",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per batch is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39e5a138-124b-488b-aa08-f15400afae20",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73f8cb85-103b-48bf-a431-e1b3434d6e72",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fb8bc08-2526-4c30-b76a-1119e9a1aab0",
      "documentation": "Retrieve documents analysis",
      "method": "get",
      "endpoint": "document/processed.:content_type",
      "responses": [
        {
          "uuid": "671cc828-4661-41df-b04d-fb07d2f0b8ce",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'datatype.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"strength_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'datatype.boolean'}},\n      \"is_polar\": {{faker 'datatype.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"sentiment_score\": {{faker 'datatype.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'datatype.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'datatype.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'datatype.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'datatype.float'}},\n    \"neutral_score\": {{faker 'datatype.float'}},\n    \"positive_score\": {{faker 'datatype.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"speaker\": {{faker 'datatype.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'datatype.boolean'}},\n      \"is_negated\": {{faker 'datatype.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'datatype.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'datatype.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'datatype.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'datatype.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed documents.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ecb9a98b-dbc4-403b-976a-0cafa3cef584",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed documents found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e35c90fb-7138-4a18-a091-d9480a3c97b4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d83831ef-984a-406f-bdce-88692a9ce5d5",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc2ee3c9-0fa0-4924-9e87-ce2214639a3c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5cfe91eb-9892-450c-8a99-e3464048f226",
      "documentation": "Cancel document analysis",
      "method": "delete",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "593eab36-edef-4cd1-aef6-08ea20225bf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ac12486-d9e4-43c1-9a5a-90136ed73cca",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e15e12d-550d-4ad3-9eb9-bf98cab37c53",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93e46e01-6f97-4152-aee1-918d5c0d7f75",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea063fc0-23c3-4ad0-95e9-68c64d72bfce",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb91efc7-fe85-4a20-821c-875526db1989",
      "documentation": "Retrieve document analysis or its status in queue",
      "method": "get",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "ec329fb9-b432-455b-ba99-e87a5154a756",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'datatype.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"strength_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'datatype.boolean'}},\n      \"is_polar\": {{faker 'datatype.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"sentiment_score\": {{faker 'datatype.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'datatype.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'datatype.number'}},\n      \"neutral_count\": {{faker 'datatype.number'}},\n      \"positive_count\": {{faker 'datatype.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'datatype.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'datatype.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'datatype.float'}},\n    \"neutral_score\": {{faker 'datatype.float'}},\n    \"positive_score\": {{faker 'datatype.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"speaker\": {{faker 'datatype.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'datatype.boolean'}},\n      \"is_negated\": {{faker 'datatype.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'datatype.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'datatype.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'datatype.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'datatype.number'}},\n              \"length\": {{faker 'datatype.number'}},\n              \"offset\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'datatype.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'datatype.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'datatype.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "128ed6c5-ecdb-4c79-a6b3-d9f5dc4ca66e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "407a16aa-6740-4b07-a755-20bca2d6da0f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0167dca0-1dff-4eb2-bbbf-0ba88af79f0f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d232864a-7651-4bda-a021-9b12ab2d6548",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98117665-08fe-48fc-8fc1-8412d84436b2",
      "documentation": "Remove user entities",
      "method": "delete",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "2adfac90-a2d1-4ef6-bbaa-aa7604581d62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c19dcbd-e0e9-450f-8f14-8ed75c6bd094",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5932787-4537-44fc-a9d0-3b715438eb9c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35aa6826-32c3-4211-b24f-34aad2e0b0f3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce68a9cc-6cb7-45b4-b876-8014373c2cec",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c961ac85-8ae7-4a3b-8594-2b3311a36688",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4678068c-31d2-4030-9094-d2d4e6bf7f40",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4db281f-975a-45c4-8881-2e6f2705ee70",
      "documentation": "Retrieve user entities",
      "method": "get",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "fbcd6dda-685d-46a4-b682-8223e958d9da",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the entities list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90b9d169-3ff6-4390-803b-8dee330067cb",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no entities found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16573fe8-081f-4457-851f-ebc975de267d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53acb80d-e259-46ac-85c5-71898fe48bac",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10580260-f03e-4c69-8180-ceb5be173cb8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8a53b75-d186-4925-956e-d6b8af9aef5a",
      "documentation": "Add user entities",
      "method": "post",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "077ee4cc-120d-4966-8dce-8486a4f813fe",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55535580-1413-4d53-af47-58067116ebae",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19894505-99bf-4d9e-a672-7d404ed036a7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efe46cd5-0799-4f4e-9f2f-b6957fceb03c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6e16590-745e-47e5-b227-d6f57e634198",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d592d57-fc58-44bb-9482-f821e1b5e454",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "579e7dd5-7cc3-4033-8ed0-7ffa206ae203",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0903732f-7005-4c63-b47e-546660bf6c11",
      "documentation": "Update user entities",
      "method": "put",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "2cc86bc8-5c61-4272-9071-ac7c6b398516",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a34fcb8e-de96-4b07-800a-e3fd633df2f1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed8340ff-e386-4d3a-9d20-31e1a84ce694",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc11bfed-7de6-4231-a150-d065d1fb6258",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb09143d-dacf-48fa-9ac4-f21f1162fda4",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e371edd9-1dca-402e-a871-a700320f4366",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "180053d0-0ff8-477e-b741-68be9cacc273",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63f9bc5a-c7ec-412a-9c2e-150b1eb29a1c",
      "documentation": "Retrieve supported features",
      "method": "get",
      "endpoint": "features.:content_type",
      "responses": [
        {
          "uuid": "0e484cc9-9bcc-466e-a28d-c2510a71ef81",
          "body": "[\n  {\n    \"detailed_mode\": {\n      \"auto_categories\": {{faker 'datatype.boolean'}},\n      \"entity_mentions\": {{faker 'datatype.boolean'}},\n      \"entity_opinions\": {{faker 'datatype.boolean'}},\n      \"entity_relations\": {{faker 'datatype.boolean'}},\n      \"entity_themes\": {{faker 'datatype.boolean'}},\n      \"intentions\": {{faker 'datatype.boolean'}},\n      \"language_detection\": {{faker 'datatype.boolean'}},\n      \"model_sentiment\": {{faker 'datatype.boolean'}},\n      \"named_entities\": {{faker 'datatype.boolean'}},\n      \"pos_tagging\": {{faker 'datatype.boolean'}},\n      \"queries\": {{faker 'datatype.boolean'}},\n      \"sentiment\": {{faker 'datatype.boolean'}},\n      \"sentiment_phrases\": {{faker 'datatype.boolean'}},\n      \"summarization\": {{faker 'datatype.boolean'}},\n      \"taxonomy\": {{faker 'datatype.boolean'}},\n      \"theme_mentions\": {{faker 'datatype.boolean'}},\n      \"themes\": {{faker 'datatype.boolean'}},\n      \"user_categories\": {{faker 'datatype.boolean'}},\n      \"user_entities\": {{faker 'datatype.boolean'}}\n    },\n    \"discovery_mode\": {\n      \"entity_mentions\": {{faker 'datatype.boolean'}},\n      \"facet_attributes\": {{faker 'datatype.boolean'}},\n      \"facet_mentioins\": {{faker 'datatype.boolean'}},\n      \"facets\": {{faker 'datatype.boolean'}},\n      \"named_entities\": {{faker 'datatype.boolean'}},\n      \"queries\": {{faker 'datatype.boolean'}},\n      \"taxonomy\": {{faker 'datatype.boolean'}},\n      \"theme_mentions\": {{faker 'datatype.boolean'}},\n      \"themes\": {{faker 'datatype.boolean'}},\n      \"user_categories\": {{faker 'datatype.boolean'}},\n      \"user_entities\": {{faker 'datatype.boolean'}}\n    },\n    \"html_processing\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"language\": \"\",\n    \"one_sentence_mode\": {{faker 'datatype.boolean'}},\n    \"settings\": {\n      \"blacklist\": {{faker 'datatype.boolean'}},\n      \"queries\": {{faker 'datatype.boolean'}},\n      \"sentiment_phrases\": {{faker 'datatype.boolean'}},\n      \"taxonomy\": {{faker 'datatype.boolean'}},\n      \"user_categories\": {{faker 'datatype.boolean'}},\n      \"user_entities\": {{faker 'datatype.boolean'}}\n    },\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "446a454e-1958-45ce-ad31-c2086ca7ac26",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aeba1449-227f-4c01-ad0a-279763559c1c",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58df7e3a-ac1b-479b-ad4b-0aecf92f015d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa0e9d67-bb82-4fc5-a66d-9a9ff78952b6",
      "documentation": "Remove sentiment-bearing phrases",
      "method": "delete",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "e20b1c3c-3088-4e0b-94e6-15c898692156",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4c76519-a4ed-493a-a376-01bfd21b9681",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c874b9a-135b-4e7f-a5b1-d9327326d558",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "328c14ab-e4f9-4b10-9c5e-943262c548e0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8da551c5-dccb-4d4f-a662-3ddbcdff5808",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2de4da0-a32e-4898-8881-fae76f52a3d7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "befc6818-a196-4b99-8fb5-8b2f4ddb841b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10477ea4-6a0d-48ff-abed-0136519db782",
      "documentation": "Retrieve sentiment-bearing phrases",
      "method": "get",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "63ba25dd-2ebc-48e7-bfef-8d710649528b",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4443f2c8-f51f-4d21-aea7-bdeff9bd488c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no sentiment-bearing phrases found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d6324a5-fbd0-4549-a542-306f3b775b71",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "195b012a-06d1-4798-b144-51403862d9ae",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5865be1-1f75-4930-8bf3-7aac79db05cb",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a28c45bb-c542-432e-aa28-0604252ed711",
      "documentation": "Add sentiment-bearing phrases",
      "method": "post",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "33462a17-dcd4-4e6a-9f3b-ced4e304cbec",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a05b7603-894e-4f71-9ee7-040433b5d15f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "722496ec-e7b0-47ab-a473-9db6e9397376",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea9bfd24-8c64-42e8-a19d-0d41269fe0e6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b3f64bc-14b6-4fe9-b953-439e18553292",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5359ac7e-4dbf-4847-baca-51e16f963e89",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05c96076-00be-4ab8-969f-2feaa94a6eb6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "caaaddc0-2ea9-4537-b9cf-9cb65ddd66ca",
      "documentation": "Updates sentiment-bearing phrases",
      "method": "put",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "6b87b007-2328-4a82-8066-23796a6a1604",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "52c80993-d629-41fe-a7fb-18a25929b189",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aee3d1ea-355c-4cfc-867f-8368cb94117b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63b16c2b-f89e-428e-858d-fb82b96efa34",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41549b70-14a9-4435-87d0-0bf2bbb61ff8",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61d09834-063f-46ab-9fb0-4b2c21bd4f31",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f08d92d-902b-46a0-9ff5-6a2056d6925f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15a7a70a-98c8-4c99-856c-510ba3bb58ef",
      "documentation": "Remove queries",
      "method": "delete",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "a1f67ffd-adf6-4371-a3dd-5e19fa13997e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdcbbbea-2855-495f-8712-e53ad6db952d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc0ed703-bff0-4b51-a2c8-9d3eb15f375a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02f7ba91-1a23-47ba-aa2e-3cdb00742e08",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0d4b439-4c5d-46bd-a7b3-1f0ae5606c5f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6aa73df6-8d05-41ce-96f8-385e0b815288",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ab035c9-5ba3-4a9b-95ac-c0465905b35c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22a158a5-3e6d-41d8-8d1f-607fd63ed806",
      "documentation": "Retrieve queries",
      "method": "get",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "49b4d499-b0d7-4827-99b9-62e7926d6546",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the queries list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e39903c0-a60c-479c-b78d-50147b59dc1a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no queries found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "923b5211-6ac3-49e8-bffc-c07c3b08ceb2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e880c68-781a-4506-a653-fc8f4590126d",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc97b0a9-5f54-4d9e-ae88-bbb61407e12c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb427ce0-083a-4ae9-bafc-63e7d009a881",
      "documentation": "Add or update queries",
      "method": "post",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "f09d7f9c-1f08-41c6-a95d-ccb1b1f6e449",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc3337e4-f4d6-4a93-bf26-e55f27b9211b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d901f956-3c93-4d0a-9eda-23cb69432597",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca736903-497c-45a4-9acc-386996a5b3b4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a34c3b6-e4c1-495e-9e28-4fdc3151e70e",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3a6b620-f094-43e0-81eb-20898e0a9182",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e362334a-e11b-406d-afa0-a49b487d490c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "81b44485-481f-4b3a-ba23-6e32bb1c6642",
      "documentation": "Update queries",
      "method": "put",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "5252e819-de69-4ddc-93db-da6ed5cefaca",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9f1734e-4bec-4d0e-9ecc-8be5c1b9f2f1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3d51ce7-3b9f-46b0-a2c4-32ceae028ba0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6c50911-75e5-44c1-94f9-7b10e2f00e19",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7374c10a-418e-4530-a331-c52e99358756",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d5ed478-13ff-422f-8b3a-ebe8beb87e4d",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5d4529a-8a6b-4bad-8f77-95f754165f89",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7277651-2b4e-4f84-b4c2-b607c23157f2",
      "documentation": "Retrieve usage statistics",
      "method": "get",
      "endpoint": "statistics.:content_type",
      "responses": [
        {
          "uuid": "57a72024-0a05-48a7-bd3b-e1736a40f78d",
          "body": "{\n  \"calls_data\": {{faker 'datatype.number'}},\n  \"calls_polling\": {{faker 'datatype.number'}},\n  \"calls_settings\": {{faker 'datatype.number'}},\n  \"colls_documents\": {{faker 'datatype.number'}},\n  \"colls_failed\": {{faker 'datatype.number'}},\n  \"colls_processed\": {{faker 'datatype.number'}},\n  \"colls_responded\": {{faker 'datatype.number'}},\n  \"configurations\": [\n    {\n      \"calls_data\": {{faker 'datatype.number'}},\n      \"calls_polling\": {{faker 'datatype.number'}},\n      \"calls_settings\": {{faker 'datatype.number'}},\n      \"colls_failed\": {{faker 'datatype.number'}},\n      \"colls_processed\": {{faker 'datatype.number'}},\n      \"colls_responded\": {{faker 'datatype.number'}},\n      \"config_id\": \"\",\n      \"docs_failed\": {{faker 'datatype.number'}},\n      \"docs_processed\": {{faker 'datatype.number'}},\n      \"docs_responded\": {{faker 'datatype.number'}},\n      \"latest_used_app\": \"\",\n      \"name\": \"\",\n      \"overall_batches\": {{faker 'datatype.number'}},\n      \"overall_calls\": {{faker 'datatype.number'}},\n      \"overall_docs\": {{faker 'datatype.number'}},\n      \"overall_exceeded\": {{faker 'datatype.number'}},\n      \"overall_texts\": {{faker 'datatype.number'}},\n      \"overcall_colls\": {{faker 'datatype.number'}},\n      \"used_apps\": \"\"\n    }\n  ],\n  \"docs_failed\": {{faker 'datatype.number'}},\n  \"docs_processed\": {{faker 'datatype.number'}},\n  \"docs_responded\": {{faker 'datatype.number'}},\n  \"latest_used_app\": \"\",\n  \"name\": \"\",\n  \"overall_batches\": {{faker 'datatype.number'}},\n  \"overall_calls\": {{faker 'datatype.number'}},\n  \"overall_docs\": {{faker 'datatype.number'}},\n  \"overall_exceeded\": {{faker 'datatype.number'}},\n  \"overall_texts\": {{faker 'datatype.number'}},\n  \"overcall_colls\": {{faker 'datatype.number'}},\n  \"status\": \"\",\n  \"used_apps\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with statistics details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de4d135e-d6f5-4537-b36a-f06035d1cbe4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1edb3679-8a83-4ebd-b05f-775581b83179",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4884da0f-c396-471f-824d-79bd72aaf093",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "337c184a-8952-43cf-83f9-e71a8c94b9f1",
      "documentation": "Retrieve API status",
      "method": "get",
      "endpoint": "status.:content_type",
      "responses": [
        {
          "uuid": "e305869e-6444-4817-8cf0-5e846155f391",
          "body": "{\n  \"api_version\": \"\",\n  \"service_status\": \"{{oneOf (array 'available' 'pending' 'sold')}}\",\n  \"service_version\": \"\",\n  \"supported_compression\": \"\",\n  \"supported_encoding\": \"\",\n  \"supported_languages\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "241384bb-a0df-4acf-a693-67c271e52cca",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d315d456-fc22-4119-b27b-43b87a60e3b2",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be92473d-4f47-4989-a44c-94f78681ea07",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea0e8c3f-dc89-4d34-aaa5-181446d1446e",
      "documentation": "Retrieve subscription details",
      "method": "get",
      "endpoint": "subscription.:content_type",
      "responses": [
        {
          "uuid": "0f8714d2-2b98-4aa5-9fd7-7640e05a5f79",
          "body": "{\n  \"basic_settings\": {\n    \"auto_response_limit\": {{faker 'datatype.number'}},\n    \"batch_limit\": {{faker 'datatype.number'}},\n    \"blacklist_limit\": {{faker 'datatype.number'}},\n    \"callback_batch_limit\": {{faker 'datatype.number'}},\n    \"categories_limit\": {{faker 'datatype.number'}},\n    \"category_samples_limit\": {{faker 'datatype.number'}},\n    \"characters_limit\": {{faker 'datatype.number'}},\n    \"collection_limit\": {{faker 'datatype.number'}},\n    \"configurations_limit\": {{faker 'datatype.number'}},\n    \"entities_limit\": {{faker 'datatype.number'}},\n    \"output_data_limit\": {{faker 'datatype.number'}},\n    \"processed_batch_limit\": {{faker 'datatype.number'}},\n    \"queries_limit\": {{faker 'datatype.number'}},\n    \"return_source_text\": {{faker 'datatype.boolean'}},\n    \"sentiment_limit\": {{faker 'datatype.number'}}\n  },\n  \"billing_settings\": {\n    \"app_seats_allocated\": {{faker 'datatype.number'}},\n    \"app_seats_permitted\": {{faker 'datatype.number'}},\n    \"data_calls_balance\": {{faker 'datatype.number'}},\n    \"data_calls_limit\": {{faker 'datatype.number'}},\n    \"data_calls_limit_interval\": {{faker 'datatype.number'}},\n    \"docs_balance\": {{faker 'datatype.number'}},\n    \"docs_limit\": {{faker 'datatype.number'}},\n    \"docs_limit_interval\": {{faker 'datatype.number'}},\n    \"docs_suggested\": {{faker 'datatype.number'}},\n    \"docs_suggested_interval\": {{faker 'datatype.number'}},\n    \"expiration_date\": \"\",\n    \"limit_type\": \"\",\n    \"polling_calls_balance\": {{faker 'datatype.number'}},\n    \"polling_calls_limit\": {{faker 'datatype.number'}},\n    \"polling_calls_limit_interval\": {{faker 'datatype.number'}},\n    \"priority\": \"\",\n    \"settings_calls_balance\": {{faker 'datatype.number'}},\n    \"settings_calls_limit\": {{faker 'datatype.number'}},\n    \"settings_calls_limit_interval\": {{faker 'datatype.number'}}\n  },\n  \"feature_settings\": {\n    \"collection\": {\n      \"concept_topics\": {{faker 'datatype.boolean'}},\n      \"facets\": {{faker 'datatype.boolean'}},\n      \"mentions\": {{faker 'datatype.boolean'}},\n      \"named_entities\": {{faker 'datatype.boolean'}},\n      \"query_topics\": {{faker 'datatype.boolean'}},\n      \"themes\": {{faker 'datatype.boolean'}},\n      \"user_entities\": {{faker 'datatype.boolean'}}\n    },\n    \"document\": {\n      \"auto_categories\": {{faker 'datatype.boolean'}},\n      \"concept_topics\": {{faker 'datatype.boolean'}},\n      \"entity_themes\": {{faker 'datatype.boolean'}},\n      \"intentions\": {{faker 'datatype.boolean'}},\n      \"language_detection\": {{faker 'datatype.boolean'}},\n      \"mentions\": {{faker 'datatype.boolean'}},\n      \"model_sentiment\": {{faker 'datatype.boolean'}},\n      \"named_entities\": {{faker 'datatype.boolean'}},\n      \"named_relations\": {{faker 'datatype.boolean'}},\n      \"opinions\": {{faker 'datatype.boolean'}},\n      \"phrases_detection\": {{faker 'datatype.boolean'}},\n      \"pos_tagging\": {{faker 'datatype.boolean'}},\n      \"query_topics\": {{faker 'datatype.boolean'}},\n      \"sentiment_phrases\": {{faker 'datatype.boolean'}},\n      \"summary\": {{faker 'datatype.boolean'}},\n      \"themes\": {{faker 'datatype.boolean'}},\n      \"user_entities\": {{faker 'datatype.boolean'}},\n      \"user_relations\": {{faker 'datatype.boolean'}}\n    },\n    \"html_processing\": {{faker 'datatype.boolean'}},\n    \"supported_languages\": \"\",\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"name\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c9d2cdb-ca7c-4b31-9a67-0b59468375fd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4fcc6e8-8d8b-4db6-a07e-11279f6e032f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39370939-f1de-43b9-8482-28e05bb0d667",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd4847c2-0852-49e8-9400-4eaa17bb7398",
      "documentation": "Remove taxonomy nodes",
      "method": "delete",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "b3f79e3e-830b-4ffe-9c4b-fd7aea3f09eb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51fbf987-f471-4d33-a968-5a58062e9f54",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0ca9b33-9a2d-4830-bbab-bef04ec4ce71",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72a6b1cc-1a84-45bb-b6ce-75605aeda5c6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18f88de8-443c-4e9b-b54a-825d62ddfe34",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa310901-757f-457b-a6d7-bdcf7d63a124",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f85ef2d-7db0-4400-8caf-efb12af97e7a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09b7b656-9741-461a-8fd7-478922f66f03",
      "documentation": "Retrieve taxonomy",
      "method": "get",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "42bb7696-fd98-45f7-b5eb-0d593d22fdc1",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the taxonomy list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "db136f64-9b39-49b6-9e47-f4c336d2993a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no taxonomy found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0cf448f-f078-4a4f-b5a0-7d37c56bb9b7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c49d72b-61f3-4c5e-ba85-bfd56097c636",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94ed6e18-d825-459c-bc15-bdb857423a8b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea1a1b18-484d-4a95-b2a5-6521a787341b",
      "documentation": "Add taxonomy nodes",
      "method": "post",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "e2e0ea96-daf9-4989-a24b-169225a23916",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22748170-157c-4046-b913-a9151aa36cf0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f65f315-9ef3-4c5e-b31e-c736f7d37ad7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "360cdf7a-c192-420f-b5e4-24287ee5aae7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13d044a5-62cb-4baa-bca8-dfb2621ea9ae",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e34ad57-f29e-46ae-a01c-4420be0715d4",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0342712d-5299-400b-8fbf-02e59c90a9f1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50d4f081-d0e8-4b0b-b16a-686db8b7d90d",
      "documentation": "Update taxonomy nodes",
      "method": "put",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "89bf17d4-0eeb-49fa-ba69-1ee128818862",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a56a59f4-81e7-44d1-919e-a24cbd0bba0e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c92f15ed-a539-4800-9def-237201513c7c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a465d54-890c-4e4f-9fb2-df89c52f5ef3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4a22bc6-3593-4256-822a-d1e2e31d7ad7",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60ae0f95-a9a3-4ee9-99e0-619645a8f36a",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4c4402d-72f9-4e9f-adb8-aed3d9c247f4",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}