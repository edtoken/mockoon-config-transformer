{
  "uuid": "663b285c-63ec-4142-8bee-dfaf5b8eb5cf",
  "lastMigration": 24,
  "name": "Azure Bot Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "df83e4cb-1495-46b4-b273-d75804207b51",
      "documentation": "Check whether an Enterprise Channel name is available.",
      "method": "post",
      "endpoint": "providers/Microsoft.BotService/checkEnterpriseChannelNameAvailability",
      "responses": [
        {
          "uuid": "f0b9b0d8-34b0-4f46-9ceb-09ed03e3972b",
          "body": "{\n  \"message\": \"\",\n  \"valid\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eeed35fd-b97f-419e-bc20-d72283c5bd1b",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1990d41a-c86a-4d8c-867d-871999f15694",
      "documentation": "Check whether a bot name is available.",
      "method": "post",
      "endpoint": "providers/Microsoft.BotService/checkNameAvailability",
      "responses": [
        {
          "uuid": "aa3d5677-bb54-4b2b-bbcd-6ee00d3cdf6f",
          "body": "{\n  \"message\": \"\",\n  \"valid\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4686c3b6-bfc9-4e9c-abca-992d79b86ec9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2dd5797c-a7ec-40e9-a84a-cb95b339ded7",
      "documentation": "Lists all the available BotService operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.BotService/operations",
      "responses": [
        {
          "uuid": "5984a3a3-23d2-467c-8c89-97fe31d42a9f",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\",\n      \"properties\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d394c9d4-b5a8-4dd7-a50f-2d555d763385",
      "documentation": "Returns all the resources of a particular type belonging to a subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.BotService/botServices",
      "responses": [
        {
          "uuid": "c725114f-fdec-4306-bc12-a7cddf5b8ab6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"sku\": {\n        \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n        \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e257525-2d69-4093-b340-3d0295796ae3",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5dda0b7e-5dce-4186-9f16-b1975f088af1",
      "documentation": "Lists the available Service Providers for creating Connection Settings",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.BotService/listAuthServiceProviders",
      "responses": [
        {
          "uuid": "ce0e4866-c5f4-4cd3-b420-44753dea3483",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"properties\": {\n        \"devPortalUrl\": \"\",\n        \"displayName\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"parameters\": [\n          {\n            \"default\": \"\",\n            \"description\": \"\",\n            \"displayName\": \"\",\n            \"helpUrl\": \"\",\n            \"name\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"serviceProviderName\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is retrieved successfully, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65161702-984d-4724-b3ba-b25933cb7031",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddd2243e-4478-45f3-806c-591782a8adbd",
      "documentation": "Returns all the resources of a particular type belonging to a resource group",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices",
      "responses": [
        {
          "uuid": "a4c3b5e2-0c19-405f-bbeb-496d15fd21f6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"sku\": {\n        \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n        \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "98231b48-0b1c-4e21-b4a7-bac5e628f47e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "28f9f0dd-bf38-4f43-a32c-7688246e6d8c",
      "documentation": "Deletes a Bot Service from the resource group. ",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName",
      "responses": [
        {
          "uuid": "820dfbf9-bc83-4fd0-9b6b-a9b9ebcef963",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A 200 (OK) should be returned if the object exists and was deleted successfully;",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6bccf369-1a6a-4871-b447-267701b54966",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38c24ed3-1e86-479c-b933-aefc49c6ecd9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e004c7f-d9ab-4f22-928e-f276de7732a8",
      "documentation": "Returns a BotService specified by the parameters.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName",
      "responses": [
        {
          "uuid": "7f258a6e-56bc-4783-8e66-5d2a0717cfd2",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9d3cf988-b1e5-47c2-b19a-cacd52a66362",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c81374a-8c85-4eda-aae1-d3884d9cd2e0",
      "documentation": "Updates a Bot Service",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName",
      "responses": [
        {
          "uuid": "567666c0-fa8a-4aaf-bf87-a9f603b48afc",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "121edcbf-5766-4350-b47d-13f80f3b52a9",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d313975-0881-4b69-9d69-8cc6d7d9fd7f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07b3cfaa-8762-4a8a-914b-8226520d8363",
      "documentation": "Creates a Bot Service. Bot Service is a resource group wide resource type.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName",
      "responses": [
        {
          "uuid": "cf1bb37e-8ed1-4568-b098-226b0d0a2325",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e90a03c-73a1-43ba-b574-9f7696cb4ce9",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85fa9cc7-4b41-414d-884a-781a19d565eb",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36258498-b724-4f6a-a9b9-fd8886699a46",
      "documentation": "Deletes a Connection Setting registration for a Bot Service",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/Connections/:connectionName",
      "responses": [
        {
          "uuid": "841209d0-94c9-447a-8245-d3bad46bab54",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A 200 (OK) should be returned if the object exists and was deleted successfully;",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ebaceaa-b0cc-4c5c-8ff6-d011d5b7666c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c7fa397c-9f05-457b-bccc-68ff746c29cc",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2017673-b341-40db-ac8e-2b4f86925e5c",
      "documentation": "Get a Connection Setting registration for a Bot Service",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/Connections/:connectionName",
      "responses": [
        {
          "uuid": "7ea12c16-97cf-4017-bf6f-a6cd7aef6eb5",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a90587cf-87ea-455f-b61c-227ec5428249",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83ae70b6-1cb4-4aee-bb96-a0f46838e271",
      "documentation": "Updates a Connection Setting registration for a Bot Service",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/Connections/:connectionName",
      "responses": [
        {
          "uuid": "3346e73a-0ae8-46ef-85e1-28c9bc2e10ed",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c95f8ae1-90dd-45db-933c-41b1ef3ee714",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc046388-9bb3-45ff-a6d2-02d495fea480",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03e4e3f7-a495-4b9a-b090-af4fdac2af05",
      "documentation": "Register a new Auth Connection for a Bot Service",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/Connections/:connectionName",
      "responses": [
        {
          "uuid": "bc7d266a-fc9f-4865-be53-1daf241fad07",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2dbd93a7-bb58-47fc-ae6b-7d0d38cef0df",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80f26ad2-8ac5-4df5-a1fd-a5287018e449",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3b0b8d3-0f5b-452f-bdb8-746c40f62956",
      "documentation": "Get a Connection Setting registration for a Bot Service",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/Connections/:connectionName/listWithSecrets",
      "responses": [
        {
          "uuid": "f0a2f8b7-5233-49ab-bc6d-8f826830dab5",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad724dd3-f9b3-4bf7-8a8e-563c442877b4",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e6b942b-1705-48a4-888f-80351674b9c8",
      "documentation": "Returns all the Channel registrations of a particular BotService resource",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels",
      "responses": [
        {
          "uuid": "6490881a-62fe-463d-9c75-d799eb3f05db",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"sku\": {\n        \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n        \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "291e39bd-8e3a-4494-84f5-2ed1c3e56f12",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bdee6a07-5895-40c8-9592-93a6e82ba786",
      "documentation": "Deletes a Channel registration from a Bot Service",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels/:channelName",
      "responses": [
        {
          "uuid": "5dc2dc64-3ba6-4c16-849d-c83c7eb272e6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A 200 (OK) should be returned if the object exists and was deleted successfully;",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5156ee35-2083-462f-b852-713018cb73ed",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "446cbd1d-b236-44c7-ba17-6dd58cbb1e84",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54d2ae42-c9a3-4774-99c0-afe12c7d4bba",
      "documentation": "Returns a BotService Channel registration specified by the parameters.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels/:channelName",
      "responses": [
        {
          "uuid": "d4054532-29ec-44c3-9654-805a8b76aed2",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "963395c7-0f1b-4aaf-ae62-506d74dcad1d",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd597053-b014-47fb-8b59-65595fe03fa3",
      "documentation": "Updates a Channel registration for a Bot Service",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels/:channelName",
      "responses": [
        {
          "uuid": "5c3d8296-94a4-4e63-9789-b25fb4b29bd2",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad4bc6f0-7b4d-4fe0-8dbb-c3068dc9dd23",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01835b9b-6179-4b95-83b3-16aef2c11e15",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "839e3e3d-f139-4222-bfca-a8d328aad63a",
      "documentation": "Creates a Channel registration for a Bot Service",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels/:channelName",
      "responses": [
        {
          "uuid": "0e1f4440-7f76-4d5d-9339-64254db9fffd",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "66b5889e-8823-4728-a728-d894754fee2f",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4c499d0-d76e-411a-830d-bd866cd7b7f9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "735545d6-802f-44c0-81ab-573446387de1",
      "documentation": "Lists a Channel registration for a Bot Service including secrets",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/channels/:channelName/listChannelWithKeys",
      "responses": [
        {
          "uuid": "489dc9fc-0e2c-4ed6-896b-ab7dbba57880",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is retrieved successfully, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3beb71e-47d1-43cd-9965-d4e027ea8647",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb6ce868-3fd4-4435-a129-d45e77573164",
      "documentation": "Returns all the Connection Settings registered to a particular BotService resource",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/botServices/:resourceName/connections",
      "responses": [
        {
          "uuid": "0995ff2d-5f0d-4a05-a4a4-635ec0566ab3",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"sku\": {\n        \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n        \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c1d5587-0e72-47f9-93cd-9e4eb77d29dd",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51b82667-05db-48be-ba54-e668f376f9ca",
      "documentation": "Returns all the resources of a particular type belonging to a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/enterpriseChannels",
      "responses": [
        {
          "uuid": "f2b9e74e-f3d1-4531-87b2-017e4d21864b",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"sku\": {\n        \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n        \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0d9c3c8-9d85-4a9b-abfb-41e7d90b948e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99daf457-4e99-4928-b778-7c365d4ea953",
      "documentation": "Deletes an Enterprise Channel from the resource group",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/enterpriseChannels/:resourceName",
      "responses": [
        {
          "uuid": "1183dd48-238b-4a65-903d-5f5a8182db5a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A 200 (OK) should be returned if the object exists and was deleted successfully;",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6508ed05-68e0-4473-be61-c7d826431dec",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49124752-4820-4a2b-9305-8ec068ee3c62",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3412415d-514d-4881-a7c8-879940bbea4a",
      "documentation": "Returns an Enterprise Channel specified by the parameters.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/enterpriseChannels/:resourceName",
      "responses": [
        {
          "uuid": "87473fc2-c2f1-419d-b999-d1737c15ed03",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45f20333-b1c7-4daf-9b9c-c293138a2a90",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ccc8c616-3e06-4ede-9299-4375174a6638",
      "documentation": "Updates an Enterprise Channel.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/enterpriseChannels/:resourceName",
      "responses": [
        {
          "uuid": "abc79d46-f23e-4d9b-86b0-be325db81e68",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d379eeb-3ea0-4513-b866-c16374b04d22",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ca95154-70eb-4068-b5e0-953a1c253e94",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e5009b3-219e-4663-a4a3-f7a5a027db03",
      "documentation": "Creates an Enterprise Channel.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.BotService/enterpriseChannels/:resourceName",
      "responses": [
        {
          "uuid": "ef2967aa-7493-41fb-ade3-ccb3aac0d0ae",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If resource is created successfully or already existed, the service should return 200 (OK).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d0d3ef2-9580-48b2-b0c7-15ef41ce0120",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'sdk' 'designer' 'bot' 'function')}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"sku\": {\n    \"name\": \"{{oneOf (array 'F0' 'S1')}}\",\n    \"tier\": \"{{oneOf (array 'Free' 'Standard')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e58989a-7632-4f65-9a39-f0d1c046913f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}