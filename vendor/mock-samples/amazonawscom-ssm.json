{
  "uuid": "65aa9f84-ae4b-400f-8585-657b2c52fa5b",
  "lastMigration": 24,
  "name": "Amazon Simple Systems Manager (SSM)",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fd32208b-6db6-4962-8c10-bfee37636799",
      "documentation": "<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, maintenance windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account's managed instances that helps you track each instance's owner and stack level. For example:</p> <ul> <li> <p> <code>Key=Owner,Value=DbAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=SysAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=Dev</code> </p> </li> <li> <p> <code>Key=Stack,Value=Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Pre-Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Test</code> </p> </li> </ul> <p>Each resource can have a maximum of 50 tags.</p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don't have any semantic meaning to and are interpreted strictly as a string of characters. </p> <p>For more information about using tags with Amazon Elastic Compute Cloud (Amazon EC2) instances, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging your Amazon EC2 resources</a> in the <i>Amazon EC2 User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AddTagsToResource",
      "responses": [
        {
          "uuid": "9f0e3988-f42f-41fc-8b64-b3b7f94706b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff847bcc-c47e-4b2c-9f2a-0ccbe3e1ad9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6cd2b1a0-fa49-4459-bbbd-6f0f04ab4ffc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b968a00-cde7-478d-b5b9-8b3f555e7b4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2af4c99e-4dd3-43f5-9e45-38986cb0693c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyTagsError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "842c27cf-6535-4fde-b64c-e3689ac623eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00437a08-dbb5-48ee-9f63-10db53da4690",
      "documentation": "Associates a related resource to a Systems Manager OpsCenter OpsItem. For example, you can associate an Incident Manager incident or analysis with an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AssociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "d71c4d4f-1ede-4561-a2ac-8dd6b52988ec",
          "body": "{\n  \"AssociationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a67dc75-9b73-425a-9398-125e9864d03c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e93221d9-2d68-4aed-bea2-cb6c12e1b73e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a87bda8f-44a7-41e6-b85c-92ce606369ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba8508a1-10f6-49a9-a8c9-02bac1caaa54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a38488c0-ce5a-4cf3-a13a-ee13e8899872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemRelatedItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76a68a56-f7e5-442e-82b8-13bd529a2ba7",
      "documentation": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelCommand",
      "responses": [
        {
          "uuid": "722d2652-e352-4a42-b8d2-16f9fcea5924",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "54f4b291-c35b-488c-90c5-926b5ba96c7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49bef097-07db-4c97-8b26-9123aec20486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6897903-cee8-482d-a5ae-5792d03ee793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11c17b32-dbb0-4151-96d1-5583c392c067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "674b03a1-7003-4207-a524-c698d515e9af",
      "documentation": "Stops a maintenance window execution that is already in progress and cancels any tasks in the window that haven't already starting running. Tasks already in progress will continue to completion.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "636abfae-9415-4216-8417-1281d1b11619",
          "body": "{\n  \"WindowExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ded961dc-d318-4655-9f85-3a0f319fde70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7669b656-f548-4db7-845e-31c8d938ea6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "988ad6b3-33fa-43a9-80cb-78da927dd531",
      "documentation": "<p>Generates an activation code and activation ID you can use to register your on-premises server or virtual machine (VM) with Amazon Web Services Systems Manager. Registering these machines with Systems Manager makes it possible to manage them using Systems Manager capabilities. You use the activation code and ID when installing SSM Agent on machines in your hybrid environment. For more information about requirements for managing on-premises instances and VMs using Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting up Amazon Web Services Systems Manager for hybrid environments</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note> <p>On-premises servers or VMs that are registered with Systems Manager and Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage with Systems Manager are all called <i>managed instances</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateActivation",
      "responses": [
        {
          "uuid": "cf7fb241-2c75-4285-8c50-c4668450668c",
          "body": "{\n  \"ActivationId\": \"\",\n  \"ActivationCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df509c95-371c-4eae-9e6b-f26f0c683b44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8e24bbdd-043f-4d9a-bd51-0830753a3819",
      "documentation": "A State Manager association defines the state that you want to maintain on your instances. For example, an association can specify that anti-virus software must be installed and running on your instances, or that certain ports must be closed. For static targets, the association specifies a schedule for when the configuration is reapplied. For dynamic targets, such as an Amazon Web Services resource group or an Amazon Web Services autoscaling group, State Manager, a capability of Amazon Web Services Systems Manager applies the configuration when new instances are added to the group. The association also specifies actions to take when applying the configuration. For example, an association for anti-virus software might run once a day. If the software isn't installed, then State Manager installs it. If the software is installed, but the service isn't running, then the association might instruct State Manager to start the service. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociation",
      "responses": [
        {
          "uuid": "bad9746d-4de7-4bd5-ab84-85c3f2d461a6",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "66838d80-bc4d-4188-9574-4e31b6a268dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61bb5bab-82ea-4b44-8b47-7b79854f49c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1f7e57c-ac93-4951-9ddb-2a1a77c1e72a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c038e419-00f9-42d6-88e0-850f4990ca16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d84e9ac-4816-4c97-b3f2-efff9672b7e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c4e3862-9f8e-4ace-8d54-05cd6a25153e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1f4f255-bb4c-49a8-a2df-a9e03404b904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc76ee9f-cb6e-4524-9aca-30e6f6787ae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e567dee-7c95-4c7e-a9ca-56a1a67634ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d90aeb0e-dc7c-4563-84e5-435844f957ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75365ed2-1159-4fe8-a6ba-57b5350dd7a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c2ad97b-8461-4db2-b252-4b69c5f4234a",
      "documentation": "<p>Associates the specified Amazon Web Services Systems Manager document (SSM document) with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, Amazon Web Services Systems Manager Agent (SSM Agent) running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociationBatch",
      "responses": [
        {
          "uuid": "6e3380fa-89c5-41e8-806c-4978ea7d20e2",
          "body": "{\n  \"Successful\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": {\n        \"Date\": \"{{faker 'date.recent' 365}}\",\n        \"Name\": \"\",\n        \"Message\": \"\",\n        \"AdditionalInfo\": \"\"\n      },\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"DocumentVersion\": \"\",\n      \"AutomationTargetParameterName\": \"\",\n      \"Parameters\": {},\n      \"AssociationId\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"Failed\": [\n    {\n      \"Entry\": {\n        \"Name\": \"\",\n        \"InstanceId\": \"\",\n        \"Parameters\": {},\n        \"AutomationTargetParameterName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"ScheduleExpression\": \"\",\n        \"OutputLocation\": {\n          \"S3Location\": {\n            \"OutputS3Region\": \"\",\n            \"OutputS3BucketName\": \"\",\n            \"OutputS3KeyPrefix\": \"\"\n          }\n        },\n        \"AssociationName\": \"\",\n        \"MaxErrors\": \"\",\n        \"MaxConcurrency\": \"\",\n        \"ComplianceSeverity\": \"\",\n        \"SyncCompliance\": \"\",\n        \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n        \"CalendarNames\": [\n          \"\"\n        ],\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      },\n      \"Message\": \"\",\n      \"Fault\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a404946a-a06a-4cb4-890d-dc6c98da9671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b989d21b-4c35-40df-91b4-18c7e38e15d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42b51bbe-e189-4faa-b7f8-3e1b6143938b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "067fbb58-3917-47f0-99b8-c9b290672d45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c1366fa-0792-4cc5-81c2-10c783549ce8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2289ae80-d3ed-4c19-adc9-03ca58b88953",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0f08b9c-4979-4a2b-8082-9f43edc462d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bccba5c9-026a-47ec-832d-acde861eb140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c44e4af5-60b3-459a-8e2e-2fdb8fb4ccf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8901736-4681-40bb-9eb4-3651f148143e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a596c6a-91a2-4116-bb57-edac50a54077",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b2ef0fe-3321-4a60-a5ef-0e6f01894428",
      "documentation": "Creates a Amazon Web Services Systems Manager (SSM document). An SSM document defines the actions that Systems Manager performs on your managed instances. For more information about SSM documents, including information about supported schemas, features, and syntax, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\">Amazon Web Services Systems Manager Documents</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateDocument",
      "responses": [
        {
          "uuid": "cbbdf3fc-84cf-42b1-8bd3-adbf1009a9aa",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f1b37104-e531-4b9d-92a0-9801a382a753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DocumentAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75d3d631-943a-4a8c-99ac-4d9b81d32aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6692a27-2bc4-441d-a409-f05d21d7617e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "531fd142-64d2-450a-8df0-3abef3177ddc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51295081-3a52-4c5b-b402-1049957506ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88a1a9c8-5f8b-404c-b243-39dbd6a1d3cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18d3258a-5296-4986-a9ba-d20cc27ebbee",
      "documentation": "<p>Creates a new maintenance window.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow",
      "responses": [
        {
          "uuid": "f1b3b7a8-c4b2-47e1-a237-c69034165777",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e11a7fe6-6d57-44be-8a6c-52620b160184",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a16f185b-fef6-468b-a909-1938f132109a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91407563-aa36-4e5b-9fc6-28d702e8d963",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e79d0a3-6958-4845-a811-a33fca665455",
      "documentation": "<p>Creates a new OpsItem. You must have permission in Identity and Access Management (IAM) to create a new OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">Amazon Web Services Systems Manager OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsItem",
      "responses": [
        {
          "uuid": "0fecf92a-171f-4e07-a7c9-df2644c63728",
          "body": "{\n  \"OpsItemId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a876a6f3-79dc-4ec3-864a-f8bdb2a6002a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce6b610a-40a5-4e5c-8e82-40ffa1cd8212",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d69b8678-8cf1-4254-a338-801b5c36e317",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6dacc624-14ea-4818-8cd0-b895a02f735a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2fded078-64e7-40c3-89fc-e4b8432d84f8",
      "documentation": "If you create a new application in Application Manager, Amazon Web Services Systems Manager calls this API operation to specify information about the new application, including the application type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsMetadata",
      "responses": [
        {
          "uuid": "e777bd1c-c527-4c77-b0b0-5393a139c0b3",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dec28136-7ccf-469e-90eb-167a1d342c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b709c589-4c42-42b2-9f1b-9751f7aad426",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d0b1265-ce06-47cf-bf57-ffe467ff9a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d9b80dc-9662-4684-8002-68ed22c705cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c820531c-a97e-4776-a338-52feada1d624",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00cbc1f9-a78b-4c93-997f-be32c2a479d7",
      "documentation": "<p>Creates a patch baseline.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreatePatchBaseline",
      "responses": [
        {
          "uuid": "35444cd4-b570-46dc-a745-4ca76ce55910",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e23a90b-0f97-4fe8-ab39-52324d2bb10b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f2a28ab-7f63-438c-ae4d-250ee39e9879",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05497f2a-0280-4476-87a5-35a689569ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4045b32-2827-4dad-8d43-0bffc410c109",
      "documentation": "<p>A resource data sync helps you view data from multiple sources in a single location. Amazon Web Services Systems Manager offers two types of resource data sync: <code>SyncToDestination</code> and <code>SyncFromSource</code>.</p> <p>You can configure Systems Manager Inventory to use the <code>SyncToDestination</code> type to synchronize Inventory data from multiple Amazon Web Services Regions to a single Amazon Simple Storage Service (Amazon S3) bucket. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\">Configuring resource data sync for Inventory</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>You can configure Systems Manager Explorer to use the <code>SyncFromSource</code> type to synchronize operational work items (OpsItems) and operational data (OpsData) from multiple Amazon Web Services Regions to a single Amazon S3 bucket. This type can synchronize OpsItems and OpsData from multiple Amazon Web Services accounts and Amazon Web Services Regions or <code>EntireOrganization</code> by using Organizations. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html\">Setting up Systems Manager Explorer to display data from multiple accounts and Regions</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>A resource data sync is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data. To check the status of a sync, use the <a>ListResourceDataSync</a>.</p> <note> <p>By default, data isn't encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateResourceDataSync",
      "responses": [
        {
          "uuid": "102ec161-4520-411b-9109-2646668ab3fc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "922ad954-2112-44f3-be9a-3dc34d9be77e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "956c6005-b63f-4219-be67-f2135b7de9b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncCountExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df61fba1-da60-4019-a463-993eb9f4da1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8b12324-6591-4e2a-b0aa-033c8ced7d2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2331adb1-001c-43ca-b108-77b0355a7f9a",
      "documentation": "Deletes an activation. You aren't required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation doesn't de-register managed instances. You must manually de-register managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteActivation",
      "responses": [
        {
          "uuid": "770dd5eb-ec09-4d6e-8921-5285944771df",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c46ce3bd-6ccd-4c95-82b1-700244633850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidActivationId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64cce016-f0f5-4178-a983-c97b6c2269de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidActivation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81cfe1b6-3a1f-41cc-a717-e35e97008a52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97800dca-b22d-4c82-b25c-18a8e5d583c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8f5d5bc-74da-459a-ba82-e7b3140544d1",
      "documentation": "<p>Disassociates the specified Amazon Web Services Systems Manager document (SSM document) from the specified instance. If you created the association by using the <code>Targets</code> parameter, then you must delete the association by using the association ID.</p> <p>When you disassociate a document from an instance, it doesn't change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteAssociation",
      "responses": [
        {
          "uuid": "a036b276-0e60-4cd6-a8db-72aeae5f5fcb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6eb7f2b9-7628-431e-8615-708fd8505c6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6dd50c22-a637-4bcd-9206-d1a2d69b14bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8bd5460-630d-4f8f-ad14-f4fd0492bc9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfc564f1-4e07-4142-b4b6-aa63477e3ded",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16bb7200-4e91-4503-864e-0851b22f395d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "347c41a9-12f4-449e-ad0d-fe774243b9e0",
      "documentation": "<p>Deletes the Amazon Web Services Systems Manager document (SSM document) and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteDocument",
      "responses": [
        {
          "uuid": "61c77786-1f0a-461d-8f09-fc1b1a6a12f7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c937a59c-916f-44b2-8823-66a73a34d4e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "afa015b1-7a31-46ea-8430-bf2f793d7a22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a59f1daa-e006-4d29-b799-81a7e1ef586e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c239eaf-f454-4b4f-9f4a-b5fc1e243bef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociatedInstances",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4bb8d947-e107-42bc-8d68-837e8d2d3a1d",
      "documentation": "Delete a custom inventory type or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteInventory",
      "responses": [
        {
          "uuid": "bc2249ba-5094-4c92-9ded-d4c0cfc271cb",
          "body": "{\n  \"DeletionId\": \"\",\n  \"TypeName\": \"\",\n  \"DeletionSummary\": {\n    \"TotalCount\": {{faker 'datatype.number'}},\n    \"RemainingCount\": {{faker 'datatype.number'}},\n    \"SummaryItems\": [\n      {\n        \"Version\": \"\",\n        \"Count\": {{faker 'datatype.number'}},\n        \"RemainingCount\": {{faker 'datatype.number'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d89fa199-fc9d-4f6d-8da3-c602bf7a0fe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63236f68-5686-4fa3-9b8f-40af36a60774",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5da1e68-130f-41de-852c-35007477b495",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94481142-44b8-4223-93f2-294fd1f082b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDeleteInventoryParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffc01dc7-b7ec-4593-8d73-e98859ef0510",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInventoryRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87cbb8a7-30b9-479e-94a7-4392064bf4dc",
      "documentation": "Deletes a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow",
      "responses": [
        {
          "uuid": "3b98ea02-64ae-490a-ab2c-fe254a407a23",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eccc1e33-22c4-4472-970e-7f25f65c8be5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b374fed-4324-4d7e-84be-25821fb5ba27",
      "documentation": "Delete OpsMetadata related to an application.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteOpsMetadata",
      "responses": [
        {
          "uuid": "f0a9bec0-1f42-40fd-a555-68da832be4fa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9041484-7b5a-42bc-8046-ec5b9f1ef069",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a89ba91-1399-407a-8453-411d6a73fb46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ac13e11-a5b3-450f-b8cd-d09055238688",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bcfa5d8d-1fbb-41e1-91a8-a6e437f58617",
      "documentation": "Delete a parameter from the system. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameter",
      "responses": [
        {
          "uuid": "c4a9c4c3-5032-4719-ae74-79edcabe337d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8bb820de-0652-4b89-8dc2-3ba822f888e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0cfdad6-8a8e-4103-ac75-5a259bae05a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee4ac06b-a651-4f6f-a0ad-e2b4c4702a1f",
      "documentation": "Delete a list of parameters. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameters",
      "responses": [
        {
          "uuid": "1f4c55e4-c189-49bb-b5ba-6d385b5f35cb",
          "body": "{\n  \"DeletedParameters\": [\n    \"\"\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8cfa44b4-4c2d-45de-aa4f-5648f95b61cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d6d00d8-d429-474b-8deb-c8590f49a025",
      "documentation": "Deletes a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeletePatchBaseline",
      "responses": [
        {
          "uuid": "17b4b791-30bc-4779-bc47-e1ff86be20f5",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed910706-71e6-4e9a-9eed-fc5775c5da50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a70ee227-b67f-47fc-a0bf-534109e42fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5136dfa0-9a0b-4b22-979a-2c3c30cd8552",
      "documentation": "Deletes a resource data sync configuration. After the configuration is deleted, changes to data on managed instances are no longer synced to or from the target. Deleting a sync configuration doesn't delete data.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteResourceDataSync",
      "responses": [
        {
          "uuid": "57e975d5-58b8-475d-acea-9e0ce740a2f1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "97d4bbf9-3c82-4577-8310-f8aee376a492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bfbf8a5-fde1-4c76-9e95-4130bb467c18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "782a57d9-18f9-4d36-98e1-7e13da2df5da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "302ce17a-20b8-4920-bada-0985aa410592",
      "documentation": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterManagedInstance",
      "responses": [
        {
          "uuid": "0c682e9a-9610-46a6-8481-7536361559c3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c99db231-b3af-4f9d-8b42-e846a2661514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "646fa26e-dd06-4510-978e-0835fa51332c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59d41fe2-ce2e-4c90-b6a5-a6aadbd46307",
      "documentation": "Removes a patch group from a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "e6378d47-ddd3-4b08-b0fc-1187dd04fa1c",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8757e001-7c02-4037-9c34-0497e2343e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9020856a-2940-435d-a77e-8289b7c83797",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a77148f0-d33d-47dd-b489-fbbdd287e952",
      "documentation": "Removes a target from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "06340c0a-499c-4b81-a89f-9fd0603d7bf4",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b2e219c1-08ef-4649-b7a7-67e10cb431f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe7758b2-563d-42e3-b917-740a3a169c72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ab9f55c-8550-495e-9250-868fcf42e79e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TargetInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "332cb824-9ad6-482b-bdb3-2dbaab0997bb",
      "documentation": "Removes a task from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "46b5e620-2cdb-481a-8be5-360c9683c782",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8f1e932-85a9-438e-98b2-905bfea645a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d159f68-63a9-425b-b3e2-cdc51cda11dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0384ee40-b199-496f-ac25-688c9f61e24a",
      "documentation": "Describes details about the activation, such as the date and time the activation was created, its expiration date, the Identity and Access Management (IAM) role assigned to the instances in the activation, and the number of instances registered by using this activation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeActivations",
      "responses": [
        {
          "uuid": "be58af13-51b6-465a-bd35-792a7b03b457",
          "body": "{\n  \"ActivationList\": [\n    {\n      \"ActivationId\": \"\",\n      \"Description\": \"\",\n      \"DefaultInstanceName\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationLimit\": {{faker 'datatype.number'}},\n      \"RegistrationsCount\": {{faker 'datatype.number'}},\n      \"ExpirationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Expired\": {{faker 'datatype.boolean'}},\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e21e75f-3389-4c6e-bf8f-5a936b101ae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e875833f-a302-42e0-ae17-ec9752472ff9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1b1ea2b-b302-4bf4-93ba-2dc84b1e8b06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "caca5685-eb72-4893-8064-dcbe09106472",
      "documentation": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociation",
      "responses": [
        {
          "uuid": "fcb70337-1b63-4f7e-8487-d09793a60544",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d40883d6-fe80-4bb7-8cbb-a3d02489935a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9862ef0d-3922-4130-bd31-67755889d586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66ed6e4c-6fa3-49c5-93e3-feaf42201ada",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0fa3180a-7a26-4083-8b24-ef4b41dfb7ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7304ce1-056f-49b7-9816-915599d0f534",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c7fcb27-34b0-4a04-a559-0ee46a20d774",
      "documentation": "Views information about a specific execution of a specific association.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets",
      "responses": [
        {
          "uuid": "937154c0-e43d-4dd3-a6a8-a7cc86a49aaf",
          "body": "{\n  \"AssociationExecutionTargets\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"ResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"OutputSource\": {\n        \"OutputSourceId\": \"\",\n        \"OutputSourceType\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "96365707-86c4-405f-a1ea-1893201136a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "325533d2-c6f5-464e-94c9-abed8af64893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e0fca80-908d-47fa-9a2d-075c3d034552",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a701c81-3849-464a-9051-c11837b02901",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18c4582c-2a89-4eb7-8f3a-79287eef1e9c",
      "documentation": "Views all executions for a specific association ID. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions",
      "responses": [
        {
          "uuid": "88fb736c-82c6-487d-b019-963497fe558b",
          "body": "{\n  \"AssociationExecutions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceCountByStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b454bdb7-edd0-4c37-922d-1d69c281bdff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3826558a-0ce0-434d-ac96-2d3bd968d0d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e07f668a-a973-4ddb-b604-89b411175d25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e421d666-4457-4a7c-b86d-064137466ae2",
      "documentation": "Provides details about all active and terminated Automation executions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions",
      "responses": [
        {
          "uuid": "dca8be5f-f313-41a4-ad9d-5b5cf71cf8ee",
          "body": "{\n  \"AutomationExecutionMetadataList\": [\n    {\n      \"AutomationExecutionId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AutomationExecutionStatus\": \"\",\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutedBy\": \"\",\n      \"LogFile\": \"\",\n      \"Outputs\": {},\n      \"Mode\": \"\",\n      \"ParentAutomationExecutionId\": \"\",\n      \"CurrentStepName\": \"\",\n      \"CurrentAction\": \"\",\n      \"FailureMessage\": \"\",\n      \"TargetParameterName\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetMaps\": [\n        {}\n      ],\n      \"ResolvedTargets\": {\n        \"ParameterValues\": [\n          \"\"\n        ],\n        \"Truncated\": {{faker 'datatype.boolean'}}\n      },\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Target\": \"\",\n      \"AutomationType\": \"\",\n      \"AutomationSubtype\": \"\",\n      \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n      \"Runbooks\": [\n        {\n          \"DocumentName\": \"\",\n          \"DocumentVersion\": \"\",\n          \"Parameters\": {},\n          \"TargetParameterName\": \"\",\n          \"Targets\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ],\n          \"MaxConcurrency\": \"\",\n          \"MaxErrors\": \"\",\n          \"TargetLocations\": [\n            {\n              \"Accounts\": [\n                \"\"\n              ],\n              \"Regions\": [\n                \"\"\n              ],\n              \"TargetLocationMaxConcurrency\": \"\",\n              \"TargetLocationMaxErrors\": \"\",\n              \"ExecutionRoleName\": \"\"\n            }\n          ]\n        }\n      ],\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ChangeRequestName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1eccc13d-c0bc-4f8e-adac-8cf92b18e416",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0906645-51aa-48e4-afcf-23e16ecabe61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f20085c-5750-4d7f-b2a4-7dde0ddd72db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "beeaf2d2-e106-44fa-8c41-2beb51749a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b89e094-da0e-4bbe-83a2-a1781392d22e",
      "documentation": "Information about all active and terminated step executions in an Automation workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions",
      "responses": [
        {
          "uuid": "b994c30c-b09d-4d1e-8fa0-9cd1ef80c6a8",
          "body": "{\n  \"StepExecutions\": [\n    {\n      \"StepName\": \"\",\n      \"Action\": \"\",\n      \"TimeoutSeconds\": {{faker 'datatype.number'}},\n      \"OnFailure\": \"\",\n      \"MaxAttempts\": {{faker 'datatype.number'}},\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"StepStatus\": \"\",\n      \"ResponseCode\": \"\",\n      \"Inputs\": {},\n      \"Outputs\": {},\n      \"Response\": \"\",\n      \"FailureMessage\": \"\",\n      \"FailureDetails\": {\n        \"FailureStage\": \"\",\n        \"FailureType\": \"\",\n        \"Details\": {}\n      },\n      \"StepExecutionId\": \"\",\n      \"OverriddenParameters\": {},\n      \"IsEnd\": {{faker 'datatype.boolean'}},\n      \"NextStep\": \"\",\n      \"IsCritical\": {{faker 'datatype.boolean'}},\n      \"ValidNextSteps\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetLocation\": {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69fb67e0-8165-4e96-aeca-58e55b0f6ec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da1348dd-66be-4314-961b-9a8530abbff0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1857fcb0-4e6b-4761-9f99-e29a16d21cba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb1d648b-7463-4cfe-9bcd-9221025e2817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8cccbcba-1e38-4818-b120-716cb16d4e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88ee5ec8-6adb-49e8-977d-1a64b30ac1d4",
      "documentation": "Lists all patches eligible to be included in a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAvailablePatches",
      "responses": [
        {
          "uuid": "313036f9-7ae9-4de5-b676-58d84ea70b78",
          "body": "{\n  \"Patches\": [\n    {\n      \"Id\": \"\",\n      \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"Title\": \"\",\n      \"Description\": \"\",\n      \"ContentUrl\": \"\",\n      \"Vendor\": \"\",\n      \"ProductFamily\": \"\",\n      \"Product\": \"\",\n      \"Classification\": \"\",\n      \"MsrcSeverity\": \"\",\n      \"KbNumber\": \"\",\n      \"MsrcNumber\": \"\",\n      \"Language\": \"\",\n      \"AdvisoryIds\": [\n        \"\"\n      ],\n      \"BugzillaIds\": [\n        \"\"\n      ],\n      \"CVEIds\": [\n        \"\"\n      ],\n      \"Name\": \"\",\n      \"Epoch\": {{faker 'datatype.number'}},\n      \"Version\": \"\",\n      \"Release\": \"\",\n      \"Arch\": \"\",\n      \"Severity\": \"\",\n      \"Repository\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb6ebfaf-b1b9-432a-acfb-0195954b1990",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee061c1d-ccba-488d-ba36-3780e9cb2c0f",
      "documentation": "Describes the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocument",
      "responses": [
        {
          "uuid": "076936da-cd53-4a3e-ad15-462e96aa7cf5",
          "body": "{\n  \"Document\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26e3a05e-6753-4293-b0e9-b9c159426e41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14c4b760-ba36-4e7e-aaf9-389ace4ac01e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61889ffd-5344-44e5-a98e-3ccbc1c7fe0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12d5da55-2fcd-460e-875e-1e633c373e86",
      "documentation": "Describes the permissions for a Amazon Web Services Systems Manager document (SSM document). If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's Amazon Web Services account ID) or publicly (<i>All</i>). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocumentPermission",
      "responses": [
        {
          "uuid": "0e8c60fd-5aaf-4d8e-a02f-7fe5463b5333",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"AccountSharingInfoList\": [\n    {\n      \"AccountId\": \"\",\n      \"SharedDocumentVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "caa12dd3-465e-4626-a1ce-279294b13223",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfb1f056-a25e-44d6-9406-803b83a6d8fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bd67b3c-9e37-42f8-bad4-943907c0830b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c62d086c-d0c7-432b-838c-6acdadc02d67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04c89bf0-dd1f-4d1c-8fc2-b436a7c0d289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "000886a6-6b33-4b04-bf68-2ceebc05af87",
      "documentation": "All associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations",
      "responses": [
        {
          "uuid": "4af1cee8-8333-4fd2-a76f-9f80a0903c4a",
          "body": "{\n  \"Associations\": [\n    {\n      \"AssociationId\": \"\",\n      \"InstanceId\": \"\",\n      \"Content\": \"\",\n      \"AssociationVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e167321-612f-4ef5-b602-2255d834e133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8aa165b5-6a9f-4ff3-b952-c6e8a79f0f85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15f99872-8bbd-4c26-88fc-18cf094962b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4d21d75-879e-445b-9894-0faec44e5d62",
      "documentation": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Applies to patch baselines for Windows only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline",
      "responses": [
        {
          "uuid": "cc844f33-5a03-431c-b057-faf8efbcce2e",
          "body": "{\n  \"EffectivePatches\": [\n    {\n      \"Patch\": {\n        \"Id\": \"\",\n        \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"Title\": \"\",\n        \"Description\": \"\",\n        \"ContentUrl\": \"\",\n        \"Vendor\": \"\",\n        \"ProductFamily\": \"\",\n        \"Product\": \"\",\n        \"Classification\": \"\",\n        \"MsrcSeverity\": \"\",\n        \"KbNumber\": \"\",\n        \"MsrcNumber\": \"\",\n        \"Language\": \"\",\n        \"AdvisoryIds\": [\n          \"\"\n        ],\n        \"BugzillaIds\": [\n          \"\"\n        ],\n        \"CVEIds\": [\n          \"\"\n        ],\n        \"Name\": \"\",\n        \"Epoch\": {{faker 'datatype.number'}},\n        \"Version\": \"\",\n        \"Release\": \"\",\n        \"Arch\": \"\",\n        \"Severity\": \"\",\n        \"Repository\": \"\"\n      },\n      \"PatchStatus\": {\n        \"DeploymentStatus\": \"\",\n        \"ComplianceLevel\": \"\",\n        \"ApprovalDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37ae1396-6352-4122-a2fa-75a0dd838773",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47bdb0b2-dea9-45eb-8679-82a8452986bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b926408-a3c5-4283-9c38-d4bc054c346a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "583a126e-4aa2-4d9b-9420-3e9ba7dfb86c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ae9aa47-86e5-4582-aea4-8a272449e9ad",
      "documentation": "The status of the associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus",
      "responses": [
        {
          "uuid": "bd176a54-61bb-4cfb-b6b9-0fe84cdd781b",
          "body": "{\n  \"InstanceAssociationStatusInfos\": [\n    {\n      \"AssociationId\": \"\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AssociationVersion\": \"\",\n      \"InstanceId\": \"\",\n      \"ExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"ExecutionSummary\": \"\",\n      \"ErrorCode\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": {\n          \"OutputUrl\": \"\"\n        }\n      },\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94732766-2bea-4779-8f1d-39ad291c360c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11267e43-044d-4232-b965-7b38b343ebba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6c016a6-0e8e-476a-a240-0037a381c6d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ba33a4f-b98f-4fb5-b1fb-ad70f43d3afd",
      "documentation": "<p>Describes one or more of your instances, including information about the operating system platform, the version of SSM Agent installed on the instance, instance status, and so on.</p> <p>If you specify one or more instance IDs, it returns information for those instances. If you don't specify instance IDs, it returns information for all your instances. If you specify an instance ID that isn't valid or an instance that you don't own, you receive an error.</p> <note> <p>The <code>IamRole</code> field for this API operation is the Identity and Access Management (IAM) role assigned to on-premises instances. This call doesn't return the IAM role for EC2 instances.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceInformation",
      "responses": [
        {
          "uuid": "ff65fa69-bb5f-4087-9c52-54bbb1a1a5f0",
          "body": "{\n  \"InstanceInformationList\": [\n    {\n      \"InstanceId\": \"\",\n      \"PingStatus\": \"\",\n      \"LastPingDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"AgentVersion\": \"\",\n      \"IsLatestVersion\": {{faker 'datatype.boolean'}},\n      \"PlatformType\": \"\",\n      \"PlatformName\": \"\",\n      \"PlatformVersion\": \"\",\n      \"ActivationId\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceType\": \"\",\n      \"Name\": \"\",\n      \"IPAddress\": \"\",\n      \"ComputerName\": \"\",\n      \"AssociationStatus\": \"\",\n      \"LastAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationOverview\": {\n        \"DetailedStatus\": \"\",\n        \"InstanceAssociationStatusAggregatedCount\": {}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55d83a8d-ba61-42ba-9133-b7dbb9f40383",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c54d79c-d35c-42ae-9272-5cfd67622dfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b35a680-b938-4840-9637-92ece170a3cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bba8bf68-8b6e-4135-8c1f-439720ab9697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceInformationFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0e69e5c-d881-4d4c-a287-3995b4af269f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7a4ea0b-14a6-4905-8049-e6e8d2151724",
      "documentation": "Retrieves the high-level patch state of one or more instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates",
      "responses": [
        {
          "uuid": "fc0655c4-8e2d-4a59-875d-bfa485015d47",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'datatype.number'}},\n      \"InstalledOtherCount\": {{faker 'datatype.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'datatype.number'}},\n      \"InstalledRejectedCount\": {{faker 'datatype.number'}},\n      \"MissingCount\": {{faker 'datatype.number'}},\n      \"FailedCount\": {{faker 'datatype.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'datatype.number'}},\n      \"NotApplicableCount\": {{faker 'datatype.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'datatype.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'datatype.number'}},\n      \"OtherNonCompliantCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9adf1646-1225-4373-924b-3fd49dacf768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4b04045-5b5c-4665-a892-141c31b65916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "876fadc5-d99e-4cb3-809d-9841039dc3dd",
      "documentation": "Retrieves the high-level patch state for the instances in the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup",
      "responses": [
        {
          "uuid": "422ab1d8-26c2-4c83-9e16-4d428a673bed",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'datatype.number'}},\n      \"InstalledOtherCount\": {{faker 'datatype.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'datatype.number'}},\n      \"InstalledRejectedCount\": {{faker 'datatype.number'}},\n      \"MissingCount\": {{faker 'datatype.number'}},\n      \"FailedCount\": {{faker 'datatype.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'datatype.number'}},\n      \"NotApplicableCount\": {{faker 'datatype.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'datatype.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'datatype.number'}},\n      \"OtherNonCompliantCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d568870f-e547-4698-802b-3581e54867be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3865148e-8753-4cd3-a9fd-98548bc08fde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fe9e2e2-45ef-4f77-a53e-7f15e29a82ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a35ccd81-242d-413e-94cc-0d3d8d3b747f",
      "documentation": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatches",
      "responses": [
        {
          "uuid": "66c1848a-2fd3-4f32-9fc2-699625ac88e3",
          "body": "{\n  \"Patches\": [\n    {\n      \"Title\": \"\",\n      \"KBId\": \"\",\n      \"Classification\": \"\",\n      \"Severity\": \"\",\n      \"State\": \"\",\n      \"InstalledTime\": \"{{faker 'date.recent' 365}}\",\n      \"CVEIds\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e12c7d9f-843e-43b8-be8b-2bbe81166380",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b0f4359-b17b-41d8-a6aa-d4b140a208ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7edcfc76-158c-4f62-b105-6c14fb656f62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "396610e5-7381-43d6-a0ff-b4b17b912c73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d2cf0127-91e1-4831-8dbe-765c8705ffae",
      "documentation": "Describes a specific delete inventory operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions",
      "responses": [
        {
          "uuid": "116158f9-51cb-427f-9671-f4c2dddcde9e",
          "body": "{\n  \"InventoryDeletions\": [\n    {\n      \"DeletionId\": \"\",\n      \"TypeName\": \"\",\n      \"DeletionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"LastStatusMessage\": \"\",\n      \"DeletionSummary\": {\n        \"TotalCount\": {{faker 'datatype.number'}},\n        \"RemainingCount\": {{faker 'datatype.number'}},\n        \"SummaryItems\": [\n          {\n            \"Version\": \"\",\n            \"Count\": {{faker 'datatype.number'}},\n            \"RemainingCount\": {{faker 'datatype.number'}}\n          }\n        ]\n      },\n      \"LastStatusUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff22732a-fe7f-4985-8ac8-31d389c2edb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b6b26d1-2770-4f88-878e-a7a73698eaf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDeletionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6c0219d-c255-4816-8676-d14e96b97ee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb7aff33-da9d-4e99-978d-33a93de55c87",
      "documentation": "Retrieves the individual task executions (one per target) for a particular task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations",
      "responses": [
        {
          "uuid": "5ca59288-3009-46fa-813b-dad8398fab0f",
          "body": "{\n  \"WindowExecutionTaskInvocationIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"InvocationId\": \"\",\n      \"ExecutionId\": \"\",\n      \"TaskType\": \"\",\n      \"Parameters\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"OwnerInformation\": \"\",\n      \"WindowTargetId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0b70869-3ab3-496e-9b6c-46b2516fac17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02d5b49a-c662-4a99-a735-af86f796c1db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f70b6e49-1d68-4c41-9482-9948bb6deb56",
      "documentation": "For a given maintenance window execution, lists the tasks that were run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks",
      "responses": [
        {
          "uuid": "cfbd3626-f9e4-431b-b820-fea63cfed9f9",
          "body": "{\n  \"WindowExecutionTaskIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"TaskArn\": \"\",\n      \"TaskType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7031b6f0-b2fe-40d7-91f7-a2322a707326",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40b2f8eb-495d-4c1a-b2b8-ffc712529942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4ce7463-f9d2-4c02-bfdf-f0fa6332663c",
      "documentation": "Lists the executions of a maintenance window. This includes information about when the maintenance window was scheduled to be active, and information about tasks registered and run with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions",
      "responses": [
        {
          "uuid": "a40b5eb7-5d00-4db7-8f99-6e0363646087",
          "body": "{\n  \"WindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef49c678-c746-4c57-8ee9-68734fe02b4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f790aa66-677d-4577-8156-0f98fef8a76a",
      "documentation": "Retrieves information about upcoming executions of a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule",
      "responses": [
        {
          "uuid": "62729f16-a341-497e-b3a8-3d38d32ab6c8",
          "body": "{\n  \"ScheduledWindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"ExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91fd888f-20bc-4633-a43d-00f8f7d6af95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00b385ab-e0a9-4607-91dd-b77795291893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18823432-ab69-496c-9935-1f52a4846e71",
      "documentation": "Lists the targets registered with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets",
      "responses": [
        {
          "uuid": "6e2535ac-b111-4601-89c0-0564cbb0d1b5",
          "body": "{\n  \"Targets\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTargetId\": \"\",\n      \"ResourceType\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"OwnerInformation\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a62f726d-2550-4aba-bd2f-a223032523ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8a757c1-a677-4026-b36c-3bb269080170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db46c64d-fda7-4e8a-9b3e-362cb2b071de",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks",
      "responses": [
        {
          "uuid": "ec96c184-1246-4f37-9e58-75d74c12b473",
          "body": "{\n  \"Tasks\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTaskId\": \"\",\n      \"TaskArn\": \"\",\n      \"Type\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TaskParameters\": {},\n      \"Priority\": {{faker 'datatype.number'}},\n      \"LoggingInfo\": {\n        \"S3BucketName\": \"\",\n        \"S3KeyPrefix\": \"\",\n        \"S3Region\": \"\"\n      },\n      \"ServiceRoleArn\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0116a326-5cff-4308-b740-e9ec07f47e96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7972306-1632-45a8-aef7-694da9baa46f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96da0937-a5ee-4d59-b253-e61d0474e534",
      "documentation": "Retrieves the maintenance windows in an Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows",
      "responses": [
        {
          "uuid": "9ba96432-d6fc-4ba4-9325-6a1a8c4c5f50",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Enabled\": {{faker 'datatype.boolean'}},\n      \"Duration\": {{faker 'datatype.number'}},\n      \"Cutoff\": {{faker 'datatype.number'}},\n      \"Schedule\": \"\",\n      \"ScheduleTimezone\": \"\",\n      \"ScheduleOffset\": {{faker 'datatype.number'}},\n      \"EndDate\": \"\",\n      \"StartDate\": \"\",\n      \"NextExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b45eabed-a4f9-4a66-857c-65ea31c84e05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f834d5a1-0af2-45c8-9247-e3d8159cb7e0",
      "documentation": "Retrieves information about the maintenance window targets or tasks that an instance is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget",
      "responses": [
        {
          "uuid": "e64d6fb7-aca4-4a59-95a6-7c340dcbd70e",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "978eaaa4-8a80-4853-bec3-b7813075be8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5aba2e32-638d-4215-8351-6de8ee542963",
      "documentation": "<p>Query a set of OpsItems. You must have permission in Identity and Access Management (IAM) to query a list of OpsItems. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeOpsItems",
      "responses": [
        {
          "uuid": "f5bc3645-27ad-4d18-b4cd-dd776aa5f392",
          "body": "{\n  \"NextToken\": \"\",\n  \"OpsItemSummaries\": [\n    {\n      \"CreatedBy\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": \"\",\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Priority\": {{faker 'datatype.number'}},\n      \"Source\": \"\",\n      \"Status\": \"\",\n      \"OpsItemId\": \"\",\n      \"Title\": \"\",\n      \"OperationalData\": {},\n      \"Category\": \"\",\n      \"Severity\": \"\",\n      \"OpsItemType\": \"\",\n      \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56bc99cd-1729-4d07-b7b6-5bd026a229af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5ed4479-8989-4d72-8cc3-6cfd12212801",
      "documentation": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeParameters",
      "responses": [
        {
          "uuid": "14d85ea3-1bf7-42bb-84af-7b80104bc66e",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09e677e3-9acf-43e4-aaaf-e347eb4333eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22b0e8bf-8ecf-4de7-8ac3-25417004032a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c49af4a-d1de-4d2b-9e2a-bcff2cd0933b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "163ed6e8-da58-44d0-88c9-c2ec6f5a71c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5c3d50a-377f-48dd-b15b-1a4d3a460508",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d681b8c-2a97-4fca-a1c2-ee1077a15008",
      "documentation": "Lists the patch baselines in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchBaselines",
      "responses": [
        {
          "uuid": "53708174-1372-4f40-9033-16f0b65da917",
          "body": "{\n  \"BaselineIdentities\": [\n    {\n      \"BaselineId\": \"\",\n      \"BaselineName\": \"\",\n      \"OperatingSystem\": \"\",\n      \"BaselineDescription\": \"\",\n      \"DefaultBaseline\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca94c30c-3cc2-4e76-9748-087ba3ec4a20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "975c616e-a3d3-46c4-9c1e-ef203700f00e",
      "documentation": "Returns high-level aggregated patch compliance state information for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroupState",
      "responses": [
        {
          "uuid": "c1a1d9bc-4103-4277-854a-2be9384e10ea",
          "body": "{\n  \"Instances\": {{faker 'datatype.number'}},\n  \"InstancesWithInstalledPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithInstalledOtherPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithInstalledPendingRebootPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithInstalledRejectedPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithMissingPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithFailedPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithNotApplicablePatches\": {{faker 'datatype.number'}},\n  \"InstancesWithUnreportedNotApplicablePatches\": {{faker 'datatype.number'}},\n  \"InstancesWithCriticalNonCompliantPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithSecurityNonCompliantPatches\": {{faker 'datatype.number'}},\n  \"InstancesWithOtherNonCompliantPatches\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c35d0aa-030f-4bb8-adda-891b69223f90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "625d6bf3-77c5-495f-9701-14b3d2140981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2aa30b1d-1d8c-458b-a591-d0215fbd69dc",
      "documentation": "Lists all patch groups that have been registered with patch baselines.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroups",
      "responses": [
        {
          "uuid": "8763507c-d9e5-4054-a27f-b4e2c8602c71",
          "body": "{\n  \"Mappings\": [\n    {\n      \"PatchGroup\": \"\",\n      \"BaselineIdentity\": {\n        \"BaselineId\": \"\",\n        \"BaselineName\": \"\",\n        \"OperatingSystem\": \"\",\n        \"BaselineDescription\": \"\",\n        \"DefaultBaseline\": {{faker 'datatype.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "40b0e882-5213-40e2-954c-face7ec74a5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ce9b8f0-394b-4af5-846e-e9a88176fb3b",
      "documentation": "<p>Lists the properties of available patches organized by product, product family, classification, severity, and other properties of available patches. You can use the reported properties in the filters you specify in requests for operations such as <a>CreatePatchBaseline</a>, <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.</p> <p>The following section lists the properties that can be used in filters for each major operating system type:</p> <dl> <dt>AMAZON_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>CENTOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>DEBIAN</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>MACOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> </p> </dd> <dt>ORACLE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>REDHAT_ENTERPRISE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>SUSE</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>UBUNTU</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>WINDOWS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRODUCT_FAMILY</code> | <code>CLASSIFICATION</code> | <code>MSRC_SEVERITY</code> </p> </dd> </dl>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchProperties",
      "responses": [
        {
          "uuid": "05f762f4-3ee8-42c1-90c2-c2bc0fe7ade2",
          "body": "{\n  \"Properties\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85c7e085-6c9c-4967-976a-ad396846c426",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31ebcd50-7163-4cf0-9257-50a29ba766fc",
      "documentation": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeSessions",
      "responses": [
        {
          "uuid": "3df438cf-af1e-46a3-9855-26e5db2f4f42",
          "body": "{\n  \"Sessions\": [\n    {\n      \"SessionId\": \"\",\n      \"Target\": \"\",\n      \"Status\": \"\",\n      \"StartDate\": \"{{faker 'date.recent' 365}}\",\n      \"EndDate\": \"{{faker 'date.recent' 365}}\",\n      \"DocumentName\": \"\",\n      \"Owner\": \"\",\n      \"Details\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": \"\",\n        \"CloudWatchOutputUrl\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbbfb685-9c6c-41d3-80a4-0bb334e93fa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "272333fc-2e0e-49b6-bbc8-dc3b76210179",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec2e4f36-69c7-464a-b6ea-bd576d6ac48b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2d9879c-42a1-4870-b199-2f84990bcd2e",
      "documentation": "Deletes the association between an OpsItem and a related resource. For example, this API operation can delete an Incident Manager incident from an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DisassociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "b82495f6-316e-43b6-b39e-1c4e8d5e712e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "587633b1-cb6c-4a9a-97d9-d7c112f579c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "412b715b-c937-4866-a542-ee7d13180353",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemRelatedItemAssociationNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "876de6e0-42bf-4eec-b14d-2a65f69f4374",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "498ed9e5-8135-4add-85c6-3a383896ff30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "011e40d0-695f-4cbc-b041-96f9674f546e",
      "documentation": "Get detailed information about a particular Automation execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetAutomationExecution",
      "responses": [
        {
          "uuid": "d6ffcd95-a084-476f-b3ca-f6a4958e18f0",
          "body": "{\n  \"AutomationExecution\": {\n    \"AutomationExecutionId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"AutomationExecutionStatus\": \"\",\n    \"StepExecutions\": [\n      {\n        \"StepName\": \"\",\n        \"Action\": \"\",\n        \"TimeoutSeconds\": {{faker 'datatype.number'}},\n        \"OnFailure\": \"\",\n        \"MaxAttempts\": {{faker 'datatype.number'}},\n        \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n        \"StepStatus\": \"\",\n        \"ResponseCode\": \"\",\n        \"Inputs\": {},\n        \"Outputs\": {},\n        \"Response\": \"\",\n        \"FailureMessage\": \"\",\n        \"FailureDetails\": {\n          \"FailureStage\": \"\",\n          \"FailureType\": \"\",\n          \"Details\": {}\n        },\n        \"StepExecutionId\": \"\",\n        \"OverriddenParameters\": {},\n        \"IsEnd\": {{faker 'datatype.boolean'}},\n        \"NextStep\": \"\",\n        \"IsCritical\": {{faker 'datatype.boolean'}},\n        \"ValidNextSteps\": [\n          \"\"\n        ],\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"TargetLocation\": {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      }\n    ],\n    \"StepExecutionsTruncated\": {{faker 'datatype.boolean'}},\n    \"Parameters\": {},\n    \"Outputs\": {},\n    \"FailureMessage\": \"\",\n    \"Mode\": \"\",\n    \"ParentAutomationExecutionId\": \"\",\n    \"ExecutedBy\": \"\",\n    \"CurrentStepName\": \"\",\n    \"CurrentAction\": \"\",\n    \"TargetParameterName\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"TargetMaps\": [\n      {}\n    ],\n    \"ResolvedTargets\": {\n      \"ParameterValues\": [\n        \"\"\n      ],\n      \"Truncated\": {{faker 'datatype.boolean'}}\n    },\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"Target\": \"\",\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ],\n    \"ProgressCounters\": {\n      \"TotalSteps\": {{faker 'datatype.number'}},\n      \"SuccessSteps\": {{faker 'datatype.number'}},\n      \"FailedSteps\": {{faker 'datatype.number'}},\n      \"CancelledSteps\": {{faker 'datatype.number'}},\n      \"TimedOutSteps\": {{faker 'datatype.number'}}\n    },\n    \"AutomationSubtype\": \"\",\n    \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n    \"Runbooks\": [\n      {\n        \"DocumentName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Parameters\": {},\n        \"TargetParameterName\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MaxConcurrency\": \"\",\n        \"MaxErrors\": \"\",\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      }\n    ],\n    \"OpsItemId\": \"\",\n    \"AssociationId\": \"\",\n    \"ChangeRequestName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed86b671-47ac-4160-9c16-7201a2aac80d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c231afb4-4848-47d3-99c8-f2f7e0748798",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "964b3e8c-aaa2-4137-9fe8-1f97d94a59e0",
      "documentation": "<p>Gets the state of a Amazon Web Services Systems Manager change calendar at the current time or a specified time. If you specify a time, <code>GetCalendarState</code> returns the state of the calendar at that specific time, and returns the next time that the change calendar state will transition. If you don't specify a time, <code>GetCalendarState</code> uses the current time. Change Calendar entries have two possible states: <code>OPEN</code> or <code>CLOSED</code>.</p> <p>If you specify more than one calendar in a request, the command returns the status of <code>OPEN</code> only if all calendars in the request are open. If one or more calendars in the request are closed, the status returned is <code>CLOSED</code>.</p> <p>For more information about Change Calendar, a capability of Amazon Web Services Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar.html\">Amazon Web Services Systems Manager Change Calendar</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCalendarState",
      "responses": [
        {
          "uuid": "4ae0ca9f-a3f1-4d6d-8842-8009fb336d37",
          "body": "{\n  \"State\": \"\",\n  \"AtTime\": \"\",\n  \"NextTransitionTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0072ca5-d47d-47c1-a3d8-6189275f4633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3e892fb-4846-486f-9e75-91597728f9d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64717e01-89c1-4276-91da-fd5379433c18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "821b25d1-4f10-4143-b11b-dd88a0a67012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedCalendarException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "885758fc-0f8f-448e-b921-0799ae444a8a",
      "documentation": "<p>Returns detailed information about command execution for an invocation or plugin.</p> <p> <code>GetCommandInvocation</code> only gives the execution status of a plugin in a document. To get the command execution status on a specific instance, use <a>ListCommandInvocations</a>. To get the command execution status across instances, use <a>ListCommands</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCommandInvocation",
      "responses": [
        {
          "uuid": "9b588b33-e3fa-49cb-9aa5-7f70f2217c31",
          "body": "{\n  \"CommandId\": \"\",\n  \"InstanceId\": \"\",\n  \"Comment\": \"\",\n  \"DocumentName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"PluginName\": \"\",\n  \"ResponseCode\": {{faker 'datatype.number'}},\n  \"ExecutionStartDateTime\": \"\",\n  \"ExecutionElapsedTime\": \"\",\n  \"ExecutionEndDateTime\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StandardOutputContent\": \"\",\n  \"StandardOutputUrl\": \"\",\n  \"StandardErrorContent\": \"\",\n  \"StandardErrorUrl\": \"\",\n  \"CloudWatchOutputConfig\": {\n    \"CloudWatchLogGroupName\": \"\",\n    \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "78b57668-b53b-4273-9d4e-541e287f82a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7ed77bd-eccc-4bc6-8bf6-9914fdc31e2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8178915d-a329-4ba9-87e4-91eabe80e0d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "625841ae-1393-410d-952c-daeb7d47faf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPluginName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a5b7824-5355-4ff5-9f68-5d9940981956",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvocationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3f4f30e-695f-4c33-b11e-ca52396c326f",
      "documentation": "Retrieves the Session Manager connection status for an instance to determine whether it is running and ready to receive Session Manager connections.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetConnectionStatus",
      "responses": [
        {
          "uuid": "f0eb387d-f48e-4641-8827-032ef6e24448",
          "body": "{\n  \"Target\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b4a3f39-38dd-4044-9e79-f052cdcfa1d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d53a0b39-fa6e-4861-bb32-05cd5c1c6de0",
      "documentation": "<p>Retrieves the default patch baseline. Amazon Web Services Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you don't specify an operating system value, the default patch baseline for Windows is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "9ed5debe-b4f2-4f59-8d19-4aeb067e97bc",
          "body": "{\n  \"BaselineId\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d593b7f-a06c-41c2-877e-8da684e60bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fa871db-e27f-4e9e-998d-9423cfeb4575",
      "documentation": "<p>Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code> Systems Manager document (SSM document).</p> <note> <p>If you run the command locally, such as with the Command Line Interface (CLI), the system attempts to use your local Amazon Web Services credentials and the operation fails. To avoid this, you can run the command in the Amazon Web Services Systems Manager console. Use Run Command, a capability of Amazon Web Services Systems Manager, with an SSM document that enables you to target an instance with a script or command. For example, run the command using the <code>AWS-RunShellScript</code> document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance",
      "responses": [
        {
          "uuid": "715f817e-3c3d-42f7-bbb8-76732d6261f3",
          "body": "{\n  \"InstanceId\": \"\",\n  \"SnapshotId\": \"\",\n  \"SnapshotDownloadUrl\": \"\",\n  \"Product\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a89d0b3-1772-4f3b-b41d-a6fa99a84a1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "178ec870-134b-45ef-b5fd-c83f5ed6a12c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6181da7-c7d8-475f-af84-59bb728b1fca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedFeatureRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b7d69558-30d4-4dba-aaf5-d6e3216d3500",
      "documentation": "Gets the contents of the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDocument",
      "responses": [
        {
          "uuid": "8f7e14aa-f350-415c-92fc-e2240a3a4bd7",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"DisplayName\": \"\",\n  \"VersionName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Status\": \"\",\n  \"StatusInformation\": \"\",\n  \"Content\": \"\",\n  \"DocumentType\": \"\",\n  \"DocumentFormat\": \"\",\n  \"Requires\": [\n    {\n      \"Name\": \"\",\n      \"Version\": \"\"\n    }\n  ],\n  \"AttachmentsContent\": [\n    {\n      \"Name\": \"\",\n      \"Size\": {{faker 'datatype.number'}},\n      \"Hash\": \"\",\n      \"HashType\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ReviewStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b13203a-c860-43e0-9b86-4c681e0b529a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0415b8dc-3fe0-4cea-b218-a507a9d21240",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3532c674-8942-4d4e-8f8c-80f5606b3ea9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c21629d-7464-4655-a4d4-77b1e5d8fe67",
      "documentation": "Query inventory information. This includes instance status, such as <code>Stopped</code> or <code>Terminated</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventory",
      "responses": [
        {
          "uuid": "1ae4fa7a-866f-4619-9c09-7532d04f358f",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72829576-bbba-4ff5-9b73-5405ecd947c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20a64b93-023e-407e-a5ea-10681e14dd45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1df95f4-cb1b-44e4-9060-0d55cf345a12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInventoryGroupException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8604e18-c3c5-4ad4-919b-5cedad1ab7dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffa9ab60-9577-4f3d-9be4-d5147effca0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ea7c573-b576-405e-9cce-e2acd52655b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "723ff0e8-0e5d-4885-8920-612b2ef989be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResultAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4eabbd22-8b69-4530-a33c-1ee96d1b8c82",
      "documentation": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventorySchema",
      "responses": [
        {
          "uuid": "9558f683-d4b8-4bdd-a448-d27251bbd4e0",
          "body": "{\n  \"Schemas\": [\n    {\n      \"TypeName\": \"\",\n      \"Version\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"DisplayName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4837aa78-aaae-404f-a71d-2ebcf3f12176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6463086f-0931-4465-a4f7-859984c08fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb3df9a5-8a24-4352-9fa4-d9abe9b30b17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f206af2-eb2a-44dd-95a1-68bb20992d2c",
      "documentation": "Retrieves a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindow",
      "responses": [
        {
          "uuid": "d53c981d-145e-48e0-8ee9-ffa901629bbc",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'datatype.number'}},\n  \"NextExecutionTime\": \"\",\n  \"Duration\": {{faker 'datatype.number'}},\n  \"Cutoff\": {{faker 'datatype.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'datatype.boolean'}},\n  \"Enabled\": {{faker 'datatype.boolean'}},\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a32f0000-6475-4bcc-9eb6-d4192aa4c7c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3574a507-8b95-4f88-bc10-f188bac0d64a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd1d2b97-0b7b-4d56-aa09-16a87abb7db3",
      "documentation": "Retrieves details about a specific a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "69c007fc-e6ed-42d0-a9c0-5a144fcad1dd",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskIds\": [\n    \"\"\n  ],\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "107f02cf-6b52-48cb-8cd6-847cd46fc850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8518a04-4ebc-4e35-800a-14ccfc7ecaaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a35e65e-cb57-4c18-bded-0ede51783c66",
      "documentation": "Retrieves the details about a specific task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask",
      "responses": [
        {
          "uuid": "89debda3-7ab6-439a-afac-52b41cca534d",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"TaskArn\": \"\",\n  \"ServiceRole\": \"\",\n  \"Type\": \"\",\n  \"TaskParameters\": [\n    {}\n  ],\n  \"Priority\": {{faker 'datatype.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07995a0c-934c-4fe1-9599-4e20ca31cc36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78bc0f67-ef1f-4a0f-9073-975bc15a0e29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "774fe4db-56d3-49a7-b002-24e8f775f6df",
      "documentation": "Retrieves information about a specific task running on a specific target.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation",
      "responses": [
        {
          "uuid": "ff0b02c1-e09e-490f-85c6-a84667e5b7f3",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"InvocationId\": \"\",\n  \"ExecutionId\": \"\",\n  \"TaskType\": \"\",\n  \"Parameters\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\",\n  \"OwnerInformation\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3426f700-998f-4b24-a9eb-5c3ef39e0662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "446a5745-b1bf-4908-9b16-01774ec5151d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9691ee0e-37d8-445d-af9e-b7e67d8e332b",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "e769a3f7-6656-47f9-8da2-00c139dcff37",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskType\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'datatype.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'datatype.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dd0114af-52f5-4ea0-ac02-a2cc4eebcf3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a75dae25-ba77-48a4-9760-d907df59de1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "182e5e00-c229-4488-bbd3-293544b5c687",
      "documentation": "<p>Get information about an OpsItem by using the ID. You must have permission in Identity and Access Management (IAM) to view information about an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsItem",
      "responses": [
        {
          "uuid": "dda83282-d716-4986-a835-03c8871a0151",
          "body": "{\n  \"OpsItem\": {\n    \"CreatedBy\": \"\",\n    \"OpsItemType\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Description\": \"\",\n    \"LastModifiedBy\": \"\",\n    \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Notifications\": [\n      {\n        \"Arn\": \"\"\n      }\n    ],\n    \"Priority\": {{faker 'datatype.number'}},\n    \"RelatedOpsItems\": [\n      {\n        \"OpsItemId\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"OpsItemId\": \"\",\n    \"Version\": \"\",\n    \"Title\": \"\",\n    \"Source\": \"\",\n    \"OperationalData\": {},\n    \"Category\": \"\",\n    \"Severity\": \"\",\n    \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19457849-11f6-42ee-9dfd-4e9f170f514d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc4e827a-fbe2-4189-a467-886d157437b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "919cff8b-101f-42f7-8932-bac0bd49652b",
      "documentation": "View operational metadata related to an application in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsMetadata",
      "responses": [
        {
          "uuid": "f2f3e236-4dd0-4254-a9f3-47d3a57c46c6",
          "body": "{\n  \"ResourceId\": \"\",\n  \"Metadata\": {},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d6df47d-a292-4c91-8c76-5f4eb31fd144",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0e091a5-8478-4b55-b680-cb8fa8faffcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f85c66b7-6bae-40e8-a2f3-f40f8f3f394d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "68f6d142-220c-4adc-8c78-ab442a8c94a5",
      "documentation": "View a summary of operations metadata (OpsData) based on specified filters and aggregators. OpsData can include information about Amazon Web Services Systems Manager OpsCenter operational workitems (OpsItems) as well as information about any Amazon Web Services resource or service configured to report OpsData to Amazon Web Services Systems Manager Explorer. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsSummary",
      "responses": [
        {
          "uuid": "ec36108f-0c2c-4060-83a8-f8c7eb154727",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "099ad629-dc6d-4515-8b2f-d1c16de68281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76d77f1a-4117-4c9a-8ab1-f2a4a3a71d6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e85a0afe-314c-46d6-a948-aba090f9e7fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdc43007-bf4c-4fd7-9668-35460a681ecc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a157d85-fd23-4a8c-aea0-c6bd9596092f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f95a5eef-37eb-4f2b-b5ff-38accbafc4af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a7d3571-11db-4662-9e43-89db0c76b660",
      "documentation": "<p>Get information about a single parameter by specifying the parameter name.</p> <note> <p>To get information about more than one parameter at a time, use the <a>GetParameters</a> operation.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameter",
      "responses": [
        {
          "uuid": "80367f3b-8f0d-488a-ba4d-25e7a053cfe8",
          "body": "{\n  \"Parameter\": {\n    \"Name\": \"\",\n    \"Type\": \"\",\n    \"Value\": \"\",\n    \"Version\": {{faker 'datatype.number'}},\n    \"Selector\": \"\",\n    \"SourceResult\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"ARN\": \"\",\n    \"DataType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69c13a29-f0d1-4ea8-9ac2-8401aad67d16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72f5769e-dd0b-4748-8fed-826d68cbe292",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "797f7bdb-22e7-4f15-9bf2-3d83531875cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b84dc67-f7e2-491b-9bc5-9067bf63a307",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a78f7a5e-e6dc-4bb0-ac80-1b1ed2c5f444",
      "documentation": "Retrieves the history of all changes to a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameterHistory",
      "responses": [
        {
          "uuid": "191fb7f2-f6a3-421a-948f-a2fcad51bad2",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"Value\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Labels\": [\n        \"\"\n      ],\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bad4c1d3-3c95-4c2a-bd75-3c38daba7f2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8c56ea2-d36d-4795-990a-51084faf6ef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "554eda71-47c9-4291-981e-93c6a5c99994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4071a80c-088b-4c40-8cdd-ce7820b2bef0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17acc2ad-4b9b-4e87-a192-7e93e432592f",
      "documentation": "<p>Get information about one or more parameters by specifying multiple parameter names.</p> <note> <p>To get information about a single parameter, you can use the <a>GetParameter</a> operation instead.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameters",
      "responses": [
        {
          "uuid": "51bc2b13-85a2-414d-b51d-04ee42a85f67",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bda35dfb-8eba-45c4-be7b-bf37c94aaa62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ad99919-e769-4056-b1b0-71e5242d60fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "386c8d59-f97f-46f9-8869-1c552f2f0656",
      "documentation": "<p>Retrieve information about one or more parameters in a specific hierarchy. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParametersByPath",
      "responses": [
        {
          "uuid": "e9e59681-9105-4fa5-897e-b2493604f4a4",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5b84fd5b-e9fa-4162-9e54-fab56df8b157",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "712abb9e-1578-44a8-8f33-c45e18b5dc88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "570157f6-371a-4d73-a0e5-3328677d601a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2744cab6-a0dd-490b-a906-087ca074936a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f8ad6ad-6ac0-480d-b13c-2205ecbb6e3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c84ba9d3-f83f-4c6c-9dcb-9be3992045c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b839db5-15a8-4487-bf93-750a5ce3563a",
      "documentation": "Retrieves information about a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaseline",
      "responses": [
        {
          "uuid": "7020c385-b356-49a1-a24f-90bb70676d10",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'datatype.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'datatype.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"PatchGroups\": [\n    \"\"\n  ],\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "78bdd5b2-b0ad-4409-946e-0b1697eba043",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a9f705b-fde1-4f9b-ba42-45fe0ecd76d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8076c745-d3cb-4b0c-9904-190eaf5d3881",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6402992-8b2c-43c2-ac72-cf7686199f5f",
      "documentation": "Retrieves the patch baseline that should be used for the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "3691a398-dbad-4659-a1a8-489ec2a02ad8",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e061d98e-0e43-4f49-9e02-98297bf5bdf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9039317f-f83d-4cb0-8a6b-59b773375fb6",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of <code>false</code>. This means the user can't use this feature unless they change the setting to <code>true</code> and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. Or use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Query the current service setting for the Amazon Web Services account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetServiceSetting",
      "responses": [
        {
          "uuid": "58e2afb4-df1e-4742-98d1-1e7799ea28c4",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "931958f0-0c77-4103-9470-48a142eaf8c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37b2ee32-c603-4dcf-b889-7fd5bf4f5579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b44f440-050c-40f6-bf70-3b67113daad7",
      "documentation": "<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Amazon Web Services Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can't attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can't create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>If you no longer want to use a parameter label, then you can either delete it or move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin with a number, \"<code>aws</code>\" or \"<code>ssm</code>\" (not case sensitive). If a label fails to meet these requirements, then the label isn't associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.LabelParameterVersion",
      "responses": [
        {
          "uuid": "b0866bbd-f2fb-4d61-8ee9-90dad5439f33",
          "body": "{\n  \"InvalidLabels\": [\n    \"\"\n  ],\n  \"ParameterVersion\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55f8cb2b-442e-4af5-9669-afd5edac237f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7c60beb-d1b7-482f-b241-d4245959928b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80fe39f5-1849-4e72-8a41-862cffeed9e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31653b9b-862e-4e52-bf51-7ad4b30e5ed3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19922b94-85c5-4681-af24-27350d111580",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterVersionLabelLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "498bce19-e0e0-4dad-beaa-927877e61fe1",
      "documentation": "Retrieves all versions of an association for a specific association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociationVersions",
      "responses": [
        {
          "uuid": "b76cb956-d79c-4126-8162-cfd72cbee476",
          "body": "{\n  \"AssociationVersions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {},\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ea19ea3-7e53-429d-9dd9-86fb598fc7b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e884358a-6889-4614-8ce2-f3308169c892",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0cc6958-1a46-411b-b43e-33cff91fc6f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4133fae-876a-4171-88cb-031afe233543",
      "documentation": "Returns all State Manager associations in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results to a specific State Manager association document or instance by specifying a filter. State Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociations",
      "responses": [
        {
          "uuid": "f823ccd3-f519-4491-86d6-6995097fc59c",
          "body": "{\n  \"Associations\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"ScheduleExpression\": \"\",\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62b82a37-10f2-4fbb-b840-fc12f4eaa572",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4159568-a580-468c-b3ea-3f69c20584fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39c3ce8b-1ba9-49fc-b6da-cc4a90f4a846",
      "documentation": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs <code>SendCommand</code> against three instances, then a command invocation is created for each requested instance ID. <code>ListCommandInvocations</code> provide status about command execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommandInvocations",
      "responses": [
        {
          "uuid": "4505ace1-936c-4f66-b10d-50bf4a8fabe0",
          "body": "{\n  \"CommandInvocations\": [\n    {\n      \"CommandId\": \"\",\n      \"InstanceId\": \"\",\n      \"InstanceName\": \"\",\n      \"Comment\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"TraceOutput\": \"\",\n      \"StandardOutputUrl\": \"\",\n      \"StandardErrorUrl\": \"\",\n      \"CommandPlugins\": [\n        {\n          \"Name\": \"\",\n          \"Status\": \"\",\n          \"StatusDetails\": \"\",\n          \"ResponseCode\": {{faker 'datatype.number'}},\n          \"ResponseStartDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"ResponseFinishDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"Output\": \"\",\n          \"StandardOutputUrl\": \"\",\n          \"StandardErrorUrl\": \"\",\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      ],\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0738a4db-ccdc-42fe-9c71-7948c98a25e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b210979e-87f1-4abd-80d4-f56868e4d66a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3fb74e3-334a-4e85-8900-a6b9e62f879b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ace48deb-2f7d-4af9-b44a-15746146b648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ba7f83f-7a01-4f23-81b5-0178515306ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2df6b0b8-b3e3-42f4-91d4-d28ee5ca82f1",
      "documentation": "Lists the commands requested by users of the Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommands",
      "responses": [
        {
          "uuid": "31f5d2de-a77f-4907-8b9b-6b1b7f2617f2",
          "body": "{\n  \"Commands\": [\n    {\n      \"CommandId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Comment\": \"\",\n      \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n      \"Parameters\": {},\n      \"InstanceIds\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"OutputS3Region\": \"\",\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"TargetCount\": {{faker 'datatype.number'}},\n      \"CompletedCount\": {{faker 'datatype.number'}},\n      \"ErrorCount\": {{faker 'datatype.number'}},\n      \"DeliveryTimedOutCount\": {{faker 'datatype.number'}},\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n      },\n      \"TimeoutSeconds\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f92c0f81-8045-4463-8e97-468d4a5286eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d380759f-0152-4692-bad8-edf4042c221b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26a16129-1556-4b6d-bffb-d8b0949a41e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e1dbfd7-98f1-4170-ad6b-7b322bb2af57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9eafbf16-48c2-4112-8d41-fa1350fc6887",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73001bf8-5d6a-4978-b4ec-15479dd05cce",
      "documentation": "For a specified resource ID, this API operation returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceItems",
      "responses": [
        {
          "uuid": "68e91099-99bc-4114-958e-47955b1c1f30",
          "body": "{\n  \"ComplianceItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Id\": \"\",\n      \"Title\": \"\",\n      \"Status\": \"\",\n      \"Severity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"Details\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "76fee22c-a8ea-4ed8-8f7e-dda5555f064d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9dc7060a-0a48-4a9f-a84b-39c13f32d5d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbb33c2a-6b8e-483b-9db3-5653ffaaecb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e82d17f6-4ae3-4dc7-ab93-3359c5d25613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "781d39b2-4fd8-469b-8b59-51987d063016",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5228f6ac-cb96-4643-9847-3972d1f8847e",
      "documentation": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceSummaries",
      "responses": [
        {
          "uuid": "ff21231d-e908-47ab-abbd-fd25b1f98100",
          "body": "{\n  \"ComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'datatype.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'datatype.number'}},\n          \"HighCount\": {{faker 'datatype.number'}},\n          \"MediumCount\": {{faker 'datatype.number'}},\n          \"LowCount\": {{faker 'datatype.number'}},\n          \"InformationalCount\": {{faker 'datatype.number'}},\n          \"UnspecifiedCount\": {{faker 'datatype.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'datatype.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'datatype.number'}},\n          \"HighCount\": {{faker 'datatype.number'}},\n          \"MediumCount\": {{faker 'datatype.number'}},\n          \"LowCount\": {{faker 'datatype.number'}},\n          \"InformationalCount\": {{faker 'datatype.number'}},\n          \"UnspecifiedCount\": {{faker 'datatype.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d0ff95ac-a8c1-46fa-91d7-b83a8f2c9680",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74577fb7-548c-4822-9432-365cfe909029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "212c560f-ac82-4d4c-99bb-f3308d3bcc88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa0c1e31-d8a1-446b-bc5a-b2aa806c0567",
      "documentation": "Information about approval reviews for a version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentMetadataHistory",
      "responses": [
        {
          "uuid": "a9e76ea6-82d6-46d7-85d3-3e9f64712111",
          "body": "{\n  \"Name\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Author\": \"\",\n  \"Metadata\": {\n    \"ReviewerResponse\": [\n      {\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"ReviewStatus\": \"\",\n        \"Comment\": [\n          {\n            \"Type\": \"\",\n            \"Content\": \"\"\n          }\n        ],\n        \"Reviewer\": \"\"\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3fd44b3d-87cc-431a-93e9-c5640371835b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26ef5e1d-bd69-4bdc-9997-d43ed9fb18d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cbfc10f1-30ee-4eaa-9dcc-cd5fb2c2aa5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf36e317-021f-4302-9048-7d5cffb11765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c1dd6d9-0113-4cc4-8563-c568684a751b",
      "documentation": "List all versions for a document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentVersions",
      "responses": [
        {
          "uuid": "401a7e7b-6161-4055-b9d8-f74c2678e1d1",
          "body": "{\n  \"DocumentVersions\": [\n    {\n      \"Name\": \"\",\n      \"DisplayName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"VersionName\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"IsDefaultVersion\": {{faker 'datatype.boolean'}},\n      \"DocumentFormat\": \"\",\n      \"Status\": \"\",\n      \"StatusInformation\": \"\",\n      \"ReviewStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c8b0235-0f14-47cd-a9e6-24b70634769a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b4f5a33-97f3-41cf-8cf7-96c19c20f5a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7939790c-20ef-499b-be56-8b5cf44f1031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7ed42a9-eca6-44b8-91be-dda1a1077cd2",
      "documentation": "Returns all Systems Manager (SSM) documents in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results of this request by using a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocuments",
      "responses": [
        {
          "uuid": "4b37b322-587f-4a51-8d96-4f524b81188c",
          "body": "{\n  \"DocumentIdentifiers\": [\n    {\n      \"Name\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DisplayName\": \"\",\n      \"Owner\": \"\",\n      \"VersionName\": \"\",\n      \"PlatformTypes\": [\n        \"{{oneOf (array 'Windows' 'Linux')}}\"\n      ],\n      \"DocumentVersion\": \"\",\n      \"DocumentType\": \"\",\n      \"SchemaVersion\": \"\",\n      \"DocumentFormat\": \"\",\n      \"TargetType\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Requires\": [\n        {\n          \"Name\": \"\",\n          \"Version\": \"\"\n        }\n      ],\n      \"ReviewStatus\": \"\",\n      \"Author\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a18be04-8763-44d7-9c80-1c2daaa73ad2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "368c5e43-9d0b-459f-a443-f4f3e33f54b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77568405-8184-40c7-9a28-a937239720ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77f224b3-7e3f-4abf-a1e0-f392e4442744",
      "documentation": "A list of inventory items returned by the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListInventoryEntries",
      "responses": [
        {
          "uuid": "fd81bdd9-7f97-40af-ae8a-ac28481cdac0",
          "body": "{\n  \"TypeName\": \"\",\n  \"InstanceId\": \"\",\n  \"SchemaVersion\": \"\",\n  \"CaptureTime\": \"\",\n  \"Entries\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c2c3d940-29cd-42ed-b48b-a50db0175c5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eceb59d8-cf4f-4691-ac63-9753142513e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed90deba-de7d-4b82-850c-9ba328cfd42f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af1073dc-3d5f-4f3f-b6e5-5c446ddb3d27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "262a2179-43ee-49c7-a1b8-469f873e0c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5059bea3-8bb1-4265-9bc5-ea8025142377",
      "documentation": "Returns a list of all OpsItem events in the current Amazon Web Services Region and Amazon Web Services account. You can limit the results to events associated with specific OpsItems by specifying a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemEvents",
      "responses": [
        {
          "uuid": "ccf94e75-433f-4d0f-acaf-7f820deba9b8",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"EventId\": \"\",\n      \"Source\": \"\",\n      \"DetailType\": \"\",\n      \"Detail\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea8295c1-c3f2-4863-8a2a-fff08b01e6bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "860cc448-0659-418c-b977-e22e68fb9e55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "957e3f0e-5c28-455b-a28d-f5ad80b038f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f712b425-abdc-444a-a31f-f987821fd534",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f276028-715d-4218-81bb-3e2dfb292455",
      "documentation": "Lists all related-item resources associated with an OpsItem.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemRelatedItems",
      "responses": [
        {
          "uuid": "abb9011b-536a-47e6-97b5-aaec30cae488",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ResourceType\": \"\",\n      \"AssociationType\": \"\",\n      \"ResourceUri\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": {\n        \"Arn\": \"\"\n      },\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83edaf8f-6e63-47c2-842b-5d227f532638",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81d447b7-1840-467a-9a2c-bf8a154da3da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1deb6aeb-40f1-46fb-8f70-eb2d9cc3502f",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when displaying all Application Manager OpsMetadata objects or blobs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsMetadata",
      "responses": [
        {
          "uuid": "6bc069b4-004e-4620-b503-96f25e12f13b",
          "body": "{\n  \"OpsMetadataList\": [\n    {\n      \"ResourceId\": \"\",\n      \"OpsMetadataArn\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0280a3f7-a5b2-4bfe-960d-85141ce9b262",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac602e99-2f4e-4e68-8971-db7b8ac266e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b0394f1e-b82b-4774-908b-63e95918f7cc",
      "documentation": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries",
      "responses": [
        {
          "uuid": "0d53b690-f508-4de5-878b-2cda22d14dc5",
          "body": "{\n  \"ResourceComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Status\": \"\",\n      \"OverallSeverity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'datatype.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'datatype.number'}},\n          \"HighCount\": {{faker 'datatype.number'}},\n          \"MediumCount\": {{faker 'datatype.number'}},\n          \"LowCount\": {{faker 'datatype.number'}},\n          \"InformationalCount\": {{faker 'datatype.number'}},\n          \"UnspecifiedCount\": {{faker 'datatype.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'datatype.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'datatype.number'}},\n          \"HighCount\": {{faker 'datatype.number'}},\n          \"MediumCount\": {{faker 'datatype.number'}},\n          \"LowCount\": {{faker 'datatype.number'}},\n          \"InformationalCount\": {{faker 'datatype.number'}},\n          \"UnspecifiedCount\": {{faker 'datatype.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "467b11e1-ee9e-44e8-9a43-c36011c341cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5814aa46-49d1-4dfd-baad-6345f23ec8bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a5bfdb5-219b-4ec4-95f0-b1b526d2cd6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b8c2a2a-27bf-4e98-ae24-5566613d1229",
      "documentation": "<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceDataSync",
      "responses": [
        {
          "uuid": "983c8b91-6247-4564-8ce5-d7329e908fcd",
          "body": "{\n  \"ResourceDataSyncItems\": [\n    {\n      \"SyncName\": \"\",\n      \"SyncType\": \"\",\n      \"SyncSource\": {\n        \"SourceType\": \"\",\n        \"AwsOrganizationsSource\": {\n          \"OrganizationSourceType\": \"\",\n          \"OrganizationalUnits\": [\n            {\n              \"OrganizationalUnitId\": \"\"\n            }\n          ]\n        },\n        \"SourceRegions\": [\n          \"\"\n        ],\n        \"IncludeFutureRegions\": {{faker 'datatype.boolean'}},\n        \"State\": \"\",\n        \"EnableAllOpsDataSources\": {{faker 'datatype.boolean'}}\n      },\n      \"S3Destination\": {\n        \"BucketName\": \"\",\n        \"Prefix\": \"\",\n        \"SyncFormat\": \"\",\n        \"Region\": \"\",\n        \"AWSKMSKeyARN\": \"\",\n        \"DestinationDataSharing\": {\n          \"DestinationDataSharingType\": \"\"\n        }\n      },\n      \"LastSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"SyncLastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"SyncCreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSyncStatusMessage\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4a6df072-6d17-4750-8c5d-2f554c0c8f37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a38d577f-8d76-48fc-82c2-b7aec8dd8508",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05733c34-484a-4619-a7b1-3102ec0fb8ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7383e00f-1fd3-4405-9af8-4a9027e2510c",
      "documentation": "<p>Returns a list of the tags assigned to the specified resource.</p> <p>For information about the ID format for each supported resource type, see <a>AddTagsToResource</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListTagsForResource",
      "responses": [
        {
          "uuid": "a19bd1f0-f247-40e1-92f2-56f0ce2c464b",
          "body": "{\n  \"TagList\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb678a56-b0c8-4c84-b298-8e384398e9cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5dde2dc2-1782-4420-a0a2-946ec3be18dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e81f49b-43cf-4780-a8b7-ff8d11619541",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0df7b7bb-b9a0-4986-9bb6-d77bfcd8e6c1",
      "documentation": "Shares a Amazon Web Services Systems Manager document (SSM document)publicly or privately. If you share a document privately, you must specify the Amazon Web Services user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ModifyDocumentPermission",
      "responses": [
        {
          "uuid": "68305421-4875-4960-8318-54281d1c3638",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7a65dfb-cea4-48b1-938d-830a937631ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54b4e939-ff1e-42b4-8828-0b00fc873e60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91fef6d5-3512-4745-9109-55297fa3697b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d000db4-d145-4372-afa6-2eb8bd351a71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentPermissionLimit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0451a5c-7614-471e-baef-c6911bb70b91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c420132-81c0-4d7d-924c-e546075d8e1e",
      "documentation": "<p>Registers a compliance type and other compliance details on a designated resource. This operation lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutComplianceItems",
      "responses": [
        {
          "uuid": "02a6c84f-af63-4bff-afc4-481ce350ce3c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ffdc6c0a-bc86-42f0-bc0d-789f2472b1a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75244928-586a-4607-9d19-44e3b60c5f55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2c6eece-8506-4907-bd9e-4678340d668e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15faff11-7770-48cb-aa47-ba4907e99757",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c201e1d-17fc-4e87-ad26-0edb2f41a019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ComplianceTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08c4f0a4-1487-439a-bc4f-96f3f0dec9bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07b7af63-61c5-4bdc-8695-bcd3b47cea62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c6c0820-b620-4351-95c4-e542f9648f0b",
      "documentation": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutInventory",
      "responses": [
        {
          "uuid": "258348a8-7314-4ffc-8c5a-7e5ad355b505",
          "body": "{\n  \"Message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8c4a55be-45ab-4f37-be70-74cc7ce20f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d22ce32e-e833-47b3-adab-ce536b512f59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71536516-c564-4a6e-ad0b-c27db3d8e94a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2d2759f-fe83-4749-a012-3f62d3f946c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f6e6c77-8819-4b65-9a93-dd477377dc2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb989b9c-def7-4398-850d-ef4188ea47f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5fd77cf-92a5-4235-b721-c3ae29247767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ItemContentMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d394fd9-57d7-4613-86d4-d4b47892169b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CustomSchemaCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f2fa5e4-db4e-4ad9-8cf6-a96bb17f9f94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UnsupportedInventorySchemaVersionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5128347a-8b4b-41eb-8d4a-7d956e2b6b8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UnsupportedInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0bcb47d-d42e-4519-a2d1-00ab5d175956",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b30d6b1-25bc-4610-a3b8-5eaa11299602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "SubTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9266840-196a-4590-b59d-3062e1cc0214",
      "documentation": "Add a parameter to the system.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutParameter",
      "responses": [
        {
          "uuid": "fbe6b563-6988-4ae2-b908-830eb4c3efd8",
          "body": "{\n  \"Version\": {{faker 'datatype.number'}},\n  \"Tier\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "84f2c86e-77c1-4a59-bd69-18689dc8d577",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efc0452c-6620-454f-88ae-d09a3731dfd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eacd9426-75a9-4f1e-8c37-aa2479041b01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "639bcb45-b2ee-4bc8-8842-98e0473cf122",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54137756-04b3-477b-b41b-ea0bc6d5a285",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e5f9bce-6022-4999-83cf-17a68c1f26ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "HierarchyLevelLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebabea85-fb33-40aa-a8c6-5aa400bdf981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "HierarchyTypeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58296ff6-831b-44d1-ab7b-64ea362f190a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidAllowedPatternException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "332f005e-7cfe-4212-b037-9f2be93d6ed5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ParameterMaxVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8a70d55-7b37-438b-8410-d4922e1bad1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ParameterPatternMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e732ec8d-44b0-4207-b767-f8b8a9df7c57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UnsupportedParameterType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28adfd60-4d4a-4954-8cdb-3778c1a942bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "PoliciesLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f91ceb4-7c46-430d-ad01-f898acf77b9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidPolicyTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58fec711-ef28-471c-8cb3-671e46653ed2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidPolicyAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78c6dccc-d440-4e27-b16b-d2dddb392c8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "IncompatiblePolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "512c4a0d-cb2b-4cab-bfaf-107e72717aa2",
      "documentation": "<p>Defines the default patch baseline for the relevant operating system.</p> <p>To reset the Amazon Web Services-predefined patch baseline as the default, specify the full patch baseline Amazon Resource Name (ARN) as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code> instead of <code>pb-0574b43a65ea646ed</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "a529b223-0866-44c5-982e-799924d4a277",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "abc9bea4-fbc9-4fbc-bc07-b029f0216447",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e64a2689-1ac3-43ce-82d5-9289d56f9df2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffb0d74d-a7bd-4a5f-bca2-42877b39a01d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d24ed26f-72ce-4c53-a534-9ae10b3bfaf1",
      "documentation": "Registers a patch baseline for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "4a63d74e-084c-40b2-bff3-36ec073eae3f",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "353dd0ea-af7d-4023-aeef-89329ca4d414",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fee0a62-a851-457a-85a6-cdbd9d58dc66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38e65506-fba0-4d67-8fea-2a960ba20941",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22a1d10b-087e-492b-83f8-9c4722d8af58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5a2a54d-4d13-4a6e-ae65-e428f847a0d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab290a55-ff9a-4227-8f0c-1cfe862dede2",
      "documentation": "Registers a target with a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "0bc814b0-8e83-4ebf-93b4-3b19402262f7",
          "body": "{\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e2d7ee77-b678-42d4-b2fc-48bdb4471ea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e076fb91-dbdd-442a-94dd-e6d92606b7ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21e01547-7b17-4fcf-97d5-b9a7c5b621de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dab6be02-6153-4ef9-b2fc-a47d602f9f8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "047b074b-95f4-4ef4-ae23-23644a4d3515",
      "documentation": "Adds a new task to a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "88d45427-8956-4d82-9229-9d19cf3e8768",
          "body": "{\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29660bd4-dbc5-42f5-9377-482dda40a4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c259c21d-6f47-4f23-b514-c15b3a5bbecb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f22d1ce0-a5fc-4453-9951-884034101d59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84746951-f47d-4936-bef1-da528f0c9745",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "FeatureNotAvailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56271084-7590-4e16-94e3-f6375624f5c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab45d2dd-eff6-4536-8ce4-50314f6b834a",
      "documentation": "Removes tag keys from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "a81bf208-934b-4f69-8b39-90947402c008",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c2b38e97-df07-4e0f-9470-bef0c2d3bf1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3bba6285-ac4d-4a6f-a2a2-f81adfc9496e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a76b884a-4a14-4cfc-a649-2ac00a0af35d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7971db42-4378-447c-8f6a-1aedd6c4931b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "833cf506-e485-4243-ac8f-d8ae8c8fba98",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. </p> <p>Reset the service setting for the account to the default value as provisioned by the Amazon Web Services service team. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResetServiceSetting",
      "responses": [
        {
          "uuid": "2c9d0ca4-ca41-494e-aaa2-d289146c9b2c",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bdaab44c-52d7-4483-a413-14a384a1fbd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63603503-db06-48a3-830d-bce7c43fc6eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54e1a26f-6006-47bc-841f-a9a1abda0d69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9b1b853-7ad1-4f94-8db5-da769d7b0d83",
      "documentation": "<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It isn't intended for any other use.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResumeSession",
      "responses": [
        {
          "uuid": "64e3629a-639d-4a51-bade-dea4d508a78f",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "600eed31-1584-48ca-86f5-a71908aca168",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1afe4c9c-4e37-4369-a09d-87158ed113b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0980d862-a02a-4954-8e9d-803e52faa63d",
      "documentation": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendAutomationSignal",
      "responses": [
        {
          "uuid": "d2967537-1fe9-4f8f-8592-d070651ea6ec",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9def3cf8-95af-4b00-a845-b4640d8aebf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e299b60-d9cc-424c-b0a9-cab67c25ec48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AutomationStepNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06a0067a-b8d1-43f1-b33b-f5398c92caf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidAutomationSignalException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2fd99ca-8765-4a13-9b15-993534a167a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "baa9403e-83b0-40d9-9107-accaf413b3dc",
      "documentation": "Runs commands on one or more managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendCommand",
      "responses": [
        {
          "uuid": "b330e79d-cb6f-48bd-92a3-fd7055a27736",
          "body": "{\n  \"Command\": {\n    \"CommandId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Comment\": \"\",\n    \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n    \"Parameters\": {},\n    \"InstanceIds\": [\n      \"\"\n    ],\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusDetails\": \"\",\n    \"OutputS3Region\": \"\",\n    \"OutputS3BucketName\": \"\",\n    \"OutputS3KeyPrefix\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"TargetCount\": {{faker 'datatype.number'}},\n    \"CompletedCount\": {{faker 'datatype.number'}},\n    \"ErrorCount\": {{faker 'datatype.number'}},\n    \"DeliveryTimedOutCount\": {{faker 'datatype.number'}},\n    \"ServiceRole\": \"\",\n    \"NotificationConfig\": {\n      \"NotificationArn\": \"\",\n      \"NotificationEvents\": [\n        \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n      ],\n      \"NotificationType\": \"\"\n    },\n    \"CloudWatchOutputConfig\": {\n      \"CloudWatchLogGroupName\": \"\",\n      \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n    },\n    \"TimeoutSeconds\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "40b2d5b7-9ab7-4815-ae73-aab2c5cab423",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25f7bbea-1b87-4f68-9e66-91c2e9419bad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5fd17e0-3519-4609-a1d1-ba4ce08e2ab4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0470d2d2-5969-4b7f-a371-e0907e27bb9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3c326e5-1193-4836-8fe6-bbd04186caf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3639d3b9-34dc-4867-9138-f56b0a474586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOutputFolder",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6abdf079-ee84-4415-a8ee-58a2e80c9d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "855f162f-f527-4c33-9b5f-05ba9a42bcc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b11988ce-0e96-47ce-91e5-62c5d9e23ea6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "426a6ea0-786e-4e07-8094-6a22a9b2c9e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidRole",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7b157c2-36ff-4cd5-a67d-d533768e95b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidNotificationConfig",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "275ce884-7374-478d-8dd6-5fa4779d4a21",
      "documentation": "Runs an association immediately and only one time. This operation can be helpful when troubleshooting associations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAssociationsOnce",
      "responses": [
        {
          "uuid": "c150013d-cbaa-4e19-852e-e875b01ab752",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8202570b-5d13-42fe-80fc-66b6499d9f0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAssociation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2382873d-f6c2-46e9-8a15-06121a1002fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d537521-d14d-4006-83d5-cb39e7da078c",
      "documentation": "Initiates execution of an Automation runbook.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAutomationExecution",
      "responses": [
        {
          "uuid": "2b999d05-f6ac-4d6c-b021-98b79868aa75",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1adf2e11-3194-42a2-a513-d16d876ddab5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0c1cb6f-885c-4211-8910-227678148e9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58c0c48e-f14a-418d-94d3-c39a7f93ea91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1af171cc-dc4d-4792-8f24-780e79ddc104",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54d2bc8f-fcbd-489a-974c-e205ce5daa2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "048a2eae-4c80-4f8e-bb4c-56b01364c634",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3e1b926-906a-4bc8-ac74-cb34c583f047",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6bb1be24-9cde-4e8a-a011-a64b4cf15125",
      "documentation": "Creates a change request for Change Manager. The Automation runbooks specified in the change request run only after all required approvals for the change request have been received.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartChangeRequestExecution",
      "responses": [
        {
          "uuid": "54d3432b-8ab8-468d-b31f-cc315c30e3c0",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39a7c79e-8992-44fd-9442-14f59d60d3f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "477b4162-4552-42b6-ad21-fe1dfbf39688",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5d537a4-f337-476b-95cd-5ad35518dd2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b82596ad-cf02-4dae-9bb6-f082cab490c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c2b033c-8a93-4f89-80c4-0f51fe2697bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2bc1226a-6f32-46f4-9e7d-e0b2c783b7c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a2ce923-93ca-4d10-86e0-f30f04487b31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AutomationDefinitionNotApprovedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cee044cb-ce84-4461-9b5c-c6e196263c67",
      "documentation": "<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>Amazon Web Services CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\">Install the Session Manager plugin for the Amazon Web Services CLI</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Amazon Web Services Tools for PowerShell usage: Start-SSMSession isn't currently supported by Amazon Web Services Tools for PowerShell on Windows local machines.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartSession",
      "responses": [
        {
          "uuid": "2884d506-380a-488a-9d19-02f36796dab4",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fca0c1fa-03c0-41f3-a15e-35f6734d3336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6555c076-63dc-44f4-ad8b-0b17980b415d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TargetNotConnected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abff55e8-a2ba-486a-8adf-5d4e3dcfa19d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c16ef1ec-583e-440c-ae29-636f608e22f0",
      "documentation": "Stop an Automation that is currently running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StopAutomationExecution",
      "responses": [
        {
          "uuid": "ef523c9f-f0ef-425e-9d18-242c79ce1067",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88f4e571-ffb1-44bd-b807-14f9c4db8c79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "feeb3064-73e3-4b0e-bd8b-f5932ad177e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationStatusUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c8ccbb5-adb0-4494-a830-45f3e04d36b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a566a47-cc09-481f-98a2-c3565e66e82c",
      "documentation": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session isn't be resumed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.TerminateSession",
      "responses": [
        {
          "uuid": "1d742b82-949a-43ca-8b9d-1a14f0932dd9",
          "body": "{\n  \"SessionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "82f6c01f-a5e1-47a0-b6b6-72d4caba5e31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0594174-e48f-4386-bbb7-f6b46bacd2d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d311ebd-320c-433b-ade4-26785f7a96c3",
      "documentation": "Remove a label or labels from a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UnlabelParameterVersion",
      "responses": [
        {
          "uuid": "5cd65a86-def5-4787-9c6c-5b2d8309660e",
          "body": "{\n  \"RemovedLabels\": [\n    \"\"\n  ],\n  \"InvalidLabels\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f87ee47a-d54e-4686-ae17-8db79058035d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0934f85-8a2c-4317-997e-ae687d154339",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8c28168-376f-4234-b89b-f1405a6d1481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c327894f-4d60-4fad-825d-09770890ccf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7272179-15e5-4cac-8706-791b65e5f73e",
      "documentation": "<p>Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon Simple Storage Service (Amazon S3) output. </p> <p>In order to call this API operation, your Identity and Access Management (IAM) user account, group, or role must be configured with permission to call the <a>DescribeAssociation</a> API operation. If you don't have permission to call <code>DescribeAssociation</code>, then you receive the following error: <code>An error occurred (AccessDeniedException) when calling the UpdateAssociation operation: User: &lt;user_arn&gt; isn't authorized to perform: ssm:DescribeAssociation on resource: &lt;resource_arn&gt;</code> </p> <important> <p>When you update an association, the association immediately runs against the specified targets.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociation",
      "responses": [
        {
          "uuid": "9f8eddb5-ca3b-41a2-a48e-13f3f10bd046",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64a232a2-b056-4540-9280-fee5dc960484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42f8c91a-6e0f-4ae7-b2af-c360fa60ec42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9449d0f4-b34f-4dcd-8753-29ea4bf43a2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4413fe14-7938-42ac-8461-c995dd5a06d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3f04a18-f2b1-4ccc-b6c7-bd44b35997a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec885c9a-c729-4a94-b1dc-9b3ab2131933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0bd5572-c42c-4566-b8ec-ed3fcfe7c2a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUpdate",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c612a49-0d0c-4b75-97c5-2d97c0e1820c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da0c1c54-79e8-48f0-9385-64a3f551896d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c66fb4ab-d313-4eeb-b057-291aeb5ffb23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1725319-2a49-4697-b17e-ef013581ca3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2df0acfd-cc79-4692-9749-a5dfd27018de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "AssociationVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea89039b-9f99-425b-923b-f92c7e0ed954",
      "documentation": "<p>Updates the status of the Amazon Web Services Systems Manager document (SSM document) associated with the specified instance.</p> <p> <code>UpdateAssociationStatus</code> is primarily used by the Amazon Web Services Systems Manager Agent (SSM Agent) to report status updates about your associations and is only used for associations created with the <code>InstanceId</code> legacy parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociationStatus",
      "responses": [
        {
          "uuid": "833b7889-2f05-44a4-8d56-03aed30ce780",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'datatype.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e5a4142-8b98-4d29-98a2-03b5d37f3e17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3dacdd9b-db54-4b6a-b52d-93bedfde2d95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cbea30a9-fddf-43d1-aa78-aab1d80b52b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8806c40-8c26-429b-a4eb-e2105c6c5c29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ccc0d5c-7f58-4fec-be51-a53bfa2e5959",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StatusUnchanged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6456dfdd-9bb8-4df1-b6a4-b29b6265cfbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6a3fd2d-6603-4c3e-a9fa-f0ef014f46ea",
      "documentation": "Updates one or more values for an SSM document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocument",
      "responses": [
        {
          "uuid": "c6ba02e3-583d-4211-8eb1-922548f5fce1",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bdbf222a-15f3-45f8-986b-99080b51783f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b39a28b0-827e-457c-bced-58c5d634c7de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DocumentVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f30041f5-36fd-4ff4-8fe6-1283dbe33038",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9c29693-ad3d-4610-a352-9e643b1528e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc09d020-d1a9-485b-a722-b2320a499b48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateDocumentVersionName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3ed074d-3cbd-49f5-93a1-566efe6c26d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2dc79b5-3ff6-4f1b-b66c-67c1618e11e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f69b353-ded6-481d-a96f-53741e70e8a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06c200d4-3061-4c89-adaf-4ca2a4c41b7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "508a1038-098c-4049-83e5-40d46121199f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fbe8fe4d-0a09-4f37-a004-b1b0c59c223c",
      "documentation": "Set the default version of a document. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion",
      "responses": [
        {
          "uuid": "6aa4bcbf-6bf3-478b-83b3-6a9c77c8bdfc",
          "body": "{\n  \"Description\": {\n    \"Name\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DefaultVersionName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11499011-a1a9-4748-b4e6-083372cb04c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d14ef6e-71fa-456c-b82c-606e002fe53c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0e79133-9af3-4e51-9f67-4f945c048748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "884e1b55-8419-49c3-86dd-56cf392e462c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc474f3c-0c44-4e4a-ade7-c11655812347",
      "documentation": "Updates information related to approval reviews for a specific version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentMetadata",
      "responses": [
        {
          "uuid": "4c9daeb6-7676-417b-a107-3574c056ff63",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "883fd70e-2cc0-4163-ba0a-9ceeee0065a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85ac34d4-1042-4dc3-946b-7767c5bd90c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ace72217-1653-4b52-ae49-1d1cdafb56b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8b327ef-309f-4113-9517-7dab3a85cdfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1beb3fdd-09f2-448a-9f42-3fbcb5ae1070",
      "documentation": "<p>Updates an existing maintenance window. Only specified parameters are modified.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow",
      "responses": [
        {
          "uuid": "f5870cbe-773e-410c-8d65-726571700c59",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'datatype.number'}},\n  \"Duration\": {{faker 'datatype.number'}},\n  \"Cutoff\": {{faker 'datatype.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'datatype.boolean'}},\n  \"Enabled\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e7c1736-9472-442e-9fc8-f6787e5e8d06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d411ce7-ebc1-4583-8303-5455ade56c9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ffa88f6-1fc4-4da1-a48b-0db3dc0e7f6c",
      "documentation": "<p>Modifies the target of an existing maintenance window. You can change the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p> </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li> <li> <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag type to another. The three supported tag types are ID target, Tag target, and resource group. For more information, see <a>Target</a>.</p> </li> </ul> <note> <p>If a parameter is null, then the corresponding field isn't modified.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget",
      "responses": [
        {
          "uuid": "e5b2c2d4-d629-4a7d-9102-fd7fbd3a8903",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"OwnerInformation\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c4e95f06-502c-453f-bcee-7cb5e48d0fe7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bcaeef2-9ea3-430b-b1a9-636b1992270c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3139e422-21cd-4fb9-aef3-9bbb1544066d",
      "documentation": "<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code> task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p> </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code> </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code> </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then the corresponding field isn't modified. If you set <code>Replace</code> to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are required for this request. Optional fields that aren't specified are set to null.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "bc3ce3b1-cd17-47d6-8f8a-83bd93ff49fe",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'datatype.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'datatype.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'datatype.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b80072f2-8771-465e-8c46-8b09c80bcb62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0dbaf716-969c-4c22-8b81-82223acfbebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9b00831-b9fc-40f6-94aa-6a834a9b1daa",
      "documentation": "Changes the Identity and Access Management (IAM) role that is assigned to the on-premises instance or virtual machines (VM). IAM roles are first assigned to these hybrid instances during the activation process. For more information, see <a>CreateActivation</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole",
      "responses": [
        {
          "uuid": "2a5f4e57-62eb-4539-9788-46333b98960e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61c4b20c-7b40-43b7-b8ef-48141b9b6e54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3c5bd43-3016-40e8-951a-726c9df849af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8874affc-144a-487d-93e4-a30246edf558",
      "documentation": "<p>Edit or change an OpsItem. You must have permission in Identity and Access Management (IAM) to update an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsItem",
      "responses": [
        {
          "uuid": "fa2dec70-43ac-4d4b-b5b0-32c76f45c63d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "99bba5bd-5ca8-44cb-aeb2-e6404a67bbb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9b38779-43f9-4c0c-acd0-d46515afa59b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3829477-afd9-43ae-803a-56612c85d881",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb592345-01b6-45bf-b792-f19a9fbddafa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b29063a8-26fd-4d73-b5d6-0aec9c06a74d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44523fc8-1dfb-4d9e-a95f-106b01846fb8",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when you edit OpsMetadata in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsMetadata",
      "responses": [
        {
          "uuid": "c132719a-0043-45c6-b0a4-a5e571f96711",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "17d5a50a-76f3-4528-b7f5-2560d67553a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a07cc2a-ff6e-4e72-a004-b27eb4821813",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1574b1f6-534a-4d99-ac81-7a448c580c83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataKeyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "196e10c5-0f4c-48ec-9f2e-7feb92121027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1db3d643-573a-42e7-8b4f-940ece1e7e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76d8ff64-0888-49da-a652-f683f8df50f5",
      "documentation": "<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdatePatchBaseline",
      "responses": [
        {
          "uuid": "cea95ad8-4a71-4696-b301-27581c04b2f3",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'datatype.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'datatype.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e62f3f05-afe8-4aa5-832f-da25a707c22b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da623261-e2e8-4be9-9b89-a3fc99ccc2d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42b2f34b-773b-477f-9fbb-8fccf0575120",
      "documentation": "<p>Update a resource data sync. After you create a resource data sync for a Region, you can't change the account options for that sync. For example, if you create a sync in the us-east-2 (Ohio) Region and you choose the <code>Include only the current account</code> option, you can't edit that sync later and choose the <code>Include all accounts from my Organizations configuration</code> option. Instead, you must delete the first resource data sync, and create a new one.</p> <note> <p>This API operation only supports a resource data sync that was created with a SyncFromSource <code>SyncType</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateResourceDataSync",
      "responses": [
        {
          "uuid": "35c9398d-03a2-41fb-bcba-47e2df46681f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a250099d-a76a-4fb6-a272-508c0721e84a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e37c1b1e-3349-4e3e-b8da-f4f288efbb36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e706872d-2d4c-4115-94b6-f5dc0d7a14f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fea1c455-9333-4bd0-90b7-6c9b460f1310",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20957207-de8b-49c5-a10d-b643ef33739f",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Update the service setting for the account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateServiceSetting",
      "responses": [
        {
          "uuid": "e139f4de-6cb4-4883-a050-eec2af6f33f5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8cd3bb69-54be-443e-a97c-a999bb00865b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c745cb75-4328-4c68-8a5b-08149300e555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd0edeaf-5966-47a0-9879-759b09d3d20d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}