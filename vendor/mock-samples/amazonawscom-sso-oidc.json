{
  "uuid": "4c97ad18-4a87-419b-b95c-b3ea70239a26",
  "lastMigration": 24,
  "name": "AWS SSO OIDC",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e5c9e45a-93dc-4ccb-882c-31c45f564b0a",
      "documentation": "Creates and returns an access token for the authorized client. The access token issued will be used to fetch short-term credentials for the assigned roles in the AWS account.",
      "method": "post",
      "endpoint": "token",
      "responses": [
        {
          "uuid": "852324a8-e3c3-428a-a2be-19eaef5df25c",
          "body": "{\n  \"accessToken\": \"\",\n  \"tokenType\": \"\",\n  \"expiresIn\": {{faker 'datatype.number'}},\n  \"refreshToken\": \"\",\n  \"idToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c88b5bb0-a392-43aa-9e50-bba02094e59c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f05a7d7-bff7-45c6-8d1c-ece071af37d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfd4dab0-4be7-43d3-8337-6426f56e3f7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidGrantException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33fca087-c6d6-440b-8ce8-da703518398b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47d28c0d-a6a9-4b47-a3f7-04b4001dfa8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedGrantTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99a5fab8-bc6f-49bc-93f5-73241334d253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b27e9183-fdd4-463f-9da4-83e5894ad484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AuthorizationPendingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "675fa305-077a-4f96-8c17-aa852589ac16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e055603-c2ee-4022-8879-45e0fb2700d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3a386b9-45bd-421e-a0ea-636db47ef862",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ExpiredTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abae1cdf-0d4d-45b5-b387-36185020842c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec41812c-c641-4e05-96c3-8a78b66a96e7",
      "documentation": "Registers a client with AWS SSO. This allows clients to initiate device authorization. The output should be persisted for reuse through many authentication requests.",
      "method": "post",
      "endpoint": "client/register",
      "responses": [
        {
          "uuid": "80c1a19c-9340-4f2d-b402-6fec9b114bab",
          "body": "{\n  \"clientId\": \"\",\n  \"clientSecret\": \"\",\n  \"clientIdIssuedAt\": {{faker 'datatype.number'}},\n  \"clientSecretExpiresAt\": {{faker 'datatype.number'}},\n  \"authorizationEndpoint\": \"\",\n  \"tokenEndpoint\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "954d5063-38e4-4291-90bb-05d09015c143",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "067a75e1-fab6-43f9-a709-a18db9c42a98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2a7b183-9918-403d-805d-19a55ebadcfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientMetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dae0804e-23ff-4635-b55e-28dc29493886",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9856cae1-b751-42aa-8a76-0bbb9407568f",
      "documentation": "Initiates device authorization by requesting a pair of verification codes from the authorization service.",
      "method": "post",
      "endpoint": "device_authorization",
      "responses": [
        {
          "uuid": "92b52d9d-659a-4190-9f37-665d1853b053",
          "body": "{\n  \"deviceCode\": \"\",\n  \"userCode\": \"\",\n  \"verificationUri\": \"\",\n  \"verificationUriComplete\": \"\",\n  \"expiresIn\": {{faker 'datatype.number'}},\n  \"interval\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b163a5d4-e316-4b24-8d49-7e190a99deca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ddb68fc-7a0a-48fa-9433-1c8b1d0d8c0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15315da5-13b7-4238-a6f3-533d1a6a22e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d15c3e9-bf27-4e17-9213-536f2e15751a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18bdd0e6-bf50-47cd-9f0e-3105ca132de8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}