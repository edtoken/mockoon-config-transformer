{
  "uuid": "1f7bbe8f-75eb-4a2a-ab05-6cead504fff6",
  "lastMigration": 24,
  "name": "Stationsdatenbereitstellung",
  "endpointPrefix": "stada/v2",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7561a2b5-1d26-43cc-abf2-c50b5e79e4fe",
      "documentation": "This operation provides the master data for german railway stations.",
      "method": "get",
      "endpoint": "stations",
      "responses": [
        {
          "uuid": "0d6dc107-0f4b-445f-a325-1c3cdcf6c0c1",
          "body": "{\n  \"limit\": {{faker 'datatype.number'}},\n  \"offset\": {{faker 'datatype.number'}},\n  \"result\": [\n    {\n      \"DBinformation\": {\n        \"friday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"holiday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"monday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"saturday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"sunday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"thursday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"tuesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"wednesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        }\n      },\n      \"aufgabentraeger\": {\n        \"name\": \"\",\n        \"shortname\": \"\"\n      },\n      \"category\": {{faker 'datatype.number'}},\n      \"evaNumbers\": [\n        {\n          \"geographicCoordinate\": {\n            \"coordinates\": [\n              {{faker 'datatype.float'}}\n            ],\n            \"type\": \"\"\n          },\n          \"isMain\": {{faker 'datatype.boolean'}},\n          \"number\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"federalState\": \"\",\n      \"hasBicycleParking\": {{faker 'datatype.boolean'}},\n      \"hasCarRental\": {{faker 'datatype.boolean'}},\n      \"hasDBLounge\": {{faker 'datatype.boolean'}},\n      \"hasLocalPublicTransport\": {{faker 'datatype.boolean'}},\n      \"hasLockerSystem\": {{faker 'datatype.boolean'}},\n      \"hasLostAndFound\": {{faker 'datatype.boolean'}},\n      \"hasMobilityService\": \"\",\n      \"hasParking\": {{faker 'datatype.boolean'}},\n      \"hasPublicFacilities\": {{faker 'datatype.boolean'}},\n      \"hasRailwayMission\": {{faker 'datatype.boolean'}},\n      \"hasSteplessAccess\": \"{{oneOf (array 'yes' 'no' 'partial')}}\",\n      \"hasTaxiRank\": {{faker 'datatype.boolean'}},\n      \"hasTravelCenter\": {{faker 'datatype.boolean'}},\n      \"hasTravelNecessities\": {{faker 'datatype.boolean'}},\n      \"hasWiFi\": {{faker 'datatype.boolean'}},\n      \"localServiceStaff\": {\n        \"friday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"holiday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"monday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"saturday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"sunday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"thursday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"tuesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"wednesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        }\n      },\n      \"mailingAdress\": {\n        \"city\": \"\",\n        \"houseNumber\": \"\",\n        \"street\": \"\",\n        \"zipcode\": {{faker 'datatype.number'}}\n      },\n      \"name\": \"\",\n      \"number\": {{faker 'datatype.number'}},\n      \"priceCategory\": {{faker 'datatype.number'}},\n      \"regionalbereich\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}},\n        \"shortName\": \"\"\n      },\n      \"riL100Identifiers\": [\n        {\n          \"geographicCoordinate\": {\n            \"coordinates\": [\n              {{faker 'datatype.float'}}\n            ],\n            \"type\": \"\"\n          },\n          \"hasSteamPermission\": {{faker 'datatype.boolean'}},\n          \"isMain\": {{faker 'datatype.boolean'}},\n          \"rilIdentifier\": \"\"\n        }\n      ],\n      \"stationManagement\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}}\n      },\n      \"szentrale\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}},\n        \"publicPhoneNumber\": \"\"\n      },\n      \"timetableOffice\": {\n        \"email\": \"\",\n        \"name\": \"\"\n      }\n    }\n  ],\n  \"total\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "station data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75d6ed8e-9671-4996-8614-0fdee0fdf290",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request (illegal parameter or illegal parameter value)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2eeb13dc-246c-4ea7-9537-d49f6965fcbe",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f55a87b0-a28b-4fe4-ba38-5ef47a339b55",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c9e3edc-e364-41e6-9509-fe7b349b8687",
      "documentation": "This operation provides the master data for a german railway station selected by its station-id.",
      "method": "get",
      "endpoint": "stations/:id",
      "responses": [
        {
          "uuid": "ad420686-72b8-44e3-b700-a6faf3a38fc8",
          "body": "{\n  \"limit\": {{faker 'datatype.number'}},\n  \"offset\": {{faker 'datatype.number'}},\n  \"result\": [\n    {\n      \"DBinformation\": {\n        \"friday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"holiday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"monday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"saturday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"sunday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"thursday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"tuesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"wednesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        }\n      },\n      \"aufgabentraeger\": {\n        \"name\": \"\",\n        \"shortname\": \"\"\n      },\n      \"category\": {{faker 'datatype.number'}},\n      \"evaNumbers\": [\n        {\n          \"geographicCoordinate\": {\n            \"coordinates\": [\n              {{faker 'datatype.float'}}\n            ],\n            \"type\": \"\"\n          },\n          \"isMain\": {{faker 'datatype.boolean'}},\n          \"number\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"federalState\": \"\",\n      \"hasBicycleParking\": {{faker 'datatype.boolean'}},\n      \"hasCarRental\": {{faker 'datatype.boolean'}},\n      \"hasDBLounge\": {{faker 'datatype.boolean'}},\n      \"hasLocalPublicTransport\": {{faker 'datatype.boolean'}},\n      \"hasLockerSystem\": {{faker 'datatype.boolean'}},\n      \"hasLostAndFound\": {{faker 'datatype.boolean'}},\n      \"hasMobilityService\": \"\",\n      \"hasParking\": {{faker 'datatype.boolean'}},\n      \"hasPublicFacilities\": {{faker 'datatype.boolean'}},\n      \"hasRailwayMission\": {{faker 'datatype.boolean'}},\n      \"hasSteplessAccess\": \"{{oneOf (array 'yes' 'no' 'partial')}}\",\n      \"hasTaxiRank\": {{faker 'datatype.boolean'}},\n      \"hasTravelCenter\": {{faker 'datatype.boolean'}},\n      \"hasTravelNecessities\": {{faker 'datatype.boolean'}},\n      \"hasWiFi\": {{faker 'datatype.boolean'}},\n      \"localServiceStaff\": {\n        \"friday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"holiday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"monday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"saturday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"sunday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"thursday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"tuesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        },\n        \"wednesday\": {\n          \"fromTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"toTime\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n        }\n      },\n      \"mailingAdress\": {\n        \"city\": \"\",\n        \"houseNumber\": \"\",\n        \"street\": \"\",\n        \"zipcode\": {{faker 'datatype.number'}}\n      },\n      \"name\": \"\",\n      \"number\": {{faker 'datatype.number'}},\n      \"priceCategory\": {{faker 'datatype.number'}},\n      \"regionalbereich\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}},\n        \"shortName\": \"\"\n      },\n      \"riL100Identifiers\": [\n        {\n          \"geographicCoordinate\": {\n            \"coordinates\": [\n              {{faker 'datatype.float'}}\n            ],\n            \"type\": \"\"\n          },\n          \"hasSteamPermission\": {{faker 'datatype.boolean'}},\n          \"isMain\": {{faker 'datatype.boolean'}},\n          \"rilIdentifier\": \"\"\n        }\n      ],\n      \"stationManagement\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}}\n      },\n      \"szentrale\": {\n        \"name\": \"\",\n        \"number\": {{faker 'datatype.number'}},\n        \"publicPhoneNumber\": \"\"\n      },\n      \"timetableOffice\": {\n        \"email\": \"\",\n        \"name\": \"\"\n      }\n    }\n  ],\n  \"total\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "station data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fbf2d15-7662-4286-bf43-e32aa2149460",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request (illegal parameter or illegal parameter value)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0b1ea3c-cfd1-43cb-8a74-482c34c32dc7",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae7c33f6-b750-46f8-b50a-9be599fe9fd0",
          "body": "{\n  \"errMsg\": \"\",\n  \"errNo\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d9415e47-8835-4815-a979-151bf9e2166a",
      "documentation": "This operation provides the master data for 3-S-Zentralen.",
      "method": "get",
      "endpoint": "szentralen",
      "responses": [
        {
          "uuid": "840cb7ab-f518-46f2-936f-d8b55f6dbef2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "3-S-Zentralen data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7209df01-6353-4346-8a3e-7f0d59ae9ce2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request (illegal parameter or illegal parameter value)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10ed3a7c-8b2e-43cb-b321-1ba2fabcadd1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8441d0d5-1dec-44a5-aed5-03bbe4cfb993",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43824a19-120e-49c2-806c-422d86fa1ef5",
      "documentation": "This operation provides the master data for 3-S-Zentralen select by its id.",
      "method": "get",
      "endpoint": "szentralen/:id",
      "responses": [
        {
          "uuid": "3a60965b-3371-4505-89b3-aa0a648f6685",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "3-S-Zentralen data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "040ea8e9-4e3a-421d-bb26-4fd5fe217fba",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request (illegal parameter or illegal parameter value)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf05e4f8-2ba6-48cf-a897-857fa9ab2d11",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d87f2262-307c-4a1c-b9b6-04ee93b3d7ed",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}