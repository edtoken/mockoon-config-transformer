{
  "uuid": "05698fa5-3374-4556-bbce-27c2fe2861e8",
  "lastMigration": 24,
  "name": "AWS OpsWorks CM",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4bedcc77-b0b6-4adc-814b-9f259c3f69ed",
      "documentation": "<p> Associates a new node with the server. For more information about how to disassociate a node, see <a>DisassociateNode</a>.</p> <p> On a Chef server: This command is an alternative to <code>knife bootstrap</code>.</p> <p> Example (Chef): <code>aws opsworks-cm associate-node --server-name <i>MyServer</i> --node-name <i>MyManagedNode</i> --engine-attributes \"Name=<i>CHEF_ORGANIZATION</i>,Value=default\" \"Name=<i>CHEF_NODE_PUBLIC_KEY</i>,Value=<i>public-key-pem</i>\"</code> </p> <p> On a Puppet server, this command is an alternative to the <code>puppet cert sign</code> command that signs a Puppet node CSR. </p> <p> Example (Puppet): <code>aws opsworks-cm associate-node --server-name <i>MyServer</i> --node-name <i>MyManagedNode</i> --engine-attributes \"Name=<i>PUPPET_NODE_CSR</i>,Value=<i>csr-pem</i>\"</code> </p> <p> A node can can only be associated with servers that are in a <code>HEALTHY</code> state. Otherwise, an <code>InvalidStateException</code> is thrown. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. The AssociateNode API call can be integrated into Auto Scaling configurations, AWS Cloudformation templates, or the user data of a server's instance. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.AssociateNode",
      "responses": [
        {
          "uuid": "e5a0374f-c10e-4569-b205-e83b0ae68eac",
          "body": "{\n  \"NodeAssociationStatusToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c07895ea-8e4e-486c-a666-61054aee4fe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f308b892-fdcf-41be-99f7-01b73084ede5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2c9e139-de5e-49c2-980b-f635fb566c07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ac259b7-1231-4bbd-b4f2-dd333031a848",
      "documentation": "<p> Creates an application-level backup of a server. While the server is in the <code>BACKING_UP</code> state, the server cannot be changed, and no additional backup can be created. </p> <p> Backups can be created for servers in <code>RUNNING</code>, <code>HEALTHY</code>, and <code>UNHEALTHY</code> states. By default, you can create a maximum of 50 manual backups. </p> <p> This operation is asynchronous. </p> <p> A <code>LimitExceededException</code> is thrown when the maximum number of manual backups is reached. An <code>InvalidStateException</code> is thrown when the server is not in any of the following states: RUNNING, HEALTHY, or UNHEALTHY. A <code>ResourceNotFoundException</code> is thrown when the server is not found. A <code>ValidationException</code> is thrown when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.CreateBackup",
      "responses": [
        {
          "uuid": "ac8a5873-a77b-4142-824c-2420c3a38865",
          "body": "{\n  \"Backup\": {\n    \"BackupArn\": \"\",\n    \"BackupId\": \"\",\n    \"BackupType\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Description\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"S3DataSize\": {{faker 'datatype.number'}},\n    \"S3DataUrl\": \"\",\n    \"S3LogUrl\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServerName\": \"\",\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusDescription\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ToolsVersion\": \"\",\n    \"UserArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7f34163-4a77-4035-82c8-4b796e23d28c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd7a1b42-7568-4704-bad2-9b064ddcfb4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d910a54-1c45-4a17-89ce-165026b6e369",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "199daca6-ad71-4dae-9199-2fba29c9ecbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afab8fcc-57b5-48e7-81b3-a3ca1433ffcb",
      "documentation": "<p> Creates and immedately starts a new server. The server is ready to use when it is in the <code>HEALTHY</code> state. By default, you can create a maximum of 10 servers. </p> <p> This operation is asynchronous. </p> <p> A <code>LimitExceededException</code> is thrown when you have created the maximum number of servers (10). A <code>ResourceAlreadyExistsException</code> is thrown when a server with the same name already exists in the account. A <code>ResourceNotFoundException</code> is thrown when you specify a backup ID that is not valid or is for a backup that does not exist. A <code>ValidationException</code> is thrown when parameters of the request are not valid. </p> <p> If you do not specify a security group by adding the <code>SecurityGroupIds</code> parameter, AWS OpsWorks creates a new security group. </p> <p> <i>Chef Automate:</i> The default security group opens the Chef server to the world on TCP port 443. If a KeyName is present, AWS OpsWorks enables SSH access. SSH is also open to the world on TCP port 22. </p> <p> <i>Puppet Enterprise:</i> The default security group opens TCP ports 22, 443, 4433, 8140, 8142, 8143, and 8170. If a KeyName is present, AWS OpsWorks enables SSH access. SSH is also open to the world on TCP port 22. </p> <p>By default, your server is accessible from any IP address. We recommend that you update your security group rules to allow access from known IP addresses and address ranges only. To edit security group rules, open Security Groups in the navigation pane of the EC2 management console. </p> <p>To specify your own domain for a server, and provide your own self-signed or CA-signed certificate and private key, specify values for <code>CustomDomain</code>, <code>CustomCertificate</code>, and <code>CustomPrivateKey</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.CreateServer",
      "responses": [
        {
          "uuid": "f3987542-bdc3-4b3c-96a7-d48b0af63264",
          "body": "{\n  \"Server\": {\n    \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n    \"BackupRetentionCount\": {{faker 'datatype.number'}},\n    \"ServerName\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"CloudFormationStackArn\": \"\",\n    \"CustomDomain\": \"\",\n    \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n    \"Endpoint\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"MaintenanceStatus\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusReason\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ServerArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "02f23a2b-d587-4666-87bf-7f477781bb08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "435c207a-fb9c-4d8a-8bd7-b61487d2479c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8327123-8b35-4535-a62e-3b68515c1b99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b71811a3-003a-4547-bfc3-fcf2f8dfcd91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9101f9fb-e478-4054-ab77-c322675c92f9",
      "documentation": "<p> Deletes a backup. You can delete both manual and automated backups. This operation is asynchronous. </p> <p> An <code>InvalidStateException</code> is thrown when a backup deletion is already in progress. A <code>ResourceNotFoundException</code> is thrown when the backup does not exist. A <code>ValidationException</code> is thrown when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DeleteBackup",
      "responses": [
        {
          "uuid": "e56d171e-e791-47df-aa7b-5f6933b15d14",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4021afa6-48f9-467f-ac6a-75b2b79b1787",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0911010-2685-422f-9af5-f9ce332226d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfb515ee-542d-44c6-9fd9-d4b25c443eab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a1e1d0f-203d-4563-a241-32c61aeae707",
      "documentation": "<p> Deletes the server and the underlying AWS CloudFormation stacks (including the server's EC2 instance). When you run this command, the server state is updated to <code>DELETING</code>. After the server is deleted, it is no longer returned by <code>DescribeServer</code> requests. If the AWS CloudFormation stack cannot be deleted, the server cannot be deleted. </p> <p> This operation is asynchronous. </p> <p> An <code>InvalidStateException</code> is thrown when a server deletion is already in progress. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p> <p> </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DeleteServer",
      "responses": [
        {
          "uuid": "eb3571ad-e63e-4f44-aac7-bf834556b371",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29a9be36-6393-4b4b-bc8c-d0de108129f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84d4c624-dda8-4089-846e-3fc9ea74a9ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03d16cfc-5ad9-4185-801f-30fca791cb4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb31e456-6532-4d74-ac0a-f67edc0598f4",
      "documentation": "<p> Describes your OpsWorks-CM account attributes. </p> <p> This operation is synchronous. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "feccabba-25fa-4d72-a2b3-3d93a169af9e",
          "body": "{\n  \"Attributes\": [\n    {\n      \"Name\": \"\",\n      \"Maximum\": {{faker 'datatype.number'}},\n      \"Used\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e856b53-bec8-4cc5-b82a-b357f4b13cff",
      "documentation": "<p> Describes backups. The results are ordered by time, with newest backups first. If you do not specify a BackupId or ServerName, the command returns all backups. </p> <p> This operation is synchronous. </p> <p> A <code>ResourceNotFoundException</code> is thrown when the backup does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DescribeBackups",
      "responses": [
        {
          "uuid": "58086ea5-3d94-4476-8614-f5666d7894c3",
          "body": "{\n  \"Backups\": [\n    {\n      \"BackupArn\": \"\",\n      \"BackupId\": \"\",\n      \"BackupType\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Description\": \"\",\n      \"Engine\": \"\",\n      \"EngineModel\": \"\",\n      \"EngineVersion\": \"\",\n      \"InstanceProfileArn\": \"\",\n      \"InstanceType\": \"\",\n      \"KeyPair\": \"\",\n      \"PreferredBackupWindow\": \"\",\n      \"PreferredMaintenanceWindow\": \"\",\n      \"S3DataSize\": {{faker 'datatype.number'}},\n      \"S3DataUrl\": \"\",\n      \"S3LogUrl\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"ServerName\": \"\",\n      \"ServiceRoleArn\": \"\",\n      \"Status\": \"\",\n      \"StatusDescription\": \"\",\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"ToolsVersion\": \"\",\n      \"UserArn\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e49c24bf-73c9-4119-9e94-002209a24b9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78b51cc2-584f-4f00-814e-31eb059758c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fe453cf-7018-42ad-ae8e-93abf8098dc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc9da48d-2ea0-4b21-84b9-90804b884831",
      "documentation": "<p> Describes events for a specified server. Results are ordered by time, with newest events first. </p> <p> This operation is synchronous. </p> <p> A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DescribeEvents",
      "responses": [
        {
          "uuid": "7ddd4503-c7fb-4b16-bbd6-52f264f78a07",
          "body": "{\n  \"ServerEvents\": [\n    {\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"ServerName\": \"\",\n      \"Message\": \"\",\n      \"LogUrl\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fddbdf03-5145-4e1b-89b1-ed13725c0424",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ae2c2aa-ec30-4040-935f-7b513df6462f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "470af9e8-7a43-486f-aee8-56b2c935a6f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1876390a-f47c-447c-9baa-e4f71a170078",
      "documentation": "<p> Returns the current status of an existing association or disassociation request. </p> <p> A <code>ResourceNotFoundException</code> is thrown when no recent association or disassociation request with the specified token is found, or when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DescribeNodeAssociationStatus",
      "responses": [
        {
          "uuid": "3fca9f0c-d909-443f-b2b2-d97cc79a3852",
          "body": "{\n  \"NodeAssociationStatus\": \"\",\n  \"EngineAttributes\": [\n    {\n      \"Name\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1fcd5c80-fcf8-4bc3-94dd-77bbe715bec9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d1ba608-98bc-4f67-80ec-691ea694e6f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f58bed47-3826-4c98-a733-e3e5097e2461",
      "documentation": "<p> Lists all configuration management servers that are identified with your account. Only the stored results from Amazon DynamoDB are returned. AWS OpsWorks CM does not query other services. </p> <p> This operation is synchronous. </p> <p> A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DescribeServers",
      "responses": [
        {
          "uuid": "64b774be-4f4d-4285-874b-93b9b2ce4148",
          "body": "{\n  \"Servers\": [\n    {\n      \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n      \"BackupRetentionCount\": {{faker 'datatype.number'}},\n      \"ServerName\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"CloudFormationStackArn\": \"\",\n      \"CustomDomain\": \"\",\n      \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n      \"Endpoint\": \"\",\n      \"Engine\": \"\",\n      \"EngineModel\": \"\",\n      \"EngineAttributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"EngineVersion\": \"\",\n      \"InstanceProfileArn\": \"\",\n      \"InstanceType\": \"\",\n      \"KeyPair\": \"\",\n      \"MaintenanceStatus\": \"\",\n      \"PreferredMaintenanceWindow\": \"\",\n      \"PreferredBackupWindow\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"ServiceRoleArn\": \"\",\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"ServerArn\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b63591d-d198-4f6e-93d3-484b46f6700e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4dd558a4-5eef-456d-8a44-3632a0c86889",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cfa8b1e-a020-4fab-ab8e-91c5c649d503",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "caeff6d4-9ecd-4b01-88f5-90060b1be299",
      "documentation": "<p> Disassociates a node from an AWS OpsWorks CM server, and removes the node from the server's managed nodes. After a node is disassociated, the node key pair is no longer valid for accessing the configuration manager's API. For more information about how to associate a node, see <a>AssociateNode</a>. </p> <p>A node can can only be disassociated from a server that is in a <code>HEALTHY</code> state. Otherwise, an <code>InvalidStateException</code> is thrown. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.DisassociateNode",
      "responses": [
        {
          "uuid": "a2f0b7e3-923e-4acb-9dc1-1979982cc8f6",
          "body": "{\n  \"NodeAssociationStatusToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0f9f7572-e647-4d82-9647-d660fdcb4402",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a88046a3-df7c-48e4-88e6-f4a61f7d70dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "577df14f-49af-4742-8a7a-91bacf083084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e73a6da7-e208-45b3-b742-d33325854719",
      "documentation": "<p> Exports a specified server engine attribute as a base64-encoded string. For example, you can export user data that you can use in EC2 to associate nodes with a server. </p> <p> This operation is synchronous. </p> <p> A <code>ValidationException</code> is raised when parameters of the request are not valid. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. An <code>InvalidStateException</code> is thrown when the server is in any of the following states: CREATING, TERMINATED, FAILED or DELETING. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.ExportServerEngineAttribute",
      "responses": [
        {
          "uuid": "24df212e-b944-4f1c-8baa-060d691509a7",
          "body": "{\n  \"EngineAttribute\": {\n    \"Name\": \"\",\n    \"Value\": \"\"\n  },\n  \"ServerName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aee30137-3985-4a62-bef1-bc9d391bd692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "82924e57-6fd4-43b3-a058-3985228798e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbf710f6-f279-49b2-8857-641a713e60fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a5657ef-3d88-42e4-9828-92deedbe8687",
      "documentation": "Returns a list of tags that are applied to the specified AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise servers or backups.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.ListTagsForResource",
      "responses": [
        {
          "uuid": "7e78ad40-5cd9-4f2d-8283-e5ec76cbc19d",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e91d9c8e-9eb9-4bd0-9819-4d0e9eeb1764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0ad1889-8d52-4f8e-86cc-8389e36d80a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7fec66d-d438-4150-85ab-ed0e2d4eb4df",
      "documentation": "<p> Restores a backup to a server that is in a <code>CONNECTION_LOST</code>, <code>HEALTHY</code>, <code>RUNNING</code>, <code>UNHEALTHY</code>, or <code>TERMINATED</code> state. When you run RestoreServer, the server's EC2 instance is deleted, and a new EC2 instance is configured. RestoreServer maintains the existing server endpoint, so configuration management of the server's client devices (nodes) should continue to work. </p> <p>Restoring from a backup is performed by creating a new EC2 instance. If restoration is successful, and the server is in a <code>HEALTHY</code> state, AWS OpsWorks CM switches traffic over to the new instance. After restoration is finished, the old EC2 instance is maintained in a <code>Running</code> or <code>Stopped</code> state, but is eventually terminated.</p> <p> This operation is asynchronous. </p> <p> An <code>InvalidStateException</code> is thrown when the server is not in a valid state. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.RestoreServer",
      "responses": [
        {
          "uuid": "3900d6cb-ad58-4f7b-b384-e2dac69e99f6",
          "body": "{\n  \"Server\": {\n    \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n    \"BackupRetentionCount\": {{faker 'datatype.number'}},\n    \"ServerName\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"CloudFormationStackArn\": \"\",\n    \"CustomDomain\": \"\",\n    \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n    \"Endpoint\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"MaintenanceStatus\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusReason\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ServerArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72a83e93-9578-4548-8e8f-eaeb63a76667",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e950f91-6d9c-4c2c-9de7-c52caf601c4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9e46240-30ee-4a85-99d4-d1011207c15d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d300f2d-1c90-4a3a-8ad6-b9a7f2e68b66",
      "documentation": "<p> Manually starts server maintenance. This command can be useful if an earlier maintenance attempt failed, and the underlying cause of maintenance failure has been resolved. The server is in an <code>UNDER_MAINTENANCE</code> state while maintenance is in progress. </p> <p> Maintenance can only be started on servers in <code>HEALTHY</code> and <code>UNHEALTHY</code> states. Otherwise, an <code>InvalidStateException</code> is thrown. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.StartMaintenance",
      "responses": [
        {
          "uuid": "74811737-f9fe-4b16-b62e-da31252ae4b2",
          "body": "{\n  \"Server\": {\n    \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n    \"BackupRetentionCount\": {{faker 'datatype.number'}},\n    \"ServerName\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"CloudFormationStackArn\": \"\",\n    \"CustomDomain\": \"\",\n    \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n    \"Endpoint\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"MaintenanceStatus\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusReason\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ServerArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0a9bcca7-adef-4158-8119-396ae9baf281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e2bd07c-4ccc-434e-a76c-1b94276e8fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c7dc279-1548-4a55-92ec-c31f8cc4249f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35c9292e-4dc8-43b8-8752-44b23735348c",
      "documentation": "Applies tags to an AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise server, or to server backups.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.TagResource",
      "responses": [
        {
          "uuid": "17f1c837-8125-4fbc-9196-abcae04a340f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ba26b20-2838-4022-a796-b179443046e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a17ceaeb-8d3d-4f32-a3f5-5290546ba0f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d2b2ca3-6b9f-4bcd-991c-67943cd7e253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb69ded6-ff14-49d1-a97a-02f4acbcaa0c",
      "documentation": "Removes specified tags from an AWS OpsWorks-CM server or backup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.UntagResource",
      "responses": [
        {
          "uuid": "dca09691-23c1-4db7-b39b-e23cfdfce41a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6f125886-ede0-4e3a-8fa1-08e20144b626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f285735f-6e50-4eda-9aaf-baee4d1fac08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d14cae7-abf4-4801-b955-a91bfa67c1cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99fbfa5d-046e-4de7-b8ec-ed6fef82c71e",
      "documentation": "<p> Updates settings for a server. </p> <p> This operation is synchronous. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.UpdateServer",
      "responses": [
        {
          "uuid": "b885aff9-051a-475c-95b9-757381265265",
          "body": "{\n  \"Server\": {\n    \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n    \"BackupRetentionCount\": {{faker 'datatype.number'}},\n    \"ServerName\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"CloudFormationStackArn\": \"\",\n    \"CustomDomain\": \"\",\n    \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n    \"Endpoint\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"MaintenanceStatus\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusReason\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ServerArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f15f3ce6-349b-4b4a-a048-85328f134a7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e7f59cd-53b9-4b34-9435-ce188e45ca9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23a013ad-c6e5-48b7-ae42-3a1ed2e20c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c140cfd7-48af-48c7-aa9c-f2ca61582a7c",
      "documentation": "<p> Updates engine-specific attributes on a specified server. The server enters the <code>MODIFYING</code> state when this operation is in progress. Only one update can occur at a time. You can use this command to reset a Chef server's public key (<code>CHEF_PIVOTAL_KEY</code>) or a Puppet server's admin password (<code>PUPPET_ADMIN_PASSWORD</code>). </p> <p> This operation is asynchronous. </p> <p> This operation can only be called for servers in <code>HEALTHY</code> or <code>UNHEALTHY</code> states. Otherwise, an <code>InvalidStateException</code> is raised. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OpsWorksCM_V2016_11_01.UpdateServerEngineAttributes",
      "responses": [
        {
          "uuid": "67fdeabc-bcea-4cd6-852d-1118f9746310",
          "body": "{\n  \"Server\": {\n    \"AssociatePublicIpAddress\": {{faker 'datatype.boolean'}},\n    \"BackupRetentionCount\": {{faker 'datatype.number'}},\n    \"ServerName\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"CloudFormationStackArn\": \"\",\n    \"CustomDomain\": \"\",\n    \"DisableAutomatedBackup\": {{faker 'datatype.boolean'}},\n    \"Endpoint\": \"\",\n    \"Engine\": \"\",\n    \"EngineModel\": \"\",\n    \"EngineAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"EngineVersion\": \"\",\n    \"InstanceProfileArn\": \"\",\n    \"InstanceType\": \"\",\n    \"KeyPair\": \"\",\n    \"MaintenanceStatus\": \"\",\n    \"PreferredMaintenanceWindow\": \"\",\n    \"PreferredBackupWindow\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"ServiceRoleArn\": \"\",\n    \"Status\": \"\",\n    \"StatusReason\": \"\",\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"ServerArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e339f483-dab3-4408-82c8-2bb098777cd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19970667-cd33-4d67-a0b2-0e07167d4863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "195f8502-aeea-4f26-88bd-7645d036611c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}