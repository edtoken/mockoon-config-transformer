{
  "uuid": "8191b947-a685-45e2-be5a-858afdf3fd8a",
  "lastMigration": 24,
  "name": "Amazon Machine Learning",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2547993a-5db5-4e55-a099-9286bd6109bd",
      "documentation": "Adds one or more tags to an object, up to a limit of 10. Each tag consists of a key and an optional value. If you add a tag using a key that is already associated with the ML object, <code>AddTags</code> updates the tag's value.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.AddTags",
      "responses": [
        {
          "uuid": "b00e8ba7-76d9-46e8-9938-21fbea17e970",
          "body": "{\n  \"ResourceId\": \"\",\n  \"ResourceType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e6e4b81-0f7c-438d-8af6-7c6ea9d20f1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "242f6895-11c4-4d0f-9223-dad103fd48a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77802c19-b16d-4c31-bbb9-6f27f30219b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68335e6c-21a4-4cfd-ba1a-32c97a5b43f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b67a601b-3dbd-4ddc-a0b6-02ccffefd22b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd40f1a5-2c41-4158-9692-89faf3eb63c5",
      "documentation": "<p>Generates predictions for a group of observations. The observations to process exist in one or more data files referenced by a <code>DataSource</code>. This operation creates a new <code>BatchPrediction</code>, and uses an <code>MLModel</code> and the data files referenced by the <code>DataSource</code> as information sources. </p> <p> <code>CreateBatchPrediction</code> is an asynchronous operation. In response to <code>CreateBatchPrediction</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>BatchPrediction</code> status to <code>PENDING</code>. After the <code>BatchPrediction</code> completes, Amazon ML sets the status to <code>COMPLETED</code>. </p> <p>You can poll for status updates by using the <a>GetBatchPrediction</a> operation and checking the <code>Status</code> parameter of the result. After the <code>COMPLETED</code> status appears, the results are available in the location specified by the <code>OutputUri</code> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateBatchPrediction",
      "responses": [
        {
          "uuid": "8181d3bf-fb7f-43a4-b3c8-6324078d3481",
          "body": "{\n  \"BatchPredictionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3393a83b-6cce-4c7d-8408-cecf328ebc8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efa4bff8-6af1-43d9-a079-f880fe6aa5bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5efa216a-5a55-4bf4-bb3e-764a8f9465d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f2f824b-4f5b-4175-9478-a80fddfcc94e",
      "documentation": "<p>Creates a <code>DataSource</code> object from an <a href=\"http://aws.amazon.com/rds/\"> Amazon Relational Database Service</a> (Amazon RDS). A <code>DataSource</code> references data that can be used to perform <code>CreateMLModel</code>, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations.</p> <p> <code>CreateDataSourceFromRDS</code> is an asynchronous operation. In response to <code>CreateDataSourceFromRDS</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After the <code>DataSource</code> is created and ready for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in the <code>COMPLETED</code> or <code>PENDING</code> state can be used only to perform <code>&gt;CreateMLModel</code>&gt;, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations. </p> <p> If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute of the <code>GetDataSource</code> operation response. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromRDS",
      "responses": [
        {
          "uuid": "2a95bfcd-2ff9-45d6-8a7c-f385cd54f08e",
          "body": "{\n  \"DataSourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b57b385b-6c83-4c5a-9fa9-234e67b38cd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bad2b64-aff9-4680-b406-43d8a630c994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3bf8d5a-6e79-4076-8be7-979e49bc08ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e14f7ada-6a66-4be6-b25b-ee25efc222c4",
      "documentation": "<p>Creates a <code>DataSource</code> from a database hosted on an Amazon Redshift cluster. A <code>DataSource</code> references data that can be used to perform either <code>CreateMLModel</code>, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations.</p> <p> <code>CreateDataSourceFromRedshift</code> is an asynchronous operation. In response to <code>CreateDataSourceFromRedshift</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After the <code>DataSource</code> is created and ready for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in <code>COMPLETED</code> or <code>PENDING</code> states can be used to perform only <code>CreateMLModel</code>, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations. </p> <p> If Amazon ML can't accept the input source, it sets the <code>Status</code> parameter to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute of the <code>GetDataSource</code> operation response. </p> <p>The observations should be contained in the database hosted on an Amazon Redshift cluster and should be specified by a <code>SelectSqlQuery</code> query. Amazon ML executes an <code>Unload</code> command in Amazon Redshift to transfer the result set of the <code>SelectSqlQuery</code> query to <code>S3StagingLocation</code>.</p> <p>After the <code>DataSource</code> has been created, it's ready for use in evaluations and batch predictions. If you plan to use the <code>DataSource</code> to train an <code>MLModel</code>, the <code>DataSource</code> also requires a recipe. A recipe describes how each input variable will be used in training an <code>MLModel</code>. Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions.</p> <p>You can't change an existing datasource, but you can copy and modify the settings from an existing Amazon Redshift datasource to create a new datasource. To do so, call <code>GetDataSource</code> for an existing datasource and copy the values to a <code>CreateDataSource</code> call. Change the settings that you want to change and make sure that all required fields have the appropriate values.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromRedshift",
      "responses": [
        {
          "uuid": "5339eb8f-c971-487d-b6fe-77b2bb2f2195",
          "body": "{\n  \"DataSourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9b7a10ff-2406-4c37-b606-4bfb58da688e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a73df843-bc77-42da-a54a-3a5badace514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7405f316-1984-4a84-8973-4a82a1fe5f82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "984a7a93-b04d-4a20-8ee4-8bb5f1eb335b",
      "documentation": "<p>Creates a <code>DataSource</code> object. A <code>DataSource</code> references data that can be used to perform <code>CreateMLModel</code>, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations.</p> <p> <code>CreateDataSourceFromS3</code> is an asynchronous operation. In response to <code>CreateDataSourceFromS3</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After the <code>DataSource</code> has been created and is ready for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in the <code>COMPLETED</code> or <code>PENDING</code> state can be used to perform only <code>CreateMLModel</code>, <code>CreateEvaluation</code> or <code>CreateBatchPrediction</code> operations. </p> <p> If Amazon ML can't accept the input source, it sets the <code>Status</code> parameter to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute of the <code>GetDataSource</code> operation response. </p> <p>The observation data used in a <code>DataSource</code> should be ready to use; that is, it should have a consistent structure, and missing data values should be kept to a minimum. The observation data must reside in one or more .csv files in an Amazon Simple Storage Service (Amazon S3) location, along with a schema that describes the data items by name and type. The same schema must be used for all of the data files referenced by the <code>DataSource</code>. </p> <p>After the <code>DataSource</code> has been created, it's ready to use in evaluations and batch predictions. If you plan to use the <code>DataSource</code> to train an <code>MLModel</code>, the <code>DataSource</code> also needs a recipe. A recipe describes how each input variable will be used in training an <code>MLModel</code>. Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromS3",
      "responses": [
        {
          "uuid": "e5a37f83-ef04-4897-96eb-0eb98305dd0c",
          "body": "{\n  \"DataSourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e95d316-1231-4d39-b7c8-203a50445bf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5060b3af-0cc9-420d-965b-6a4a936b4093",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e2fb126-2d68-471c-a531-5d3b62e08d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1264c0eb-0e73-452f-9451-f390e02d0b59",
      "documentation": "<p>Creates a new <code>Evaluation</code> of an <code>MLModel</code>. An <code>MLModel</code> is evaluated on a set of observations associated to a <code>DataSource</code>. Like a <code>DataSource</code> for an <code>MLModel</code>, the <code>DataSource</code> for an <code>Evaluation</code> contains values for the <code>Target Variable</code>. The <code>Evaluation</code> compares the predicted result for each observation to the actual outcome and provides a summary so that you know how effective the <code>MLModel</code> functions on the test data. Evaluation generates a relevant performance metric, such as BinaryAUC, RegressionRMSE or MulticlassAvgFScore based on the corresponding <code>MLModelType</code>: <code>BINARY</code>, <code>REGRESSION</code> or <code>MULTICLASS</code>. </p> <p> <code>CreateEvaluation</code> is an asynchronous operation. In response to <code>CreateEvaluation</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the evaluation status to <code>PENDING</code>. After the <code>Evaluation</code> is created and ready for use, Amazon ML sets the status to <code>COMPLETED</code>. </p> <p>You can use the <code>GetEvaluation</code> operation to check progress of the evaluation during the creation operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateEvaluation",
      "responses": [
        {
          "uuid": "7b39c6d7-a9ea-4a54-8805-4bebadf8f85b",
          "body": "{\n  \"EvaluationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e51c597-ddc1-416b-894b-e4e956e6bff7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd2513a2-125c-494f-b9f7-a4b1388e1dda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d1599a7-68df-4da0-a1ab-1f090ff3a251",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88f366b9-44d3-4058-9b6a-f6740cfb57f3",
      "documentation": "<p>Creates a new <code>MLModel</code> using the <code>DataSource</code> and the recipe as information sources. </p> <p>An <code>MLModel</code> is nearly immutable. Users can update only the <code>MLModelName</code> and the <code>ScoreThreshold</code> in an <code>MLModel</code> without creating a new <code>MLModel</code>. </p> <p> <code>CreateMLModel</code> is an asynchronous operation. In response to <code>CreateMLModel</code>, Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>MLModel</code> status to <code>PENDING</code>. After the <code>MLModel</code> has been created and ready is for use, Amazon ML sets the status to <code>COMPLETED</code>. </p> <p>You can use the <code>GetMLModel</code> operation to check the progress of the <code>MLModel</code> during the creation operation.</p> <p> <code>CreateMLModel</code> requires a <code>DataSource</code> with computed statistics, which can be created by setting <code>ComputeStatistics</code> to <code>true</code> in <code>CreateDataSourceFromRDS</code>, <code>CreateDataSourceFromS3</code>, or <code>CreateDataSourceFromRedshift</code> operations. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateMLModel",
      "responses": [
        {
          "uuid": "39d62734-ab23-4338-bab2-b3e59898114b",
          "body": "{\n  \"MLModelId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "838f21a5-47f1-4856-8b9c-b7b60cfc7e27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f08a0f3-6192-40ba-921d-dbb36fcccf38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99c8a2fd-4b59-4b33-89eb-3bd41e6a4ab3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddb3eeef-7a1d-4044-b881-c037e4508d19",
      "documentation": "Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the URI of the <code>MLModel</code>; that is, the location to send real-time prediction requests for the specified <code>MLModel</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.CreateRealtimeEndpoint",
      "responses": [
        {
          "uuid": "38a91c20-9542-4032-87ba-9fefcc4bd8bc",
          "body": "{\n  \"MLModelId\": \"\",\n  \"RealtimeEndpointInfo\": {\n    \"PeakRequestsPerSecond\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"EndpointUrl\": \"\",\n    \"EndpointStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4e8f6882-a079-477b-8451-aeccc34eeef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78c5d8e7-072a-4b82-9225-2d8afb98eab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51dbca3d-65a0-451d-9361-7004969c317f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26205053-fc87-4c72-81c9-bab46c97fa5a",
      "documentation": "<p>Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.</p> <p>After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a> operation to verify that the status of the <code>BatchPrediction</code> changed to DELETED.</p> <p> <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is irreversible.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteBatchPrediction",
      "responses": [
        {
          "uuid": "a0c1ba17-3743-4ac6-a750-e3f159e1823c",
          "body": "{\n  \"BatchPredictionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "782c1328-4063-4739-9f0b-053ee612a26b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4ae8160-a72e-47b2-953c-c228aa83d442",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6491d4e-e939-41e1-8597-90f1d8f82087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "edd542cd-8b83-44e3-9afd-9df0c2cb2262",
      "documentation": "<p>Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.</p> <p>After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a> operation to verify that the status of the <code>DataSource</code> changed to DELETED.</p> <p> <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteDataSource",
      "responses": [
        {
          "uuid": "160d2fdd-04dc-41c2-b806-d9cbb9692e30",
          "body": "{\n  \"DataSourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dec99e87-3fa0-4705-a4dd-04469d056d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "510dc527-46b0-4d53-8586-c4bab9d8e74b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb03ede7-555c-4de6-a712-790a8bd84487",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "997a79de-f518-410c-9b8c-e98f81dbc993",
      "documentation": "<p>Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it unusable.</p> <p>After invoking the <code>DeleteEvaluation</code> operation, you can use the <code>GetEvaluation</code> operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.</p> <p> <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteEvaluation",
      "responses": [
        {
          "uuid": "6cc73584-13ee-4f40-a1cf-e25185882abb",
          "body": "{\n  \"EvaluationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce8f8b74-526e-4a97-8eec-29678470f3bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "278868bd-b09c-434d-9487-b4ee5228eb2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f5a77c1-61f3-42ab-a701-64e9ecfcb223",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85ecfae6-ea66-4fa0-ae5c-ea47a9b4c546",
      "documentation": "<p>Assigns the <code>DELETED</code> status to an <code>MLModel</code>, rendering it unusable.</p> <p>After using the <code>DeleteMLModel</code> operation, you can use the <code>GetMLModel</code> operation to verify that the status of the <code>MLModel</code> changed to DELETED.</p> <p> <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteMLModel",
      "responses": [
        {
          "uuid": "ee8897e5-abb2-425b-aecf-b95ab6b0ca04",
          "body": "{\n  \"MLModelId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d39cbb4-af98-43e5-953f-365236c494d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68bcceee-3a41-4e7e-b92b-4c36a0d347be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eda9ecaf-e0a5-4c30-acc8-099d8a3ab46f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ec86a72-b3d3-4e94-b00d-d3d098a865aa",
      "documentation": "Deletes a real time endpoint of an <code>MLModel</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteRealtimeEndpoint",
      "responses": [
        {
          "uuid": "17f960fd-4822-4bb9-9049-8f011753465d",
          "body": "{\n  \"MLModelId\": \"\",\n  \"RealtimeEndpointInfo\": {\n    \"PeakRequestsPerSecond\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"EndpointUrl\": \"\",\n    \"EndpointStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b01a9eb-0397-4480-9a28-49463162f9ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5222d99-f337-488b-b650-2c1388215b37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55c256f3-8fc3-40ad-9440-925b41475087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0e5c50b-e953-4d18-b344-59c9e38d6d5f",
      "documentation": "<p>Deletes the specified tags associated with an ML object. After this operation is complete, you can't recover deleted tags.</p> <p>If you specify a tag that doesn't exist, Amazon ML ignores it.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DeleteTags",
      "responses": [
        {
          "uuid": "ffac17f7-e7fd-4ad6-abf4-50237d720737",
          "body": "{\n  \"ResourceId\": \"\",\n  \"ResourceType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac171264-cfa4-4c22-90c1-d4d12a943806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e1562af-3b8c-41c4-a8ef-fcda3af2d2af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21f33d1a-f50b-4668-949d-cbe05988cde6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d087e2c-f13a-4a28-8ab5-c2c11834c227",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18eaeea8-221e-4c9f-9e06-98e546019eb5",
      "documentation": "Returns a list of <code>BatchPrediction</code> operations that match the search criteria in the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DescribeBatchPredictions",
      "responses": [
        {
          "uuid": "a7982306-b160-45a1-9a29-7401ea08562e",
          "body": "{\n  \"Results\": [\n    {\n      \"BatchPredictionId\": \"\",\n      \"MLModelId\": \"\",\n      \"BatchPredictionDataSourceId\": \"\",\n      \"InputDataLocationS3\": \"\",\n      \"CreatedByIamUser\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"OutputUri\": \"\",\n      \"Message\": \"\",\n      \"ComputeTime\": {{faker 'datatype.number'}},\n      \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n      \"TotalRecordCount\": {{faker 'datatype.number'}},\n      \"InvalidRecordCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0669f351-8d5f-401e-a31d-e752b82b3ea3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a47df18-d730-45d5-9e5f-9f2059eef68d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad1f54a5-0d77-4c5e-8cc2-0511418c95fb",
      "documentation": "Returns a list of <code>DataSource</code> that match the search criteria in the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DescribeDataSources",
      "responses": [
        {
          "uuid": "69d3ac8e-9712-4608-a688-bd16a44d8761",
          "body": "{\n  \"Results\": [\n    {\n      \"DataSourceId\": \"\",\n      \"DataLocationS3\": \"\",\n      \"DataRearrangement\": \"\",\n      \"CreatedByIamUser\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"DataSizeInBytes\": {{faker 'datatype.number'}},\n      \"NumberOfFiles\": {{faker 'datatype.number'}},\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"Message\": \"\",\n      \"RedshiftMetadata\": {\n        \"RedshiftDatabase\": {\n          \"DatabaseName\": \"\",\n          \"ClusterIdentifier\": \"\"\n        },\n        \"DatabaseUserName\": \"\",\n        \"SelectSqlQuery\": \"\"\n      },\n      \"RDSMetadata\": {\n        \"Database\": {\n          \"InstanceIdentifier\": \"\",\n          \"DatabaseName\": \"\"\n        },\n        \"DatabaseUserName\": \"\",\n        \"SelectSqlQuery\": \"\",\n        \"ResourceRole\": \"\",\n        \"ServiceRole\": \"\",\n        \"DataPipelineId\": \"\"\n      },\n      \"RoleARN\": \"\",\n      \"ComputeStatistics\": {{faker 'datatype.boolean'}},\n      \"ComputeTime\": {{faker 'datatype.number'}},\n      \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "77f05a23-3947-4f6d-b4f4-59584f6ac1c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "097b43d5-255f-4ff6-ab24-6b57ea1356ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "824cd909-5299-458b-bdc2-9a5394abcabf",
      "documentation": "Returns a list of <code>DescribeEvaluations</code> that match the search criteria in the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DescribeEvaluations",
      "responses": [
        {
          "uuid": "f8509a73-4f26-4052-b00d-6738b6317bee",
          "body": "{\n  \"Results\": [\n    {\n      \"EvaluationId\": \"\",\n      \"MLModelId\": \"\",\n      \"EvaluationDataSourceId\": \"\",\n      \"InputDataLocationS3\": \"\",\n      \"CreatedByIamUser\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"PerformanceMetrics\": {\n        \"Properties\": {}\n      },\n      \"Message\": \"\",\n      \"ComputeTime\": {{faker 'datatype.number'}},\n      \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ad1a313-8939-47a6-b07f-fe0bb906e6c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c794185-ab12-4f4b-81a8-d9bfa5d1c1e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "994244b9-1037-42b6-a51c-d81d86a26aed",
      "documentation": "Returns a list of <code>MLModel</code> that match the search criteria in the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DescribeMLModels",
      "responses": [
        {
          "uuid": "e6a815c1-eca2-4104-9be0-210fe98aaeb3",
          "body": "{\n  \"Results\": [\n    {\n      \"MLModelId\": \"\",\n      \"TrainingDataSourceId\": \"\",\n      \"CreatedByIamUser\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"SizeInBytes\": {{faker 'datatype.number'}},\n      \"EndpointInfo\": {\n        \"PeakRequestsPerSecond\": {{faker 'datatype.number'}},\n        \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n        \"EndpointUrl\": \"\",\n        \"EndpointStatus\": \"\"\n      },\n      \"TrainingParameters\": {},\n      \"InputDataLocationS3\": \"\",\n      \"Algorithm\": \"\",\n      \"MLModelType\": \"\",\n      \"ScoreThreshold\": {{faker 'datatype.float'}},\n      \"ScoreThresholdLastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Message\": \"\",\n      \"ComputeTime\": {{faker 'datatype.number'}},\n      \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e2b66e8-1740-452c-89f3-7ff27d6e8615",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c75d38a-b3f3-4816-b434-98647c77cd5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "258dd71a-e529-4765-ad5b-4902f117be53",
      "documentation": "Describes one or more of the tags for your Amazon ML object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.DescribeTags",
      "responses": [
        {
          "uuid": "a13f90d3-f667-4d5a-a5a0-f50f1e3d8983",
          "body": "{\n  \"ResourceId\": \"\",\n  \"ResourceType\": \"\",\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "33c23a0c-0e2f-4750-af80-123e4f73e9ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f12cfb92-4511-4d03-8622-a1eb44b1fabd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b42d44c2-b4cd-41e0-9a1f-907cb84fa8de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3450786-0a42-4f2d-a29a-4fec2851b19a",
      "documentation": "Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and data file information for a <code>Batch Prediction</code> request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.GetBatchPrediction",
      "responses": [
        {
          "uuid": "2aec52f1-d4c3-4801-8b6e-9c75de736d7e",
          "body": "{\n  \"BatchPredictionId\": \"\",\n  \"MLModelId\": \"\",\n  \"BatchPredictionDataSourceId\": \"\",\n  \"InputDataLocationS3\": \"\",\n  \"CreatedByIamUser\": \"\",\n  \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"Name\": \"\",\n  \"Status\": \"\",\n  \"OutputUri\": \"\",\n  \"LogUri\": \"\",\n  \"Message\": \"\",\n  \"ComputeTime\": {{faker 'datatype.number'}},\n  \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n  \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n  \"TotalRecordCount\": {{faker 'datatype.number'}},\n  \"InvalidRecordCount\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c8a68ac-90a4-41d9-ad10-73ee3834edcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "378ba6c0-0a8c-4041-ae9c-674660bbf158",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36a83072-cadd-4fc1-9584-eb99b702e25c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01b75a68-068d-4d18-8fcf-9d1b5f8bea88",
      "documentation": "<p>Returns a <code>DataSource</code> that includes metadata and data file information, as well as the current status of the <code>DataSource</code>.</p> <p> <code>GetDataSource</code> provides results in normal or verbose format. The verbose format adds the schema description and the list of files pointed to by the DataSource to the normal format.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.GetDataSource",
      "responses": [
        {
          "uuid": "c7a5e208-ef42-42e2-a3af-ce710fa40b0c",
          "body": "{\n  \"DataSourceId\": \"\",\n  \"DataLocationS3\": \"\",\n  \"DataRearrangement\": \"\",\n  \"CreatedByIamUser\": \"\",\n  \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"DataSizeInBytes\": {{faker 'datatype.number'}},\n  \"NumberOfFiles\": {{faker 'datatype.number'}},\n  \"Name\": \"\",\n  \"Status\": \"\",\n  \"LogUri\": \"\",\n  \"Message\": \"\",\n  \"RedshiftMetadata\": {\n    \"RedshiftDatabase\": {\n      \"DatabaseName\": \"\",\n      \"ClusterIdentifier\": \"\"\n    },\n    \"DatabaseUserName\": \"\",\n    \"SelectSqlQuery\": \"\"\n  },\n  \"RDSMetadata\": {\n    \"Database\": {\n      \"InstanceIdentifier\": \"\",\n      \"DatabaseName\": \"\"\n    },\n    \"DatabaseUserName\": \"\",\n    \"SelectSqlQuery\": \"\",\n    \"ResourceRole\": \"\",\n    \"ServiceRole\": \"\",\n    \"DataPipelineId\": \"\"\n  },\n  \"RoleARN\": \"\",\n  \"ComputeStatistics\": {{faker 'datatype.boolean'}},\n  \"ComputeTime\": {{faker 'datatype.number'}},\n  \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n  \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n  \"DataSourceSchema\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90f3ed84-84f6-42a3-bb6d-31085a013ef0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35f0324d-f380-44b4-8691-34ca02ec64cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87028f5e-847f-4918-810d-7e6dbae73dc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c08eaa53-823b-4f76-bdc3-d0f9f496b998",
      "documentation": "Returns an <code>Evaluation</code> that includes metadata as well as the current status of the <code>Evaluation</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.GetEvaluation",
      "responses": [
        {
          "uuid": "5dfc1f55-b9a7-4a28-b38e-e5a4bb26d25f",
          "body": "{\n  \"EvaluationId\": \"\",\n  \"MLModelId\": \"\",\n  \"EvaluationDataSourceId\": \"\",\n  \"InputDataLocationS3\": \"\",\n  \"CreatedByIamUser\": \"\",\n  \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"Name\": \"\",\n  \"Status\": \"\",\n  \"PerformanceMetrics\": {\n    \"Properties\": {}\n  },\n  \"LogUri\": \"\",\n  \"Message\": \"\",\n  \"ComputeTime\": {{faker 'datatype.number'}},\n  \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n  \"StartedAt\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8f00d4e-c81f-446c-a239-6358101616ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d91df7d1-ef04-4c73-ac36-42f5514ea9de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aaa622d1-5c06-4f5c-b250-399990242008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39b2c827-8865-41f6-b296-ffa73211cbc3",
      "documentation": "<p>Returns an <code>MLModel</code> that includes detailed metadata, data source information, and the current status of the <code>MLModel</code>.</p> <p> <code>GetMLModel</code> provides results in normal or verbose format. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.GetMLModel",
      "responses": [
        {
          "uuid": "c2640f0b-e7d2-42d0-8f9b-e9713d84d744",
          "body": "{\n  \"MLModelId\": \"\",\n  \"TrainingDataSourceId\": \"\",\n  \"CreatedByIamUser\": \"\",\n  \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"LastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"Name\": \"\",\n  \"Status\": \"\",\n  \"SizeInBytes\": {{faker 'datatype.number'}},\n  \"EndpointInfo\": {\n    \"PeakRequestsPerSecond\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"EndpointUrl\": \"\",\n    \"EndpointStatus\": \"\"\n  },\n  \"TrainingParameters\": {},\n  \"InputDataLocationS3\": \"\",\n  \"MLModelType\": \"\",\n  \"ScoreThreshold\": {{faker 'datatype.float'}},\n  \"ScoreThresholdLastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"LogUri\": \"\",\n  \"Message\": \"\",\n  \"ComputeTime\": {{faker 'datatype.number'}},\n  \"FinishedAt\": \"{{faker 'date.recent' 365}}\",\n  \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n  \"Recipe\": \"\",\n  \"Schema\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bbec1b2a-e6cc-47cf-aace-8abd810ce717",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12e6dbb8-5f03-48e4-80d7-2316b7595374",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8bf6135-2cd0-467f-8c7c-6b19800d1bf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b0787b6d-c61f-4db3-90ae-c253b8114f85",
      "documentation": "<p>Generates a prediction for the observation using the specified <code>ML Model</code>.</p> <p> <b>Note:</b> Not all response parameters will be populated. Whether a response parameter is populated depends on the type of model requested.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.Predict",
      "responses": [
        {
          "uuid": "eca3f917-1cd5-4888-b593-b207ce0f6b50",
          "body": "{\n  \"Prediction\": {\n    \"predictedLabel\": \"\",\n    \"predictedValue\": {{faker 'datatype.float'}},\n    \"predictedScores\": {},\n    \"details\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71a21c2f-dc09-43c8-892c-8de90e485e4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fa37c84-2b8d-4138-b62c-2d2d2bc53573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16f6f260-7369-4861-be52-5fd435b693c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d28adf2-6414-4345-ab3e-cbc0c1273e9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18e8263c-9fa4-425f-915b-18b11de4d729",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PredictorNotMountedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e98334c-aadc-4a4b-aceb-0b9e4a885ee8",
      "documentation": "<p>Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.</p> <p>You can use the <code>GetBatchPrediction</code> operation to view the contents of the updated data element.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.UpdateBatchPrediction",
      "responses": [
        {
          "uuid": "4fbb35f8-a086-47ac-90ab-4aa698d36b18",
          "body": "{\n  \"BatchPredictionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "afd968b4-bb41-4e16-a712-3508b8c07748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a4c3bf1-446a-4a49-965d-cd82484ea4a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4037bee5-14cb-4a05-9758-343df7a47f26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3939f8b9-93d2-4316-bfd2-1b82a1906e16",
      "documentation": "<p>Updates the <code>DataSourceName</code> of a <code>DataSource</code>.</p> <p>You can use the <code>GetDataSource</code> operation to view the contents of the updated data element.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.UpdateDataSource",
      "responses": [
        {
          "uuid": "e1cdb159-9d7e-4772-9e40-0001b8e77fe9",
          "body": "{\n  \"DataSourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab764137-d279-4969-b934-acd298b0ba96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1b2ddc6-a79b-4016-b6a5-a97e9af64499",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cac9eb89-e36a-4418-9d42-9e55ddacfb9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6962a4eb-cd74-4084-804a-1de8ca48fee2",
      "documentation": "<p>Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.</p> <p>You can use the <code>GetEvaluation</code> operation to view the contents of the updated data element.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.UpdateEvaluation",
      "responses": [
        {
          "uuid": "daa54c07-4378-448e-a586-ee3549e18c6c",
          "body": "{\n  \"EvaluationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "33867ed9-776a-4133-a047-6add65b3af5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c178262-6db9-4fbe-b982-d6711f02cf45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32f62666-abe3-4d86-9e10-be9d0f1e052d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8bbfd32-3e36-4cc9-9fdc-c6996d5d7fb8",
      "documentation": "<p>Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.</p> <p>You can use the <code>GetMLModel</code> operation to view the contents of the updated data element.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonML_20141212.UpdateMLModel",
      "responses": [
        {
          "uuid": "1fa71647-8b6b-4283-9e89-af5813a96f48",
          "body": "{\n  \"MLModelId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c82adf89-ee8d-4753-92da-53025314335d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc212794-a3d8-44bd-9645-6cba19edc45b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0620a1b-ab2b-4235-8c97-052ccbf26345",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}