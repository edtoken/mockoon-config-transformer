{
  "uuid": "5d2af4f5-7a92-4cbd-aa43-37297f72d0ed",
  "lastMigration": 24,
  "name": "AWS App Mesh",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "76ae87be-18fe-425e-80a9-14b9246fd2ea",
      "documentation": "<p>Creates a gateway route.</p> <p>A gateway route is attached to a virtual gateway and routes traffic to an existing virtual service. If a route matches a request, it can distribute traffic to a target virtual service.</p> <p>For more information about gateway routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/gateway-routes.html\">Gateway routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "21da9299-ca7f-43c6-991d-46705cc91958",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a05de1d5-79ef-4487-9018-cee75452cc87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dd1a937-95de-4ab2-b623-004cd1d33fa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fac0e57-4182-4c5e-92a1-41b5ab24eb60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04dc80d5-8a87-4514-859a-ddf98150ef30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fcc0bef6-8e98-4952-b099-c4cccb6528d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1c1988c-b8de-499d-8bc7-bda1eb5d9ecf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11068a99-3d59-46fb-876b-5c751c05c123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8deb7bc-d1af-4ffc-a11b-ce118e657e22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8d940c9-01cd-41e0-b68e-fcd10576134b",
      "documentation": "Returns a list of existing gateway routes that are associated to a virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "4471bb50-d11d-405f-89d3-e63b297e69b5",
          "body": "{\n  \"gatewayRoutes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"gatewayRouteName\": \"\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "121747b3-0a4b-4fb0-8d48-11609c2433c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5b0d487-5465-4a52-9e91-ee345811927f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1efbc837-7997-4418-8480-3e8f10c17f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8409e49e-9fb5-4cec-a7e7-80e4118949d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4c3187a-e373-4a49-8aa5-cde043dc8e2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6ab3830-5629-49bd-93f2-119a3a2a0246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b4d3e4f-bcd9-4644-adb4-cbf4b593ca9c",
      "documentation": "<p>Creates a service mesh.</p> <p> A service mesh is a logical boundary for network traffic between services that are represented by resources within the mesh. After you create your service mesh, you can create virtual services, virtual nodes, virtual routers, and routes to distribute traffic between the applications in your mesh.</p> <p>For more information about service meshes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/meshes.html\">Service meshes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "ec17fb5f-cbd9-4b00-be33-75af08ca1d17",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5aa90dfb-0cfb-45d8-a3e2-02801af16a63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6482d057-c295-4b1c-a7b2-2cf2b5435875",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6598d51b-8967-4ab0-982a-9f7dacc49360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "879f5b0e-2189-40bc-a511-e221b877c40b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d9922f4-21c7-47c3-8203-da7013d8a4b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b7d2675-29a1-4985-8ae6-421ed512a921",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63a6d7e6-9366-449a-92e1-4b5ab73fb144",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91cf2142-9a4e-427a-82be-f00d5246c8e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54d6423b-d4d1-4507-ac27-4b2b5d5b43bf",
      "documentation": "Returns a list of existing service meshes.",
      "method": "get",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "0fbce04d-57f4-4138-ab72-ad198b81475f",
          "body": "{\n  \"meshes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb39b90b-f7c5-4bf7-8775-98b58c8d2ccb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68df1f21-55d2-402f-a3fd-86a4bdaa167b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23c97a96-986b-45b9-9b9e-0275851f61fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61876d1f-fcae-4b72-9902-c86ac4c02282",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5d3b296-3a8e-4e2a-9aa4-7cd9e2da777b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6332775-a85a-4bdb-858a-265c91577f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23e34773-cfc3-4545-ace1-14bbe18c34c8",
      "documentation": "<p>Creates a route that is associated with a virtual router.</p> <p> You can route several different protocols and define a retry policy for a route. Traffic can be routed to one or more virtual nodes.</p> <p>For more information about routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/routes.html\">Routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "bb3054aa-cd81-4cff-a3ec-dca57e259072",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "31265815-1a7a-43d0-b6e6-825b8b220a80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae3143cf-4870-4df3-980c-9f4cb500271d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e977359-e48a-4ad9-b96d-570a31b2a39e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2de9ce6-6a1d-4854-a046-f757a5ae5ab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9a3e60d-de8c-4516-b19e-238eebbc9b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fef8e33a-c96b-4b39-95e8-227a7fa6e6bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ec79297-5d04-43d9-8ce0-b55b0a2245d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86d01cf1-1253-45d2-b4b4-df1022980ae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e49c65ae-0155-49ec-b140-d5ca5c28128f",
      "documentation": "Returns a list of existing routes in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "b17551bd-fbcf-4635-91a0-5cc41cb09a78",
          "body": "{\n  \"nextToken\": \"\",\n  \"routes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"routeName\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "418bb1c2-c9df-40fe-b63e-52db276cf723",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1f524a5-a715-424e-9e43-9c522b0bde56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7793d631-68f2-468b-9c93-0d84347659b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "244040c1-7a22-42ad-ab6c-7187959be030",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55883056-5805-46db-ba02-773cd01b124f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b7b09e0-c961-465e-94a5-02671551a44f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50b0e0de-8986-4cb5-a7ed-b2a3b5764e2b",
      "documentation": "<p>Creates a virtual gateway.</p> <p>A virtual gateway allows resources outside your mesh to communicate to resources that are inside your mesh. The virtual gateway represents an Envoy proxy running in an Amazon ECS task, in a Kubernetes service, or on an Amazon EC2 instance. Unlike a virtual node, which represents an Envoy running with an application, a virtual gateway represents Envoy deployed by itself.</p> <p>For more information about virtual gateways, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_gateways.html\">Virtual gateways</a>. </p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "29ca5833-93bb-4607-a365-9d3a4c93a8b3",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2fa5d392-7868-407c-84ba-f64e6b03a190",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02a8d3af-5008-4002-b41f-f2f634298637",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "488874aa-9eda-4899-b455-715337393a83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11dd5ca9-1317-4b50-b332-07e5d8d3feab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbbf1d33-ff0c-4121-bdb0-bb175962c227",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45735408-3cce-4af7-9eb1-1469a1d6182f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ea1d5f2-0d23-4e62-b3f3-2fad4dd8292c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fb3a133-7306-413d-9c40-50f1e17211c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2701c638-16f1-4743-807e-5a8a16fa8f61",
      "documentation": "Returns a list of existing virtual gateways in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "50659cdd-40d1-4ab2-9cd3-251d72124bc0",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualGateways\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6dcc3a4e-e23c-48ec-8fdf-503be4b5f20b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "340ba1a6-83df-4fb4-87b7-cb5aceed735b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae1c5634-dbbd-424c-a2fb-61fc72b7484a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e19d4379-a047-4a14-bcf7-f89f85940cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c7241b0-4621-4283-865f-5596ae0246ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a090f825-ff17-44e3-94e2-1edb81495fc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e09cefb1-117b-4c3f-8602-accd802c025e",
      "documentation": "<p>Creates a virtual node within a service mesh.</p> <p> A virtual node acts as a logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you can specify the service discovery information for your task group, and whether the proxy running in a task group will communicate with other proxies using Transport Layer Security (TLS).</p> <p>You define a <code>listener</code> for any inbound traffic that your virtual node expects. Any virtual service that your virtual node expects to communicate to is specified as a <code>backend</code>.</p> <p>The response metadata for your new virtual node contains the <code>arn</code> that is associated with the virtual node. Set this value to the full ARN; for example, <code>arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp</code>) as the <code>APPMESH_RESOURCE_ARN</code> environment variable for your task group's Envoy proxy container in your task definition or pod spec. This is then mapped to the <code>node.id</code> and <code>node.cluster</code> Envoy parameters.</p> <note> <p>By default, App Mesh uses the name of the resource you specified in <code>APPMESH_RESOURCE_ARN</code> when Envoy is referring to itself in metrics and traces. You can override this behavior by setting the <code>APPMESH_RESOURCE_CLUSTER</code> environment variable with your own name.</p> </note> <p>For more information about virtual nodes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_nodes.html\">Virtual nodes</a>. You must be using <code>1.15.0</code> or later of the Envoy image when setting these variables. For more information aboutApp Mesh Envoy variables, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/envoy.html\">Envoy image</a> in the AWS App Mesh User Guide.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "d7e62d70-5fc3-407a-9dd1-c5deaeb54f99",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'datatype.boolean'}},\n                \"ports\": [\n                  {{faker 'datatype.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'datatype.number'}},\n            \"maxServerErrors\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "313f42a9-8ff4-4a2b-b29e-748e01653109",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "708e6764-bc0f-4738-a73b-15a3fe7cdd73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d541075-c3bb-44bd-af25-e7064a53f297",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac524f5d-d1be-4927-aa7a-e9cb48ec2cf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fb19bd3-f7a8-489a-9490-0126e085db4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b4a5d1e-5035-4684-a705-09277c24e6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "849427f9-4feb-483b-892d-0a441e8ff441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83e9bb3b-a259-418a-8096-07a447e63732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6e0df21-a86d-4764-bacc-103a97972da7",
      "documentation": "Returns a list of existing virtual nodes.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "9f29c969-a813-4fb1-b52a-5421937a150b",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualNodes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualNodeName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cff210f6-83fe-4e5a-88e3-680fae2be9d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bb65e85-f866-4d40-b368-e1528fc5277b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2666b7b-5dbc-4940-accb-525d373cabdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "726b943f-6ae3-4c5e-bd37-2cad32be8a00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4068a21-d255-499b-9875-02765eaf3d90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f95151cd-bd6c-4a3f-83c2-411e1a22fff8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fc6db6a-8afa-4ef4-921e-6cc7d35370fb",
      "documentation": "<p>Creates a virtual router within a service mesh.</p> <p>Specify a <code>listener</code> for any inbound traffic that your virtual router receives. Create a virtual router for each protocol and port that you need to route. Virtual routers handle traffic for one or more virtual services within your mesh. After you create your virtual router, create and associate routes for your virtual router that direct incoming requests to different virtual nodes.</p> <p>For more information about virtual routers, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_routers.html\">Virtual routers</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "7ad608f1-aaf5-4c92-b946-09167999136d",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "329be392-2594-4670-9936-0fcb70c1760c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5801444-3caf-47dd-9072-434e1f80e55a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "788552d7-6d1a-40e5-89d5-0d702b8787e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0ae5802-6fce-46a4-a683-e4627f07c8a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b0679f8-6802-4931-b21e-305266c1291f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "178ecd25-344d-45e4-adfb-5c913b7b3928",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f457a4e-3de8-40e8-a301-f7781d2cb3c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "597fc64b-e8a2-4d8e-bfc4-1d5ba0367dfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "980e2f8a-db69-44c0-8d0b-981831e859d9",
      "documentation": "Returns a list of existing virtual routers in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "9ab4b2ef-316a-4a88-b1db-fbec8f924a4b",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualRouters\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bd01da9f-4ccd-405b-856c-b5cec1bbf7db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "847a59b1-dc15-46ad-8bcb-188525eba5df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa60d3d9-290f-41f6-929e-9bcc88c699f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2873f9ff-1180-4f3f-aa9c-9e1419f3b340",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2352527d-d6d1-46d4-b159-7cbd3760478a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "044de581-fb84-400b-8dfb-25b942e3cf66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f37f1fa-3152-4e5c-8dee-905529223612",
      "documentation": "<p>Creates a virtual service within a service mesh.</p> <p>A virtual service is an abstraction of a real service that is provided by a virtual node directly or indirectly by means of a virtual router. Dependent services call your virtual service by its <code>virtualServiceName</code>, and those requests are routed to the virtual node or virtual router that is specified as the provider for the virtual service.</p> <p>For more information about virtual services, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_services.html\">Virtual services</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "27451cfa-6f50-492f-be81-ac87316ea0d1",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70fb53c7-cf39-4c59-8af4-a4e683fdee0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dee9c58b-a2d7-40dd-97a6-11b5d0fa5ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39841ede-cfbc-43ea-ac50-ce605bfc0604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94dfb010-07b7-486c-9151-f800d7be52b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6379ec3a-6622-45c7-b0b2-9612b248d5b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fcb605f-398f-4593-9afe-2645451491a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "093ac113-9174-4ca2-9803-45b21d8a122c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69dd66be-fa0b-481e-89a4-4e0239ff5cdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "181939cc-1b76-453a-b25b-98877ee6584d",
      "documentation": "Returns a list of existing virtual services in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "ed60c5a9-b0d1-47f8-b028-f2965c1871c6",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualServices\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"virtualServiceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0f6caec9-0b59-454a-8624-e519ad8c853f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "087f494c-dbb7-4907-8ed7-04e14a184f6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b44cc6ca-1c8d-44e8-898d-48be3f8633dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f7a4032-74b3-41f0-bc33-ac8b924a471e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "663fbf10-1ada-487b-946b-d7b1b3a304b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0efaa8d8-eea5-46da-bd9c-9f7de235822c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57c1b1f3-b263-4895-bc35-b93f18172192",
      "documentation": "Deletes an existing gateway route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "8b4fa580-bf06-4e34-9ac0-e6898533f714",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36c309d2-6305-45c4-82f2-90c39e6a6d31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59af88bc-00d8-4aa6-9ad0-81e3423bef8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aeb3bcb9-051a-4155-9b9a-b30ec471da25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08938e4d-e386-43cd-a16c-f69e11460289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b003ff7-9ce5-436b-b3cd-095decd7a121",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15e898e0-0e36-45f7-83a4-16c1d80ccb2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7100ac85-c130-428b-a198-5630fbcb4958",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e617ddcd-93cf-4233-befb-94faa1985309",
      "documentation": "Describes an existing gateway route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "c3b34ed2-0f06-476b-b8f1-7841771af5b3",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "271cfe8a-fd11-4cb0-aef2-803cb693cb4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2afad104-4373-441a-9cf6-b81c8a93aac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87764255-6d88-49eb-948c-d19c72229e16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd210d19-f1b2-4a47-a880-f8f2a5baa739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "390755a9-facf-4a19-ac69-b758675c89f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cb0d253-2d71-47fb-8f55-88b12293a178",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb96cc59-85f3-4d1e-b9d1-958d7c9d067f",
      "documentation": "Updates an existing gateway route that is associated to a specified virtual gateway in a service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "87a6c69c-8d43-4fa1-a80d-f46d863f42f2",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4593402d-11e0-40dc-9d9b-abaf440edf6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bd8f923-2a9d-4aaf-9776-054282896602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cad3274a-faac-4980-b41e-3eb36d4ee3be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb773f21-a8b8-4c8c-b7bf-1dc505d37441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "890960f4-f341-4d94-96a0-49ba2b42bfc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56147322-0209-4b54-802d-e3fb6c515fb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "839853d4-62bc-4122-8699-a6237244f46e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c82ca537-5536-4791-8dca-453598e7f9cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bef389b-88e6-428d-abbd-3ac628354bb0",
      "documentation": "<p>Deletes an existing service mesh.</p> <p>You must delete all resources (virtual services, routes, virtual routers, and virtual nodes) in the service mesh before you can delete the mesh itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "2081b14a-2896-4f92-89f8-c3a9df376bc1",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d2c4a51-28e8-4ea7-9990-18998b0976b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd6a65a5-7d8f-41ef-b1ff-e308be695829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "822619e4-2b2f-470f-aab7-588adc628a06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39f2ec35-b665-49cd-ba79-b7ab9a53b95a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fadacd43-698e-4386-9eaf-e910cd8bcb9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97c9a9e1-ab25-47c5-a7e0-f897940a42f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cad19640-2156-4fb3-99c6-d9c890774555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43f0f485-7afb-41e5-9041-3b1d9e43ea5b",
      "documentation": "Describes an existing service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "fa076bcf-834b-464c-855a-346180ce6ff4",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eddae58f-3de4-42fd-9aea-a599ac56f938",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b244da9-60ef-48ad-adbf-2c8d1c9c0736",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8aa231f9-c741-42c8-a256-3db4b926e984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d83bd217-b51f-4520-8c75-45346dfd277c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f13cf63-7340-477a-9beb-770d2ad564b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d08a056d-6273-45da-b7b7-e6b193f736f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5258cc68-f849-4a95-a892-92a611ba2e7c",
      "documentation": "Updates an existing service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "aad2bc93-99b6-4c62-b7a1-42ee560a097c",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6bece406-1667-4925-9da5-b7346cb772af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2f9bfe2-ad7d-454f-bf8b-4b078f3beb61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c15420e1-eb23-40e9-9e16-ae7f8ac811ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "deaede4d-d867-480f-beec-c2aa90b7c3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03a5ded7-5e11-4922-aa50-6cff2c220d6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edb88623-351f-4911-8d3b-23324cb950f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c6c5b44-c19f-4c94-9221-ce864336aa43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1beb9b4f-b4d3-4026-8b35-58cfd0717a6b",
      "documentation": "Deletes an existing route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "5b65df58-e53f-48b8-9a86-1d77fefc4216",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed989e17-1cde-4604-bd2b-a7a651915cc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41c8fe75-5273-4a5b-91d0-8ce56954cf71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19405c84-1393-4263-bbfa-be8f7a459e01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f307d792-0aa3-4c27-ba0b-69c1a07adadb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0adc9b35-6e60-45de-96ef-f4f38ca532b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af97b130-ac42-4b1d-a792-4eae36040825",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e8c1420-2dbd-4fed-bf35-59627e438e9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ec53a7a-fa78-4beb-a415-7da4d61849d5",
      "documentation": "Describes an existing route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "b5bc8488-0440-4484-84a6-86efb7534e64",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a225b41-ce49-4ca2-b36d-86b2e80f2636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a3e6f1b-44c6-42dc-8b84-baa7f647b76e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4a15ec6-8d2b-405a-9791-b3d4da96c607",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c04682ca-be14-4166-aa48-58d82ed0a045",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a98fbdb-ebcb-494f-9e5a-cc4ab70ad79d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c871698a-25d7-4a61-9360-ef4ce49b05c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18b54a62-d2d3-454b-b83b-04fff98698e5",
      "documentation": "Updates an existing route for a specified service mesh and virtual router.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "4f7fafcd-a0c1-42d6-bb2a-012ccfe84d1b",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'datatype.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'datatype.number'}},\n                  \"start\": {{faker 'datatype.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'datatype.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'datatype.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba95541a-754d-417c-8a87-d5958fc46e8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9dc46206-4ddd-4857-bbd4-60d1a6ce9191",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fec49ecf-297c-4bae-9881-701dadb3439d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e5a5e17-098c-4cd9-8cc4-be850f05cf8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c63b803-bf38-4d5f-8b26-5213e9f8d6ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebcabfab-babc-41fe-8675-3fb7b885bff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "287bfe11-da5b-4f8b-9ae7-1745a50a0efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73bbc15c-b30d-4e52-983d-c76a7cbff1fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97cddf71-837b-4220-9800-087fac082c49",
      "documentation": "Deletes an existing virtual gateway. You cannot delete a virtual gateway if any gateway routes are associated to it.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "f51d329a-8d6e-4977-94e2-5ba799413548",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "668e20a4-c87b-40b9-bb7e-5132ecae1885",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c624ffc1-f53c-4503-8cef-ed34ae9693c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b782e872-a054-4901-a56f-109fe871c16a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a365ab2c-e743-49e0-a85e-6b30d4a6608a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a950825-839b-412c-ae80-b2bb1d9a6dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8833318e-b80d-4b01-957b-807e58408f3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5f0e78d-2f85-4fb3-8605-ae45e610c419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40efc3e3-61df-45e0-9f64-140d3a62b252",
      "documentation": "Describes an existing virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "fc46feb6-6f29-4d75-a724-4c8b107e95cd",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "527e8dfc-b85a-4e03-975c-001b6b8ef3f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0d6fbfb-a0c4-419f-a01e-375ac23651a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "242872a8-540a-458a-837a-4c5025bd8b5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d280dd8-aca2-417d-882a-76ccf1cd732d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85e8398e-fc3a-4997-96a3-01dca2f17b9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dade011e-4442-4043-b1e3-b5450d8ea849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c58434af-44d1-4ba1-95d5-5292f19d7fb3",
      "documentation": "Updates an existing virtual gateway in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "3deff182-894c-44d7-b9c2-805647ff9982",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc6e2145-3cb0-42e7-a31b-c664a4eae524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00284a1e-28b3-40f1-a3c5-a3d74b53299b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "acd43b40-00c5-4b42-8bc6-ea080123fa4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c9dafe1-76e2-4cdb-912f-62114dcdf27b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65225d24-6c13-42cf-aa55-c547b53681e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "133310b7-a5bd-4036-8619-3879123b91d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4aa62a5-ca69-4c11-a391-280541b0fcc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebd01c83-e170-4810-aa37-c8724b613206",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa9379e0-1f4b-46ae-8620-49fdd0830aec",
      "documentation": "<p>Deletes an existing virtual node.</p> <p>You must delete any virtual services that list a virtual node as a service provider before you can delete the virtual node itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "2ca8cdeb-43bb-4950-8c6e-4aa653244b49",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'datatype.boolean'}},\n                \"ports\": [\n                  {{faker 'datatype.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'datatype.number'}},\n            \"maxServerErrors\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20e8489e-089b-4132-8006-ad075bde74c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6bf7be3d-5a10-4292-a250-875e082197a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "430fee32-7616-4fa7-a31a-28d9cc57e526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02e2e84e-4ea0-4de4-9bc2-34f878914c09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e35bfed-3ba2-46e2-a941-f611dbe70b95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f241f38e-c881-435f-8799-411ad01de352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7517f40-aed7-4ea3-bf2b-c7006fa23f03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7e18867-9b39-4c2d-97f6-1fbe0b44d49d",
      "documentation": "Describes an existing virtual node.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "4a9ec435-a484-4bd5-aed3-3b0b709c386f",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'datatype.boolean'}},\n                \"ports\": [\n                  {{faker 'datatype.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'datatype.number'}},\n            \"maxServerErrors\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc30e63f-ea98-4c0a-98d2-15ff2c799ad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bef53cc-a891-4ab0-879f-f2ab91ecae4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3bf9ce8c-6e13-4480-b8a3-e44093381128",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1cba2ced-acf4-487d-bb76-f30b14d5af2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22b823ea-8d57-4dcb-9c57-c6f11dc2b4ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0715d9c9-04bb-4a22-b6fd-5f061bc273f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8ce5332-33d5-4a2a-b4bc-4f0b343e6194",
      "documentation": "Updates an existing virtual node in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "aa3dc8a4-a450-462b-8b43-4ca3e0d3d11d",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'datatype.boolean'}},\n            \"ports\": [\n              {{faker 'datatype.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'datatype.boolean'}},\n                \"ports\": [\n                  {{faker 'datatype.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'datatype.number'}},\n              \"maxPendingRequests\": {{faker 'datatype.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'datatype.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'datatype.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"intervalMillis\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'datatype.number'}},\n            \"maxServerErrors\": {{faker 'datatype.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdd4d8cf-64b5-4889-b23e-bc85317f3dc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "398209b6-29f4-4fd5-a1e7-f0a099920f6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3a86797-e3af-4adc-ac32-9abb893453f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4314432-33fe-466e-84e6-61df2d8410fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad067f32-ec27-4f43-bd14-69c8a0827aba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2dd42876-316e-487f-b1fa-3a6cbc6d6f40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c08388dc-23f1-4ba1-a244-6aff9e954942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5926cd93-e3a7-49d8-bafa-ac7e1c936e81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc6135b2-6003-4be3-89e8-32176722c5bf",
      "documentation": "<p>Deletes an existing virtual router.</p> <p>You must delete any routes associated with the virtual router before you can delete the router itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "d89b9d67-c751-4664-99e3-8f1eb9bf7eff",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca239703-1885-4d92-be88-7c7d0fe2053d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33d8f764-5fd1-42c0-9105-fc070efe630b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "244d0b37-1daa-46c8-b36e-96be5a4af279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69991a34-fefb-4d60-b4a3-b8ce251e4933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fbf6007-ea87-4535-b7a5-b47740c30035",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "926494d2-b95f-460e-9eff-17393b23c722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3d607f8-e57f-45a4-892f-ad83ab23e261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b136457e-e309-43e7-a322-9dfaba519f30",
      "documentation": "Describes an existing virtual router.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "e95853cd-1e49-4eeb-a5c2-bede17dc199a",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8223f815-f6c4-48f7-8d20-bd5560f2cec6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96ba3b0f-6293-4b46-af59-b1256fec35b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55d20f1e-7e7b-49d0-852e-38b018b6286c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0876c04a-0473-4acc-993d-75b1843bbde3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20aa6d3b-b06a-48f0-87c0-22bc2f8fff66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf40094b-7067-4bd0-9fef-34bd78f3b2ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "228c6d11-0745-470b-a8ac-142258aadcd1",
      "documentation": "Updates an existing virtual router in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "69afdc03-94f0-46e9-97c5-eb3e2678c605",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'datatype.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e41d03e5-71c2-41a8-b9c0-259fe52896f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1075bac-5181-40e0-9ecf-bb8d7c64a434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34e012e8-3b31-4153-856b-e86a82f2a75b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a89b532-a7e0-4acc-bc71-ba6fc102affc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9eb44ff4-c9ef-4a6b-97ec-959e6f044e6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0a7d016-8303-425e-b7ec-002530d5b159",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ea4bd85-0326-4446-b501-a4a853e647ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d4952e4-5765-4ad4-a878-9cedaa5b87a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a039f3d4-dfb9-47a1-9c0c-fe6be8735f1c",
      "documentation": "Deletes an existing virtual service.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "b8366381-0667-4b59-b9e9-d96c3dc2f4d5",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "33ec710f-6fe1-48eb-b919-6046a085b1c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67c608d4-63ab-4347-b9a3-64d6751c2b3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73078502-4d0d-4308-b3ee-038e2bda8906",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54e1691e-1110-46cf-942b-f72fec453f92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c589388-fe4f-437a-9d12-776d313b0940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39a397c9-b13f-4b29-99f6-b8791ea3da93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4817978c-c742-4e68-ac92-14b86ef8c933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "74ecf52d-c8e1-4fed-82b5-de29865b052b",
      "documentation": "Describes an existing virtual service.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "27bd8efc-abb0-4f76-bd8d-9095fa1b6798",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c4f84b5-ecf4-42ac-a337-d9e52e9961d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66d51d2c-c38b-4b09-a265-649b8aa1a88c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ab49b9e-9e0d-479e-ad7c-b60f9c776faa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71c880fd-7bc9-4e28-b63b-f2dc3763936e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d48f377-2a46-4e7d-811e-e715c7674cd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69040c58-03b9-467a-92c3-143c39e4378d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1b0d6bb-3a02-4771-b9c9-1f83e1d8dca0",
      "documentation": "Updates an existing virtual service in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "b5cabb33-c22e-44ca-9c9a-a8fb7b518a9a",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d215e48d-7bfe-447b-b58c-1da8374ed555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72324691-20d7-4de3-9161-c0a7d42a3670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3792d487-5909-4696-a6d2-e8955df35336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37ceae36-1d94-4ccf-92eb-df6c663e050c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48826790-118e-4132-a574-4a5f499e672f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7843d250-ad62-4d21-97b3-5073b92a0fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53171513-baa0-4b24-a3f8-e8a2f6d2e0cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b21ce6b3-bf90-485d-bb26-223d4c4fd393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2813532-4d0f-4ed2-83e8-ccbbf6208c30",
      "documentation": "List the tags for an App Mesh resource.",
      "method": "get",
      "endpoint": "v20190125/tags#resourceArn",
      "responses": [
        {
          "uuid": "69f474bf-b69f-4157-9269-9ca1c0de8a42",
          "body": "{\n  \"nextToken\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4b77b75-eccd-4cbe-9cc6-900b690ecc0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "222a6acc-76b9-4900-ad48-90552268ab1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba4b1b43-b58c-4cbd-ab75-6a6780a882f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d8b9a14-7c6a-45af-9b55-a14f7731b327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ed53fa7-c325-491b-bef4-01807810e638",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "797c1b78-dc47-47c0-9ae2-0998bc759fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1afc27af-5f89-4642-b046-82d1314cbdb0",
      "documentation": "Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource aren't specified in the request parameters, they aren't changed. When a resource is deleted, the tags associated with that resource are also deleted.",
      "method": "put",
      "endpoint": "v20190125/tag#resourceArn",
      "responses": [
        {
          "uuid": "77605fb6-0215-40b3-b5cd-67d132c5eb48",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "962f5520-15ec-4cbb-90d5-3f5b5701b818",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91be088b-38d8-4399-95bc-054e8f43cc47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c04136e-0159-4233-92d6-f93d733056fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3610cc47-bdc9-4891-b083-c8bc94f78f6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94ba8796-8c04-4a4a-ab10-6c9c2d68a882",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9bd28ef2-118d-4fba-b0b4-cd714c778b9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4664d5b-2105-442c-bfbb-1c4dae8f22c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8dd9ca44-99d9-499f-b75e-0cec4fdfc015",
      "documentation": "Deletes specified tags from a resource.",
      "method": "put",
      "endpoint": "v20190125/untag#resourceArn",
      "responses": [
        {
          "uuid": "5f88e13e-469d-452e-8d73-ee3acc652725",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27eead80-cea6-43bc-a4e6-a5f1d5b8e9af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be707169-6274-4874-b00d-ccde4028a05f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da69c9c8-a78d-4aa9-9cb4-aadad3256d6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f32ba835-ec88-45d2-8d7b-fcafa678f0b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56bdb541-8147-4f6e-a544-ac6a00f9e60c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52bd6ab3-b215-4694-b66a-85ed27258c65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}