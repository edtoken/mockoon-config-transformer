{
  "uuid": "b4bbd1a7-67e6-4c20-b494-004a50f44e39",
  "lastMigration": 24,
  "name": "Amazon Elastic Kubernetes Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "8ac7e3cd-2e15-4671-afb5-0ff46b7e7356",
      "documentation": "<p>Associate encryption configuration to an existing cluster.</p> <p>You can use this API to enable encryption on existing clusters which do not have encryption already enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.</p>",
      "method": "post",
      "endpoint": "clusters/:name/encryption-config/associate",
      "responses": [
        {
          "uuid": "4feb6450-74ff-4db9-aa80-6585d67827a9",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "24cb9d47-37fa-4627-ba07-31f738990202",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe6c4616-d192-45f5-afbe-e117e2734c30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5888e50-0bc1-4611-ae37-a7ee7e44d97d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6eb6c4a-e5c4-4fd1-91be-a394bda44ebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c154f55c-f988-4b28-9202-c0fc6dc6b57d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "470d5147-c9d8-4c64-9b13-4777d92da3e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0356e91b-ff32-4dc8-b288-b8137acee357",
      "documentation": "<p>Associate an identity provider configuration to a cluster.</p> <p>If you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code> to assign permissions to the roles, and then bind the roles to the identities using Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more information see <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\">Using RBAC Authorization</a> in the Kubernetes documentation.</p>",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/associate",
      "responses": [
        {
          "uuid": "69324294-7be2-4d84-8fed-d1f117c44371",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "701f0772-33ff-43e9-8c89-355a75d92633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "883b9756-1d52-4fa3-853e-9f45cff0a21c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1361b49d-960f-4248-b201-42bc57125a7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0edfebaf-e01c-4ca6-8cbc-03a9ba137085",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf9f615d-560e-43fb-a8b2-deacc8eb52e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5807f40b-a22b-4a08-bb5f-1566481ac548",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "297274ae-d6cb-489f-bb6c-be835e10b1c8",
      "documentation": "<p>Creates an Amazon EKS add-on.</p> <p>Amazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code> or later because add-ons rely on the Server-side Apply Kubernetes feature, which is only available in Kubernetes 1.18 and later.</p>",
      "method": "post",
      "endpoint": "clusters/:name/addons",
      "responses": [
        {
          "uuid": "b20dd904-7d05-415f-a9db-4a65a32dc6ad",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4d38cf9-7196-4818-b58e-88ad86663418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39c13c80-afdd-4118-a2e0-3d221868deca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "104e4aae-5882-4ab8-b16b-04be9b0d07dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14a230a1-1334-4327-aed2-913e8a1c90f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebac7a6a-02c8-4c46-9e60-8a268decd8ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "602f879b-4dd8-4b0f-814f-c7d603cd8419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bcba6d6b-32ee-4412-b17f-c2f4fa16ac7e",
      "documentation": "Lists the available add-ons.",
      "method": "get",
      "endpoint": "clusters/:name/addons",
      "responses": [
        {
          "uuid": "f8520b8e-e84c-4250-b7b3-27fd2bdfe4a8",
          "body": "{\n  \"addons\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12bd7f14-63d3-4984-88f3-0e9bf4ac2e89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bce1cad1-e1d4-4ae0-9a85-24529004820e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef89caca-a606-4f5d-b878-65acb01ad4f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fcc2a449-c71e-4ba4-ad51-88053081e5d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed8056e3-9e14-4d27-b4c3-fb42af54fcef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cef1b00b-42c3-4b6c-92d7-2e2f558a8ad0",
      "documentation": "<p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as <code>etcd</code> and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed via the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique and runs on its own set of Amazon EC2 instances.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>Cluster creation typically takes several minutes. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html\">Managing Cluster Authentication</a> and <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html\">Launching Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "clusters",
      "responses": [
        {
          "uuid": "98d7257a-6739-48f8-baba-7e14ad6beb61",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0988f573-efe4-47f9-bd02-2332a87ef94a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f9e7a85-7a31-42a2-abe8-2742aacbb38e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "628a53c4-68e0-4074-be36-fdbb431a26d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6bc5f6b-16de-4369-9fde-ff2c75c11afe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c38ffc03-499f-4f73-b1ca-d823394bbeb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dba2bd3a-cf44-41b5-af3d-9b738e3accba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ce201e2-a55f-4f6d-ba0e-521729e70869",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedAvailabilityZoneException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "123f91a1-0d6b-41ed-9de0-1eb2bd92c9f1",
      "documentation": "Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Region.",
      "method": "get",
      "endpoint": "clusters",
      "responses": [
        {
          "uuid": "de33448c-5e56-4968-8fd6-bbe50f896820",
          "body": "{\n  \"clusters\": [\n    \"devel\",\n    \"prod\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c9bec84-67c2-4017-a9f3-14b86d4269f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71a66fb4-0e8f-42d5-9228-0b483c53e904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8826b0b2-95b0-4ce6-82db-7d036e3d8558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f42b8bd4-3879-4d87-9b61-a55242623519",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f33f79d-abc1-4ffe-9787-f07bc441df17",
      "documentation": "<p>Creates an Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.</p> <p>The Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.</p> <p>When you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes <a href=\"https://kubernetes.io/docs/admin/authorization/rbac/\">Role Based Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html\">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.</p> <p>Fargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.</p> <p>If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html\">Fargate Profile</a> in the <i>Amazon EKS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "clusters/:name/fargate-profiles",
      "responses": [
        {
          "uuid": "4c5d5742-618d-4055-aab2-efcf32a556ba",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "738f2262-a716-4b85-bc4f-ab1c25138316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a411f92-ee1b-49fb-a6e6-4d5d7fb33a41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f60f5981-06ac-4ac8-811f-b17db208315b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3728b6bf-131a-4693-bbad-bd99f44145a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1c78a04-d756-4eec-bd28-93125c323590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58ca1a90-0ac8-4c94-a18a-124dfad1c519",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedAvailabilityZoneException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "81b5c7ac-0901-41a6-9aaa-4e65bc7509d7",
      "documentation": "Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Region.",
      "method": "get",
      "endpoint": "clusters/:name/fargate-profiles",
      "responses": [
        {
          "uuid": "7c2af4db-118a-46f0-a414-3d7535a022b7",
          "body": "{\n  \"fargateProfileNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e6df69c1-085b-4b5b-ae50-0cff802e2033",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "259d9b5b-9078-4715-9a8c-a338831a5647",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7446094e-5cd8-4caf-b7d8-69f170bfe4de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a13c7b43-a413-48f5-bf0b-ce5751216d32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6e270e1-b8cc-4e29-814c-8846544fa4f9",
      "documentation": "<p>Creates a managed node group for an Amazon EKS cluster. You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template. For more information about using launch templates, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html\">Launch template support</a>.</p> <p>An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster. Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html\">Managed Node Groups</a> in the <i>Amazon EKS User Guide</i>. </p>",
      "method": "post",
      "endpoint": "clusters/:name/node-groups",
      "responses": [
        {
          "uuid": "d09d6ebc-10cc-4091-90e8-9c7e370e55b5",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'datatype.number'}},\n      \"maxSize\": {{faker 'datatype.number'}},\n      \"desiredSize\": {{faker 'datatype.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'datatype.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'datatype.number'}},\n      \"maxUnavailablePercentage\": {{faker 'datatype.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89ce1066-d8d8-4b7a-9198-1f28f2eb8701",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65dae5b8-2b76-40a5-a037-7a572e90a22b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b55e731-6065-4276-8754-5cf179e4f23e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abcdd8c0-247f-4b78-883d-4a4dec3f8458",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd43549e-67bf-4e8c-a9af-afe27bf0bf1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9a96f90-7a53-4c47-8a29-fcbebbd232d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8599264-56fe-40d9-ac98-84f0d741d8a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80db433c-a568-4700-a17c-039e4bfed97d",
      "documentation": "Lists the Amazon EKS managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Region. Self-managed node groups are not listed.",
      "method": "get",
      "endpoint": "clusters/:name/node-groups",
      "responses": [
        {
          "uuid": "ca59f6ec-b524-4863-b534-5becaca60a4f",
          "body": "{\n  \"nodegroups\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c4eaf10-090e-447c-af8c-b0045f61e8e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c65fdd06-2c3b-455e-8018-5f084cae7ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c44de7a-1fa9-46e9-a308-f405539e79c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6960a8e3-62e2-48d0-bc14-75427fb68d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ca2ccd4-d227-4e0b-a5fd-db5a2bda0797",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f4eac4d-4630-4d30-91fa-0fad623d19dd",
      "documentation": "<p>Delete an Amazon EKS add-on.</p> <p>When you remove the add-on, it will also be deleted from the cluster. You can always manually start an add-on on the cluster using the Kubernetes API.</p>",
      "method": "delete",
      "endpoint": "clusters/:name/addons/:addonName",
      "responses": [
        {
          "uuid": "9cb8595a-6462-4f00-bee5-446801096d1d",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7189f964-9a22-452b-b4f7-6d8044029874",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8fff15a-500a-4b0c-8cbb-5600772ab1f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04609d6f-6de7-4925-9218-98cdaf205749",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "164c57e1-1ebb-47b7-9034-b466e5d5af4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bf9e151-59d5-4b0a-a78f-1fbc1eeb1424",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07ea596b-c364-4620-a68c-5ce229b9da19",
      "documentation": "Describes an Amazon EKS add-on.",
      "method": "get",
      "endpoint": "clusters/:name/addons/:addonName",
      "responses": [
        {
          "uuid": "ffe874f5-7d77-4bfb-a5c2-f22c37398656",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "772d4d29-9c0b-4a0b-bc85-43680223b9e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "151b687b-fcc6-44a3-b2fd-9676983a8bf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "530c0e5c-d322-405c-ae12-0afd98f552d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84baea4b-0eb0-4ea0-ab44-986ce25f1ded",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38bd1752-969f-4a07-8481-2451d9fcd044",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "829fb34d-703d-4499-a34e-775614618bcf",
      "documentation": "<p>Deletes the Amazon EKS cluster control plane.</p> <p>If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html\">Deleting a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> <p>If you have managed node groups or Fargate profiles attached to the cluster, you must delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.</p>",
      "method": "delete",
      "endpoint": "clusters/:name",
      "responses": [
        {
          "uuid": "3ae58a8b-8c8b-4a4e-92d5-a4bf2b183ceb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ce96c4e-b527-4376-bba0-dfe20391787f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa596623-6b67-4705-85e8-56586de54c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f0b9b1f-9052-4637-9d1d-157137787fa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34bed5a4-0e5b-4631-9de1-806814fdd7e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4e9c006-2f2b-4500-a65e-cbe35af4bcef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d39160a6-4da4-4467-87a9-c7bc28667a89",
      "documentation": "<p>Returns descriptive information about an Amazon EKS cluster.</p> <p>The API server endpoint and certificate authority data returned by this operation are required for <code>kubelet</code> and <code>kubectl</code> to communicate with your Kubernetes API server. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html\">Create a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint and certificate authority data aren't available until the cluster reaches the <code>ACTIVE</code> state.</p> </note>",
      "method": "get",
      "endpoint": "clusters/:name",
      "responses": [
        {
          "uuid": "1575f52c-340e-4fc5-b485-ea69f8bfd12e",
          "body": "{\n  \"cluster\": {\n    \"version\": \"1.10\",\n    \"name\": \"devel\",\n    \"arn\": \"arn:aws:eks:us-west-2:012345678910:cluster/devel\",\n    \"certificateAuthority\": {\n      \"data\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n    },\n    \"createdAt\": 1527807879.988,\n    \"endpoint\": \"https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com\",\n    \"resourcesVpcConfig\": {\n      \"securityGroupIds\": [\n        \"sg-6979fe18\"\n      ],\n      \"subnetIds\": [\n        \"subnet-6782e71e\",\n        \"subnet-e7e761ac\"\n      ],\n      \"vpcId\": \"vpc-950809ec\"\n    },\n    \"roleArn\": \"arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI\",\n    \"status\": \"ACTIVE\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d09e8d1-61a2-4b5a-a949-fc71face80af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9aae3e0f-05c4-4a3c-b44e-01e8220a7524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b13c3a5-00bc-4118-ad34-416bf1fcad6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9a4e9a8-8d46-4c7b-bdc8-9c92fb61a478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "449d07ba-ddd4-415f-8eae-b81794cf693a",
      "documentation": "<p>Deletes an Fargate profile.</p> <p>When you delete a Fargate profile, any pods running on Fargate that were created with the profile are deleted. If those pods match another Fargate profile, then they are scheduled on Fargate with that profile. If they no longer match any Fargate profiles, then they are not scheduled on Fargate and they may remain in a pending state.</p> <p>Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at a time. You must wait for a Fargate profile to finish deleting before you can delete any other profiles in that cluster.</p>",
      "method": "delete",
      "endpoint": "clusters/:name/fargate-profiles/:fargateProfileName",
      "responses": [
        {
          "uuid": "9a4bf810-be56-424c-ad91-b1e94502646b",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a9ca11f-dd1c-4855-94ef-8514cc755418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1d2e3da-3101-471c-911b-f2e23463e39d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cfee2ab-9c36-4a9a-a7fb-3d4c98180441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e476a4e3-a4e7-4ad2-812f-50fe17e1c991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad333285-4f36-47bf-8d1e-bd1f0d68754d",
      "documentation": "Returns descriptive information about an Fargate profile.",
      "method": "get",
      "endpoint": "clusters/:name/fargate-profiles/:fargateProfileName",
      "responses": [
        {
          "uuid": "a8d9077e-31d9-4f37-acf3-d4eea3e0bba5",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29977c53-1af9-4879-853f-a71a694c0164",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28e14fbb-f3b9-4db4-aa10-33f2a0c36681",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7091cee1-6123-4bee-90b6-ff1409c34b4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4137d2d7-3de0-46ee-93ad-cae5033db4bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d80210c3-477f-493a-9ab7-736a7476c812",
      "documentation": "Deletes an Amazon EKS node group for a cluster.",
      "method": "delete",
      "endpoint": "clusters/:name/node-groups/:nodegroupName",
      "responses": [
        {
          "uuid": "a4c56213-7483-4267-bf86-c7d7825bd58c",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'datatype.number'}},\n      \"maxSize\": {{faker 'datatype.number'}},\n      \"desiredSize\": {{faker 'datatype.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'datatype.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'datatype.number'}},\n      \"maxUnavailablePercentage\": {{faker 'datatype.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e40ba6e4-3659-44e4-a848-14ce5a1f7fa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "82260787-817d-4004-9696-a1692caa3ef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcdfa128-5946-4274-9071-bac06d078b83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "901c835b-b2ff-4bde-9816-47902e3f058a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "180f7246-3c6e-4b3a-9912-a2bae7beedba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa6d1072-a14f-43cd-9c24-dbb05fef5493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78c71b61-6d10-4305-b699-8dd97d471a84",
      "documentation": "Returns descriptive information about an Amazon EKS node group.",
      "method": "get",
      "endpoint": "clusters/:name/node-groups/:nodegroupName",
      "responses": [
        {
          "uuid": "d8e38ba1-1b5b-4347-ad7f-3c23123c81a6",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'datatype.number'}},\n      \"maxSize\": {{faker 'datatype.number'}},\n      \"desiredSize\": {{faker 'datatype.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'datatype.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'datatype.number'}},\n      \"maxUnavailablePercentage\": {{faker 'datatype.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bab0bc60-c763-4591-93f5-65721bfa259d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38e7f035-ddc7-4c7f-b4d2-3165752d855d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f021833-4d1b-405b-92fe-5855ab926f94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf710e46-e680-42e6-b4a6-9975e47786b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "660e80b9-56b8-4b99-91af-4b5e8e9b5d61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38310bb2-cb36-4828-b5d5-10948653040e",
      "documentation": "Deregisters a connected cluster to remove it from the Amazon EKS control plane.",
      "method": "delete",
      "endpoint": "cluster-registrations/:name",
      "responses": [
        {
          "uuid": "1fcecb21-fc45-4848-b85b-23e4e0dc07a0",
          "body": "{\n  \"cluster\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\",\n    \"endpoint\": \"\",\n    \"roleArn\": \"\",\n    \"resourcesVpcConfig\": {\n      \"subnetIds\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ],\n      \"clusterSecurityGroupId\": \"\",\n      \"vpcId\": \"\",\n      \"endpointPublicAccess\": {{faker 'datatype.boolean'}},\n      \"endpointPrivateAccess\": {{faker 'datatype.boolean'}},\n      \"publicAccessCidrs\": [\n        \"\"\n      ]\n    },\n    \"kubernetesNetworkConfig\": {\n      \"serviceIpv4Cidr\": \"\"\n    },\n    \"logging\": {\n      \"clusterLogging\": [\n        {\n          \"types\": [\n            \"{{oneOf (array 'api' 'audit' 'authenticator' 'controllerManager' 'scheduler')}}\"\n          ],\n          \"enabled\": {{faker 'datatype.boolean'}}\n        }\n      ]\n    },\n    \"identity\": {\n      \"oidc\": {\n        \"issuer\": \"\"\n      }\n    },\n    \"status\": \"\",\n    \"certificateAuthority\": {\n      \"data\": \"\"\n    },\n    \"clientRequestToken\": \"\",\n    \"platformVersion\": \"\",\n    \"tags\": {},\n    \"encryptionConfig\": [\n      {\n        \"resources\": [\n          \"\"\n        ],\n        \"provider\": {\n          \"keyArn\": \"\"\n        }\n      }\n    ],\n    \"connectorConfig\": {\n      \"activationId\": \"\",\n      \"activationCode\": \"\",\n      \"activationExpiry\": \"{{faker 'date.recent' 365}}\",\n      \"provider\": \"\",\n      \"roleArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a89bd813-427b-4ef0-9648-6d8f9ae7d1e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a9995b7-6d40-4739-9d9c-f010dbb3f791",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "262d48dc-a285-4453-954a-74e1781daaa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42c817d8-b059-4368-b0a4-2b39569549a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdafeb39-997a-41de-9f76-f28cd6895f94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "430ad873-b4f0-4a42-84ef-22b95a1f397b",
      "documentation": "Describes the Kubernetes versions that the add-on can be used with.",
      "method": "get",
      "endpoint": "addons/supported-versions",
      "responses": [
        {
          "uuid": "60bcbcf4-1f32-46f1-b981-f5429148d2da",
          "body": "{\n  \"addons\": [\n    {\n      \"addonName\": \"\",\n      \"type\": \"\",\n      \"addonVersions\": [\n        {\n          \"addonVersion\": \"\",\n          \"architecture\": [\n            \"\"\n          ],\n          \"compatibilities\": [\n            {\n              \"clusterVersion\": \"\",\n              \"platformVersions\": [\n                \"\"\n              ],\n              \"defaultVersion\": {{faker 'datatype.boolean'}}\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "588b8049-1acf-498c-a21e-e62a6b234987",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65e37849-7a7e-4a90-a9f5-7ad0c2bbe069",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b39cce66-ee33-47b3-890e-c981ada29789",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4e88195-e97c-456f-bbec-9f0237e034d9",
      "documentation": "Returns descriptive information about an identity provider configuration.",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/describe",
      "responses": [
        {
          "uuid": "c63087ea-cd7a-4c30-bdba-f70d67f8c0dd",
          "body": "{\n  \"identityProviderConfig\": {\n    \"oidc\": {\n      \"identityProviderConfigName\": \"\",\n      \"identityProviderConfigArn\": \"\",\n      \"clusterName\": \"\",\n      \"issuerUrl\": \"\",\n      \"clientId\": \"\",\n      \"usernameClaim\": \"\",\n      \"usernamePrefix\": \"\",\n      \"groupsClaim\": \"\",\n      \"groupsPrefix\": \"\",\n      \"requiredClaims\": {},\n      \"tags\": {},\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf2330fa-1613-4728-aa3f-3d95a5e531f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f1e0187-ec25-4e8b-a2aa-69e123d65d69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08479b4e-20a6-4c0f-b4c0-037ad65e79cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d6a27c5-1926-4117-8824-de1cae933eeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "758204b9-8922-4fac-8142-52e96096ee88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e142051-ecc8-4455-adf9-6c6b75c660e4",
      "documentation": "<p>Returns descriptive information about an update against your Amazon EKS cluster or associated managed node group.</p> <p>When the status of the update is <code>Succeeded</code>, the update is complete. If an update fails, the status is <code>Failed</code>, and an error detail explains the reason for the failure.</p>",
      "method": "get",
      "endpoint": "clusters/:name/updates/:updateId",
      "responses": [
        {
          "uuid": "e82eee6e-5801-4343-9379-a96d14ea69ac",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "79b805d7-ec3f-4f2b-a25c-c8d085456b7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff99dc50-816a-47b1-8fba-8ce7cb0d82ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e831706e-6c0c-4ff4-81a3-540e71695749",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a4b77c4-e219-4915-ae8f-6cf261ad2433",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "228bc622-8fd5-4cef-b06c-f4e5141514c5",
      "documentation": "Disassociates an identity provider configuration from a cluster. If you disassociate an identity provider from your cluster, users included in the provider can no longer access the cluster. However, you can still access the cluster with Amazon Web Services IAM users.",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/disassociate",
      "responses": [
        {
          "uuid": "be640129-53b2-4ca7-acd6-679b506552f8",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "59f3bae1-2d87-4e98-b960-3dd147feaa22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a95c118-27a3-4b24-ae99-bf801558d514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa83d1d2-d824-4e0a-b3ea-788f08ad23a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6132a6a-d17a-43dc-adbd-10dab9187bba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99fd6986-e077-4dc8-9ebd-f49749b1c2e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea58a2d1-8644-4944-ad10-8e553162e5a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0740440d-2a84-4dff-b1cd-4100c40c3d8d",
      "documentation": "A list of identity provider configurations.",
      "method": "get",
      "endpoint": "clusters/:name/identity-provider-configs",
      "responses": [
        {
          "uuid": "a629eb72-1ccb-45ae-9a0f-573de9ad22d4",
          "body": "{\n  \"identityProviderConfigs\": [\n    {\n      \"type\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "098722c7-27a6-4a1f-9980-d1fab51cc05d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4051619-07e4-43ee-af50-9741147a620f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b04771d-71f4-4c1e-8a2a-574d828dddc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41d76f2c-871c-4c58-9231-63dc65cb710d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8ff980c-b3b1-402f-8730-95d97df4da28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2cf90f2c-aa13-40ee-a52d-de422938acc5",
      "documentation": "List the tags for an Amazon EKS resource.",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "f040e693-15aa-4a58-acbe-e9691a7d3069",
          "body": "{\n  \"tags\": {\n    \"aws:tag:domain\": \"beta\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e2b6f415-cfa4-4ccb-b9c8-07efdf8e999d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b997dfc-2f94-4e90-ac34-8984e7b3adb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba82ff56-89d9-4c83-abaf-4d805a604cc5",
      "documentation": "Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well. Tags that you create for Amazon EKS resources do not propagate to any other resources associated with the cluster. For example, if you tag a cluster with this operation, that tag does not automatically propagate to the subnets and nodes associated with the cluster.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "e4bae100-663a-4b34-82a8-359f2c79f84c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a836fa97-53c4-4b72-b0d3-a68f2b69342f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dd63e72-6b63-46a1-bdd5-ffd063eee7be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e389fe3-31bb-4139-b075-bacd7c34024e",
      "documentation": "Lists the updates associated with an Amazon EKS cluster or managed node group in your Amazon Web Services account, in the specified Region.",
      "method": "get",
      "endpoint": "clusters/:name/updates",
      "responses": [
        {
          "uuid": "5ed76e28-da2f-43bb-b120-0eb73dc1091d",
          "body": "{\n  \"updateIds\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e6a618c-5483-4529-a167-6fc69a25e262",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d8916d9-6343-4bc0-9bd0-82d450a81e9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d5e1f60-e107-4b38-8e94-0e9011c1a841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32f285e1-a0dc-4372-8f6e-e110a27048c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c313e1d6-85e5-4647-a2d9-ea72f683969f",
      "documentation": "<p>Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p> <p>If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes versions must match the cluster’s Kubernetes version in order to update the cluster to a new Kubernetes version.</p>",
      "method": "post",
      "endpoint": "clusters/:name/updates",
      "responses": [
        {
          "uuid": "130b6b88-d6dd-4dc1-b41a-5cd612337b0b",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90d92822-c485-4db0-8c0e-9568064abab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d332fb46-40c7-49af-89c4-680169a62b7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a28dffaa-36b4-435a-8590-23a497d13ea1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6eb91355-d0d6-4f6d-ab5b-61b55dfb706e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa1e6656-e688-41d5-b519-14fabead11e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f8d5e60-7237-4343-b3ba-28f6b3fb4534",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b788ae3-6fc9-4a67-8632-3ddb076ec775",
      "documentation": "<p>Connects a Kubernetes cluster to the Amazon EKS control plane. </p> <p>Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current information about the cluster and its nodes. </p> <p>Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a> </code> to add it to the Amazon EKS control plane.</p> <p>Second, a <a href=\"https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml\">Manifest</a> containing the <code>activationID</code> and <code>activationCode</code> must be applied to the Kubernetes cluster through it's native provider to provide visibility.</p> <p>After the Manifest is updated and applied, then the connected cluster is visible to the Amazon EKS control plane. If the Manifest is not applied within a set amount of time, then the connected cluster will no longer be visible and must be deregistered. See <a>DeregisterCluster</a>.</p>",
      "method": "post",
      "endpoint": "cluster-registrations",
      "responses": [
        {
          "uuid": "7e1dd944-0202-41aa-9565-ac66fb534e3d",
          "body": "{\n  \"cluster\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\",\n    \"endpoint\": \"\",\n    \"roleArn\": \"\",\n    \"resourcesVpcConfig\": {\n      \"subnetIds\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ],\n      \"clusterSecurityGroupId\": \"\",\n      \"vpcId\": \"\",\n      \"endpointPublicAccess\": {{faker 'datatype.boolean'}},\n      \"endpointPrivateAccess\": {{faker 'datatype.boolean'}},\n      \"publicAccessCidrs\": [\n        \"\"\n      ]\n    },\n    \"kubernetesNetworkConfig\": {\n      \"serviceIpv4Cidr\": \"\"\n    },\n    \"logging\": {\n      \"clusterLogging\": [\n        {\n          \"types\": [\n            \"{{oneOf (array 'api' 'audit' 'authenticator' 'controllerManager' 'scheduler')}}\"\n          ],\n          \"enabled\": {{faker 'datatype.boolean'}}\n        }\n      ]\n    },\n    \"identity\": {\n      \"oidc\": {\n        \"issuer\": \"\"\n      }\n    },\n    \"status\": \"\",\n    \"certificateAuthority\": {\n      \"data\": \"\"\n    },\n    \"clientRequestToken\": \"\",\n    \"platformVersion\": \"\",\n    \"tags\": {},\n    \"encryptionConfig\": [\n      {\n        \"resources\": [\n          \"\"\n        ],\n        \"provider\": {\n          \"keyArn\": \"\"\n        }\n      }\n    ],\n    \"connectorConfig\": {\n      \"activationId\": \"\",\n      \"activationCode\": \"\",\n      \"activationExpiry\": \"{{faker 'date.recent' 365}}\",\n      \"provider\": \"\",\n      \"roleArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "acee518f-1c52-41f7-a175-127884e77958",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "718fb498-c3e6-4047-acb4-75229cb669dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "714eaf5e-b021-445e-9d31-a0f192a3035d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04bf5e52-67e0-45e3-b3d0-ada79d4adf97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5e5e09a-0333-432a-a54a-c68bd3d2cbf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95ae616e-398f-49ee-b078-122685f6b3e4",
      "documentation": "Deletes specified tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "77d665a9-6f97-49cb-9b98-49831991948b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d026b1e-8356-48c4-8c51-cbc366d71dab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1fd7fd1-ad2b-4238-9d16-9c47363b3672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cea97850-41f7-4a48-9157-f3c35f9288bb",
      "documentation": "Updates an Amazon EKS add-on.",
      "method": "post",
      "endpoint": "clusters/:name/addons/:addonName/update",
      "responses": [
        {
          "uuid": "0415fb41-3eb9-4021-a5d8-85f258ace683",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fab2996-d06c-4069-8bc7-9d39ad1abfaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "537ef8ce-f41b-4645-a4a6-6f07a5bc0903",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7144cdcc-c94d-4b12-a4c6-66972bcc42a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7813c2b-e9fe-42cb-82df-e643a129c2b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3e41b15-f1bb-48d2-9a75-22f93c8f5200",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06af6e3a-abc9-4941-b250-430ade3a25e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1efe39e-c95f-43ca-a5f9-3f4d4231ddcc",
      "documentation": "<p>Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html\">Amazon EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href=\"http://aws.amazon.com/cloudwatch/pricing/\">CloudWatch Pricing</a>.</p> </note> <p>You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>. </p> <important> <p>You can't update the subnets or security group IDs for an existing cluster.</p> </important> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>",
      "method": "post",
      "endpoint": "clusters/:name/update-config",
      "responses": [
        {
          "uuid": "a17c46bd-db34-4030-83d3-314d81f92476",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7535d901-845b-4b6d-9219-daf100a6dee3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af69bb07-6099-4a38-a4a8-820438c585ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18650a4c-a114-491b-b800-638788f1299a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25acfa4b-468b-4d42-85ee-a7720e9d100b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6159b04-7fcd-431e-9896-eace8ad1f3cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39a6f657-2d88-4cad-b8a0-57b2d5476e86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b3196d9-2055-4ea6-a1e1-eca397228925",
      "documentation": "Updates an Amazon EKS managed node group configuration. Your node group continues to function during the update. The response output includes an update ID that you can use to track the status of your node group update with the <a>DescribeUpdate</a> API operation. Currently you can update the Kubernetes labels for a node group or the scaling configuration.",
      "method": "post",
      "endpoint": "clusters/:name/node-groups/:nodegroupName/update-config",
      "responses": [
        {
          "uuid": "a6d2ba56-ab7a-49ac-a695-4b571e08043e",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0a830b6b-24ed-48ab-a2be-812ba66f3469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a68fc04-71d4-44eb-b944-926973623692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a82fd72-0e00-4d01-bfd3-3204bc74eca9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd1efc5d-6d03-47d0-a714-f58ff48a20ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "770eefd3-ca9c-4dfb-8701-2a8ddbba66bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3710802c-ab17-4221-99e0-2ea740726b44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9c53560-ae45-415a-8daf-fd4d0e0d28e7",
      "documentation": "<p>Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.</p> <p>You can update a node group using a launch template only if the node group was originally deployed with a launch template. If you need to update a custom AMI in a node group that was deployed with a launch template, then update your custom AMI, specify the new ID in a new version of the launch template, and then update the node group to the new version of the launch template.</p> <p>If you update without a launch template, then you can update to the latest available AMI version of a node group's current Kubernetes version by not specifying a Kubernetes version in the request. You can update to the latest AMI version of your cluster's current Kubernetes version by specifying your cluster's Kubernetes version in the request. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html\">Amazon EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p> <p>You cannot roll back a node group to an earlier Kubernetes version or AMI version.</p> <p>When a node in a managed node group is terminated due to a scaling action or update, the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully and will fail if it is unable to do so. You can <code>force</code> the update if Amazon EKS is unable to drain the nodes as a result of a pod disruption budget issue.</p>",
      "method": "post",
      "endpoint": "clusters/:name/node-groups/:nodegroupName/update-version",
      "responses": [
        {
          "uuid": "d183228d-2a29-4599-a1b3-a5d2f912c685",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b713e94-a324-4cda-807b-ef40ff6d96d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10e18de2-2530-4d84-b92c-db575567bcaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bfb8564-6c81-4c96-81db-055f251e0afb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7902592a-42d5-47c9-80e3-3c7792b35518",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4672f7df-6ef1-4699-a28d-67197c1ff69f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfd3755f-385a-4244-950f-14c41aef559d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}