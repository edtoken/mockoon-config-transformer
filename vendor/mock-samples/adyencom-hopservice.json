{
  "uuid": "40440e2d-2eeb-425f-a85d-05de9783a32c",
  "lastMigration": 24,
  "name": "Adyen for Platforms: Hosted Onboarding",
  "endpointPrefix": "cal/services/Hop/v6",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4ec4b94b-584c-4c87-9137-a044af6bcb2f",
      "documentation": "Get a link to a Adyen-hosted onboarding page.",
      "method": "post",
      "endpoint": "getOnboardingUrl",
      "responses": [
        {
          "uuid": "d34e758a-5f62-4b05-b444-b94865ae3e71",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"redirectUrl\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7e45835-e8ff-4b7c-9781-f07a1bfcd48e",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a92b51b-6628-47b1-8e32-719238ab52f5",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c4bac25-0da3-444e-9478-2211eb8e2760",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5aecb3ef-c0cc-40ec-80ff-7109ad0af4e8",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "934fbaf5-b2fb-41da-b9b3-2b31420796be",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "74386e1f-3410-4353-bc68-da2afb0558e3",
      "documentation": "Get a link to a PCI compliance questionnaire.",
      "method": "post",
      "endpoint": "getPciQuestionnaireUrl",
      "responses": [
        {
          "uuid": "fda70962-e74c-44fb-9cfb-c99e96b88e47",
          "body": "{\n  \"invalidFields\": [\n    {\n      \"errorCode\": {{faker 'datatype.number'}},\n      \"errorDescription\": \"\",\n      \"fieldType\": {\n        \"field\": \"\",\n        \"fieldName\": \"{{oneOf (array 'accountCode' 'accountHolderCode' 'accountHolderDetails' 'accountNumber' 'accountStateType' 'accountStatus' 'accountType' 'address' 'bankAccount' 'bankAccountCode' 'bankAccountName' 'bankAccountUUID' 'bankBicSwift' 'bankCity' 'bankCode' 'bankName' 'bankStatement' 'branchCode' 'businessContact' 'cardToken' 'checkCode' 'city' 'companyRegistration' 'constitutionalDocument' 'country' 'countryCode' 'currency' 'currencyCode' 'dateOfBirth' 'description' 'destinationAccountCode' 'document' 'documentExpirationDate' 'documentIssuerCountry' 'documentIssuerState' 'documentName' 'documentNumber' 'documentType' 'doingBusinessAs' 'drivingLicence' 'drivingLicenceBack' 'drivingLicense' 'email' 'firstName' 'formType' 'fullPhoneNumber' 'gender' 'hopWebserviceUser' 'houseNumberOrName' 'iban' 'idCard' 'idCardBack' 'idCardFront' 'idNumber' 'identityDocument' 'individualDetails' 'jobTitle' 'lastName' 'legalArrangement' 'legalArrangementCode' 'legalArrangementEntity' 'legalArrangementEntityCode' 'legalArrangementLegalForm' 'legalArrangementMember' 'legalArrangementMembers' 'legalArrangementName' 'legalArrangementReference' 'legalArrangementRegistrationNumber' 'legalArrangementTaxNumber' 'legalArrangementType' 'legalBusinessName' 'legalEntity' 'legalEntityType' 'merchantAccount' 'merchantCategoryCode' 'merchantReference' 'microDeposit' 'name' 'nationality' 'originalReference' 'ownerCity' 'ownerCountryCode' 'ownerHouseNumberOrName' 'ownerName' 'ownerPostalCode' 'ownerState' 'ownerStreet' 'passport' 'passportNumber' 'payoutMethodCode' 'payoutSchedule' 'pciSelfAssessment' 'personalData' 'phoneCountryCode' 'phoneNumber' 'postalCode' 'primaryCurrency' 'reason' 'registrationNumber' 'returnUrl' 'schedule' 'shareholder' 'shareholderCode' 'shareholderCodeAndSignatoryCode' 'shareholderCodeOrSignatoryCode' 'shareholderType' 'shopperInteraction' 'signatory' 'signatoryCode' 'socialSecurityNumber' 'sourceAccountCode' 'splitAccount' 'splitConfigurationUUID' 'splitCurrency' 'splitValue' 'splits' 'stateOrProvince' 'status' 'stockExchange' 'stockNumber' 'stockTicker' 'store' 'storeDetail' 'storeName' 'storeReference' 'street' 'taxId' 'tier' 'tierNumber' 'transferCode' 'ultimateParentCompany' 'ultimateParentCompanyAddressDetails' 'ultimateParentCompanyAddressDetailsCountry' 'ultimateParentCompanyBusinessDetails' 'ultimateParentCompanyBusinessDetailsLegalBusinessName' 'ultimateParentCompanyBusinessDetailsRegistrationNumber' 'ultimateParentCompanyCode' 'ultimateParentCompanyStockExchange' 'ultimateParentCompanyStockNumber' 'ultimateParentCompanyStockNumberOrStockTicker' 'ultimateParentCompanyStockTicker' 'unknown' 'value' 'verificationType' 'virtualAccount' 'visaNumber' 'webAddress' 'year')}}\",\n        \"shareholderCode\": \"\"\n      }\n    }\n  ],\n  \"pspReference\": \"\",\n  \"redirectUrl\": \"\",\n  \"resultCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - the request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1cfe3047-1495-44ad-942b-811d4612901f",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - a problem reading or understanding the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3050c5a2-2975-4f5b-89c4-4ff592c6bcc7",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - authentication required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76ff1804-e530-4209-b8d8-f00d8aa4bca8",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - insufficient permissions to process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be3c765b-a6f9-4fce-a357-d78854973606",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - a request validation error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d0e8a31-267b-4265-8374-55f60f3650a9",
          "body": "{\n  \"errorCode\": \"\",\n  \"errorType\": \"\",\n  \"message\": \"\",\n  \"pspReference\": \"\",\n  \"status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error - the server could not process the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}