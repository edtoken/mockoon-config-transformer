{
  "uuid": "d424b3aa-8ccf-4478-bae9-d59832f130cb",
  "lastMigration": 24,
  "name": "Telegram Bot API",
  "endpointPrefix": "bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "adc06032-d021-4162-b052-3c4975aa899f",
      "documentation": "Use this method to add a new sticker to a set created by the bot. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Animated stickers can be added to animated sticker sets and only to them. Animated sticker sets can have up to 50 stickers. Static sticker sets can have up to 120 stickers. Returns *True* on success.",
      "method": "post",
      "endpoint": "addStickerToSet",
      "responses": [
        {
          "uuid": "c2a013be-5eb0-43c5-93a5-051adcded3b8",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec1959b9-c8d2-406b-a996-3040c59a4e7e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10a39ea9-d81e-4dcf-ad62-c8c3b5a588da",
      "documentation": "Use this method to send answers to callback queries sent from [inline keyboards](/bots#inline-keyboards-and-on-the-fly-updating). The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, *True* is returned.\n\nAlternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via [@Botfather](https://t.me/botfather) and accept the terms. Otherwise, you may use links like `t.me/your_bot?start=XXXX` that open your bot with a parameter.",
      "method": "post",
      "endpoint": "answerCallbackQuery",
      "responses": [
        {
          "uuid": "b9e0d4cb-e97a-405c-8611-3e87b14be1b5",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2bd5d53-9a59-48b3-adf9-156e245328e2",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50d504d8-bdbc-42d9-9a8a-134919135988",
      "documentation": "Use this method to send answers to an inline query. On success, *True* is returned.  \nNo more than **50** results per query are allowed.",
      "method": "post",
      "endpoint": "answerInlineQuery",
      "responses": [
        {
          "uuid": "576f7227-77e3-49a6-a3d8-b4e8687acda7",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6c89bdf3-3d3b-4ea1-8a12-e2badd5c8116",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2a870d76-2e46-4e1a-8bef-93a06d0ced77",
      "documentation": "Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an [Update](https://core.telegram.org/bots/api/#update) with the field *pre\\_checkout\\_query*. Use this method to respond to such pre-checkout queries. On success, True is returned. **Note:** The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.",
      "method": "post",
      "endpoint": "answerPreCheckoutQuery",
      "responses": [
        {
          "uuid": "ef9577c8-423c-4978-9ce9-80e0a31c8637",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "77e15bb0-fcb5-4d39-8b23-d57360120356",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92f7d83a-f30f-4f48-a06e-b0e9f9cf5c3c",
      "documentation": "If you sent an invoice requesting a shipping address and the parameter *is\\_flexible* was specified, the Bot API will send an [Update](https://core.telegram.org/bots/api/#update) with a *shipping\\_query* field to the bot. Use this method to reply to shipping queries. On success, True is returned.",
      "method": "post",
      "endpoint": "answerShippingQuery",
      "responses": [
        {
          "uuid": "95116ef1-1e56-4872-aa55-7a09d6352e84",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9dcd4834-edf5-41b9-b64b-e6f654b7d09b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ff75ca3-f32e-42c9-9e65-eebe0753ed3a",
      "documentation": "Use this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn't launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "close",
      "responses": [
        {
          "uuid": "b2dbdf06-ef78-4d9f-8617-6d30eaac4986",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf0293e8-9db0-4184-a50a-777613f7a1e7",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99c00c64-7d0d-4edb-8f87-fa9de2d3765f",
      "documentation": "Use this method to copy messages of any kind. The method is analogous to the method [forwardMessages](https://core.telegram.org/bots/api/#forwardmessages), but the copied message doesn't have a link to the original message. Returns the [MessageId](https://core.telegram.org/bots/api/#messageid) of the sent message on success.",
      "method": "post",
      "endpoint": "copyMessage",
      "responses": [
        {
          "uuid": "5e9216e8-37a9-4c02-b007-23f95df7892e",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"message_id\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1000208a-3c2e-4a3c-9b77-39cb5c1d5cad",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7bb86b18-2e61-466c-b62f-95d5954598ac",
      "documentation": "Use this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Returns *True* on success.",
      "method": "post",
      "endpoint": "createNewStickerSet",
      "responses": [
        {
          "uuid": "de416480-db97-4e77-a4f9-a54cb1924571",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bd9aeaed-a720-46aa-9512-2aa4bb238239",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ac4ad928-01ae-4888-81f0-d5ad373225e1",
      "documentation": "Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatPhoto",
      "responses": [
        {
          "uuid": "f962139e-a947-43d5-b5c0-94702e80d3b9",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc2efb3a-5365-4f7f-9ff4-22a00e87bc7b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bfb9d7a1-9b88-4fc8-97b0-57e20e57dcb9",
      "documentation": "Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatStickerSet",
      "responses": [
        {
          "uuid": "34839252-b190-4ce4-b926-fa9c82709e1b",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73f1c3b2-c836-4b44-b507-10eb22361475",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "646da10a-3e8d-46d6-a684-5f18b42dc50b",
      "documentation": "Use this method to delete a message, including service messages, with the following limitations:  \n\\- A message can only be deleted if it was sent less than 48 hours ago.  \n\\- A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.  \n\\- Bots can delete outgoing messages in private chats, groups, and supergroups.  \n\\- Bots can delete incoming messages in private chats.  \n\\- Bots granted *can\\_post\\_messages* permissions can delete outgoing messages in channels.  \n\\- If the bot is an administrator of a group, it can delete any message there.  \n\\- If the bot has *can\\_delete\\_messages* permission in a supergroup or a channel, it can delete any message there.  \nReturns *True* on success.",
      "method": "post",
      "endpoint": "deleteMessage",
      "responses": [
        {
          "uuid": "8ddba800-3df6-4440-bcb2-9cd9b6098e8f",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a4122d6-cdfe-468a-81ca-476e0f75190d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd5b7251-42b1-442b-930e-db2a0a9ce671",
      "documentation": "Use this method to delete a sticker from a set created by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteStickerFromSet",
      "responses": [
        {
          "uuid": "db130390-b904-47ca-bd66-2e127e1a7dcb",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee9e63f7-ff01-41fc-9162-cca21058fbe0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2e6c20b-5165-48e8-9a51-576cd5faf406",
      "documentation": "Use this method to remove webhook integration if you decide to switch back to [getUpdates](https://core.telegram.org/bots/api/#getupdates). Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteWebhook",
      "responses": [
        {
          "uuid": "9c8b185f-550c-4e0a-bb86-70ec3bae9421",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36eefeae-2a6a-4ba8-a74c-3c58b0f85d77",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "631aa26b-88f2-472b-b303-436abf207f06",
      "documentation": "Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageCaption",
      "responses": [
        {
          "uuid": "90c8a3ce-93b4-4a2a-88c0-c8d4205912e2",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "595a2b35-310b-4a95-abdd-8ac15d256004",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "49f26f4f-90bb-4e1b-b20d-ec4d744150c6",
      "documentation": "Use this method to edit live location messages. A location can be edited until its *live\\_period* expires or editing is explicitly disabled by a call to [stopMessageLiveLocation](https://core.telegram.org/bots/api/#stopmessagelivelocation). On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageLiveLocation",
      "responses": [
        {
          "uuid": "b2b5a2ae-ed02-4a66-8728-ab5744327ae2",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1553774f-3b97-41e3-8de8-51d72caa59b9",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8903e0c3-53da-435b-b596-c13447309f67",
      "documentation": "Use this method to edit animation, audio, document, photo, or video messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded. Use a previously uploaded file via its file\\_id or specify a URL. On success, if the edited message was sent by the bot, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageMedia",
      "responses": [
        {
          "uuid": "d9cfef7d-48ea-4e3b-afe1-f897f234c189",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d470cdf-0d72-4e21-9cbb-a7e5d8670bc9",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f89067d-11a1-4a32-af97-3e1c54121d69",
      "documentation": "Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageReplyMarkup",
      "responses": [
        {
          "uuid": "dcea50c8-8559-4201-b40a-308224956e11",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "085d4967-ea42-4548-b177-095fc1c958db",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e83f956e-a716-4ced-b409-f81d62d8288c",
      "documentation": "Use this method to edit text and [game](https://core.telegram.org/bots/api/#games) messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageText",
      "responses": [
        {
          "uuid": "4c5faeb1-8af4-441a-b701-74954f98ed37",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "809bec9f-ccbc-426f-a972-102141cd2991",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11cb3b9e-f223-4eea-9be1-b7f4e80771e4",
      "documentation": "Use this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as *String* on success.",
      "method": "post",
      "endpoint": "exportChatInviteLink",
      "responses": [
        {
          "uuid": "bd0a4fc6-7e55-4edd-9055-978596a14d36",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1ad2bc3a-536f-40e7-90b5-c16bba55cdff",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d71268d-aed7-40e2-bee4-6cd2c9c7abfe",
      "documentation": "Use this method to forward messages of any kind. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "forwardMessage",
      "responses": [
        {
          "uuid": "d82bf067-77fa-43af-a21e-bfae724e8353",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "953ee554-3eae-4452-9ec2-049e99a2fbcd",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3dd1fd7e-d291-44e6-9835-8f77d63c346d",
      "documentation": "Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a [Chat](https://core.telegram.org/bots/api/#chat) object on success.",
      "method": "post",
      "endpoint": "getChat",
      "responses": [
        {
          "uuid": "83352e67-d52d-421b-a661-d9ae00321535",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c81f437a-6805-4d30-8068-5207750c87ab",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8038346f-8b3c-4c95-a75b-7cdd03d7a08e",
      "documentation": "Use this method to get a list of administrators in a chat. On success, returns an Array of [ChatMember](https://core.telegram.org/bots/api/#chatmember) objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.",
      "method": "post",
      "endpoint": "getChatAdministrators",
      "responses": [
        {
          "uuid": "09c45594-6a91-4443-8415-285ab8688cb5",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"can_add_web_page_previews\": {{faker 'datatype.boolean'}},\n      \"can_be_edited\": {{faker 'datatype.boolean'}},\n      \"can_change_info\": {{faker 'datatype.boolean'}},\n      \"can_delete_messages\": {{faker 'datatype.boolean'}},\n      \"can_edit_messages\": {{faker 'datatype.boolean'}},\n      \"can_invite_users\": {{faker 'datatype.boolean'}},\n      \"can_pin_messages\": {{faker 'datatype.boolean'}},\n      \"can_post_messages\": {{faker 'datatype.boolean'}},\n      \"can_promote_members\": {{faker 'datatype.boolean'}},\n      \"can_restrict_members\": {{faker 'datatype.boolean'}},\n      \"can_send_media_messages\": {{faker 'datatype.boolean'}},\n      \"can_send_messages\": {{faker 'datatype.boolean'}},\n      \"can_send_other_messages\": {{faker 'datatype.boolean'}},\n      \"can_send_polls\": {{faker 'datatype.boolean'}},\n      \"custom_title\": \"\",\n      \"is_anonymous\": {{faker 'datatype.boolean'}},\n      \"is_member\": {{faker 'datatype.boolean'}},\n      \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n      \"until_date\": {{faker 'datatype.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'datatype.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'datatype.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_bot\": {{faker 'datatype.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'datatype.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "25f0d885-0a59-4211-afa3-2762bfae3acf",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3a003dc-0fd5-4b41-b495-abc6a56bcfc4",
      "documentation": "Use this method to get information about a member of a chat. Returns a [ChatMember](https://core.telegram.org/bots/api/#chatmember) object on success.",
      "method": "post",
      "endpoint": "getChatMember",
      "responses": [
        {
          "uuid": "78125230-7b6e-4a29-8483-d9f2ff9b3059",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_add_web_page_previews\": {{faker 'datatype.boolean'}},\n    \"can_be_edited\": {{faker 'datatype.boolean'}},\n    \"can_change_info\": {{faker 'datatype.boolean'}},\n    \"can_delete_messages\": {{faker 'datatype.boolean'}},\n    \"can_edit_messages\": {{faker 'datatype.boolean'}},\n    \"can_invite_users\": {{faker 'datatype.boolean'}},\n    \"can_pin_messages\": {{faker 'datatype.boolean'}},\n    \"can_post_messages\": {{faker 'datatype.boolean'}},\n    \"can_promote_members\": {{faker 'datatype.boolean'}},\n    \"can_restrict_members\": {{faker 'datatype.boolean'}},\n    \"can_send_media_messages\": {{faker 'datatype.boolean'}},\n    \"can_send_messages\": {{faker 'datatype.boolean'}},\n    \"can_send_other_messages\": {{faker 'datatype.boolean'}},\n    \"can_send_polls\": {{faker 'datatype.boolean'}},\n    \"custom_title\": \"\",\n    \"is_anonymous\": {{faker 'datatype.boolean'}},\n    \"is_member\": {{faker 'datatype.boolean'}},\n    \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n    \"until_date\": {{faker 'datatype.number'}},\n    \"user\": {\n      \"can_join_groups\": {{faker 'datatype.boolean'}},\n      \"can_read_all_group_messages\": {{faker 'datatype.boolean'}},\n      \"first_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_bot\": {{faker 'datatype.boolean'}},\n      \"language_code\": \"\",\n      \"last_name\": \"\",\n      \"supports_inline_queries\": {{faker 'datatype.boolean'}},\n      \"username\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21b85a47-4a4b-4d0b-924a-ef7238acd0e0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6382d629-db3a-4138-91c8-e6b2cc778f10",
      "documentation": "Use this method to get the number of members in a chat. Returns *Int* on success.",
      "method": "post",
      "endpoint": "getChatMembersCount",
      "responses": [
        {
          "uuid": "d79bf19d-6d3d-4616-b431-60a0567a09ba",
          "body": "{\n  \"ok\": true,\n  \"result\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b5fea25-08e1-4894-92f7-2c5184e3bdd6",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cea20be1-b5c8-4005-8e20-ebaeec99f32e",
      "documentation": "Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a [File](https://core.telegram.org/bots/api/#file) object is returned. The file can then be downloaded via the link `https://api.telegram.org/file/bot<token>/<file_path>`, where `<file_path>` is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling [getFile](https://core.telegram.org/bots/api/#getfile) again.",
      "method": "post",
      "endpoint": "getFile",
      "responses": [
        {
          "uuid": "fc728725-caf8-4049-b04b-15e727f55455",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'datatype.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1e0bc83-8e67-4ff4-a19d-b44c67c3426d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a1474b6-62b2-4e79-9606-28a987e57229",
      "documentation": "Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. On success, returns an *Array* of [GameHighScore](https://core.telegram.org/bots/api/#gamehighscore) objects.\n\nThis method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.",
      "method": "post",
      "endpoint": "getGameHighScores",
      "responses": [
        {
          "uuid": "f5a035d8-2a59-4e6c-aef5-66582963ceb7",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"position\": {{faker 'datatype.number'}},\n      \"score\": {{faker 'datatype.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'datatype.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'datatype.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_bot\": {{faker 'datatype.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'datatype.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9b8b698-5ef4-4b4d-bbed-5ef1d8d38e31",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e54d48a1-2773-4932-b410-81025475db70",
      "documentation": "A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a [User](https://core.telegram.org/bots/api/#user) object.",
      "method": "post",
      "endpoint": "getMe",
      "responses": [
        {
          "uuid": "1eef8dde-a5de-48eb-a86a-4f50f9274a22",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_join_groups\": {{faker 'datatype.boolean'}},\n    \"can_read_all_group_messages\": {{faker 'datatype.boolean'}},\n    \"first_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_bot\": {{faker 'datatype.boolean'}},\n    \"language_code\": \"\",\n    \"last_name\": \"\",\n    \"supports_inline_queries\": {{faker 'datatype.boolean'}},\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dae5b349-e74b-4a70-a7ef-7845389c3141",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "019f14f8-0446-41e7-b6a9-2391f02fc7e0",
      "documentation": "Use this method to get the current list of the bot's commands. Requires no parameters. Returns Array of [BotCommand](https://core.telegram.org/bots/api/#botcommand) on success.",
      "method": "post",
      "endpoint": "getMyCommands",
      "responses": [
        {
          "uuid": "d63718ff-57aa-455a-91c0-6525e690dc2b",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"command\": \"\",\n      \"description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8fd232e7-36a1-425d-a14b-6a9ef69d75d7",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26318ce8-fbbd-412d-ac58-ff5f28405551",
      "documentation": "Use this method to get a sticker set. On success, a [StickerSet](https://core.telegram.org/bots/api/#stickerset) object is returned.",
      "method": "post",
      "endpoint": "getStickerSet",
      "responses": [
        {
          "uuid": "32897a4c-309b-47c6-a111-4a6e30e1b368",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"contains_masks\": {{faker 'datatype.boolean'}},\n    \"is_animated\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"stickers\": [\n      {\n        \"emoji\": \"\",\n        \"file_id\": \"\",\n        \"file_size\": {{faker 'datatype.number'}},\n        \"file_unique_id\": \"\",\n        \"height\": {{faker 'datatype.number'}},\n        \"is_animated\": {{faker 'datatype.boolean'}},\n        \"mask_position\": {\n          \"point\": \"{{oneOf (array 'forehead' 'eyes' 'mouth' 'chin')}}\",\n          \"scale\": {{faker 'datatype.number'}},\n          \"x_shift\": {{faker 'datatype.number'}},\n          \"y_shift\": {{faker 'datatype.number'}}\n        },\n        \"set_name\": \"\",\n        \"thumb\": {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'datatype.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'datatype.number'}},\n          \"width\": {{faker 'datatype.number'}}\n        },\n        \"width\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"thumb\": {\n      \"file_id\": \"\",\n      \"file_size\": {{faker 'datatype.number'}},\n      \"file_unique_id\": \"\",\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}}\n    },\n    \"title\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf763184-c894-4ab5-9d2b-1931759e2d93",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39a599fe-ab52-49cf-a6cc-2e0cd156be94",
      "documentation": "Use this method to receive incoming updates using long polling ([wiki](https://en.wikipedia.org/wiki/Push_technology#Long_polling)). An Array of [Update](https://core.telegram.org/bots/api/#update) objects is returned.",
      "method": "post",
      "endpoint": "getUpdates",
      "responses": [
        {
          "uuid": "00d55c0d-73f6-4a3a-8496-bc675d0b62a9",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a83f2a5b-7428-4c38-9480-8f3cfb22f80a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5eec359f-5132-41af-9542-bbcee8bd3d79",
      "documentation": "Use this method to get a list of profile pictures for a user. Returns a [UserProfilePhotos](https://core.telegram.org/bots/api/#userprofilephotos) object.",
      "method": "post",
      "endpoint": "getUserProfilePhotos",
      "responses": [
        {
          "uuid": "6c8a2867-4836-46b3-9aad-f9ce08198765",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"photos\": [\n      [\n        {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'datatype.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'datatype.number'}},\n          \"width\": {{faker 'datatype.number'}}\n        }\n      ]\n    ],\n    \"total_count\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3fb5e56a-b0d1-45d7-9090-cb5a2d6ddec0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d407a72-e03c-43b0-986b-3c2c3886fb39",
      "documentation": "Use this method to get current webhook status. Requires no parameters. On success, returns a [WebhookInfo](https://core.telegram.org/bots/api/#webhookinfo) object. If the bot is using [getUpdates](https://core.telegram.org/bots/api/#getupdates), will return an object with the *url* field empty.",
      "method": "post",
      "endpoint": "getWebhookInfo",
      "responses": [
        {
          "uuid": "fa6791a7-3af2-4f8d-b355-feaff3ecaeb9",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allowed_updates\": [\n      \"\"\n    ],\n    \"has_custom_certificate\": {{faker 'datatype.boolean'}},\n    \"ip_address\": \"\",\n    \"last_error_date\": {{faker 'datatype.number'}},\n    \"last_error_message\": \"\",\n    \"max_connections\": {{faker 'datatype.number'}},\n    \"pending_update_count\": {{faker 'datatype.number'}},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bdeca024-fb3e-421f-9735-17e87c289ada",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc845262-f8c5-42d3-82f2-5ee72b7fc1e6",
      "documentation": "Use this method to kick a user from a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless [unbanned](https://core.telegram.org/bots/api/#unbanchatmember) first. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "kickChatMember",
      "responses": [
        {
          "uuid": "85e3ee75-d570-4977-ab4a-5acc2652c10d",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb70556f-51cc-4f6d-9097-370d7a0d6ba1",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f572d5be-5e11-4791-9030-82a3b3f65bea",
      "documentation": "Use this method for your bot to leave a group, supergroup or channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "leaveChat",
      "responses": [
        {
          "uuid": "640895b1-fea2-48b5-b8b8-8180f7ea60b7",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f15bd057-d51e-4608-aaf5-853eff485412",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff11112b-d2ed-4679-8b16-98c977dfeb9a",
      "documentation": "Use this method to log out from the cloud Bot API server before launching the bot locally. You **must** log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "logOut",
      "responses": [
        {
          "uuid": "10d738cf-21d7-4119-ae99-ad30483853a9",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12ac5d92-1edd-45b1-8ed2-4be100607785",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3eddcb82-7d2e-4d6e-ac6f-96bb4fd93a3d",
      "documentation": "Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "pinChatMessage",
      "responses": [
        {
          "uuid": "6886f905-d57d-43f4-b2f8-5b14b27af3a0",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7257a7bf-0334-4c96-837a-1343dc0a12fa",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56b08d51-096a-4238-87e3-3b158b3b298b",
      "documentation": "Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass *False* for all boolean parameters to demote a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "promoteChatMember",
      "responses": [
        {
          "uuid": "ef20b588-ded9-41be-bbfb-7891d9fc742f",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9de95ad1-f03d-411b-b164-6ba2e133d33e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14670a60-9aa2-4c8a-8b41-18f470df4def",
      "documentation": "Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass *True* for all permissions to lift restrictions from a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "restrictChatMember",
      "responses": [
        {
          "uuid": "31e6bbe8-5d1d-411e-943f-6d552619d561",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2290ff9b-9785-4c0d-bf00-21d31b3319e6",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afadec41-3a1c-43ab-88ff-d9c493d31416",
      "documentation": "Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendAnimation",
      "responses": [
        {
          "uuid": "20212cf6-bdd1-4304-bfb3-263aff656380",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e05f976-5c17-4edb-b638-d725a942c195",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6790405-76c9-49f1-85e7-368699e6a825",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\n\nFor sending voice messages, use the [sendVoice](https://core.telegram.org/bots/api/#sendvoice) method instead.",
      "method": "post",
      "endpoint": "sendAudio",
      "responses": [
        {
          "uuid": "8660751e-8b60-4231-951e-549f1973c431",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "582c86f3-453d-4073-a276-e0ab9a2c339a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1681f5db-ca4c-4bad-9d89-abba46dea7cb",
      "documentation": "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns *True* on success.\n\nExample: The [ImageBot](https://t.me/imagebot) needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use [sendChatAction](https://core.telegram.org/bots/api/#sendchataction) with *action* = *upload\\_photo*. The user will see a “sending photo” status for the bot.\n\nWe only recommend using this method when a response from the bot will take a **noticeable** amount of time to arrive.",
      "method": "post",
      "endpoint": "sendChatAction",
      "responses": [
        {
          "uuid": "8731415c-5755-4405-8325-d00685cc57a0",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8c4108b5-5ca2-4283-a995-2e50d1f26ce0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "187de9bd-5435-444a-ae96-133ba221466a",
      "documentation": "Use this method to send phone contacts. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendContact",
      "responses": [
        {
          "uuid": "01afe2b9-6135-4a8e-8569-f3a76c4c51c2",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c0f7947-3e32-4fbc-b541-2de4c7372aeb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1eb3a55d-a978-434b-ac36-8eaab512bc67",
      "documentation": "Use this method to send an animated emoji that will display a random value. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendDice",
      "responses": [
        {
          "uuid": "8e26c3ce-f7a5-480e-85c5-9b81cffc39fb",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e9b6c960-d9b5-48a2-88af-55b238855b87",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9081e49c-3bf0-44dc-b93d-9c4f1838048a",
      "documentation": "Use this method to send general files. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendDocument",
      "responses": [
        {
          "uuid": "680d7400-490a-4d9b-a0e4-4822c764ae6a",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f1376d4-2f63-4004-afb4-a887731eb164",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "308ee67f-2db8-40b0-ab5d-92c1ab71c18a",
      "documentation": "Use this method to send a game. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendGame",
      "responses": [
        {
          "uuid": "2ab81a38-3197-4faa-94f4-c424aca271c5",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "54896bed-4470-40b3-8a84-d90506152fbd",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ed1f34a-6ee3-4cbf-98b6-c2e278999cf9",
      "documentation": "Use this method to send invoices. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendInvoice",
      "responses": [
        {
          "uuid": "364c2323-8d06-4d98-9279-349c12cad3bb",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7f938d8-5b3f-46a0-8e8c-1261af03dca4",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ee687c6-8ea0-4a37-bc59-61025cb87fd7",
      "documentation": "Use this method to send point on the map. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendLocation",
      "responses": [
        {
          "uuid": "87299aef-df37-4c7c-8844-fe22a51a6756",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf3fa76b-504d-49e0-998d-33cb9241d13d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9cde37e3-ae7a-43a3-ba93-12d8c3ce1448",
      "documentation": "Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of [Messages](https://core.telegram.org/bots/api/#message) that were sent is returned.",
      "method": "post",
      "endpoint": "sendMediaGroup",
      "responses": [
        {
          "uuid": "cc1e9f38-a9ed-4cfb-a06f-1687adbc361a",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5bdeabbc-1089-4b36-99dd-3bd9c6fd409a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20f79bcc-4d8e-467e-8841-4a3feec33bfd",
      "documentation": "Use this method to send text messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendMessage",
      "responses": [
        {
          "uuid": "f22a8014-bf20-4b43-a75a-a6cdae942c5c",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "54961b90-6713-4808-9f19-b7e5ffeaa11e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3dfeeeb6-6f73-4f6c-a61d-7406a905d6ae",
      "documentation": "Use this method to send photos. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPhoto",
      "responses": [
        {
          "uuid": "6bd82558-a98f-4e9b-ba67-304b83f1c88d",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c96bb09f-b90b-4a91-b837-3588c291dae9",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2866d833-4191-4d25-ace1-d1c5856db0c6",
      "documentation": "Use this method to send a native poll. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPoll",
      "responses": [
        {
          "uuid": "2f06b01b-d430-4e2b-a5b8-f14e3e880ab4",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67e7a314-b5dc-41e0-a5f1-03fcb43088ec",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1683cb5e-4a8e-4c3a-af9f-14fe8da28a5e",
      "documentation": "Use this method to send static .WEBP or [animated](https://telegram.org/blog/animated-stickers) .TGS stickers. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendSticker",
      "responses": [
        {
          "uuid": "5e10aaf4-6463-4406-acc0-0c9055bc014b",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9011896-4cc8-46ae-beea-ab2fbfc98d86",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2a04b42-4563-42cf-bb18-35b87fbfbffe",
      "documentation": "Use this method to send information about a venue. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVenue",
      "responses": [
        {
          "uuid": "e6194240-9375-4416-9054-aa28a87dafdf",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3baa888a-9d1a-4514-9bd5-564b7a9a4191",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e7747c9-e37c-45f0-88ce-1f9115ab2f36",
      "documentation": "Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVideo",
      "responses": [
        {
          "uuid": "c8ffa15b-bb48-4b7a-b713-3696c9b2378a",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45b84e8f-1218-44b5-86d5-822af85e1d04",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14072234-5714-4015-972a-8b222f11dd30",
      "documentation": "As of [v.4.0](https://telegram.org/blog/video-messages-and-telescope), Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVideoNote",
      "responses": [
        {
          "uuid": "c075dc31-1e6f-4e7a-b552-29bc2e608422",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "efc394a4-8ed1-46c2-a517-550d0fc794f3",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2dcb10ad-71e3-4ee7-ac13-2c11b59cabb2",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as [Audio](https://core.telegram.org/bots/api/#audio) or [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVoice",
      "responses": [
        {
          "uuid": "e2839f7d-0ac3-42d2-ac55-fa033bbcb8cc",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dccff487-e0ca-4a17-a196-2dec6865c191",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ede9e481-f8dd-489b-ad6f-1c389406f0d5",
      "documentation": "Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatAdministratorCustomTitle",
      "responses": [
        {
          "uuid": "b564077b-6fe7-40f6-b863-c80eca180d48",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "180706d1-5293-43e7-a3e8-f97be2324fb6",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9084e911-474e-4538-87e9-6f8efa043a94",
      "documentation": "Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatDescription",
      "responses": [
        {
          "uuid": "4dd9a943-7248-45d4-956c-846a679cdcf4",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "afb8de17-3b0e-44da-b3e7-5732423234b2",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0677ffa-0d5e-4d6b-80f4-603323327fe2",
      "documentation": "Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the *can\\_restrict\\_members* admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPermissions",
      "responses": [
        {
          "uuid": "07dd43f6-a96f-42a2-8ed6-ad19d1784395",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cbd08cc0-d914-4d3e-80f2-65044c8a8b9b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a7f362e-65fc-482f-bcc8-b3313f4c1230",
      "documentation": "Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPhoto",
      "responses": [
        {
          "uuid": "34fe6c09-6821-4d90-8d88-e5b936ec9f06",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "265f6962-682b-4d21-9821-a6bf2a1744cc",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9589df7-ea6a-42b0-85f7-4727b165cb23",
      "documentation": "Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatStickerSet",
      "responses": [
        {
          "uuid": "0e630712-846d-42e2-8476-fc437898e68b",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf50ac5c-6362-4f4f-989a-ded10b46a17a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d33f8f8b-ac7c-45cf-92d3-df4e732f0931",
      "documentation": "Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatTitle",
      "responses": [
        {
          "uuid": "25878c67-3955-4b90-838e-cd0a79daf14a",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86a20152-3902-476b-9304-a26c11ece336",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f713fc4-2695-41c1-85c1-d46e053767d5",
      "documentation": "Use this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited [Message](https://core.telegram.org/bots/api/#message), otherwise returns *True*. Returns an error, if the new score is not greater than the user's current score in the chat and *force* is *False*.",
      "method": "post",
      "endpoint": "setGameScore",
      "responses": [
        {
          "uuid": "ffff63a0-7579-44ea-b9ea-45de10936eef",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d18490d2-556f-4897-b343-0e100a6bef4f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "096fbb5f-a4dd-49dc-84c3-3dcdbc1fa4bb",
      "documentation": "Use this method to change the list of the bot's commands. Returns *True* on success.",
      "method": "post",
      "endpoint": "setMyCommands",
      "responses": [
        {
          "uuid": "3f042a0a-2df2-4600-a3d3-1a75abb39016",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "153ec1f0-ef15-49a5-90b4-04a9c2e9a135",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "69cbaa0d-bf78-47bd-aebf-d9f1266b8b52",
      "documentation": "Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns *True* on success.\n\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.",
      "method": "post",
      "endpoint": "setPassportDataErrors",
      "responses": [
        {
          "uuid": "161d35a7-f18c-44dd-8a0d-7680b03c3e91",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d59ece3-9730-4ebc-8524-a5c2a0cf0d96",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "242f28a7-4485-4113-98ba-225c9ea768ce",
      "documentation": "Use this method to move a sticker in a set created by the bot to a specific position. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerPositionInSet",
      "responses": [
        {
          "uuid": "2714f5aa-3ce9-4d74-9099-3e1b97b8da32",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b9f4e11-4e69-42bd-b2e0-9eafb65b7ca5",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef5f7a4d-0e5f-481e-b269-957b66a514dd",
      "documentation": "Use this method to set the thumbnail of a sticker set. Animated thumbnails can be set for animated sticker sets only. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerSetThumb",
      "responses": [
        {
          "uuid": "eac90a46-1481-406f-9a72-76cd1695c7f0",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca111684-453a-4ae0-a408-2dc3a9a9e8ca",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "65f258ac-b39c-47e6-a46b-245967e8eb08",
      "documentation": "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized [Update](https://core.telegram.org/bots/api/#update). In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns *True* on success.\n\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. `https://www.example.com/<token>`. Since nobody else knows your bot's token, you can be pretty sure it's us.",
      "method": "post",
      "endpoint": "setWebhook",
      "responses": [
        {
          "uuid": "2dd9108b-e6d8-4852-8bb2-ee6c4e292080",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1226b979-1ac8-4a6a-b018-821f717b01a3",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd6f3da4-1377-4757-9d8f-619ad30f8f14",
      "documentation": "Use this method to stop updating a live location message before *live\\_period* expires. On success, if the message was sent by the bot, the sent [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "stopMessageLiveLocation",
      "responses": [
        {
          "uuid": "d0d3cbb3-4c92-411b-912a-c399fcaf947f",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "024aa073-307f-4e6e-baf8-1abeebad61d9",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2bcfdfa9-3703-4e36-9daf-f88b45d5d8f9",
      "documentation": "Use this method to stop a poll which was sent by the bot. On success, the stopped [Poll](https://core.telegram.org/bots/api/#poll) with the final results is returned.",
      "method": "post",
      "endpoint": "stopPoll",
      "responses": [
        {
          "uuid": "2540ecc3-47eb-43be-96f1-a376b84746f9",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allows_multiple_answers\": {{faker 'datatype.boolean'}},\n    \"close_date\": {{faker 'datatype.number'}},\n    \"correct_option_id\": {{faker 'datatype.number'}},\n    \"explanation\": \"\",\n    \"explanation_entities\": [\n      {\n        \"language\": \"\",\n        \"length\": {{faker 'datatype.number'}},\n        \"offset\": {{faker 'datatype.number'}},\n        \"type\": \"{{oneOf (array 'mention' 'hashtag' 'cashtag' 'bot_command' 'url' 'email' 'phone_number' 'bold' 'italic' 'underline' 'strikethrough' 'code' 'pre' 'text_link' 'text_mention')}}\",\n        \"url\": \"\",\n        \"user\": {\n          \"can_join_groups\": {{faker 'datatype.boolean'}},\n          \"can_read_all_group_messages\": {{faker 'datatype.boolean'}},\n          \"first_name\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"is_bot\": {{faker 'datatype.boolean'}},\n          \"language_code\": \"\",\n          \"last_name\": \"\",\n          \"supports_inline_queries\": {{faker 'datatype.boolean'}},\n          \"username\": \"\"\n        }\n      }\n    ],\n    \"id\": \"\",\n    \"is_anonymous\": {{faker 'datatype.boolean'}},\n    \"is_closed\": {{faker 'datatype.boolean'}},\n    \"open_period\": {{faker 'datatype.number'}},\n    \"options\": [\n      {\n        \"text\": \"\",\n        \"voter_count\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"question\": \"\",\n    \"total_voter_count\": {{faker 'datatype.number'}},\n    \"type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e5301e59-0a48-47e5-8c8e-61a44862e9d3",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c1e0e90-21c2-4931-a9d2-0f518e3b3482",
      "documentation": "Use this method to unban a previously kicked user in a supergroup or channel. The user will **not** return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be **removed** from the chat. If you don't want this, use the parameter *only\\_if\\_banned*. Returns *True* on success.",
      "method": "post",
      "endpoint": "unbanChatMember",
      "responses": [
        {
          "uuid": "94aab66e-a7d7-4d42-b20b-5e620d60d2c6",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2b4f481-4d4a-4435-b6fe-594d47ddf263",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa2f3f82-359f-4464-a7e1-b4adcb04fc7a",
      "documentation": "Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinAllChatMessages",
      "responses": [
        {
          "uuid": "f8dcb779-d2d1-4f79-a3b6-6e52150f1ba0",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3eef4d04-6b24-430f-a800-9910e82c9365",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "45c86bb0-2b2c-4de9-83bd-5e26e75457a6",
      "documentation": "Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinChatMessage",
      "responses": [
        {
          "uuid": "0cfd76f1-660d-47af-8056-15cc376840d5",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a1dc2cc1-6dc4-4e6c-8596-c9d20e740642",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9eb52fa2-bd3d-40ab-826d-31362ef35149",
      "documentation": "Use this method to upload a .PNG file with a sticker for later use in *createNewStickerSet* and *addStickerToSet* methods (can be used multiple times). Returns the uploaded [File](https://core.telegram.org/bots/api/#file) on success.",
      "method": "post",
      "endpoint": "uploadStickerFile",
      "responses": [
        {
          "uuid": "7a5e687d-87e2-427e-842b-8e3c63af5ec7",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'datatype.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6393f183-f0cc-4fef-ba43-59418d619b73",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'datatype.number'}},\n  \"ok\": {{faker 'datatype.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'datatype.number'}},\n    \"retry_after\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}