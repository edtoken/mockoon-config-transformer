{
  "uuid": "61cabf20-a486-46e4-bf6d-f80d770af4e1",
  "lastMigration": 24,
  "name": "Connector API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1195ac46-4912-4a9e-ba0b-0046838b2446",
      "documentation": "List APIs",
      "method": "get",
      "endpoint": "connector/apis",
      "responses": [
        {
          "uuid": "3ead4d6f-7552-49fb-b4a1-13ec59137574",
          "body": "{\n  \"data\": [\n    {\n      \"api_reference_url\": \"https://developers.apideck.com/apis/file-storage/reference\",\n      \"categories\": [\n        \"files\",\n        \"file-storage\",\n        \"cloud-storage\",\n        \"object-storage\"\n      ],\n      \"description\": \"Manage API keys, access tokens, OAuth flows and integrations.\",\n      \"events\": [\n        \"crm.contact.updated\",\n        \"accounting.invoice.created\"\n      ],\n      \"id\": \"file-storage\",\n      \"name\": \"File Storage API\",\n      \"postman_collection_id\": \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n      \"resources\": [\n        {\n          \"excluded_from_coverage\": {{faker 'datatype.boolean'}},\n          \"id\": \"companies\",\n          \"name\": \"Companies\",\n          \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n        }\n      ],\n      \"spec_url\": \"https://specs.apideck.com/file-storage.yml\",\n      \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'considering')}}\",\n      \"type\": \"{{oneOf (array 'platform' 'unified')}}\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Apis",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf7d1828-16dc-4edb-a931-bde25452e982",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b828f0f1-95b7-433b-9670-359a87098ff6",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70467020-7bd4-4239-afa0-f8563c1d19db",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee77c84a-5d13-4ca5-8f9f-d068bf1dfe28",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a33772b6-a157-42a8-8624-751ebb724261",
      "documentation": "Get API",
      "method": "get",
      "endpoint": "connector/apis/:id",
      "responses": [
        {
          "uuid": "90754073-921c-4f52-8453-3cd25803d9ad",
          "body": "{\n  \"data\": {\n    \"api_reference_url\": \"https://developers.apideck.com/apis/file-storage/reference\",\n    \"categories\": [\n      \"files\",\n      \"file-storage\",\n      \"cloud-storage\",\n      \"object-storage\"\n    ],\n    \"description\": \"Manage API keys, access tokens, OAuth flows and integrations.\",\n    \"events\": [\n      \"crm.contact.updated\",\n      \"accounting.invoice.created\"\n    ],\n    \"id\": \"file-storage\",\n    \"name\": \"File Storage API\",\n    \"postman_collection_id\": \"1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\",\n    \"resources\": [\n      {\n        \"excluded_from_coverage\": {{faker 'datatype.boolean'}},\n        \"id\": \"companies\",\n        \"name\": \"Companies\",\n        \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n      }\n    ],\n    \"spec_url\": \"https://specs.apideck.com/file-storage.yml\",\n    \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'considering')}}\",\n    \"type\": \"{{oneOf (array 'platform' 'unified')}}\"\n  },\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Apis",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d6e8c696-6dbe-4864-ad6d-9b4104b869e4",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d849c95e-e599-4ac5-add7-32fa650c28c2",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36d937c3-b2e5-4198-866e-8f778f74e8eb",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cd7e26b-f2b8-4266-b538-feff5248b93b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6860c43-61ed-4555-bbac-595cdceb3f5a",
      "documentation": "Get API Resource",
      "method": "get",
      "endpoint": "connector/apis/:id/resources/:resource_id",
      "responses": [
        {
          "uuid": "c4a81261-d880-4878-b02c-9e4d6758e348",
          "body": "{\n  \"data\": {\n    \"id\": \"companies\",\n    \"linked_resources\": [\n      {\n        \"id\": \"companies\",\n        \"unified_property\": \"owner_id\"\n      }\n    ],\n    \"name\": \"Companies\",\n    \"schema\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"created_at\": {\n          \"example\": \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\": true,\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"example\": \"12345\",\n          \"readOnly\": true,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"example\": \"Elon Musk\",\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        \"updated_at\": {\n          \"example\": \"2020-09-30T07:43:32.000Z\",\n          \"readOnly\": true,\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"company_name\"\n      ],\n      \"x-pii\": [\n        \"name\",\n        \"email\",\n        \"first_name\",\n        \"last_name\"\n      ]\n    },\n    \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n  },\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ApiResources",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7eb5c31d-488f-428b-ad55-44a15607f6c1",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71e57b2c-f224-4e1c-be32-bdadfb1c5699",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5eae7ad-0313-4b8b-80b4-a69c349ebf94",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4aed405-64c9-4c90-9a9c-32bfd376b81e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "951b03d8-f5d8-43c1-b335-cf44e612edd4",
      "documentation": "Get API Resource Coverage",
      "method": "get",
      "endpoint": "connector/apis/:id/resources/:resource_id/coverage",
      "responses": [
        {
          "uuid": "912e5036-cd9a-41ea-a3f0-14a5efce4ddc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c73fb40f-5c74-48b2-b133-2cf1a2604c79",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7740bc6f-e66d-4f0f-ad32-86e118a11ca5",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44e66ac8-69e4-4c01-b743-20ea86c112ec",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "747cedec-cee6-4a30-b4d1-dfdfe17d5ae8",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3a01349-52f5-42b9-be86-b8bd7588e1a4",
      "documentation": "List Connectors",
      "method": "get",
      "endpoint": "connector/connectors",
      "responses": [
        {
          "uuid": "8df68c8f-3984-4cd6-945a-205f8ef3ae55",
          "body": "{\n  \"data\": [\n    {\n      \"auth_only\": true,\n      \"auth_type\": \"{{oneOf (array 'oauth2' 'apiKey' 'basic' 'custom' 'none')}}\",\n      \"blind_mapped\": true,\n      \"configurable_resources\": [\n        \"leads\",\n        \"companies\"\n      ],\n      \"description\": \"A description\",\n      \"docs\": [\n        {\n          \"audience\": \"{{oneOf (array 'application_owner' 'consumer')}}\",\n          \"format\": \"{{oneOf (array 'markdown')}}\",\n          \"id\": \"12345\",\n          \"name\": \"connection\",\n          \"url\": \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n        }\n      ],\n      \"has_sandbox_credentials\": true,\n      \"icon_url\": \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"id\": \"crm+salesforce\",\n      \"logo_url\": \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"name\": \"Salesforce\",\n      \"oauth_credentials_source\": \"{{oneOf (array 'integration' 'connection')}}\",\n      \"oauth_grant_type\": \"{{oneOf (array 'authorization_code' 'client_credentials' 'password')}}\",\n      \"oauth_scopes\": [\n        {\n          \"default_apis\": [\n            \"crm\"\n          ],\n          \"id\": \"contacts:all\",\n          \"label\": \"Read/write on the Contacts resource\"\n        }\n      ],\n      \"service_id\": \"close\",\n      \"settings\": [\n        {\n          \"id\": \"pipeline_id\",\n          \"label\": \"Pipeline\",\n          \"type\": \"{{oneOf (array 'text' 'checkbox' 'tel' 'email' 'url' 'textarea' 'select' 'filtered-select' 'multi-select' 'datetime' 'date' 'time' 'number' 'password')}}\"\n        }\n      ],\n      \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'considering')}}\",\n      \"supported_events\": [\n        {\n          \"downstream_event_type\": \"person_created\",\n          \"event_type\": \"employee.created\",\n          \"resource\": \"companies\"\n        }\n      ],\n      \"supported_resources\": [\n        {\n          \"downstream_id\": \"accounts\",\n          \"downstream_name\": \"Accounts\",\n          \"id\": \"companies\",\n          \"name\": \"Companies\",\n          \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n        }\n      ],\n      \"tls_support\": {\n        \"description\": \"\",\n        \"type\": \"\"\n      },\n      \"unified_apis\": [\n        {\n          \"id\": \"{{oneOf (array 'vault' 'lead' 'crm' 'accounting' 'file-storage' 'spreadsheet' 'email' 'script' 'sms' 'team-messaging' 'ecommerce' 'payroll' 'customer-support' 'time-registration' 'transactional-email' 'form' 'csp' 'email-marketing' 'ats' 'hris' 'pos' 'project-management' 'expense-management')}}\",\n          \"name\": \"File Storage API\",\n          \"oauth_scopes\": [\n            {\n              \"id\": \"contacts:all\",\n              \"label\": \"Read/write on the Contacts resource\"\n            }\n          ],\n          \"supported_events\": [\n            {\n              \"downstream_event_type\": \"person_created\",\n              \"event_type\": \"employee.created\",\n              \"resource\": \"companies\"\n            }\n          ],\n          \"supported_resources\": [\n            {\n              \"downstream_id\": \"accounts\",\n              \"downstream_name\": \"Accounts\",\n              \"id\": \"companies\",\n              \"name\": \"Companies\",\n              \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n            }\n          ]\n        }\n      ],\n      \"website_url\": \"https://www.salesforce.com\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Connectors",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b679a27a-43d1-43c9-806a-c9d071db5bba",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80a42535-7311-498d-b173-be86f742ae79",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6bb4155-f29f-4655-a285-745963623b41",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba0e1c90-e31d-4814-b575-af67d9ac4a90",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f556ecd-e8ab-4bfc-a9a8-fafe0f151d7d",
      "documentation": "Get Connector",
      "method": "get",
      "endpoint": "connector/connectors/:id",
      "responses": [
        {
          "uuid": "b0689583-e010-4f35-a048-91f825a39ac5",
          "body": "{\n  \"data\": {\n    \"auth_only\": true,\n    \"auth_type\": \"{{oneOf (array 'oauth2' 'apiKey' 'basic' 'custom' 'none')}}\",\n    \"blind_mapped\": true,\n    \"configurable_resources\": [\n      \"leads\",\n      \"companies\"\n    ],\n    \"description\": \"A description\",\n    \"docs\": [\n      {\n        \"audience\": \"{{oneOf (array 'application_owner' 'consumer')}}\",\n        \"format\": \"{{oneOf (array 'markdown')}}\",\n        \"id\": \"12345\",\n        \"name\": \"connection\",\n        \"url\": \"https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\"\n      }\n    ],\n    \"has_sandbox_credentials\": true,\n    \"icon_url\": \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"id\": \"crm+salesforce\",\n    \"logo_url\": \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"name\": \"Salesforce\",\n    \"oauth_credentials_source\": \"{{oneOf (array 'integration' 'connection')}}\",\n    \"oauth_grant_type\": \"{{oneOf (array 'authorization_code' 'client_credentials' 'password')}}\",\n    \"oauth_scopes\": [\n      {\n        \"default_apis\": [\n          \"crm\"\n        ],\n        \"id\": \"contacts:all\",\n        \"label\": \"Read/write on the Contacts resource\"\n      }\n    ],\n    \"service_id\": \"close\",\n    \"settings\": [\n      {\n        \"id\": \"pipeline_id\",\n        \"label\": \"Pipeline\",\n        \"type\": \"{{oneOf (array 'text' 'checkbox' 'tel' 'email' 'url' 'textarea' 'select' 'filtered-select' 'multi-select' 'datetime' 'date' 'time' 'number' 'password')}}\"\n      }\n    ],\n    \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'considering')}}\",\n    \"supported_events\": [\n      {\n        \"downstream_event_type\": \"person_created\",\n        \"event_type\": \"employee.created\",\n        \"resource\": \"companies\"\n      }\n    ],\n    \"supported_resources\": [\n      {\n        \"downstream_id\": \"accounts\",\n        \"downstream_name\": \"Accounts\",\n        \"id\": \"companies\",\n        \"name\": \"Companies\",\n        \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n      }\n    ],\n    \"tls_support\": {\n      \"description\": \"\",\n      \"type\": \"\"\n    },\n    \"unified_apis\": [\n      {\n        \"id\": \"{{oneOf (array 'vault' 'lead' 'crm' 'accounting' 'file-storage' 'spreadsheet' 'email' 'script' 'sms' 'team-messaging' 'ecommerce' 'payroll' 'customer-support' 'time-registration' 'transactional-email' 'form' 'csp' 'email-marketing' 'ats' 'hris' 'pos' 'project-management' 'expense-management')}}\",\n        \"name\": \"File Storage API\",\n        \"oauth_scopes\": [\n          {\n            \"id\": \"contacts:all\",\n            \"label\": \"Read/write on the Contacts resource\"\n          }\n        ],\n        \"supported_events\": [\n          {\n            \"downstream_event_type\": \"person_created\",\n            \"event_type\": \"employee.created\",\n            \"resource\": \"companies\"\n          }\n        ],\n        \"supported_resources\": [\n          {\n            \"downstream_id\": \"accounts\",\n            \"downstream_name\": \"Accounts\",\n            \"id\": \"companies\",\n            \"name\": \"Companies\",\n            \"status\": \"{{oneOf (array 'live' 'beta' 'development' 'upcoming' 'considering')}}\"\n          }\n        ]\n      }\n    ],\n    \"website_url\": \"https://www.salesforce.com\"\n  },\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Connectors",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "661d3bd3-c6e9-4e3c-a4be-1c0d028549a0",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33a983c2-62a9-47b4-b6b4-83fe80bff4a8",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3ce150f-5ce9-480f-82f2-c30f3978fead",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f57f44ab-f010-4cb1-aff6-764f5f147f4b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6258a4e-9a7e-44b4-a816-a84436c054b2",
      "documentation": "Get Connector Doc content",
      "method": "get",
      "endpoint": "connector/connectors/:id/docs/:doc_id",
      "responses": [
        {
          "uuid": "46aee985-09f7-4265-963a-95f0d899ae4d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Connectors",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/markdown"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aca0a426-e95c-44b9-80df-13d79d281d2d",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c83657a-4aee-47cb-8979-bcd021a11783",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fbf1e61-0d2f-4032-b36f-c8cb89a273e0",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e6e7d27-8d7e-411c-967f-68a8eca617c9",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38624678-da39-451d-a0e7-a992cfb78184",
      "documentation": "Get Connector Resource",
      "method": "get",
      "endpoint": "connector/connectors/:id/resources/:resource_id",
      "responses": [
        {
          "uuid": "76191dd5-b31c-48da-9956-2933c6cef1a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92c6726f-0969-4056-a6d2-8864cde5be98",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "956f63ec-9b28-46bc-8d5f-8e9928a9ee46",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1d0f689-588d-4513-8244-555903b65dea",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "514d5454-4496-4735-8036-3c65a4498cad",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}