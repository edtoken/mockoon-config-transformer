{
  "uuid": "e34a660a-e076-4ed0-9206-1662b8c58051",
  "lastMigration": 24,
  "name": "CircleCI REST API",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "bbbea111-a1a1-4c6f-8ea4-76f30b2a7c08",
      "documentation": "Provides information about the signed in user.\n",
      "method": "get",
      "endpoint": "me",
      "responses": [
        {
          "uuid": "6dace5ae-de37-4547-9ba9-446fcb521fbe",
          "body": "{\n  \"admin\": {{faker 'datatype.boolean'}},\n  \"all_emails\": [\n    \"{{faker 'internet.email'}}\"\n  ],\n  \"analytics_id\": \"\",\n  \"avatar_url\": \"\",\n  \"basic_email_prefs\": \"\",\n  \"bitbucket\": {{faker 'datatype.number'}},\n  \"bitbucket_authorized\": {{faker 'datatype.boolean'}},\n  \"containers\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"days_left_in_trial\": {{faker 'datatype.number'}},\n  \"dev_admin\": {{faker 'datatype.boolean'}},\n  \"enrolled_betas\": [\n    \"\"\n  ],\n  \"github_id\": {{faker 'datatype.number'}},\n  \"github_oauth_scopes\": [\n    \"\"\n  ],\n  \"gravatar_id\": {{faker 'datatype.number'}},\n  \"heroku_api_key\": \"\",\n  \"in_beta_program\": {{faker 'datatype.boolean'}},\n  \"login\": \"\",\n  \"name\": \"\",\n  \"organization_prefs\": {},\n  \"parallelism\": {{faker 'datatype.number'}},\n  \"plan\": \"\",\n  \"projects\": {},\n  \"pusher_id\": \"\",\n  \"selected_email\": \"{{faker 'internet.email'}}\",\n  \"sign_in_count\": {{faker 'datatype.number'}},\n  \"trial_end\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "signed in user",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "370c3ea2-ab82-43e1-a745-b40532b3cfcf",
      "documentation": "Build summary for each of the last 30 builds for a single git repo.\n",
      "method": "get",
      "endpoint": "project/:username/:project",
      "responses": [
        {
          "uuid": "d1387dd4-dd47-4484-b281-2e5a18870747",
          "body": "[\n  {\n    \"body\": \"\",\n    \"branch\": \"\",\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"build_url\": \"\",\n    \"committer_email\": \"{{faker 'internet.email'}}\",\n    \"committer_name\": \"\",\n    \"dont_build\": \"\",\n    \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n    \"previous\": {\n      \"build_num\": {{faker 'datatype.number'}},\n      \"build_time_millis\": {{faker 'datatype.number'}},\n      \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n    },\n    \"queued_at\": \"{{faker 'date.recent' 365}}\",\n    \"reponame\": \"\",\n    \"retry_of\": {{faker 'datatype.number'}},\n    \"start_time\": \"{{faker 'date.recent' 365}}\",\n    \"stop_time\": \"{{faker 'date.recent' 365}}\",\n    \"subject\": \"\",\n    \"username\": \"\",\n    \"vcs_url\": \"\",\n    \"why\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Build summary for each of the last 30 builds",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4f87c14-8b9b-4bb1-8b0d-fa4a8b41cc21",
      "documentation": "Triggers a new build, returns a summary of the build.\n",
      "method": "post",
      "endpoint": "project/:username/:project",
      "responses": [
        {
          "uuid": "22107898-12ec-4519-8de9-9d0d4f2f1985",
          "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"build_num\": {{faker 'datatype.number'}},\n  \"outcome\": \"{{oneOf (array 'canceled' 'infrastructure_fail' 'timedout' 'failed' 'no_tests' 'success')}}\",\n  \"pushed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\",\n  \"vcs_revision\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "returns a summary of the build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64f5a21c-87cc-4965-aaf0-f78e6c583039",
      "documentation": "Clears the cache for a project.\n",
      "method": "delete",
      "endpoint": "project/:username/:project/build-cache",
      "responses": [
        {
          "uuid": "9da2b78b-56ab-451f-871b-fd99d40535f6",
          "body": "{\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "status message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37c24f44-aaa1-4c6e-a0c7-cd4976eba724",
      "documentation": "Lists checkout keys.\n",
      "method": "get",
      "endpoint": "project/:username/:project/checkout-key",
      "responses": [
        {
          "uuid": "b909ae12-6869-4bdc-8f7b-0c9342f693f2",
          "body": "[\n  {\n    \"fingerprint\": \"\",\n    \"preferred\": {{faker 'datatype.boolean'}},\n    \"public_key\": \"\",\n    \"time\": \"{{faker 'date.recent' 365}}\",\n    \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "checkout keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8436ab4f-3a2d-4232-b444-593d622de70d",
      "documentation": "Creates a new checkout key.\nOnly usable with a user API token.\n",
      "method": "post",
      "endpoint": "project/:username/:project/checkout-key",
      "responses": [
        {
          "uuid": "684a2085-50e9-414d-852f-b91dae6d4b5d",
          "body": "{\n  \"fingerprint\": \"\",\n  \"preferred\": {{faker 'datatype.boolean'}},\n  \"public_key\": \"\",\n  \"time\": \"{{faker 'date.recent' 365}}\",\n  \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "checkout key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8c37df4-7d1e-4c7c-9dce-613dec52b1cb",
      "documentation": "Delete a checkout key.\n",
      "method": "delete",
      "endpoint": "project/:username/:project/checkout-key/:fingerprint",
      "responses": [
        {
          "uuid": "fbe25494-4b6a-4fa9-ac2d-60224359b104",
          "body": "{\n  \"message\": \"{{oneOf (array 'OK')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "status message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7c4258e-4411-489b-975c-794fa6a580df",
      "documentation": "Get a checkout key.\n",
      "method": "get",
      "endpoint": "project/:username/:project/checkout-key/:fingerprint",
      "responses": [
        {
          "uuid": "751534be-9836-4b8a-affc-75aebf27f512",
          "body": "{\n  \"fingerprint\": \"\",\n  \"preferred\": {{faker 'datatype.boolean'}},\n  \"public_key\": \"\",\n  \"time\": \"{{faker 'date.recent' 365}}\",\n  \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "checkout key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77e920e8-1907-430a-8ffc-b44f1ef8bbd6",
      "documentation": "Lists the environment variables for :project\n",
      "method": "get",
      "endpoint": "project/:username/:project/envvar",
      "responses": [
        {
          "uuid": "1d7965e1-4a1b-4d90-8715-9e7055be0a63",
          "body": "[\n  {\n    \"name\": \"\",\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "XXX",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "19ec3d31-ec03-4070-83a2-036ca83a33a2",
      "documentation": "Creates a new environment variable\n",
      "method": "post",
      "endpoint": "project/:username/:project/envvar",
      "responses": [
        {
          "uuid": "19563a77-2a93-45d6-a094-4d429b7936f0",
          "body": "{\n  \"name\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "XXX",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1c259f3-32e8-443f-a698-475cb622039f",
      "documentation": "Deletes the environment variable named ':name'\n",
      "method": "delete",
      "endpoint": "project/:username/:project/envvar/:name",
      "responses": [
        {
          "uuid": "cfa0f855-1898-4059-b12a-eb657aa1392f",
          "body": "{\n  \"message\": \"{{oneOf (array 'OK')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Deletes the environment variable named ':name'\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fdab20a-b0c2-42d9-ae63-7a6bee2fd52d",
      "documentation": "Gets the hidden value of environment variable :name\n",
      "method": "get",
      "endpoint": "project/:username/:project/envvar/:name",
      "responses": [
        {
          "uuid": "c67fccf3-5cfc-4293-96bb-852cb61aac9c",
          "body": "{\n  \"name\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "XXX",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "29dc91f8-c401-45ac-bda3-d84c9c71c312",
      "documentation": "Create an ssh key used to access external systems that require SSH key-based authentication\n",
      "method": "post",
      "endpoint": "project/:username/:project/ssh-key",
      "responses": [
        {
          "uuid": "347117c9-b7fc-4ca3-829a-eafca05e50e1",
          "body": "{\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "no response expected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3043ca89-e0e3-450d-89dd-ca240087a050",
      "documentation": "Triggers a new build, returns a summary of the build.\nOptional build parameters can be set using an experimental API.\n\nNote: For more about build parameters, read about [using parameterized builds](https://circleci.com/docs/parameterized-builds/)\n",
      "method": "post",
      "endpoint": "project/:username/:project/tree/:branch",
      "responses": [
        {
          "uuid": "ea0761c6-b837-474e-a418-91dc76086118",
          "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'datatype.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'datatype.number'}},\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "returns a summary of the build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c4bed1e-ac4f-4485-b6a7-63870f56a70a",
      "documentation": "Full details for a single build. The response includes all of the fields from the build summary.\nThis is also the payload for the [notification webhooks](/docs/configuration/#notify), in which case this object is the value to a key named 'payload'.\n",
      "method": "get",
      "endpoint": "project/:username/:project/:build_num",
      "responses": [
        {
          "uuid": "7508b646-aace-4c65-998e-f324d0d4606d",
          "body": "{\n  \"all_commit_details\": [\n    {\n      \"author_date\": \"{{faker 'date.recent' 365}}\",\n      \"author_email\": \"{{faker 'internet.email'}}\",\n      \"author_login\": \"\",\n      \"author_name\": \"\",\n      \"body\": \"\",\n      \"commit\": \"\",\n      \"commit_url\": \"\",\n      \"committer_date\": \"{{faker 'date.recent' 365}}\",\n      \"committer_email\": \"{{faker 'internet.email'}}\",\n      \"committer_login\": \"\",\n      \"committer_name\": \"\",\n      \"subject\": \"\"\n    }\n  ],\n  \"compare\": \"\",\n  \"job_name\": \"\",\n  \"node\": \"\",\n  \"previous_successful_build\": {\n    \"build_num\": {{faker 'datatype.number'}},\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"retries\": {{faker 'datatype.boolean'}},\n  \"ssh_enabled\": {{faker 'datatype.boolean'}},\n  \"timedout\": {{faker 'datatype.boolean'}},\n  \"usage_queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"admin\": {{faker 'datatype.boolean'}},\n    \"all_emails\": [\n      \"{{faker 'internet.email'}}\"\n    ],\n    \"analytics_id\": \"\",\n    \"avatar_url\": \"\",\n    \"basic_email_prefs\": \"\",\n    \"bitbucket\": {{faker 'datatype.number'}},\n    \"bitbucket_authorized\": {{faker 'datatype.boolean'}},\n    \"containers\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"days_left_in_trial\": {{faker 'datatype.number'}},\n    \"dev_admin\": {{faker 'datatype.boolean'}},\n    \"enrolled_betas\": [\n      \"\"\n    ],\n    \"github_id\": {{faker 'datatype.number'}},\n    \"github_oauth_scopes\": [\n      \"\"\n    ],\n    \"gravatar_id\": {{faker 'datatype.number'}},\n    \"heroku_api_key\": \"\",\n    \"in_beta_program\": {{faker 'datatype.boolean'}},\n    \"login\": \"\",\n    \"name\": \"\",\n    \"organization_prefs\": {},\n    \"parallelism\": {{faker 'datatype.number'}},\n    \"plan\": \"\",\n    \"projects\": {},\n    \"pusher_id\": \"\",\n    \"selected_email\": \"{{faker 'internet.email'}}\",\n    \"sign_in_count\": {{faker 'datatype.number'}},\n    \"trial_end\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Full details for a single build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "630b267b-0e69-4e79-b6db-2c631fa29909",
      "documentation": "List the artifacts produced by a given build.\n",
      "method": "get",
      "endpoint": "project/:username/:project/:build_num/artifacts",
      "responses": [
        {
          "uuid": "69c8d3b5-c6b6-45ef-bfe6-0927d37fce1d",
          "body": "[\n  {\n    \"node_index\": {{faker 'datatype.number'}},\n    \"path\": \"\",\n    \"pretty_path\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List the artifacts produced by a given build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5270fe6e-ffcb-4e77-babc-b438f813944d",
      "documentation": "Cancels the build, returns a summary of the build.\n",
      "method": "post",
      "endpoint": "project/:username/:project/:build_num/cancel",
      "responses": [
        {
          "uuid": "191af676-dc45-4710-be4e-63f19ba8f6b1",
          "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'datatype.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'datatype.number'}},\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "returns a summary of the build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4173920e-2447-49e3-82bf-08c9370b3adc",
      "documentation": "Retries the build, returns a summary of the new build.\n",
      "method": "post",
      "endpoint": "project/:username/:project/:build_num/retry",
      "responses": [
        {
          "uuid": "f10ff125-af64-40f4-9b3d-2351c6ab7462",
          "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'datatype.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'datatype.number'}},\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "returns a summary of the new build",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7748a8f-fa8b-49cd-97d7-5ed649077420",
      "documentation": "Provides test metadata for a build\nNote: [Learn how to set up your builds to collect test metadata](https://circleci.com/docs/test-metadata/)\n",
      "method": "get",
      "endpoint": "project/:username/:project/:build_num/tests",
      "responses": [
        {
          "uuid": "9834a346-3757-436c-ab9a-34e8ee63d773",
          "body": "{\n  \"tests\": [\n    {\n      \"classname\": \"\",\n      \"file\": \"\",\n      \"message\": \"\",\n      \"name\": \"\",\n      \"result\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\",\n      \"run_time\": {{faker 'datatype.number'}},\n      \"source\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "test metadata for a build\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "575b119a-ebef-4985-8e08-f76919b07077",
      "documentation": "List of all the projects you're following on CircleCI, with build information organized by branch.\n",
      "method": "get",
      "endpoint": "projects",
      "responses": [
        {
          "uuid": "df33331a-ba0d-4072-bbb2-80f202c3db8d",
          "body": "[\n  {\n    \"aws\": {\n      \"keypair\": \"\"\n    },\n    \"branches\": {},\n    \"campfire_notify_prefs\": \"\",\n    \"campfire_room\": \"\",\n    \"campfire_subdomain\": \"\",\n    \"campfire_token\": \"\",\n    \"compile\": \"\",\n    \"default_branch\": \"\",\n    \"dependencies\": \"\",\n    \"extra\": \"\",\n    \"feature_flags\": {\n      \"build-fork-prs\": {{faker 'datatype.boolean'}},\n      \"fleet\": {{faker 'datatype.boolean'}},\n      \"junit\": {{faker 'datatype.boolean'}},\n      \"oss\": {{faker 'datatype.boolean'}},\n      \"osx\": {{faker 'datatype.boolean'}},\n      \"set-github-status\": {{faker 'datatype.boolean'}},\n      \"trusty-beta\": {{faker 'datatype.boolean'}}\n    },\n    \"flowdock_api_token\": \"\",\n    \"followed\": {{faker 'datatype.boolean'}},\n    \"has_usable_key\": {{faker 'datatype.boolean'}},\n    \"heroku_deploy_user\": \"\",\n    \"hipchat_api_token\": \"\",\n    \"hipchat_notify\": \"\",\n    \"hipchat_notify_prefs\": \"\",\n    \"hipchat_room\": \"\",\n    \"irc_channel\": \"\",\n    \"irc_keyword\": \"\",\n    \"irc_notify_prefs\": \"\",\n    \"irc_password\": \"\",\n    \"irc_server\": \"\",\n    \"irc_username\": \"\",\n    \"language\": \"\",\n    \"oss\": {{faker 'datatype.boolean'}},\n    \"parallel\": {{faker 'datatype.number'}},\n    \"reponame\": \"\",\n    \"scopes\": [\n      \"{{oneOf (array 'write-settings' 'view-builds' 'read-settings' 'trigger-builds' 'all' 'status' 'none')}}\"\n    ],\n    \"setup\": \"\",\n    \"slack_api_token\": \"\",\n    \"slack_channel\": \"\",\n    \"slack_channel_override\": \"\",\n    \"slack_notify_prefs\": \"\",\n    \"slack_subdomain\": \"\",\n    \"slack_webhook_url\": \"\",\n    \"ssh_keys\": [\n      \"\"\n    ],\n    \"test\": \"\",\n    \"username\": \"\",\n    \"vcs_type\": \"\",\n    \"vcs_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of all the projects you're following on CircleCI\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "102fb2e1-aa76-4ae1-9f0c-043d60d288cf",
      "documentation": "Build summary for each of the last 30 recent builds, ordered by build_num.\n",
      "method": "get",
      "endpoint": "recent-builds",
      "responses": [
        {
          "uuid": "ad29df92-fa7d-4ad8-8398-5d496829b1e4",
          "body": "[\n  {\n    \"body\": \"\",\n    \"branch\": \"\",\n    \"build_time_millis\": {{faker 'datatype.number'}},\n    \"build_url\": \"\",\n    \"committer_email\": \"{{faker 'internet.email'}}\",\n    \"committer_name\": \"\",\n    \"dont_build\": \"\",\n    \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n    \"previous\": {\n      \"build_num\": {{faker 'datatype.number'}},\n      \"build_time_millis\": {{faker 'datatype.number'}},\n      \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n    },\n    \"queued_at\": \"{{faker 'date.recent' 365}}\",\n    \"reponame\": \"\",\n    \"retry_of\": {{faker 'datatype.number'}},\n    \"start_time\": \"{{faker 'date.recent' 365}}\",\n    \"stop_time\": \"{{faker 'date.recent' 365}}\",\n    \"subject\": \"\",\n    \"username\": \"\",\n    \"vcs_url\": \"\",\n    \"why\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Build summary for each of the last 30 recent builds",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e1fc482-afcd-42bd-abcc-89fdb03481b5",
      "documentation": "Adds your Heroku API key to CircleCI, takes apikey as form param name.\n",
      "method": "post",
      "endpoint": "user/heroku-key",
      "responses": [
        {
          "uuid": "e33829d2-4620-41f6-8b83-e54dd3832c93",
          "body": "{\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Your Heroku API key is invalid.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}