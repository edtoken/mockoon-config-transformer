{
  "uuid": "c4a2e97c-ebaa-4d53-9093-8fdd6e65af7c",
  "lastMigration": 24,
  "name": "Amazon QLDB Session",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2ab3e5ff-6c13-45a4-9697-f2d57b67ec3b",
      "documentation": "<p>Sends a command to an Amazon QLDB ledger.</p> <note> <p>Instead of interacting directly with this API, we recommend using the QLDB driver or the QLDB shell to execute data transactions on a ledger.</p> <ul> <li> <p>If you are working with an AWS SDK, use the QLDB driver. The driver provides a high-level abstraction layer above this <i>QLDB Session</i> data plane and manages <code>SendCommand</code> API calls for you. For information and a list of supported programming languages, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html\">Getting started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> <li> <p>If you are working with the AWS Command Line Interface (AWS CLI), use the QLDB shell. The shell is a command line interface that uses the QLDB driver to interact with a ledger. For information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html\">Accessing Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=QLDBSession.SendCommand",
      "responses": [
        {
          "uuid": "e81daebb-0b85-45f3-a6f4-c807524afd02",
          "body": "{\n  \"StartSession\": {\n    \"SessionToken\": \"\",\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"StartTransaction\": {\n    \"TransactionId\": \"\",\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"EndSession\": {\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"CommitTransaction\": {\n    \"TransactionId\": \"\",\n    \"CommitDigest\": \"\",\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    },\n    \"ConsumedIOs\": {\n      \"ReadIOs\": {{faker 'datatype.number'}},\n      \"WriteIOs\": {{faker 'datatype.number'}}\n    }\n  },\n  \"AbortTransaction\": {\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    }\n  },\n  \"ExecuteStatement\": {\n    \"FirstPage\": {\n      \"Values\": [\n        {\n          \"IonBinary\": \"\",\n          \"IonText\": \"\"\n        }\n      ],\n      \"NextPageToken\": \"\"\n    },\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    },\n    \"ConsumedIOs\": {\n      \"ReadIOs\": {{faker 'datatype.number'}},\n      \"WriteIOs\": {{faker 'datatype.number'}}\n    }\n  },\n  \"FetchPage\": {\n    \"Page\": {\n      \"Values\": [\n        {\n          \"IonBinary\": \"\",\n          \"IonText\": \"\"\n        }\n      ],\n      \"NextPageToken\": \"\"\n    },\n    \"TimingInformation\": {\n      \"ProcessingTimeMilliseconds\": {{faker 'datatype.number'}}\n    },\n    \"ConsumedIOs\": {\n      \"ReadIOs\": {{faker 'datatype.number'}},\n      \"WriteIOs\": {{faker 'datatype.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bbecdb48-b10c-4c3a-98d1-b4b104dd5f66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4201642a-f3e9-453f-8dac-dbc8d90f5e8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidSessionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f3b4267-ad87-4f49-9898-cd1a21d67bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OccConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17956ade-50c4-4e37-8ad8-687f51c4c5bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RateExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c624e8a-cca8-4c58-b87d-c21045bb661e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "345091ab-69a0-4c4d-b5ac-9d04951c1a19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CapacityExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}