{
  "uuid": "98b34f29-09f8-481c-98ae-c23833564cf4",
  "lastMigration": 24,
  "name": "Catalog Inventory",
  "endpointPrefix": "/api/catalog-inventory/v1.0",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2b15b3eb-27bf-4a97-a53e-dd83cb10b99d",
      "documentation": "Perform a GraphQL Query",
      "method": "post",
      "endpoint": "graphql",
      "responses": [
        {
          "uuid": "af9948b8-d347-43c8-b1ff-7cf21a8c1d98",
          "body": "{\n  \"data\": {},\n  \"errors\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GraphQL Query Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62f7ef4c-4556-4c96-a246-8121aebb1954",
      "documentation": "Return this API document in JSON format",
      "method": "get",
      "endpoint": "openapi.json",
      "responses": [
        {
          "uuid": "3c0e1d8c-515b-4aea-947a-c3e4ec0eb771",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The API document for this version of the API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95b08973-c4a1-42b1-8d14-2303a28c51dc",
      "documentation": "List ServiceCredentialTypes",
      "method": "get",
      "endpoint": "service_credential_types",
      "responses": [
        {
          "uuid": "5289c961-c718-4eeb-932b-33ce6bc77d29",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"namespace\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialTypes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2a48d4e3-732f-4f37-94e4-714139e89d8c",
      "documentation": "Show an existing ServiceCredentialType",
      "method": "get",
      "endpoint": "service_credential_types/:id",
      "responses": [
        {
          "uuid": "52a925d1-6053-451d-a221-0a837f1897f7",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"kind\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"namespace\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialType info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22deb4c7-eba6-447d-9036-c03076135ef5",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b77cfd25-5a26-4417-b566-040442a89fed",
      "documentation": "List ServiceCredentials",
      "method": "get",
      "endpoint": "service_credentials",
      "responses": [
        {
          "uuid": "cffd7e80-768b-498e-b98f-acde0fa88e9d",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"service_credential_type_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"type_name\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentials collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d8bf56c0-0659-4efc-a694-b46f585e55de",
      "documentation": "Show an existing ServiceCredential",
      "method": "get",
      "endpoint": "service_credentials/:id",
      "responses": [
        {
          "uuid": "e8c14061-8378-4430-9bff-ccc4737a53ec",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"service_credential_type_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"type_name\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredential info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e1832f4-9546-4868-9d42-7dc708637cab",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a34d3060-6062-4314-9c81-f589e7ef9684",
      "documentation": "List ServiceInstances",
      "method": "get",
      "endpoint": "service_instances",
      "responses": [
        {
          "uuid": "d9d2457f-ecde-4413-b864-8fd673b406b4",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08f2b76d-22db-49bc-a152-f2d80bf44fd9",
      "documentation": "Show an existing ServiceInstance",
      "method": "get",
      "endpoint": "service_instances/:id",
      "responses": [
        {
          "uuid": "7e9e191f-353e-4ac2-b6d1-9dbdc0c81d7b",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"external_url\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample ServiceInstance\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_instance_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"service_plan_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstance info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "01054a8c-910a-47d6-8a03-5ae13f179d65",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1beadc12-42fe-4e04-9c1b-5f2c9e10654b",
      "documentation": "List ServiceInventories",
      "method": "get",
      "endpoint": "service_inventories",
      "responses": [
        {
          "uuid": "7597d783-025e-44f6-9d58-5bddd1c31ed5",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71f6ec4e-35c8-4464-815d-8b99bc360249",
      "documentation": "Show an existing ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id",
      "responses": [
        {
          "uuid": "33d9ba65-deaf-4736-aaae-d71c2ff47fde",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventory info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac4153dc-5ace-42ab-af57-748dedddf263",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1845e55-a0ee-4208-bb72-12e405b90ca8",
      "documentation": "Tag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/tag",
      "responses": [
        {
          "uuid": "837e0c23-f564-46b0-b2d1-ad76e5c68cb2",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "ServiceInventory tagged successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5eab0a7f-3660-477c-84a3-0970f83ee9d2",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "Not modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fed9c84e-21ff-4250-a36f-98ffad02cb86",
      "documentation": "List Tags for ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id/tags",
      "responses": [
        {
          "uuid": "8042f1e0-60a6-4854-9c29-4ff98097ef81",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63b29418-1848-487e-a528-8eeb0b4d6001",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eead50e6-7cff-451d-8ebd-ea1c76d44a64",
      "documentation": "Untag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/untag",
      "responses": [
        {
          "uuid": "16e192d6-fee7-4a5b-a96a-ab8460e69c19",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "ServiceInventory untagged successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a610146f-1a0a-4ba3-a49a-f809cf15781f",
      "documentation": "List ServiceOfferingNodes",
      "method": "get",
      "endpoint": "service_offering_nodes",
      "responses": [
        {
          "uuid": "4849ad3d-244a-4d4b-b6a6-797b6225c340",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7ce67c7-20c1-454c-bbe8-be5e30f3ee9c",
      "documentation": "Show an existing ServiceOfferingNode",
      "method": "get",
      "endpoint": "service_offering_nodes/:id",
      "responses": [
        {
          "uuid": "e0d8da2e-06d4-49aa-9927-9c2b4192a47e",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_offering_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNode info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e9d39e4c-efd2-4882-b06d-7db2426745ca",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b95f9930-11fd-4990-b8f7-4500b90ba562",
      "documentation": "List ServiceOfferings",
      "method": "get",
      "endpoint": "service_offerings",
      "responses": [
        {
          "uuid": "dc769c45-4c44-48df-8948-5121f3f1a4be",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2734bb51-c7c7-4b42-8b91-4ebcd8f9c0c5",
      "documentation": "Show an existing ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id",
      "responses": [
        {
          "uuid": "2f5b118f-89ac-4bda-b49b-470646edf6d4",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a short description\",\n  \"display_name\": \"MariaDB (Ephemeral)\",\n  \"distributor\": \"Red Hat, Inc.\",\n  \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n  \"name\": \"Sample Service Offering\",\n  \"refresh_state_part_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"object-12345_67890\",\n  \"support_url\": \"https://access.redhat.com\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOffering info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aae3c7e6-dd63-4cee-b2ac-0caaadcb1b5d",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a7d5f54-62c8-4274-972f-db8e2e145597",
      "documentation": "Invokes computing of ServiceInventories tags for given ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/applied_inventories_tags",
      "responses": [
        {
          "uuid": "1297587b-0842-4270-a06e-12c06893b793",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of inventories tags for the computing result",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e987d132-2f17-4576-9c46-4afac8230110",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0df0d7f9-ef90-4748-8d73-5e510edf4cd6",
      "documentation": "Order an existing ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/order",
      "responses": [
        {
          "uuid": "aff2d24d-ae2b-4b46-ba39-b2d1a4a62fde",
          "body": "{\n  \"task_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a task ID for the order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a6068a5-6d49-4ab2-805d-2cbeb8e59e2f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f74d85ec-11c0-41de-bfd3-c3cddfe9d2ff",
      "documentation": "List ServiceInstances for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_instances",
      "responses": [
        {
          "uuid": "ba59d15e-4498-40be-898e-2ba4decd5b08",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8297d6c5-47ae-4f85-acc9-e157bab50775",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b911bd49-125e-4164-8542-695a63850a33",
      "documentation": "List ServiceOfferingNodes for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "65b7c8df-4dc3-4c36-8cf6-7c8202fdf8ed",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "53f96d51-e630-48ba-9aac-88d708faeab5",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6bc1a6f5-97b1-49ac-9c93-d72b432277c5",
      "documentation": "List ServicePlans for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_plans",
      "responses": [
        {
          "uuid": "62c77d75-7a0b-473c-9a9c-b8ad6c221e26",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8eda686e-942b-4b40-b0f8-b178612698a0",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c33f232f-c221-4b21-bd27-41a31107b726",
      "documentation": "List ServicePlans",
      "method": "get",
      "endpoint": "service_plans",
      "responses": [
        {
          "uuid": "59bd89fc-2b2e-46dc-ac43-f2fc7e08ad60",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9b5c937-6328-4ad0-8edf-1a7274393dd3",
      "documentation": "Show an existing ServicePlan",
      "method": "get",
      "endpoint": "service_plans/:id",
      "responses": [
        {
          "uuid": "ff85739c-dfdd-4f90-9f7d-f791d85df630",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"create_json_schema\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a sample description for a provider\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample Provider\",\n  \"refresh_state_part_id\": \"\",\n  \"resource_version\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n  \"update_json_schema\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlan info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fd63a1d-180c-4d78-95ed-9012c8d5f6b2",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75a89863-513d-4817-88e0-93a8b82bc927",
      "documentation": "List Sources",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "23d120b8-757c-433f-a69d-50b40431a0ba",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"availability_message\": \"\",\n      \"availability_status\": \"The availability status of source\",\n      \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"info\": \"The version of Tower being used\",\n      \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_refresh_message\": \"\",\n      \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"The Source Name\",\n      \"previous_sha\": \"\",\n      \"previous_size\": {{faker 'datatype.number'}},\n      \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_state\": \"\",\n      \"refresh_task_id\": \"{{faker 'datatype.uuid'}}\",\n      \"uid\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sources collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05f548c9-6dbc-4ab9-b99c-7981083fed80",
      "documentation": "Show an existing Source",
      "method": "get",
      "endpoint": "sources/:id",
      "responses": [
        {
          "uuid": "3314e5b0-45a2-41f3-a037-9a2ef6a0a27f",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"availability_message\": \"\",\n  \"availability_status\": \"The availability status of source\",\n  \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"info\": \"The version of Tower being used\",\n  \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_refresh_message\": \"\",\n  \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"The Source Name\",\n  \"previous_sha\": \"\",\n  \"previous_size\": {{faker 'datatype.number'}},\n  \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_state\": \"\",\n  \"refresh_task_id\": \"{{faker 'datatype.uuid'}}\",\n  \"uid\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Source info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cf632b5-4b33-485f-8e01-f37b47595078",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "855bd583-e5a9-4340-9bb9-e34180cea20b",
      "documentation": "Incremental Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/incremental_refresh",
      "responses": [
        {
          "uuid": "66476577-1890-4d51-a660-fe49cc25f646",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba7a5398-aca7-4068-ae95-2fb0210a6c15",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adf713d7-6d2e-4e54-aad5-2605b109cf73",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9eb4541d-25c3-4e27-bdc3-d31c4e5a8bda",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c05f9500-3e44-4f89-9465-3a3c17c1047f",
      "documentation": " Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/refresh",
      "responses": [
        {
          "uuid": "44cf2460-86ce-4992-b0f4-0fdc955a8762",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5833db66-7cee-45b5-af6c-a182eff27215",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b468ff1-904d-458d-bb0a-6efa2153806d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44b02fa0-3ad7-4e32-9e33-19b5aa6d5a4d",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85e167ea-2604-4350-9d8b-e84d88954673",
      "documentation": "List ServiceInstances for Source",
      "method": "get",
      "endpoint": "sources/:id/service_instances",
      "responses": [
        {
          "uuid": "679136a8-8598-451a-b27e-59c4c6607227",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c86c61eb-a254-4776-b7e2-b90731d2c910",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca9d25a9-bfca-4921-a6c4-dbe86b893ce8",
      "documentation": "List ServiceInventories for Source",
      "method": "get",
      "endpoint": "sources/:id/service_inventories",
      "responses": [
        {
          "uuid": "13256675-e5bd-4dd9-98b5-91a706f969d2",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70e9f056-6706-454a-a866-6bc71acc2a51",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a8ed143-0b95-4d8c-9423-e131695a7159",
      "documentation": "List ServiceOfferingNodes for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "dacff84e-e040-48b1-8da9-85979393b80c",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d64e976-33ef-4af7-afcc-bfeeecec7cab",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2285097-d22a-4209-9033-c0cf9f64f603",
      "documentation": "List ServiceOfferings for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offerings",
      "responses": [
        {
          "uuid": "8463b443-c131-444e-93b5-e021317cee52",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea62f1b2-9d04-4fa6-b191-1709e509d098",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f092996-4bfa-4f2a-b128-e54158c57c30",
      "documentation": "List ServicePlans for Source",
      "method": "get",
      "endpoint": "sources/:id/service_plans",
      "responses": [
        {
          "uuid": "4f573a7b-f8e4-49d4-9827-e9382750ea45",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'datatype.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "340fe6ad-6683-4c8d-8b7a-349839dc9231",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a0f5cf3-aafd-41da-98e8-851752a368aa",
      "documentation": "List Tasks for Source",
      "method": "get",
      "endpoint": "sources/:id/tasks",
      "responses": [
        {
          "uuid": "4aa73e79-b7d5-4d2a-b137-6c2eaae35fb5",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'datatype.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'datatype.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cec7f75d-1e53-477e-8ade-aed6a448fe4e",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e219d75a-ae28-4891-b35c-c5519a138eb8",
      "documentation": "List Tags",
      "method": "get",
      "endpoint": "tags",
      "responses": [
        {
          "uuid": "784c92fd-db73-4484-bfca-bab62a731e5a",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95f45bdf-f6aa-467e-8130-689a72e8cc92",
      "documentation": "List Tasks",
      "method": "get",
      "endpoint": "tasks",
      "responses": [
        {
          "uuid": "ab82c1ea-9a52-45fb-b173-70e9649e89fe",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'datatype.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'datatype.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'datatype.number'}},\n    \"limit\": {{faker 'datatype.number'}},\n    \"offset\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "84a10bc3-5e4b-4cdb-8e48-432727c5d411",
      "documentation": "Show an existing Task",
      "method": "get",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "1eb15f35-cad7-4512-96ef-29af8dc27b1d",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"child_task_id\": \"{{faker 'datatype.uuid'}}\",\n  \"completed_at\": \"{{faker 'date.recent' 365}}\",\n  \"controller_message_id\": \"{{faker 'datatype.uuid'}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"{{faker 'datatype.uuid'}}\",\n  \"input\": \"Task payload input content\",\n  \"message\": \"received message starting inventory collection\",\n  \"name\": \"Order Service Plan\",\n  \"output\": \"Result of Task Execution\",\n  \"owner\": \"jdoe\",\n  \"source_id\": \"\",\n  \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n  \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n  \"target_source_ref\": \"\",\n  \"target_type\": \"\",\n  \"type\": \"CloudConnectorTask\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Task info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1854f23b-f6f7-48e4-bf61-4e931f78873b",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c1616d3-86fe-4ec9-af8c-04d21f58ccb1",
      "documentation": "Update an existing Task",
      "method": "patch",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "d375043c-172c-4b9d-b941-027af350fb24",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7843eeb7-16e2-46b9-acc0-a72ae5c4e28a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f76aa5e7-b1f6-4b77-8b81-b66e84a706cf",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}