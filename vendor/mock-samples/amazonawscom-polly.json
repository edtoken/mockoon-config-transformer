{
  "uuid": "3ccefbb9-2328-43e7-9b6a-9663db45fc2e",
  "lastMigration": 24,
  "name": "Amazon Polly",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5400414a-b380-47a7-b597-e01afb8ce6b7",
      "documentation": "<p>Deletes the specified pronunciation lexicon stored in an Amazon Web Services Region. A lexicon which has been deleted is not available for speech synthesis, nor is it possible to retrieve it using either the <code>GetLexicon</code> or <code>ListLexicon</code> APIs.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "method": "delete",
      "endpoint": "v1/lexicons/:LexiconName",
      "responses": [
        {
          "uuid": "8dc458e7-b26e-4802-8cfe-14afbfae2646",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39bb8cdf-eb3e-4717-8daa-1ba76030874d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "LexiconNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0fd73a15-c8dd-4604-8bcb-912567d6ce77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c208366-9927-408a-8d76-92e630a367e1",
      "documentation": "Returns the content of the specified pronunciation lexicon stored in an Amazon Web Services Region. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.",
      "method": "get",
      "endpoint": "v1/lexicons/:LexiconName",
      "responses": [
        {
          "uuid": "a3948142-a250-442b-a71c-e7bd54714a50",
          "body": "{\n  \"Lexicon\": {\n    \"Content\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<lexicon version=\\\"1.0\\\" \\r\\n      xmlns=\\\"http://www.w3.org/2005/01/pronunciation-lexicon\\\"\\r\\n      xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\r\\n      xsi:schemaLocation=\\\"http://www.w3.org/2005/01/pronunciation-lexicon \\r\\n        http://www.w3.org/TR/2007/CR-pronunciation-lexicon-20071212/pls.xsd\\\"\\r\\n      alphabet=\\\"ipa\\\" \\r\\n      xml:lang=\\\"en-US\\\">\\r\\n  <lexeme>\\r\\n    <grapheme>W3C</grapheme>\\r\\n    <alias>World Wide Web Consortium</alias>\\r\\n  </lexeme>\\r\\n</lexicon>\",\n    \"Name\": \"example\"\n  },\n  \"LexiconAttributes\": {\n    \"Alphabet\": \"ipa\",\n    \"LanguageCode\": \"en-US\",\n    \"LastModified\": 1478542980.117,\n    \"LexemesCount\": 1,\n    \"LexiconArn\": \"arn:aws:polly:us-east-1:123456789012:lexicon/example\",\n    \"Size\": 503\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9267d3d0-013e-42ac-96c9-f636ed81103b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "LexiconNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "709ad36e-4639-417c-8103-1f4a895f8ee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd4bfc72-485c-4e7d-9f9b-9132f59cd22b",
      "documentation": "<p>Stores a pronunciation lexicon in an Amazon Web Services Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "method": "put",
      "endpoint": "v1/lexicons/:LexiconName",
      "responses": [
        {
          "uuid": "b59dc5a3-ef34-4b11-a598-7dd888473982",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "185a4962-c63d-4ab1-9944-29553a44b028",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidLexiconException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "827feff7-98f7-4e9f-b50c-5765d1465585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedPlsAlphabetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51536d1a-e8e4-41d2-9650-efbac5dbdca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedPlsLanguageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1956dbc4-055d-42a8-a56b-417c57f5847c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LexiconSizeExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64389cca-8f93-4de7-86de-2ac274ed705e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaxLexemeLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03c9c69f-4da7-4cae-abdf-f063cf9897ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MaxLexiconsNumberExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bc82214-ba90-4485-b4d1-32379a7824d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d4e66e33-b2d7-42e4-b9ce-bfe8e1400760",
      "documentation": "<p>Returns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name. </p> <p>When synthesizing speech ( <code>SynthesizeSpeech</code> ), you provide the voice ID for the voice you want from the list of voices returned by <code>DescribeVoices</code>.</p> <p>For example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the <code>DescribeVoices</code> operation you can provide the user with a list of available voices to select from.</p> <p> You can optionally specify a language code to filter the available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permissions to perform the <code>polly:DescribeVoices</code> action.</p>",
      "method": "get",
      "endpoint": "v1/voices",
      "responses": [
        {
          "uuid": "137a6008-bf42-47d3-91d0-18fa9552411a",
          "body": "{\n  \"Voices\": [\n    {\n      \"Gender\": \"Female\",\n      \"Id\": \"Emma\",\n      \"LanguageCode\": \"en-GB\",\n      \"LanguageName\": \"British English\",\n      \"Name\": \"Emma\"\n    },\n    {\n      \"Gender\": \"Male\",\n      \"Id\": \"Brian\",\n      \"LanguageCode\": \"en-GB\",\n      \"LanguageName\": \"British English\",\n      \"Name\": \"Brian\"\n    },\n    {\n      \"Gender\": \"Female\",\n      \"Id\": \"Amy\",\n      \"LanguageCode\": \"en-GB\",\n      \"LanguageName\": \"British English\",\n      \"Name\": \"Amy\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f69614b5-f569-43a5-af6a-380aa1f664f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4363f6a-c8fa-4eb2-bf2a-299f08db9a89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3cc21155-64b9-4fb2-b3df-a8fe7512ec2e",
      "documentation": "Retrieves a specific SpeechSynthesisTask object based on its TaskID. This object contains information about the given speech synthesis task, including the status of the task, and a link to the S3 bucket containing the output of the task.",
      "method": "get",
      "endpoint": "v1/synthesisTasks/:TaskId",
      "responses": [
        {
          "uuid": "05e27849-a8fc-495f-9886-074f94099e0e",
          "body": "{\n  \"SynthesisTask\": {\n    \"Engine\": \"\",\n    \"TaskId\": \"\",\n    \"TaskStatus\": \"\",\n    \"TaskStatusReason\": \"\",\n    \"OutputUri\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"RequestCharacters\": {{faker 'datatype.number'}},\n    \"SnsTopicArn\": \"\",\n    \"LexiconNames\": [\n      \"\"\n    ],\n    \"OutputFormat\": \"\",\n    \"SampleRate\": \"\",\n    \"SpeechMarkTypes\": [\n      \"{{oneOf (array 'sentence' 'ssml' 'viseme' 'word')}}\"\n    ],\n    \"TextType\": \"\",\n    \"VoiceId\": \"\",\n    \"LanguageCode\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2eb0f221-962c-4d19-a61a-26fa1eb72e18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidTaskIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cba94a90-6b00-49de-ac67-788070ec60dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae67cbba-6582-4439-ab84-fc74fce1979c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SynthesisTaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5286bbaa-c7d6-4e2f-956b-35cf685e51b9",
      "documentation": "Returns a list of pronunciation lexicons stored in an Amazon Web Services Region. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.",
      "method": "get",
      "endpoint": "v1/lexicons",
      "responses": [
        {
          "uuid": "8b5d77e2-5da8-42e4-af7a-8ab52c24a0c3",
          "body": "{\n  \"Lexicons\": [\n    {\n      \"Attributes\": {\n        \"Alphabet\": \"ipa\",\n        \"LanguageCode\": \"en-US\",\n        \"LastModified\": 1478542980.117,\n        \"LexemesCount\": 1,\n        \"LexiconArn\": \"arn:aws:polly:us-east-1:123456789012:lexicon/example\",\n        \"Size\": 503\n      },\n      \"Name\": \"example\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0eaa1846-62f3-4753-9c19-c45764242b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed1c1517-ea6c-4925-a944-6ce3b2c25221",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "19676611-5d19-47fb-b8f2-1fb1fd4372d8",
      "documentation": "Returns a list of SpeechSynthesisTask objects ordered by their creation date. This operation can filter the tasks by their status, for example, allowing users to list only tasks that are completed.",
      "method": "get",
      "endpoint": "v1/synthesisTasks",
      "responses": [
        {
          "uuid": "42418be2-3273-49ed-b11b-f7422c540386",
          "body": "{\n  \"NextToken\": \"\",\n  \"SynthesisTasks\": [\n    {\n      \"Engine\": \"\",\n      \"TaskId\": \"\",\n      \"TaskStatus\": \"\",\n      \"TaskStatusReason\": \"\",\n      \"OutputUri\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RequestCharacters\": {{faker 'datatype.number'}},\n      \"SnsTopicArn\": \"\",\n      \"LexiconNames\": [\n        \"\"\n      ],\n      \"OutputFormat\": \"\",\n      \"SampleRate\": \"\",\n      \"SpeechMarkTypes\": [\n        \"{{oneOf (array 'sentence' 'ssml' 'viseme' 'word')}}\"\n      ],\n      \"TextType\": \"\",\n      \"VoiceId\": \"\",\n      \"LanguageCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2c07b045-4584-4b01-89c8-629fa65881ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93c635ff-0bec-4bc2-8952-8074edbaa203",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb222507-d44d-4cd3-8e9e-9a1fbc3d0a2f",
      "documentation": "Allows the creation of an asynchronous synthesis task, by starting a new <code>SpeechSynthesisTask</code>. This operation requires all the standard information needed for speech synthesis, plus the name of an Amazon S3 bucket for the service to store the output of the synthesis task and two optional parameters (<code>OutputS3KeyPrefix</code> and <code>SnsTopicArn</code>). Once the synthesis task is created, this operation will return a <code>SpeechSynthesisTask</code> object, which will include an identifier of this task as well as the current status. The <code>SpeechSynthesisTask</code> object is available for 72 hours after starting the asynchronous synthesis task.",
      "method": "post",
      "endpoint": "v1/synthesisTasks",
      "responses": [
        {
          "uuid": "52a0c9d4-0ade-45a4-aede-51939d8e34f3",
          "body": "{\n  \"SynthesisTask\": {\n    \"Engine\": \"\",\n    \"TaskId\": \"\",\n    \"TaskStatus\": \"\",\n    \"TaskStatusReason\": \"\",\n    \"OutputUri\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"RequestCharacters\": {{faker 'datatype.number'}},\n    \"SnsTopicArn\": \"\",\n    \"LexiconNames\": [\n      \"\"\n    ],\n    \"OutputFormat\": \"\",\n    \"SampleRate\": \"\",\n    \"SpeechMarkTypes\": [\n      \"{{oneOf (array 'sentence' 'ssml' 'viseme' 'word')}}\"\n    ],\n    \"TextType\": \"\",\n    \"VoiceId\": \"\",\n    \"LanguageCode\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ffba079-df7c-4381-b9a9-d1bf38d5a469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TextLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "becf6452-ba8f-49ca-af0b-9cb1d59679ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3BucketException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b9b7f50-a81b-4914-b588-834b2313ed63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidS3KeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a00eb9d-ca7f-4158-86fc-3e5a55a1f19e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidSampleRateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77c74d57-7540-4e26-b473-0835da60f86a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSnsTopicArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15622e25-c1cd-41b4-b1aa-f3a08c3bfa0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidSsmlException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40af721f-289f-4bae-949d-e1bd8d8db78c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EngineNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e66d87e3-0d07-40d4-8464-4846fc839d66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LexiconNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33d411e6-c2a5-4fb4-8748-4aa81756baad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bf286f7-979f-41a8-aa04-0aa4196fd422",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MarksNotSupportedForFormatException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17f6848f-56f5-404c-9857-f250049ba4a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "SsmlMarksNotSupportedForTextTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d67c5d50-e0fa-4718-aa40-bbe7a6168b0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LanguageNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff8daa1b-31bf-41c1-ab98-5921819c2471",
      "documentation": "Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/how-text-to-speech-works.html\">How it Works</a>.",
      "method": "post",
      "endpoint": "v1/speech",
      "responses": [
        {
          "uuid": "2367a8ea-28d1-4a41-806d-ebde16007e23",
          "body": "{\n  \"AudioStream\": \"TEXT\",\n  \"ContentType\": \"audio/mpeg\",\n  \"RequestCharacters\": 37\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e779f41-5a06-460d-b4d2-e5832a589a34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TextLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46f1aa61-05aa-431f-806f-c4985b36ae86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidSampleRateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13eade31-cd4f-4d4b-87a5-b776c7665c3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidSsmlException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77d1d18b-e139-4282-9282-32b932af413a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LexiconNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e37cdda-c7f4-48c2-88c6-4242b66a3f7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a06f6d67-546a-4ea3-a3ba-af8d7ecd790d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MarksNotSupportedForFormatException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec2467bf-a1ee-4794-a80e-aa53fbfaa279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "SsmlMarksNotSupportedForTextTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02feb9db-fc5e-4f44-88ee-58c77fc0025c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LanguageNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "726902ad-350f-4743-b32d-64e5a53448e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EngineNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}