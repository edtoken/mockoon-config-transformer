{
  "uuid": "54f023fc-c86a-407a-93df-befc9246fe4e",
  "lastMigration": 24,
  "name": "Amazon Import/Export Snowball",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ca794e3e-89d7-4af9-a1ca-637986338bda",
      "documentation": "Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelCluster",
      "responses": [
        {
          "uuid": "7640c33e-be9c-4eef-ae5a-6d9f8eebd7fe",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80609a67-372e-4a54-b42d-56e16f9d726d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c510aabd-b4f9-443e-b737-bc936282372c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6bbe27ac-6aef-42fb-bc9c-720ebc06be62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4529b762-6ce4-4c56-a188-180f3d56e08b",
      "documentation": "Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action returns a job's <code>JobState</code> as part of the response element data returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelJob",
      "responses": [
        {
          "uuid": "ea92b02d-9e09-4af3-9d55-fec645c6039a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2ccecc53-b8e4-4962-8b56-66a789f6fde3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bba37cb7-5e4a-4df0-9141-a537cf164646",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac00ef1e-19ff-45ff-8223-b614f025f312",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "72a6a342-4a3e-4de7-8513-9c32ef8a110d",
      "documentation": "Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateAddress",
      "responses": [
        {
          "uuid": "3e17c5f0-c9a6-408a-989e-728811b1a346",
          "body": "{\n  \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b327120-f438-4f37-a5d0-7b0194835bf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "949f135b-40dc-4f8c-90d5-daf70598b7f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "663787e6-6352-4b8f-a9c4-41f072e6e1d3",
      "documentation": "Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateCluster",
      "responses": [
        {
          "uuid": "231f5c66-ba47-4e76-8472-f0e89f55a9ca",
          "body": "{\n  \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "736f0acc-6322-41c9-bc09-5d786f5f911e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ae92ac1-da30-4f7c-b684-c9add93228de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd47663c-c557-4042-837b-f98d0f8a0a0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13b5a512-b839-4e76-9116-d460d500260d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0beb2c1-67bd-478d-9779-766766bf1e53",
      "documentation": "<p>Creates a job to import or export data between Amazon S3 and your on-premises data center. Your AWS account must have the right trust policies and permissions in place to create a job for a Snow device. If you're creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster. </p> <note> <p>Only the Snowball; Edge device type is supported when ordering clustered jobs.</p> <p>The device capacity is optional.</p> <p>Availability of device types differ by AWS Region. For more information about Region availability, see <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/?p=ngi&amp;loc=4\">AWS Regional Services</a>.</p> </note> <p/> <p class=\"title\"> <b>AWS Snow Family device types and their capacities.</b> </p> <ul> <li> <p>Snow Family device type: <b>SNC1_SSD</b> </p> <ul> <li> <p>Capacity: T14</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Snow Family device type: <b>SNC1_HDD</b> </p> <ul> <li> <p>Capacity: T8</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_S</b> </p> <ul> <li> <p>Capacity: T98</p> </li> <li> <p>Description: Snowball Edge Storage Optimized for data transfer only </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_CG</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized with GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_C</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE</b> </p> <ul> <li> <p>Capacity: T100</p> </li> <li> <p>Description: Snowball Edge Storage Optimized with EC2 Compute</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T50</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T80</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateJob",
      "responses": [
        {
          "uuid": "ce550c7f-e5a9-481f-8284-c847b4e2df87",
          "body": "{\n  \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "663f395e-1224-4608-8721-427f9a4d59d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cff4ffaf-7c4c-4c5f-841f-da283b6328c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a34d467-7d4d-45e2-83c3-66d107d51523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80bf6f2f-c6b1-48c8-bf96-5d84a01fa97e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b3b7cff-2585-41eb-b315-f8f01824da05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93156463-8609-42e7-8a01-7d4c0f155010",
      "documentation": "Creates a job with the long-term usage option for a device. The long-term usage is a 1-year or 3-year long-term pricing type for the device. You are billed upfront, and AWS provides discounts for long-term pricing. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateLongTermPricing",
      "responses": [
        {
          "uuid": "dc2fcb07-80c0-4d51-bca8-bb6aca8e2227",
          "body": "{\n  \"LongTermPricingId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8849b1ca-777c-496e-863a-a61078afd76b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b73c8383-09f1-4b64-af45-582e638ffef6",
      "documentation": "Creates a shipping label that will be used to return the Snow device to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateReturnShippingLabel",
      "responses": [
        {
          "uuid": "f4211ffd-7a33-4669-afb7-8c53a12e77ef",
          "body": "{\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "888170a0-7bd7-463d-bddf-266f3b975496",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d814b9ad-52c9-453e-b96d-9ea1b587a780",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e53a04c-0c1d-4c85-92f0-56ff7d0b7c3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64e84ae8-a87e-4550-b75e-43115b930a06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01853dcb-3b84-4ce8-8cd7-177318d06066",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ReturnShippingLabelAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e62691e5-b867-42a4-8f81-db5ceaea3b96",
      "documentation": "Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddress",
      "responses": [
        {
          "uuid": "a0d3464f-6ab4-42b6-88e9-1b7614a71df4",
          "body": "{\n  \"Address\": {\n    \"AddressId\": \"ADID5643ec50-3eec-4eb3-9be6-9374c10eb51b\",\n    \"City\": \"Seattle\",\n    \"Company\": \"My Company\",\n    \"Country\": \"US\",\n    \"Name\": \"My Name\",\n    \"PhoneNumber\": \"425-555-5555\",\n    \"PostalCode\": \"98101\",\n    \"StateOrProvince\": \"WA\",\n    \"Street1\": \"123 Main Street\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73cff3a9-5fad-4d98-8593-611a10b372aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "456a6fe9-b719-4243-ad97-8e4878f6397c",
      "documentation": "Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddresses",
      "responses": [
        {
          "uuid": "288c05f8-877f-4c90-9263-f5d02a1d2d61",
          "body": "{\n  \"Addresses\": [\n    {\n      \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n      \"City\": \"Seattle\",\n      \"Company\": \"My Company\",\n      \"Country\": \"US\",\n      \"Name\": \"My Name\",\n      \"PhoneNumber\": \"425-555-5555\",\n      \"PostalCode\": \"98101\",\n      \"StateOrProvince\": \"WA\",\n      \"Street1\": \"123 Main Street\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ead2ead-cbe5-4d98-8ec8-55403ff44cc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50a1509e-58cb-4a78-abc0-082b3fd374a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4121d63-1ce6-4a9c-a4d9-2a6ad32f7899",
      "documentation": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeCluster",
      "responses": [
        {
          "uuid": "7ffc760e-0c27-4b9a-8c43-5f1ba81ce0b2",
          "body": "{\n  \"ClusterMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n    \"ClusterState\": \"Pending\",\n    \"CreationDate\": \"1480475517.0\",\n    \"Description\": \"MyCluster\",\n    \"JobType\": \"LOCAL_USE\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingOption\": \"SECOND_DAY\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8be605b3-0e07-4bd5-89bb-3f19cd58381c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "143cf36d-aa34-4c7b-b2d1-a3d6500fd066",
      "documentation": "Returns information about a specific job including shipping information, job status, and other important metadata. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeJob",
      "responses": [
        {
          "uuid": "0ee4f0f8-6638-4eb6-be0e-0873888174fe",
          "body": "{\n  \"JobMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"CreationDate\": \"1475626164\",\n    \"Description\": \"My Job\",\n    \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n    \"JobState\": \"New\",\n    \"JobType\": \"IMPORT\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingDetails\": {\n      \"ShippingOption\": \"SECOND_DAY\"\n    },\n    \"SnowballCapacityPreference\": \"T80\",\n    \"SnowballType\": \"STANDARD\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ba83457-cedb-4fbf-8cae-6bbc5a243622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2312b6a2-ddce-4f30-aea0-640b6c036dbd",
      "documentation": "Information on the shipping label of a Snow device that is being returned to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeReturnShippingLabel",
      "responses": [
        {
          "uuid": "15d418b8-93f3-4678-8afc-5a34d21e7c3d",
          "body": "{\n  \"Status\": \"\",\n  \"ExpirationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "483ae715-8b36-4e19-a841-5ed8246e6f33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c44ec938-9fe3-4813-9a37-86499f15831a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3aa4825-8185-40fa-b32d-b92824821a45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f2f6cbb-c7d0-44cc-9836-8306ead7bfbc",
      "documentation": "<p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you'll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 360 days after the job is created.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobManifest",
      "responses": [
        {
          "uuid": "c1e3c186-3e0e-4b9e-b62f-ff251bebccaa",
          "body": "{\n  \"ManifestURI\": \"https://awsie-frosty-manifests-prod.s3.amazonaws.com/JID123e4567-e89b-12d3-a456-426655440000_manifest.bin?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20161224T005115Z&X-Amz-SignedHeaders=...\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc0b0bf9-f61d-4b3a-a5ac-5b444ee676a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b973f492-7142-4973-bab4-8731de220c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "088fbca8-f39d-4b21-8e82-59b53aaab734",
      "documentation": "<p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 360 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobUnlockCode",
      "responses": [
        {
          "uuid": "4d063b0f-cda8-4dfc-a4fc-88da218df31a",
          "body": "{\n  \"UnlockCode\": \"12345-abcde-56789-fghij-01234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3a1b192a-ad19-4915-866f-6bce268b1c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e561aed0-cef2-4577-983d-b079f5c800c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6a40bdb-d9f4-4f09-a4b9-e22624a0810b",
      "documentation": "<p>Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use.</p> <p>The default service limit for the number of Snow devices that you can have at one time is 1. If you want to increase your service limit, contact AWS Support.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSnowballUsage",
      "responses": [
        {
          "uuid": "9f72249b-e419-44a3-ab08-ec46776425d0",
          "body": "{\n  \"SnowballLimit\": 1,\n  \"SnowballsInUse\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80471220-cb50-4c73-9b79-c51184d59560",
      "documentation": "Returns an Amazon S3 presigned URL for an update file associated with a specified <code>JobId</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSoftwareUpdates",
      "responses": [
        {
          "uuid": "c12af194-c6e0-41b3-a608-9af81f76c8fd",
          "body": "{\n  \"UpdatesURI\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1ced2a9-6992-4b38-a75d-d140657d9b3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a510ba74-fa54-46ed-ab52-01113d284d7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "458a5d5f-d3c6-4fa4-be0c-44b2bd861d5c",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job's state, a job's ID, and other information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusterJobs",
      "responses": [
        {
          "uuid": "37ce4020-c9a5-4917-9dac-2e23055679de",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1480475524.0\",\n      \"Description\": \"MyClustrer-node-001\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-002\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440001\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-003\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440002\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-004\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440003\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-005\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440004\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a7e2b15-16d8-4d0d-a329-194496ba36eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f15f88c7-e0b6-45dc-b4a1-49e8dcff068c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a708828c-4c82-4b02-aa39-3d7d7d0ca337",
      "documentation": "Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusters",
      "responses": [
        {
          "uuid": "2342f56e-af48-4c29-b09a-49bc580d56c0",
          "body": "{\n  \"ClusterListEntries\": [\n    {\n      \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n      \"ClusterState\": \"Pending\",\n      \"CreationDate\": \"1480475517.0\",\n      \"Description\": \"MyCluster\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f0f14b7-8884-4745-aee7-38a64edc653b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6264021-00a2-46ba-b74f-f7777b2d782e",
      "documentation": "This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your AWS account that would be supported for use on a Snow device. Currently, supported AMIs are based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04 LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on the AWS Marketplace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListCompatibleImages",
      "responses": [
        {
          "uuid": "876633f9-6783-44a5-b2ba-96a16fc3cf75",
          "body": "{\n  \"CompatibleImages\": [\n    {\n      \"AmiId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c1434bc-bd02-45b4-a2db-0cfe7cc0c3b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed1c5f06-7415-4dd1-b545-81337833f5a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e022ba3e-b6fa-49c3-801b-d58ddcb29c31",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListJobs",
      "responses": [
        {
          "uuid": "963f4e20-8144-49eb-9466-1182164b5342",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1460678186.0\",\n      \"Description\": \"MyJob\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"IMPORT\",\n      \"SnowballType\": \"STANDARD\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41f99031-bead-459f-b904-6bb69d4c592a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d9ef4ff-ad9b-443e-8615-201e29b9bf11",
      "documentation": "Lists all long-term pricing types.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListLongTermPricing",
      "responses": [
        {
          "uuid": "0a9648a6-a54e-4c41-a374-8390f1df0b38",
          "body": "{\n  \"LongTermPricingEntries\": [\n    {\n      \"LongTermPricingId\": \"\",\n      \"LongTermPricingEndDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingStartDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingType\": \"\",\n      \"CurrentActiveJob\": \"\",\n      \"ReplacementJob\": \"\",\n      \"IsLongTermPricingAutoRenew\": {{faker 'datatype.boolean'}},\n      \"LongTermPricingStatus\": \"\",\n      \"SnowballType\": \"\",\n      \"JobIds\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "16c49d86-6001-4cdd-a0f9-7ec104256e67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1002ada2-356b-47c6-8df6-fd1ca92973e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0a01b9a-30b1-4ebb-9628-7781c670b5e2",
      "documentation": "While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateCluster",
      "responses": [
        {
          "uuid": "4ce596ed-e3a4-4898-b017-68fa979fd5de",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8e18efc-61fb-4f0f-96f7-24d1bbaac89b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b344d79-1b51-4106-a420-13dde85b4a42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "795d1f74-df2c-4467-9868-2063d7c8b548",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed8c9980-6c3b-408e-a479-fe4c886b0c4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e58eef4-498d-482f-abcd-9ef8c8b2ff2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ae950be-0e50-46f5-b810-cd349080681d",
      "documentation": "While a job's <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJob",
      "responses": [
        {
          "uuid": "98db8433-2e5b-4525-b7a9-00f01a79277d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d27cc5ae-1dee-4d81-96aa-9bf6d31f40ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "753aacff-5383-4380-85ec-785d21ae4fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c19226a-1e33-4ce6-b16c-860214787a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a62ad372-843e-498d-ac6a-15fc4113911a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f96cd515-aeec-4d91-990f-4e886764a7a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f978581-207a-4cf9-806a-7f4a6d40f818",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef936099-c86e-45cb-9ed6-a056410db7b8",
      "documentation": "Updates the state when a shipment state changes to a different state.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJobShipmentState",
      "responses": [
        {
          "uuid": "18c521f7-392e-46df-9974-3553619ac68b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e6c7994-10dc-4b0d-b63f-4f8a952012c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13c50b53-824d-466c-a61f-32d0ebbd1cf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e341072-9e7f-4130-b32f-edaf11cdadd0",
      "documentation": "Updates the long-term pricing type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateLongTermPricing",
      "responses": [
        {
          "uuid": "ccb4d865-e3f2-4730-8b61-d69b57c1c8cd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67dbafde-cf56-43aa-a141-e33c0a50a41f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}