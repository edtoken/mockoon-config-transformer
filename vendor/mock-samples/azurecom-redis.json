{
  "uuid": "a0f5c0cc-0a56-498b-a626-f23871607e22",
  "lastMigration": 24,
  "name": "RedisManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fccff104-0485-4a46-8d89-653efc50858c",
      "documentation": "Lists all of the available REST API operations of the Microsoft.Cache provider.",
      "method": "get",
      "endpoint": "providers/Microsoft.Cache/operations",
      "responses": [
        {
          "uuid": "6073f6f1-9c88-4738-815f-a0c49853f3ac",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The response describes the list of operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d225bd4-7e6e-49e7-ace3-97385034e6a6",
      "documentation": "Checks that the redis cache name is valid and is not already in use.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/CheckNameAvailability",
      "responses": [
        {
          "uuid": "ecfb880f-3779-464c-ab9a-7372989ee07a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Name is available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce112236-05c2-4123-a987-76288bc437e9",
      "documentation": "Gets all Redis caches in the specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "c019499a-d6b8-40f6-98b1-0d563676b89c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77dcd099-3cbf-4f19-a3c8-bf55ea74f4cc",
      "documentation": "Lists all Redis caches in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "75af5424-4bba-46ae-b5c3-27501ba7f998",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f754b6d3-bfa3-400a-ae9f-f26f26236b8b",
      "documentation": "Gets all firewall rules in the specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules",
      "responses": [
        {
          "uuid": "6306d90d-52f1-4809-ba87-3dec845f29d0",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76b7f55b-224c-42b5-afba-3f6112f9b7ae",
      "documentation": "Deletes a single firewall rule in a specified redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "703129c6-aff4-43fc-92a5-d83770ddc75c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b912140e-3ec1-4b47-bda5-7a28312397fd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de898b28-f395-4bdc-a0b6-c0b8f76b2219",
      "documentation": "Gets a single firewall rule in a specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "c47fffe0-2e20-447a-b8c4-66ede506cb88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully found the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d0962fd-b77e-48f0-ac6c-22ed622bc969",
      "documentation": "Create or update a redis cache firewall rule",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "55ffe196-e9ea-4310-a7f2-435959db4faf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Resource was successfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "081d9a1d-c2b7-46a2-a016-6ceea5d87c0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "Resource was successfully created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9078b89a-35f0-4410-be46-78823da0e5d5",
      "documentation": "Gets all patch schedules in the specified redis cache (there is only one).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/patchSchedules",
      "responses": [
        {
          "uuid": "77aea2b9-4a9d-4624-920a-95884b8442d2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current patch schedules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "545f780c-599b-477e-8602-6144dbf04c9d",
      "documentation": "Deletes a Redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "63a7ca4a-8f46-4f02-a28b-a33a59fca688",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "010acd94-9a1e-4ce1-becc-dfd270118668",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11aee0f8-b3f2-4f1a-b1f0-0382636c5ac8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "405ab67e-4ae3-4598-888d-1580468d18a6",
      "documentation": "Gets a Redis cache (resource description).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "f1e44f5f-e954-48ce-9a61-abf88e32ff29",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "386a0d4b-42d1-4e7f-9ba3-9cff9d8d3d91",
      "documentation": "Update an existing Redis cache.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "30312447-bd7c-4ad4-9f6e-14304f84d126",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2b6f38a-6685-4e38-912e-05c917d3818d",
      "documentation": "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "fc89aa9b-fe6a-408b-a487-a638a53a0900",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe6cca89-bcf1-402a-8e99-8c61064e1e6e",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The new redis cache was successfully created. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "056f7f28-58ef-4160-b113-53d6cbc9e347",
      "documentation": "Export data from the redis cache to blobs in a container.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/export",
      "responses": [
        {
          "uuid": "cca73e37-5c73-4bd0-a7ef-44c6f083e6ca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "99530c70-3114-4813-b415-cc91adda9ffb",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Export operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85b8210a-a993-4d81-96cd-e0b5c623c237",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f75c0b6-d632-44c6-9024-c96bf7c73fb5",
      "documentation": "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/forceReboot",
      "responses": [
        {
          "uuid": "f9c81baa-0997-412f-b103-66541fcd1504",
          "body": "{\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reboot operation successfully enqueued",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a97e5ee-ef5a-4e03-8678-31b21d1fb6e9",
      "documentation": "Import data into Redis cache.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/import",
      "responses": [
        {
          "uuid": "654fee4a-56bd-4fbf-955e-053823eb5033",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c66073c-0b3a-4c82-82d3-f31e7d288709",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Import operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab2a041d-9c98-4637-954a-d9a5feddb9d6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8a5e975-9dd4-4c83-b374-967d87cfbb6c",
      "documentation": "Gets the list of linked servers associated with this redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers",
      "responses": [
        {
          "uuid": "d36af502-a56c-48da-bb52-0ac5626e5d42",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked servers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd6495b9-9369-42d1-9c2a-8750e8d44bda",
      "documentation": "Deletes the linked server from a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "f9b9e076-e560-4a78-8771-760e60d303e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Linked server was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f59c0b1-c63d-4700-88f4-460104a5d3d3",
      "documentation": "Gets the detailed information about a linked server of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "7c5230f0-9a59-475d-a1bb-94f3b05a81a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "048cf6da-4daa-4c42-b662-25d9a0448ac5",
      "documentation": "Adds a linked server to the Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "19246c99-6ae0-40bf-834a-0d416b26b755",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "654a0f9a-a0e5-4b3e-b024-f08cae5450fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6db1fde6-0595-4899-b6ae-ea219ad3e716",
      "documentation": "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listKeys",
      "responses": [
        {
          "uuid": "a5cf800f-09d6-489b-991e-deec69ac1316",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the keys for the specified Redis cache.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06a80d3c-878d-41c4-a4e8-08ed238b9cdd",
      "documentation": "Gets any upgrade notifications for a Redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listUpgradeNotifications",
      "responses": [
        {
          "uuid": "a2e67f89-4290-4aff-bc38-92c0d24025c5",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"name\": \"\",\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"upsellNotification\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "All upgrade notifications in given time range",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0aff4432-4efc-4afd-9581-d0b9f30a5ef1",
      "documentation": "Deletes the patching schedule of a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "438426f0-2bfe-40d3-8528-f0e44a9e92cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42ebf9f0-a156-4f7e-bbf5-89022da4e25e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97a72238-d28f-4a23-9d27-34957e136cb2",
      "documentation": "Gets the patching schedule of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "b46219b6-01a4-44f9-b95d-9ad8822a66cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get patch schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6056dc2f-5b7b-4ead-bcf6-711ad7a38b26",
      "documentation": "Create or replace the patching schedule for Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "f2f1e6a1-e54e-4e17-a4ff-e2e544d3de6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The patch schedule was successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "40cc7b9c-1651-4f0e-939e-bd086c6bc832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The patch schedule was successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01018a4e-06c3-4b4c-b0e9-9600301c716f",
      "documentation": "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/regenerateKey",
      "responses": [
        {
          "uuid": "f4f0190a-db2a-49fc-a893-ec30707c3b47",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the regenerated keys for Redis Cache",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}