{
  "uuid": "3f6ccd8a-beb3-49d1-bf47-2090b329a307",
  "lastMigration": 24,
  "name": "Remote Build Execution API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "985db11f-b845-44fa-a949-6372b6801f0f",
      "documentation": "Deletes the specified worker pool. Returns a long running operation, which contains a `google.protobuf.Empty` response on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `DELETING`.",
      "method": "delete",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "0d17a1f6-79cb-4891-8f1e-a4a689eea44d",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d8c7e839-cf32-4354-bfe3-35c0efc577b4",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "6fdc7a52-5895-449f-a00d-ce7d69c661b6",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80694cc6-7b68-4fcb-afc8-46df487c1450",
      "documentation": "Updates an existing worker pool with a specified size and/or configuration. Returns a long running operation, which contains a worker pool on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `UPDATING`.",
      "method": "patch",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "f827bfd7-2b81-4652-972c-fb1e681a7897",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa4b466f-dc91-442b-a115-26bc46e2e5d3",
      "documentation": "Sends a test notification to the specified instance. Returns a `google.protobuf.Empty` on success.",
      "method": "post",
      "endpoint": "v1alpha/:name:testNotify",
      "responses": [
        {
          "uuid": "dbd02bb0-ab6a-4106-8847-02d40acad661",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b0da1fcb-85fa-4476-b573-1abef5a39b68",
      "documentation": "Lists instances in a project.",
      "method": "get",
      "endpoint": "v1alpha/:parent/instances",
      "responses": [
        {
          "uuid": "db21dbd9-648b-43fb-a75f-2b1cc85928ff",
          "body": "{\n  \"instances\": [\n    {\n      \"featurePolicy\": {\n        \"containerImageSources\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerAddCapabilities\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerChrootPath\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerNetwork\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerPrivileged\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerRunAsContainerProvidedUser\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerRunAsRoot\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerRuntime\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerSiblingContainers\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"linuxIsolation\": \"{{oneOf (array 'LINUX_ISOLATION_UNSPECIFIED' 'GVISOR' 'OFF')}}\",\n        \"vmVerification\": \"{{oneOf (array 'VM_VERIFICATION_UNSPECIFIED' 'VM_VERIFICATION_GCP_TOKEN' 'VM_VERIFICATION_OFF')}}\"\n      },\n      \"location\": \"\",\n      \"loggingEnabled\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'INACTIVE')}}\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0086ab7-4d10-498a-99ea-12c8c0a9aafd",
      "documentation": "Creates a new instance in the specified region. Returns a long running operation which contains an instance on completion. While the long running operation is in progress, any call to `GetInstance` returns an instance in state `CREATING`.",
      "method": "post",
      "endpoint": "v1alpha/:parent/instances",
      "responses": [
        {
          "uuid": "b63a249f-33d3-47d8-82d2-c5305c9f8432",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5b2a3fb-9b9c-4808-93d2-7d635fc4eadd",
      "documentation": "Lists worker pools in an instance.",
      "method": "get",
      "endpoint": "v1alpha/:parent/workerpools",
      "responses": [
        {
          "uuid": "3bbdeeba-9326-42ab-b14b-5fe040a9bd0b",
          "body": "{\n  \"workerPools\": [\n    {\n      \"autoscale\": {\n        \"maxSize\": \"\",\n        \"minSize\": \"\"\n      },\n      \"channel\": \"\",\n      \"hostOs\": \"\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'UPDATING' 'DELETING' 'INACTIVE')}}\",\n      \"workerConfig\": {\n        \"accelerator\": {\n          \"acceleratorCount\": \"\",\n          \"acceleratorType\": \"\"\n        },\n        \"diskSizeGb\": \"\",\n        \"diskType\": \"\",\n        \"labels\": {},\n        \"machineType\": \"\",\n        \"maxConcurrentActions\": \"\",\n        \"minCpuPlatform\": \"\",\n        \"networkAccess\": \"\",\n        \"reserved\": {{faker 'datatype.boolean'}},\n        \"soleTenantNodeType\": \"\",\n        \"vmImage\": \"\"\n      },\n      \"workerCount\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61f9cdc7-016f-4a42-8ad8-951cae77423d",
      "documentation": "Creates a new worker pool with a specified size and configuration. Returns a long running operation which contains a worker pool on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `CREATING`.",
      "method": "post",
      "endpoint": "v1alpha/:parent/workerpools",
      "responses": [
        {
          "uuid": "e7d863aa-21d5-4451-8cea-30c38b1c5111",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}