{
  "uuid": "5b82740b-e5a3-47fc-9ce1-7c6c08576d30",
  "lastMigration": 24,
  "name": "Semantic API",
  "endpointPrefix": "svc/semantic/v2/concept",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3b0a223e-d61b-4e6d-87aa-e033f1c7485a",
      "documentation": "",
      "method": "get",
      "endpoint": "name/{concept-type}/{specific-concept}.json",
      "responses": [
        {
          "uuid": "cb6e85bf-aad4-4a05-9e8b-37c58b724f16",
          "body": "{\n  \"copyright\": \"\",\n  \"num_results\": {{faker 'datatype.number'}},\n  \"results\": [\n    {\n      \"ancestors\": [\n        {\n          \"concept_created\": \"\",\n          \"concept_id\": {{faker 'datatype.number'}},\n          \"concept_name\": \"\",\n          \"concept_status\": \"\",\n          \"concept_type\": \"\",\n          \"concept_updated\": \"\",\n          \"is_times_tag\": {{faker 'datatype.number'}},\n          \"vernacular\": \"\"\n        }\n      ],\n      \"article_list\": {\n        \"results\": [\n          {\n            \"body\": \"\",\n            \"byline\": \"\",\n            \"concepts\": {\n              \"nytd_des\": [\n                \"\"\n              ],\n              \"nytd_org\": [\n                \"\"\n              ],\n              \"nytd_per\": [\n                \"\"\n              ]\n            },\n            \"date\": \"\",\n            \"document_type\": \"\",\n            \"title\": \"\",\n            \"type_of_material\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"total\": {{faker 'datatype.number'}}\n      },\n      \"combinations\": [\n        {\n          \"combination_note\": \"\",\n          \"combination_source_concept_id\": {{faker 'datatype.number'}},\n          \"combination_source_concept_name\": \"\",\n          \"combination_source_concept_type\": \"\",\n          \"combination_target_concept_id\": {{faker 'datatype.number'}},\n          \"combination_target_concept_name\": \"\",\n          \"combination_target_concept_type\": \"\"\n        }\n      ],\n      \"concept_created\": \"\",\n      \"concept_id\": {{faker 'datatype.number'}},\n      \"concept_name\": \"\",\n      \"concept_status\": \"\",\n      \"concept_type\": \"\",\n      \"concept_updated\": \"\",\n      \"descendants\": [\n        {\n          \"concept_created\": \"\",\n          \"concept_id\": {{faker 'datatype.number'}},\n          \"concept_name\": \"\",\n          \"concept_status\": \"\",\n          \"concept_type\": \"\",\n          \"concept_updated\": \"\",\n          \"is_times_tag\": {{faker 'datatype.number'}},\n          \"vernacular\": \"\"\n        }\n      ],\n      \"is_times_tag\": {{faker 'datatype.number'}},\n      \"links\": [\n        {\n          \"concept_id\": {{faker 'datatype.number'}},\n          \"concept_name\": \"\",\n          \"concept_status\": \"\",\n          \"concept_type\": \"\",\n          \"is_times_tag\": {{faker 'datatype.number'}},\n          \"link\": \"\",\n          \"link_id\": {{faker 'datatype.number'}},\n          \"link_type\": \"\",\n          \"mapping_type\": \"\",\n          \"relation\": \"\"\n        }\n      ],\n      \"scope_notes\": [\n        {\n          \"scope_note\": \"\",\n          \"scope_note_name\": \"\",\n          \"scope_note_type\": \"\"\n        }\n      ],\n      \"search_api_query\": \"\",\n      \"taxonomy\": [\n        {\n          \"source_concept_id\": {{faker 'datatype.number'}},\n          \"source_concept_name\": \"\",\n          \"source_concept_type\": \"\",\n          \"source_concept_vernacular\": \"\",\n          \"target_concept_id\": {{faker 'datatype.number'}},\n          \"target_concept_name\": \"\",\n          \"target_concept_type\": \"\",\n          \"target_concept_vernacular\": \"\",\n          \"taxonomic_relation\": \"\",\n          \"taxonomic_verification_status\": \"\"\n        }\n      ],\n      \"vernacular\": \"\"\n    }\n  ],\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of Concepts",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3327e553-1470-419b-84ea-91d226978a64",
      "documentation": "",
      "method": "get",
      "endpoint": "search.json",
      "responses": [
        {
          "uuid": "fe7f5661-6018-4300-93e6-0bca0694c0e5",
          "body": "{\n  \"copyright\": \"\",\n  \"num_results\": {{faker 'datatype.number'}},\n  \"results\": [\n    {\n      \"concept_created\": \"\",\n      \"concept_id\": {{faker 'datatype.number'}},\n      \"concept_name\": \"\",\n      \"concept_status\": \"\",\n      \"concept_type\": \"\",\n      \"concept_updated\": \"\",\n      \"is_times_tag\": {{faker 'datatype.number'}},\n      \"vernacular\": \"\"\n    }\n  ],\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of Concepts",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}