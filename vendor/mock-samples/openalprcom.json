{
  "uuid": "32ca2377-a0fb-46e3-8cd4-850182d11e50",
  "lastMigration": 24,
  "name": "OpenALPR CarCheck API",
  "endpointPrefix": "v3",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4a1cb185-52e0-4238-9c10-41e9f3a31299",
      "documentation": "Get a list of available results for plate and vehicle recognition\n",
      "method": "get",
      "endpoint": "config",
      "responses": [
        {
          "uuid": "0b89b150-6bf4-4d37-9648-0677d6530cad",
          "body": "{\n  \"countries\": [\n    {\n      \"code\": \"us\",\n      \"name\": \"North America\"\n    }\n  ],\n  \"vehicle_labels\": {\n    \"bodytype\": [\n      \"sedan-compact\"\n    ],\n    \"color\": [\n      \"blue\"\n    ],\n    \"make\": [\n      \"volvo\"\n    ],\n    \"makemodel\": [\n      \"volvo_v40\"\n    ],\n    \"orientation\": [\n      45\n    ],\n    \"year\": [\n      \"2000-2004\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ok",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b46555e-35b1-4bc1-8c2c-a479441475db",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as a file using a form data POST\n",
      "method": "post",
      "endpoint": "recognize",
      "responses": [
        {
          "uuid": "115c5e83-59fd-45de-9d04-ce6e6b4f3795",
          "body": "{\n  \"credit_cost\": {{faker 'datatype.number'}},\n  \"credits_monthly_total\": {{faker 'datatype.number'}},\n  \"credits_monthly_used\": {{faker 'datatype.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'datatype.number'}},\n  \"img_height\": {{faker 'datatype.number'}},\n  \"img_width\": {{faker 'datatype.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'datatype.number'}},\n    \"total\": {{faker 'datatype.number'}},\n    \"vehicles\": {{faker 'datatype.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'datatype.number'}},\n          \"matches_template\": {{faker 'datatype.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'datatype.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'datatype.number'}},\n          \"y\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'datatype.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'datatype.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'datatype.number'}},\n      \"requested_topn\": {{faker 'datatype.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'datatype.number'}},\n        \"width\": {{faker 'datatype.number'}},\n        \"x\": {{faker 'datatype.number'}},\n        \"y\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5d98bb3-acc9-4a03-8829-8f3d4411585e",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d15b3b18-70bd-4003-b75e-e729e3922cfa",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e552863e-a44a-47aa-991a-c652d40c4304",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77e55e9b-5820-41fc-9f77-9b251c6f6457",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e515b87d-a52a-456e-8b6a-b69d9e842bca",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as base64 encoded bytes.\n",
      "method": "post",
      "endpoint": "recognize_bytes",
      "responses": [
        {
          "uuid": "37b265dc-4100-49ab-acac-68467030ac5c",
          "body": "{\n  \"credit_cost\": {{faker 'datatype.number'}},\n  \"credits_monthly_total\": {{faker 'datatype.number'}},\n  \"credits_monthly_used\": {{faker 'datatype.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'datatype.number'}},\n  \"img_height\": {{faker 'datatype.number'}},\n  \"img_width\": {{faker 'datatype.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'datatype.number'}},\n    \"total\": {{faker 'datatype.number'}},\n    \"vehicles\": {{faker 'datatype.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'datatype.number'}},\n          \"matches_template\": {{faker 'datatype.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'datatype.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'datatype.number'}},\n          \"y\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'datatype.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'datatype.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'datatype.number'}},\n      \"requested_topn\": {{faker 'datatype.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'datatype.number'}},\n        \"width\": {{faker 'datatype.number'}},\n        \"x\": {{faker 'datatype.number'}},\n        \"y\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "733ea9d4-d3b3-4f1b-8237-58e1d003e956",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25c0e431-7622-43f9-b5ca-ed61e631c668",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1d59a07-2e4d-4188-95e0-7f89e79ac958",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d50f40c-7033-4e48-adfd-61de1e8bb44d",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "220fe985-ac25-4014-b97f-e5a16d8da4c1",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as a URL.  The OpenALPR service will download the image \nand process it\n",
      "method": "post",
      "endpoint": "recognize_url",
      "responses": [
        {
          "uuid": "4376085b-4575-4a14-9095-5922eccd56da",
          "body": "{\n  \"credit_cost\": {{faker 'datatype.number'}},\n  \"credits_monthly_total\": {{faker 'datatype.number'}},\n  \"credits_monthly_used\": {{faker 'datatype.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'datatype.number'}},\n  \"img_height\": {{faker 'datatype.number'}},\n  \"img_width\": {{faker 'datatype.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'datatype.number'}},\n    \"total\": {{faker 'datatype.number'}},\n    \"vehicles\": {{faker 'datatype.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'datatype.number'}},\n          \"matches_template\": {{faker 'datatype.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'datatype.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'datatype.number'}},\n          \"y\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'datatype.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'datatype.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'datatype.number'}},\n      \"requested_topn\": {{faker 'datatype.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'datatype.number'}},\n        \"width\": {{faker 'datatype.number'}},\n        \"x\": {{faker 'datatype.number'}},\n        \"y\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'datatype.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'datatype.number'}},\n      \"width\": {{faker 'datatype.number'}},\n      \"x\": {{faker 'datatype.number'}},\n      \"y\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e5ca183-f001-408a-8c7f-4d4b3f602349",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96e66124-3ff4-4ddd-9bb0-9afb0e2b1ec7",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21b1b7b5-2eb7-4aa1-a020-6dfa6db08e39",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1f4887b-61e1-408a-b438-bad2d904a811",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}