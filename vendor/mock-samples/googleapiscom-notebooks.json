{
  "uuid": "ffe2dc7f-e8de-4954-b463-5fd06ca49280",
  "lastMigration": 24,
  "name": "Notebooks API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6a085118-3b25-45f4-8550-8eb69fa522fb",
      "documentation": "Deletes schedule and all underlying jobs",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "3ce23607-0f03-44a3-a211-1b1fbcb1b0dc",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e2de509-b39a-458a-887e-5b324e2c3e53",
      "documentation": "Gets details of schedule",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "97fcd4e2-b855-46eb-a25c-7dde3b68581e",
          "body": "{\n  \"createTime\": \"\",\n  \"cronSchedule\": \"\",\n  \"description\": \"\",\n  \"displayName\": \"\",\n  \"executionTemplate\": {\n    \"acceleratorConfig\": {\n      \"coreCount\": \"\",\n      \"type\": \"{{oneOf (array 'SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3')}}\"\n    },\n    \"containerImageUri\": \"\",\n    \"dataprocParameters\": {\n      \"cluster\": \"\"\n    },\n    \"inputNotebookFile\": \"\",\n    \"jobType\": \"{{oneOf (array 'JOB_TYPE_UNSPECIFIED' 'VERTEX_AI' 'DATAPROC')}}\",\n    \"kernelSpec\": \"\",\n    \"labels\": {},\n    \"masterType\": \"\",\n    \"outputNotebookFolder\": \"\",\n    \"parameters\": \"\",\n    \"paramsYamlFile\": \"\",\n    \"scaleTier\": \"{{oneOf (array 'SCALE_TIER_UNSPECIFIED' 'BASIC' 'STANDARD_1' 'PREMIUM_1' 'BASIC_GPU' 'BASIC_TPU' 'CUSTOM')}}\",\n    \"serviceAccount\": \"\",\n    \"tensorboard\": \"\",\n    \"vertexAiParameters\": {\n      \"env\": {},\n      \"network\": \"\"\n    }\n  },\n  \"name\": \"\",\n  \"recentExecutions\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"executionTemplate\": {\n        \"acceleratorConfig\": {\n          \"coreCount\": \"\",\n          \"type\": \"{{oneOf (array 'SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3')}}\"\n        },\n        \"containerImageUri\": \"\",\n        \"dataprocParameters\": {\n          \"cluster\": \"\"\n        },\n        \"inputNotebookFile\": \"\",\n        \"jobType\": \"{{oneOf (array 'JOB_TYPE_UNSPECIFIED' 'VERTEX_AI' 'DATAPROC')}}\",\n        \"kernelSpec\": \"\",\n        \"labels\": {},\n        \"masterType\": \"\",\n        \"outputNotebookFolder\": \"\",\n        \"parameters\": \"\",\n        \"paramsYamlFile\": \"\",\n        \"scaleTier\": \"{{oneOf (array 'SCALE_TIER_UNSPECIFIED' 'BASIC' 'STANDARD_1' 'PREMIUM_1' 'BASIC_GPU' 'BASIC_TPU' 'CUSTOM')}}\",\n        \"serviceAccount\": \"\",\n        \"tensorboard\": \"\",\n        \"vertexAiParameters\": {\n          \"env\": {},\n          \"network\": \"\"\n        }\n      },\n      \"jobUri\": \"\",\n      \"name\": \"\",\n      \"outputNotebookFile\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'PREPARING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLING' 'CANCELLED' 'EXPIRED' 'INITIALIZING')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED' 'INITIALIZING' 'DELETING')}}\",\n  \"timeZone\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e2d0a3b-3fa8-4f30-8f81-1dd2b4a179b5",
      "documentation": "Update Notebook Runtime configuration.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "d443c8c3-bed8-492c-8214-7f83122c2acc",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20e529d1-e8bd-4053-bb4d-b72db16fd3fd",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "7f641b55-0d6d-4ae8-8ab7-67f333cb29f6",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98eaf78b-0025-4ab4-8a92-dc59fa2e346e",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1/:name/operations",
      "responses": [
        {
          "uuid": "a6ba6e09-15e9-45ee-9390-15f229d78ed7",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f02c22aa-5c53-4e7c-a283-5f73725e0fcb",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "b8a7123e-a237-4e62-8bc2-155ba9f60851",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ffeb525-f0f5-4924-b2fa-ee293b350efa",
      "documentation": "Creates a Diagnostic File and runs Diagnostic Tool given a Runtime.",
      "method": "post",
      "endpoint": "v1/:name:diagnose",
      "responses": [
        {
          "uuid": "4bcccee4-2173-49fc-94a7-f49e712a1a5f",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99ecc856-3210-41d5-a6b6-c6a38d6e96b0",
      "documentation": "Check if a notebook instance is healthy.",
      "method": "get",
      "endpoint": "v1/:name:getInstanceHealth",
      "responses": [
        {
          "uuid": "374b2ff8-76c1-476f-9885-c365a51605e5",
          "body": "{\n  \"healthInfo\": {},\n  \"healthState\": \"{{oneOf (array 'HEALTH_STATE_UNSPECIFIED' 'HEALTHY' 'UNHEALTHY' 'AGENT_NOT_INSTALLED' 'AGENT_NOT_RUNNING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e7b0bcd-95c8-4adf-b2f3-0ccdfe4eda64",
      "documentation": "Gets an access token for the consumer service account that the customer attached to the runtime. Only accessible from the tenant instance.",
      "method": "post",
      "endpoint": "v1/:name:refreshRuntimeTokenInternal",
      "responses": [
        {
          "uuid": "8d025b53-6e06-44a2-aa6d-4ad3df1d1918",
          "body": "{\n  \"accessToken\": \"\",\n  \"expireTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "81c5e66d-6b84-4860-917e-b886af4bfc4b",
      "documentation": "Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.",
      "method": "post",
      "endpoint": "v1/:name:report",
      "responses": [
        {
          "uuid": "05f3923f-fac3-4582-bc50-b0ab9a2d3c37",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7c40389-05b8-4270-9c1f-e2101e802598",
      "documentation": "Report and process a runtime event.",
      "method": "post",
      "endpoint": "v1/:name:reportEvent",
      "responses": [
        {
          "uuid": "a759fdf9-c857-4e0a-8fb5-59cd4330df8f",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8cd734f-afad-425b-9bc3-9cbd2ebf1b64",
      "documentation": "Resets a Managed Notebook Runtime.",
      "method": "post",
      "endpoint": "v1/:name:reset",
      "responses": [
        {
          "uuid": "38a79be8-3bb0-44db-986b-d372e96d6217",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50ffab28-ec9a-424f-862d-03042e249f2b",
      "documentation": "Rollbacks a notebook instance to the previous version.",
      "method": "post",
      "endpoint": "v1/:name:rollback",
      "responses": [
        {
          "uuid": "e965315b-fa6d-495e-9e1c-a635fd412c1a",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfb6b243-7550-48a3-9823-b9faac44de62",
      "documentation": "Updates the guest accelerators of a single Instance.",
      "method": "patch",
      "endpoint": "v1/:name:setAccelerator",
      "responses": [
        {
          "uuid": "cde3b8de-5b9b-4cf1-ac4b-1f4abe28673f",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83e0dd03-a0a4-4cbe-baaf-baea3254a516",
      "documentation": "Replaces all the labels of an Instance.",
      "method": "patch",
      "endpoint": "v1/:name:setLabels",
      "responses": [
        {
          "uuid": "7d9ea165-7ceb-4a1a-bda4-32d12fca3a88",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1e50e80-374e-49c0-adef-e506fbc4d928",
      "documentation": "Updates the machine type of a single Instance.",
      "method": "patch",
      "endpoint": "v1/:name:setMachineType",
      "responses": [
        {
          "uuid": "02a94028-bb3d-450b-9d50-cb6c8a28f918",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d551099a-139c-420e-8fe3-bae881e30234",
      "documentation": "Starts a Managed Notebook Runtime. Perform \"Start\" on GPU instances; \"Resume\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
      "method": "post",
      "endpoint": "v1/:name:start",
      "responses": [
        {
          "uuid": "7b330750-6344-4eed-ae7b-164b0ed3181a",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3eb05ed8-fe14-4ecf-b1dd-894f8fccc877",
      "documentation": "Stops a Managed Notebook Runtime. Perform \"Stop\" on GPU instances; \"Suspend\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
      "method": "post",
      "endpoint": "v1/:name:stop",
      "responses": [
        {
          "uuid": "2cf650d7-4ed2-4d0a-8a76-41fed433de31",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f9fa42c-3218-4eac-ac7c-73ea68bf02d6",
      "documentation": "Switch a Managed Notebook Runtime.",
      "method": "post",
      "endpoint": "v1/:name:switch",
      "responses": [
        {
          "uuid": "c4da363d-a22a-4c25-971a-01a3c267c1ee",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e632d3e4-8d16-431b-ad48-0dd7dcf4992a",
      "documentation": "Triggers execution of an existing schedule.",
      "method": "post",
      "endpoint": "v1/:name:trigger",
      "responses": [
        {
          "uuid": "1d6fb0a4-1a2a-44d0-a987-50d63edf7d63",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e78fc16-7a23-4aea-b107-5fb09299f727",
      "documentation": "Update Notebook Instance configurations.",
      "method": "patch",
      "endpoint": "v1/:name:updateConfig",
      "responses": [
        {
          "uuid": "de627538-8bbb-471b-963a-93be75f3b84d",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9db95345-33b0-4931-ba27-802e99085033",
      "documentation": "Add/update metadata items for an instance.",
      "method": "patch",
      "endpoint": "v1/:name:updateMetadataItems",
      "responses": [
        {
          "uuid": "16d39b20-1bd5-40ea-b501-a0a618e6dc2b",
          "body": "{\n  \"items\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b374dbc-9b33-4cd6-aef1-d60ff3511bfb",
      "documentation": "Updates the Shielded instance configuration of a single Instance.",
      "method": "patch",
      "endpoint": "v1/:name:updateShieldedInstanceConfig",
      "responses": [
        {
          "uuid": "585f35b0-707b-438b-81ca-1d422faf719e",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51e4d0d3-e7c8-4b10-a015-0a2ee8540636",
      "documentation": "Upgrades a Managed Notebook Runtime to the latest version.",
      "method": "post",
      "endpoint": "v1/:name:upgrade",
      "responses": [
        {
          "uuid": "65a69733-7ef2-467e-811b-e13f3205083b",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e5c74fa-42e6-41fb-9e37-a3f785d42f7a",
      "documentation": "Allows notebook instances to call this endpoint to upgrade themselves. Do not use this method directly.",
      "method": "post",
      "endpoint": "v1/:name:upgradeInternal",
      "responses": [
        {
          "uuid": "b00764f2-6905-422b-b042-a09c7fa0ff8c",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "335df25a-38d2-434e-98a6-b301f8011862",
      "documentation": "Check if a notebook instance is upgradable.",
      "method": "get",
      "endpoint": "v1/:notebookInstance:isUpgradeable",
      "responses": [
        {
          "uuid": "9e9d3b11-09a7-412f-b717-1d828983b842",
          "body": "{\n  \"upgradeImage\": \"\",\n  \"upgradeInfo\": \"\",\n  \"upgradeVersion\": \"\",\n  \"upgradeable\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e563e85-2ba9-4e68-95ce-b0eaefb1e125",
      "documentation": "Lists environments in a project.",
      "method": "get",
      "endpoint": "v1/:parent/environments",
      "responses": [
        {
          "uuid": "60202e24-26be-41ae-9cb2-195f10a84d3a",
          "body": "{\n  \"environments\": [\n    {\n      \"containerImage\": {\n        \"repository\": \"\",\n        \"tag\": \"\"\n      },\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"postStartupScript\": \"\",\n      \"vmImage\": {\n        \"imageFamily\": \"\",\n        \"imageName\": \"\",\n        \"project\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b6b781f-904f-47c3-a123-461645f7b3c0",
      "documentation": "Creates a new Environment.",
      "method": "post",
      "endpoint": "v1/:parent/environments",
      "responses": [
        {
          "uuid": "e530a3c2-772b-41a8-98b6-0a9989b5f112",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ae46de6d-bc37-4103-b4f3-c6047277c4ab",
      "documentation": "Lists executions in a given project and location",
      "method": "get",
      "endpoint": "v1/:parent/executions",
      "responses": [
        {
          "uuid": "fe411e03-a4f2-493e-ba68-952bc3025351",
          "body": "{\n  \"executions\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"executionTemplate\": {\n        \"acceleratorConfig\": {\n          \"coreCount\": \"\",\n          \"type\": \"{{oneOf (array 'SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3')}}\"\n        },\n        \"containerImageUri\": \"\",\n        \"dataprocParameters\": {\n          \"cluster\": \"\"\n        },\n        \"inputNotebookFile\": \"\",\n        \"jobType\": \"{{oneOf (array 'JOB_TYPE_UNSPECIFIED' 'VERTEX_AI' 'DATAPROC')}}\",\n        \"kernelSpec\": \"\",\n        \"labels\": {},\n        \"masterType\": \"\",\n        \"outputNotebookFolder\": \"\",\n        \"parameters\": \"\",\n        \"paramsYamlFile\": \"\",\n        \"scaleTier\": \"{{oneOf (array 'SCALE_TIER_UNSPECIFIED' 'BASIC' 'STANDARD_1' 'PREMIUM_1' 'BASIC_GPU' 'BASIC_TPU' 'CUSTOM')}}\",\n        \"serviceAccount\": \"\",\n        \"tensorboard\": \"\",\n        \"vertexAiParameters\": {\n          \"env\": {},\n          \"network\": \"\"\n        }\n      },\n      \"jobUri\": \"\",\n      \"name\": \"\",\n      \"outputNotebookFile\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'PREPARING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLING' 'CANCELLED' 'EXPIRED' 'INITIALIZING')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9409a7d4-c240-4701-9fbe-befeb05f0772",
      "documentation": "Creates a new Execution in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/executions",
      "responses": [
        {
          "uuid": "0b8f742b-4d8a-420e-80e2-fb871f8079e2",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5373c0cf-74a7-483c-8b20-8bb9ededc239",
      "documentation": "Lists instances in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/instances",
      "responses": [
        {
          "uuid": "28a3cd99-8219-45c0-92ef-2a5606c03eda",
          "body": "{\n  \"instances\": [\n    {\n      \"acceleratorConfig\": {\n        \"coreCount\": \"\",\n        \"type\": \"{{oneOf (array 'ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'NVIDIA_TESLA_T4_VWS' 'NVIDIA_TESLA_P100_VWS' 'NVIDIA_TESLA_P4_VWS' 'TPU_V2' 'TPU_V3')}}\"\n      },\n      \"bootDiskSizeGb\": \"\",\n      \"bootDiskType\": \"{{oneOf (array 'DISK_TYPE_UNSPECIFIED' 'PD_STANDARD' 'PD_SSD' 'PD_BALANCED' 'PD_EXTREME')}}\",\n      \"canIpForward\": {{faker 'datatype.boolean'}},\n      \"containerImage\": {\n        \"repository\": \"\",\n        \"tag\": \"\"\n      },\n      \"createTime\": \"\",\n      \"creator\": \"\",\n      \"customGpuDriverPath\": \"\",\n      \"dataDiskSizeGb\": \"\",\n      \"dataDiskType\": \"{{oneOf (array 'DISK_TYPE_UNSPECIFIED' 'PD_STANDARD' 'PD_SSD' 'PD_BALANCED' 'PD_EXTREME')}}\",\n      \"diskEncryption\": \"{{oneOf (array 'DISK_ENCRYPTION_UNSPECIFIED' 'GMEK' 'CMEK')}}\",\n      \"disks\": [\n        {\n          \"autoDelete\": {{faker 'datatype.boolean'}},\n          \"boot\": {{faker 'datatype.boolean'}},\n          \"deviceName\": \"\",\n          \"diskSizeGb\": \"\",\n          \"guestOsFeatures\": [\n            {\n              \"type\": \"\"\n            }\n          ],\n          \"index\": \"\",\n          \"interface\": \"\",\n          \"kind\": \"\",\n          \"licenses\": [\n            \"\"\n          ],\n          \"mode\": \"\",\n          \"source\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"installGpuDriver\": {{faker 'datatype.boolean'}},\n      \"instanceOwners\": [\n        \"\"\n      ],\n      \"kmsKey\": \"\",\n      \"labels\": {},\n      \"machineType\": \"\",\n      \"metadata\": {},\n      \"name\": \"\",\n      \"network\": \"\",\n      \"nicType\": \"{{oneOf (array 'UNSPECIFIED_NIC_TYPE' 'VIRTIO_NET' 'GVNIC')}}\",\n      \"noProxyAccess\": {{faker 'datatype.boolean'}},\n      \"noPublicIp\": {{faker 'datatype.boolean'}},\n      \"noRemoveDataDisk\": {{faker 'datatype.boolean'}},\n      \"postStartupScript\": \"\",\n      \"proxyUri\": \"\",\n      \"reservationAffinity\": {\n        \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n        \"key\": \"\",\n        \"values\": [\n          \"\"\n        ]\n      },\n      \"serviceAccount\": \"\",\n      \"serviceAccountScopes\": [\n        \"\"\n      ],\n      \"shieldedInstanceConfig\": {\n        \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n        \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n        \"enableVtpm\": {{faker 'datatype.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STARTING' 'PROVISIONING' 'ACTIVE' 'STOPPING' 'STOPPED' 'DELETED' 'UPGRADING' 'INITIALIZING' 'REGISTERING' 'SUSPENDING' 'SUSPENDED')}}\",\n      \"subnet\": \"\",\n      \"tags\": [\n        \"\"\n      ],\n      \"updateTime\": \"\",\n      \"upgradeHistory\": [\n        {\n          \"action\": \"{{oneOf (array 'ACTION_UNSPECIFIED' 'UPGRADE' 'ROLLBACK')}}\",\n          \"containerImage\": \"\",\n          \"createTime\": \"\",\n          \"framework\": \"\",\n          \"snapshot\": \"\",\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STARTED' 'SUCCEEDED' 'FAILED')}}\",\n          \"targetImage\": \"\",\n          \"targetVersion\": \"\",\n          \"version\": \"\",\n          \"vmImage\": \"\"\n        }\n      ],\n      \"vmImage\": {\n        \"imageFamily\": \"\",\n        \"imageName\": \"\",\n        \"project\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1c4bf63-0657-4634-b0e9-7dde25a70e51",
      "documentation": "Creates a new Instance in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/instances",
      "responses": [
        {
          "uuid": "e17208c2-4ab9-488e-b51c-86db7720c101",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3342e9c-2f72-41b8-b2b6-929eeb99d085",
      "documentation": "Registers an existing legacy notebook instance to the Notebooks API server. Legacy instances are instances created with the legacy Compute Engine calls. They are not manageable by the Notebooks API out of the box. This call makes these instances manageable by the Notebooks API.",
      "method": "post",
      "endpoint": "v1/:parent/instances:register",
      "responses": [
        {
          "uuid": "649ad398-d9ad-490c-830d-31945c195717",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b36f9c2d-56f2-4818-8922-f727231067e3",
      "documentation": "Lists Runtimes in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/runtimes",
      "responses": [
        {
          "uuid": "2fb7bb02-a9c0-4338-a80b-39b1cd613ced",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"runtimes\": [\n    {\n      \"accessConfig\": {\n        \"accessType\": \"{{oneOf (array 'RUNTIME_ACCESS_TYPE_UNSPECIFIED' 'SINGLE_USER' 'SERVICE_ACCOUNT')}}\",\n        \"proxyUri\": \"\",\n        \"runtimeOwner\": \"\"\n      },\n      \"createTime\": \"\",\n      \"healthState\": \"{{oneOf (array 'HEALTH_STATE_UNSPECIFIED' 'HEALTHY' 'UNHEALTHY' 'AGENT_NOT_INSTALLED' 'AGENT_NOT_RUNNING')}}\",\n      \"metrics\": {\n        \"systemMetrics\": {}\n      },\n      \"name\": \"\",\n      \"softwareConfig\": {\n        \"customGpuDriverPath\": \"\",\n        \"disableTerminal\": {{faker 'datatype.boolean'}},\n        \"enableHealthMonitoring\": {{faker 'datatype.boolean'}},\n        \"idleShutdown\": {{faker 'datatype.boolean'}},\n        \"idleShutdownTimeout\": {{faker 'datatype.number'}},\n        \"installGpuDriver\": {{faker 'datatype.boolean'}},\n        \"kernels\": [\n          {\n            \"repository\": \"\",\n            \"tag\": \"\"\n          }\n        ],\n        \"notebookUpgradeSchedule\": \"\",\n        \"postStartupScript\": \"\",\n        \"postStartupScriptBehavior\": \"{{oneOf (array 'POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED' 'RUN_EVERY_START' 'DOWNLOAD_AND_RUN_EVERY_START')}}\",\n        \"upgradeable\": {{faker 'datatype.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STARTING' 'PROVISIONING' 'ACTIVE' 'STOPPING' 'STOPPED' 'DELETING' 'UPGRADING' 'INITIALIZING')}}\",\n      \"updateTime\": \"\",\n      \"virtualMachine\": {\n        \"instanceId\": \"\",\n        \"instanceName\": \"\",\n        \"virtualMachineConfig\": {\n          \"acceleratorConfig\": {\n            \"coreCount\": \"\",\n            \"type\": \"{{oneOf (array 'ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3' 'NVIDIA_TESLA_T4_VWS' 'NVIDIA_TESLA_P100_VWS' 'NVIDIA_TESLA_P4_VWS')}}\"\n          },\n          \"bootImage\": {},\n          \"containerImages\": [\n            {\n              \"repository\": \"\",\n              \"tag\": \"\"\n            }\n          ],\n          \"dataDisk\": {\n            \"autoDelete\": {{faker 'datatype.boolean'}},\n            \"boot\": {{faker 'datatype.boolean'}},\n            \"deviceName\": \"\",\n            \"guestOsFeatures\": [\n              {\n                \"type\": \"\"\n              }\n            ],\n            \"index\": {{faker 'datatype.number'}},\n            \"initializeParams\": {\n              \"description\": \"\",\n              \"diskName\": \"\",\n              \"diskSizeGb\": \"\",\n              \"diskType\": \"{{oneOf (array 'DISK_TYPE_UNSPECIFIED' 'PD_STANDARD' 'PD_SSD' 'PD_BALANCED' 'PD_EXTREME')}}\",\n              \"labels\": {}\n            },\n            \"interface\": \"\",\n            \"kind\": \"\",\n            \"licenses\": [\n              \"\"\n            ],\n            \"mode\": \"\",\n            \"source\": \"\",\n            \"type\": \"\"\n          },\n          \"encryptionConfig\": {\n            \"kmsKey\": \"\"\n          },\n          \"guestAttributes\": {},\n          \"internalIpOnly\": {{faker 'datatype.boolean'}},\n          \"labels\": {},\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"nicType\": \"{{oneOf (array 'UNSPECIFIED_NIC_TYPE' 'VIRTIO_NET' 'GVNIC')}}\",\n          \"reservedIpRange\": \"\",\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n            \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n            \"enableVtpm\": {{faker 'datatype.boolean'}}\n          },\n          \"subnet\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zone\": \"\"\n        }\n      }\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c615f221-e28c-448f-9891-7b04212a8570",
      "documentation": "Creates a new Runtime in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/runtimes",
      "responses": [
        {
          "uuid": "77ed7108-f956-4971-aea7-578ef218f555",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab45a9af-1691-4419-b703-919797976ede",
      "documentation": "Lists schedules in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/schedules",
      "responses": [
        {
          "uuid": "543d9725-eeeb-43ec-a4d0-a3d60378486a",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"schedules\": [\n    {\n      \"createTime\": \"\",\n      \"cronSchedule\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"executionTemplate\": {\n        \"acceleratorConfig\": {\n          \"coreCount\": \"\",\n          \"type\": \"{{oneOf (array 'SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3')}}\"\n        },\n        \"containerImageUri\": \"\",\n        \"dataprocParameters\": {\n          \"cluster\": \"\"\n        },\n        \"inputNotebookFile\": \"\",\n        \"jobType\": \"{{oneOf (array 'JOB_TYPE_UNSPECIFIED' 'VERTEX_AI' 'DATAPROC')}}\",\n        \"kernelSpec\": \"\",\n        \"labels\": {},\n        \"masterType\": \"\",\n        \"outputNotebookFolder\": \"\",\n        \"parameters\": \"\",\n        \"paramsYamlFile\": \"\",\n        \"scaleTier\": \"{{oneOf (array 'SCALE_TIER_UNSPECIFIED' 'BASIC' 'STANDARD_1' 'PREMIUM_1' 'BASIC_GPU' 'BASIC_TPU' 'CUSTOM')}}\",\n        \"serviceAccount\": \"\",\n        \"tensorboard\": \"\",\n        \"vertexAiParameters\": {\n          \"env\": {},\n          \"network\": \"\"\n        }\n      },\n      \"name\": \"\",\n      \"recentExecutions\": [\n        {\n          \"createTime\": \"\",\n          \"description\": \"\",\n          \"displayName\": \"\",\n          \"executionTemplate\": {\n            \"acceleratorConfig\": {\n              \"coreCount\": \"\",\n              \"type\": \"{{oneOf (array 'SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED' 'NVIDIA_TESLA_K80' 'NVIDIA_TESLA_P100' 'NVIDIA_TESLA_V100' 'NVIDIA_TESLA_P4' 'NVIDIA_TESLA_T4' 'NVIDIA_TESLA_A100' 'TPU_V2' 'TPU_V3')}}\"\n            },\n            \"containerImageUri\": \"\",\n            \"dataprocParameters\": {\n              \"cluster\": \"\"\n            },\n            \"inputNotebookFile\": \"\",\n            \"jobType\": \"{{oneOf (array 'JOB_TYPE_UNSPECIFIED' 'VERTEX_AI' 'DATAPROC')}}\",\n            \"kernelSpec\": \"\",\n            \"labels\": {},\n            \"masterType\": \"\",\n            \"outputNotebookFolder\": \"\",\n            \"parameters\": \"\",\n            \"paramsYamlFile\": \"\",\n            \"scaleTier\": \"{{oneOf (array 'SCALE_TIER_UNSPECIFIED' 'BASIC' 'STANDARD_1' 'PREMIUM_1' 'BASIC_GPU' 'BASIC_TPU' 'CUSTOM')}}\",\n            \"serviceAccount\": \"\",\n            \"tensorboard\": \"\",\n            \"vertexAiParameters\": {\n              \"env\": {},\n              \"network\": \"\"\n            }\n          },\n          \"jobUri\": \"\",\n          \"name\": \"\",\n          \"outputNotebookFile\": \"\",\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'PREPARING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLING' 'CANCELLED' 'EXPIRED' 'INITIALIZING')}}\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED' 'INITIALIZING' 'DELETING')}}\",\n      \"timeZone\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37dabd1c-74eb-497f-828e-aaf6115b6509",
      "documentation": "Creates a new Scheduled Notebook in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/schedules",
      "responses": [
        {
          "uuid": "6a505900-e298-4b41-834a-3c2b5ecaa4df",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30dc02cc-5c19-4c2d-8c1c-5eddd943a741",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "fa2e3dd4-c9bb-417e-bcb5-7f25e6b159fb",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "235c2b9f-ecf6-493c-9486-8b116a44ae42",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "6ba46ff9-3316-42aa-870f-996bdc0c2d12",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "24cc9231-6696-403e-83d8-5c8b24147b99",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "10bace18-5b23-4536-9905-1b0f9b8b0086",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}