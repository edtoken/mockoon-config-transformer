{
  "uuid": "d6f485c4-9049-4ac4-a7fb-7c7cd31e1892",
  "lastMigration": 24,
  "name": "Faretrotter Travel API",
  "endpointPrefix": "v2.0/{apikey}",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6047f764-5973-4796-82ac-a534702b4339",
      "documentation": "Returns possible modes of transportation between two cities.",
      "method": "get",
      "endpoint": "places",
      "responses": [
        {
          "uuid": "852990eb-5c92-45f3-9c95-fe97dfc8875e",
          "body": "{\n  \"city\": \"\",\n  \"country\": \"\",\n  \"geoname_id\": \"\",\n  \"id\": \"\",\n  \"lat\": {{faker 'datatype.number'}},\n  \"lng\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"name_long\": \"\",\n  \"region\": \"\",\n  \"slug\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Everything worked as expected.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3464b159-9c02-4cda-865c-675f79fb54db",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameters did not match the endpoint requirements. Check that all required fields are present and spelt correctly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "582633dc-dac6-4a88-8f1b-6b23192a7983",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication Failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cb421bd-7ef8-43e3-89d6-26f5d12b9303",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "All parameters are correct but the request failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23c764a6-2b04-4a3d-9a06-5a900d8c8e9f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request IP does not match IP address registered with key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca0c9c69-216a-41a9-b9e1-b69e7be25341",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The endpoint doesn't exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a621528f-d823-4e2a-a740-42d25a2de25b",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests hit the API too quickly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "630153ec-230d-4383-9423-99f6a7055a2a",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ced85b2b-1b56-47cc-b9b8-3a634cfe3c26",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f95dbfeb-a731-4ae8-9497-951ee1ebe0f0",
      "documentation": "",
      "method": "get",
      "endpoint": "routes",
      "responses": [
        {
          "uuid": "82681c0f-7116-4948-a116-8aeb8a4a7add",
          "body": "{\n  \"data\": {\n    \"operators\": [\n      {\n        \"attributes\": [\n          \"\"\n        ],\n        \"code\": \"\",\n        \"id\": \"\",\n        \"logo_img\": \"\",\n        \"mode\": \"\",\n        \"name\": \"\"\n      }\n    ],\n    \"places\": [\n      {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"geoname_id\": \"\",\n        \"id\": \"\",\n        \"lat\": {{faker 'datatype.number'}},\n        \"lng\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"name_long\": \"\",\n        \"region\": \"\",\n        \"slug\": \"\",\n        \"type\": \"\"\n      }\n    ],\n    \"routes\": [\n      {\n        \"co2\": {{faker 'datatype.number'}},\n        \"destination_id\": \"\",\n        \"duration\": {{faker 'datatype.number'}},\n        \"fare\": {{faker 'datatype.number'}},\n        \"mode\": \"\",\n        \"origin_id\": \"\"\n      }\n    ]\n  },\n  \"request\": {\n    \"distance_miles\": {{faker 'datatype.number'}},\n    \"endpoint\": \"\",\n    \"environment\": \"\",\n    \"fields\": {\n      \"destination_lat\": {{faker 'datatype.number'}},\n      \"destination_lng\": {{faker 'datatype.number'}},\n      \"origin_lat\": {{faker 'datatype.number'}},\n      \"origin_lng\": {{faker 'datatype.number'}}\n    },\n    \"version\": \"\"\n  },\n  \"response\": {\n    \"time\": {{faker 'datatype.number'}},\n    \"url\": \"\"\n  },\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Everything worked as expected.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ae6c3fd-1754-494f-b3ff-0d1afe56df8b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameters did not match the endpoint requirements. Check that all required fields are present and spelt correctly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "945d317e-211f-4333-b2de-202f82841256",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication Failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "439ecf59-a87c-406c-95a1-3fab344832af",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "All parameters are correct but the request failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f74c850-f7a3-4280-974c-440635426ccd",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request IP does not match IP address registered with key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13514b6f-bac5-48b6-9d22-5f64f407880c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The endpoint doesn't exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6569b5ba-71cb-4079-8e6f-1aeb67b09b38",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests hit the API too quickly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0497b014-b5e2-4947-823c-7171f3bb9d22",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb8fd6f7-e9ca-4a94-b63c-2549de6b330d",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}