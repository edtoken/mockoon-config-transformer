{
  "uuid": "81a166e0-8879-4abc-b1fc-f12d453dc805",
  "lastMigration": 24,
  "name": "AWS Service Catalog",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3d0de5a4-483a-46c0-8008-ecf40c9460fc",
      "documentation": "Accepts an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare",
      "responses": [
        {
          "uuid": "502abd75-254c-4ef9-8f17-8e6e26d8f784",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "13d5840c-f683-4b1c-b40d-a97004d42385",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6cd372bc-01d1-4b0d-8744-f5b200904a45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1b5db55-4dbf-4c7a-adfd-6738382f59c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c76cf26b-7406-4497-9fb4-66d3bb7a4f11",
      "documentation": "Associates the specified budget with the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource",
      "responses": [
        {
          "uuid": "55a628cb-fc1b-4e63-b297-a53dc8e7724d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c7dd393-e04d-4ba6-b11e-ff57c8d01287",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d00248b2-dee8-475c-8fbd-bf6095bef863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0351946-7480-46c4-a09f-429a27becdd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b31d7e3a-b3b0-4327-8a7f-e3372ac29188",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cea24d9d-2e51-4cff-9798-79a794e4a0d0",
      "documentation": "Associates the specified principal ARN with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio",
      "responses": [
        {
          "uuid": "e8e6a640-4e49-4f68-921f-99eba34083ce",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a437d7e7-45fb-4bce-8e6f-74af501faf8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d10cc57a-6ca2-46e4-8ba3-6deb7d79a48e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f97d7345-289c-4b02-9f95-bc714f87d271",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "90ec3e13-b8fe-4e21-b399-a3c3d4d8e33f",
      "documentation": "<p>Associates the specified product with the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio",
      "responses": [
        {
          "uuid": "d9a89e83-ce9c-41df-8175-70221185dd69",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d28e6ef1-858a-4338-99c0-a5bf7f999323",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "130e57e5-0c7f-4c04-bdd0-fbfdbccfb3e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66342214-96f2-4373-b163-f2e744e12d0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1daa6823-e630-446f-b94d-46bc9f34dea2",
      "documentation": "Associates a self-service action with a provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "ee3f1094-6928-457b-813c-9db47a7ce6d6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51668b23-8c78-43d9-ab83-da8b62cf3730",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04d8549a-fafc-4fef-a490-3182e30d6ea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6913d7a8-ae8f-4804-a529-d95f7e38cee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdbcf904-422a-43e6-923b-dda448029c1c",
      "documentation": "Associate the specified TagOption with the specified portfolio or product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource",
      "responses": [
        {
          "uuid": "568c4d4e-d8d5-49f4-9a9e-3d2c4bd100d4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a22db854-9b61-41ad-a542-9a7f1dd140b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85ef8022-bd4d-401d-a881-361b6ae70bb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5b94424-3e0a-4a89-bfbc-3e5f3f2a1906",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84e4320c-cf9d-414a-8ab0-c3db911dd0f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f26aa0d6-c5fb-43b5-ac40-98eabb3f52df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85e095ad-0e38-4d55-9804-96f33104cd25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "833708b0-9ba4-41eb-9630-2840f1922948",
      "documentation": "Associates multiple self-service actions with provisioning artifacts.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "f3e6f4a1-5651-4c81-b3f0-3f580f5a3f86",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9dbc50cb-4527-4461-a78f-ac6fafd78008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa5a4704-ae77-43a9-8298-0b2cf52565af",
      "documentation": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "6b2c3276-a04e-4bad-bdac-520f058597fa",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2e5af6f-8c94-41c4-9c71-cd481e886815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6053990-a1c5-4a33-9cb2-92f8392479df",
      "documentation": "<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct",
      "responses": [
        {
          "uuid": "c3ee8b8c-016a-47d8-88c4-aa492a17640a",
          "body": "{\n  \"CopyProductToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7fc0e57f-c032-4f3f-aacd-dcf747190a68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2d30c30-96b7-41cb-b56d-af59fb6bdccf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1897959-7905-4139-adf9-c9382b940e53",
      "documentation": "<p>Creates a constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint",
      "responses": [
        {
          "uuid": "101f0a37-74b5-4eb2-a56b-9c46868abbf3",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "843c2380-94a7-4d26-ba93-8afb3a8efd6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "648c3c9c-1e78-44ab-bdfe-9f148f43abde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a7e3810-d2b4-4483-8848-c7757958d7e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f3b5126-f7e8-450b-a724-37ef91d7ffa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "106d60f7-4081-4981-8439-dc92f35068ca",
      "documentation": "<p>Creates a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio",
      "responses": [
        {
          "uuid": "5894a70e-6a78-4e7b-81d7-2d9a4c4330af",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11c4d401-665c-4931-9469-2aa528c22831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "285f64aa-ec01-4d0e-aef5-17c1a9145176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5af4df57-cb4c-4fa0-8a2b-afb7ca851fc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bce0354a-556e-4967-8daf-d25d32e26784",
      "documentation": "<p>Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the management account of an organization or by a delegated administrator. You can share portfolios to an organization, an organizational unit, or a specific account.</p> <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p> <p> <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p> <p>You can't share a shared resource, including portfolios that contain a shared product.</p> <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare",
      "responses": [
        {
          "uuid": "ff6dad1b-1ebf-4e32-9348-b496491a4df0",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8dd6cbf-a582-492f-aa95-6a543777b70c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4376915c-41ad-46b9-a276-9ad2ce56a849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b137435-25b8-4fcc-bc7b-c0af6c6763ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65be1422-617e-4685-bc25-fd25e4cc4c4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "607aba4a-6a57-43f0-9156-2c7d6c07fef2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d11a5947-c5c2-4a33-abad-021ecb5809bb",
      "documentation": "<p>Creates a product.</p> <p>A delegated admin is authorized to invoke this command.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct",
      "responses": [
        {
          "uuid": "fbdba0e6-8875-4d21-8714-340b0b224c83",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "59a821c0-d192-483f-a357-0294cba56959",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2ff2486-30eb-4a1e-981d-d75fe9553397",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9104c319-2ea4-42ad-9632-1a7406aafd6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "494eef3c-577e-4e32-97c4-4d63c4213105",
      "documentation": "<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan",
      "responses": [
        {
          "uuid": "ab6dce0d-74a3-4715-83bb-710aa8fff082",
          "body": "{\n  \"PlanName\": \"\",\n  \"PlanId\": \"\",\n  \"ProvisionProductId\": \"\",\n  \"ProvisionedProductName\": \"\",\n  \"ProvisioningArtifactId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d615d89-bdf9-46fc-be77-08b51490d7b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb1166f8-49a3-45ce-b817-7bf9875ff829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28c50a75-0410-41fc-9d7e-138af8a7fe36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb93d810-db9e-4eaf-90aa-dd51c33d56d8",
      "documentation": "<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact",
      "responses": [
        {
          "uuid": "f88af6cb-acd9-462c-8dd2-746811a03d02",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb63fdb6-d32a-4ba2-93ea-27b1063e4f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f4b7102-e08a-4e75-9254-8ddd5fa57c50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32649d6f-ee98-4a3c-bdb6-c6e5c3a8ee0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "53331347-f66e-428b-8d32-d97730965ee5",
      "documentation": "Creates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction",
      "responses": [
        {
          "uuid": "1b9337c1-28f2-44c3-9d9d-ba4d849dc1ea",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3f6b0697-491a-4135-884a-3e958a1c88ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c218a13c-803d-47cd-b799-042ec0176d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0946c556-60dc-46bc-b261-ffd16f62818e",
      "documentation": "Creates a TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption",
      "responses": [
        {
          "uuid": "57a0734b-e12d-4368-a8b1-00a47887000d",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3167e53f-77d9-40e2-bfe4-dbc6fd9c131d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8112f3f5-03af-4456-a78f-952f7b6fdfa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ec90027-cc92-43e7-ae6a-dc6850dbe808",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eee0b8c7-cc26-4e31-b5d9-5fb38bc700d9",
      "documentation": "<p>Deletes the specified constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint",
      "responses": [
        {
          "uuid": "3ba406b0-7b3f-4655-90c8-c1f6fdae2b09",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61a6dd8c-9bc6-4337-b167-fcfd9ad3c722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc4c08e5-40e3-46c8-b077-e0e7deec4f2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8267a0d-4522-47e1-8082-d46caefeeb33",
      "documentation": "<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio",
      "responses": [
        {
          "uuid": "04648dc4-e413-452d-a3cc-3ca771f9448b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36255fd4-d5ed-4f31-aa0b-cbd9a885a3ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e726e4b7-9485-407d-bac2-b3c99390a7ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b7edc25-cb47-4270-9753-fec808e005e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c44138f9-aa95-4899-9edd-06d5ac6f87d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddb9e119-e0f0-4132-bf3a-bd7c943fe4bc",
      "documentation": "<p>Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the management account of an organization or by a delegated administrator.</p> <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare",
      "responses": [
        {
          "uuid": "b3fd40d9-9594-41da-97ce-2dbd15e47421",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "debc196e-1339-44ed-8f67-6ec4f7b7beff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bc63b1f-fa8b-4e2e-ba3f-926887925401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5f62c63-4a5f-4dd3-81ec-fdfac10d73bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0deb9a54-0dc3-4e5f-ad0a-91b50999e4b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "90f53ba4-f341-46f2-a4c3-d4680ad99481",
      "documentation": "<p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct",
      "responses": [
        {
          "uuid": "d2d6aed3-e462-478d-b804-4dabb8ff46aa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "332f36fa-8c0e-4d9a-a1dc-2cb877e44eac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1c6269b-fcc1-4c8f-a502-dbe5e17566e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30d5169f-09e6-49d6-bc98-f10e3e2f1ed7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32fe34cb-4665-4f0e-a47b-f631feae04cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ae99f11-da39-4787-93f1-e5de82694c30",
      "documentation": "Deletes the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "3e7f57b9-f8ea-4774-ade4-ce6d829d5c44",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a348a29c-4786-40a2-bd5a-7588bf02a040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8dddf891-2281-4bfa-a6eb-19a8a8c228ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2a8e62c3-be5f-4b93-b286-45f94eba9232",
      "documentation": "<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact",
      "responses": [
        {
          "uuid": "921d375e-1a69-4de0-917f-f3e6566a713b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b7c3639-f233-4ea4-8a7b-fe6d79251d6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2df6a1ca-3e7f-40ea-98f2-e3dc4d613feb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2ac6705-4f47-4fcf-b3d9-9119dd82fe0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cd84356-75d0-4b14-ba6b-f0a63de6135a",
      "documentation": "Deletes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction",
      "responses": [
        {
          "uuid": "3132ba1c-4345-483c-ad12-19aefa326587",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f55f008f-5696-496b-a37a-1cd7785242e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47743bcb-51f5-4a8a-bb11-f7fda610a0ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f16e8bfc-2a99-4ad3-9798-5a0453eef55a",
      "documentation": "<p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption",
      "responses": [
        {
          "uuid": "786db81f-20f1-4c82-830b-1e795fffb563",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69a732a0-68d2-4dff-8677-8d5ceb28be83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fbc419c-4e86-4b2f-88da-2ef9851f7531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2da13988-faa2-4c49-a519-1325212d9e60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4916aad-b3a8-4818-a1b9-f3377198fe34",
      "documentation": "Gets information about the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint",
      "responses": [
        {
          "uuid": "706b3ae6-cb70-41a0-be7a-bbbc37332f99",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d92c5ff3-9bfb-43c3-802d-ea579f78d847",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "769a1066-3962-4b32-a745-13bd938a061a",
      "documentation": "Gets the status of the specified copy product operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus",
      "responses": [
        {
          "uuid": "54bdf613-9f17-4215-82ad-26828239f4fc",
          "body": "{\n  \"CopyProductStatus\": \"\",\n  \"TargetProductId\": \"\",\n  \"StatusDetail\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95a8f2dc-7540-4a13-8206-44ef673df5d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbcf9822-3bd3-4891-9d9c-6ce89566573f",
      "documentation": "<p>Gets information about the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio",
      "responses": [
        {
          "uuid": "b038a559-6790-420d-9bda-79df8b451087",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'datatype.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f89be37f-cc23-4dec-ac02-4b835a321d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3126c58-1372-453d-9d09-12915bf79a2b",
      "documentation": "Gets the status of the specified portfolio share operation. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus",
      "responses": [
        {
          "uuid": "ed4d1212-7556-4e86-8fff-9d74e7d5e543",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"PortfolioId\": \"\",\n  \"OrganizationNodeValue\": \"\",\n  \"Status\": \"\",\n  \"ShareDetails\": {\n    \"SuccessfulShares\": [\n      \"\"\n    ],\n    \"ShareErrors\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Message\": \"\",\n        \"Error\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "621b2963-37ec-411f-9b89-b6647b830116",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9f7ed80-325c-493d-bcdb-551fb38050e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31346880-3a8d-4d5e-8422-0407c04dfe90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3b9d5b5-6ba2-44fa-a59e-545b1c02b6a5",
      "documentation": "<p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p> <p>You can use this API to determine which accounts or organizational nodes this portfolio have been shared, whether the recipient entity has imported the share, and whether TagOptions are included with the share.</p> <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShares",
      "responses": [
        {
          "uuid": "87711b91-d5cc-4709-b38a-93d9f0ab43cb",
          "body": "{\n  \"NextPageToken\": \"\",\n  \"PortfolioShareDetails\": [\n    {\n      \"PrincipalId\": \"\",\n      \"Type\": \"\",\n      \"Accepted\": {{faker 'datatype.boolean'}},\n      \"ShareTagOptions\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e3dc508-b6ee-4288-809a-30f029d8cf03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47c6c5bc-62a0-4b98-a232-45cfd85c7fb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5ddb2ff-916a-4e81-b4ef-bb4ec1c1925a",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct",
      "responses": [
        {
          "uuid": "432b0fbe-d1cb-4ddd-9fa6-3b47d18275d9",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"LaunchPaths\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a16fe530-2a81-4728-9d34-3198be657832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0fa1c87d-7312-4657-9af8-746a0654f5a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27591040-e7f9-47bd-b4ed-0c8d6b6e4beb",
      "documentation": "Gets information about the specified product. This operation is run with administrator access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin",
      "responses": [
        {
          "uuid": "6f3cba86-65eb-4e1c-be4e-32098cfa93d3",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisioningArtifactMetadata\": {}\n    }\n  ],\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'datatype.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36a1a363-c9de-4cce-88d6-b10c9be96916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3baeed4a-e40d-4ef1-b1e7-1e13af208538",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6759981e-d6c9-4089-a9d4-3c8b6402eead",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView",
      "responses": [
        {
          "uuid": "17f3c507-1475-4643-95f4-a798868aec40",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14ba7947-f415-47c4-824d-e5e0d8818a89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "385e9d93-c851-42ae-9f42-148ea7dcebec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa281979-d05b-4ad4-af7f-76a953b88f23",
      "documentation": "Gets information about the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct",
      "responses": [
        {
          "uuid": "9bfb9dba-47cf-4a6f-9277-b12bba1afc1f",
          "body": "{\n  \"ProvisionedProductDetail\": {\n    \"Name\": \"\",\n    \"Arn\": \"\",\n    \"Type\": \"\",\n    \"Id\": \"\",\n    \"Status\": \"\",\n    \"StatusMessage\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"IdempotencyToken\": \"\",\n    \"LastRecordId\": \"\",\n    \"LastProvisioningRecordId\": \"\",\n    \"LastSuccessfulProvisioningRecordId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"LaunchRoleArn\": \"\"\n  },\n  \"CloudWatchDashboards\": [\n    {\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "798b3c40-dcc2-47f0-bccd-cd130fb8574f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90639153-afc7-42b9-862d-ec210e30d113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "000cffa7-1241-44a7-94fd-e36cd324c298",
      "documentation": "Gets information about the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan",
      "responses": [
        {
          "uuid": "49e565ae-edf7-4f50-af81-bfcda233e85c",
          "body": "{\n  \"ProvisionedProductPlanDetails\": {\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"PathId\": \"\",\n    \"ProductId\": \"\",\n    \"PlanName\": \"\",\n    \"PlanId\": \"\",\n    \"ProvisionProductId\": \"\",\n    \"ProvisionProductName\": \"\",\n    \"PlanType\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"Status\": \"\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"NotificationArns\": [\n      \"\"\n    ],\n    \"ProvisioningParameters\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\",\n        \"UsePreviousValue\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"StatusMessage\": \"\"\n  },\n  \"ResourceChanges\": [\n    {\n      \"Action\": \"\",\n      \"LogicalResourceId\": \"\",\n      \"PhysicalResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Replacement\": \"\",\n      \"Scope\": [\n        \"{{oneOf (array 'PROPERTIES' 'METADATA' 'CREATIONPOLICY' 'UPDATEPOLICY' 'DELETIONPOLICY' 'TAGS')}}\"\n      ],\n      \"Details\": [\n        {\n          \"Target\": {\n            \"Attribute\": \"\",\n            \"Name\": \"\",\n            \"RequiresRecreation\": \"\"\n          },\n          \"Evaluation\": \"\",\n          \"CausingEntity\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5878676-8ab1-4bf1-90cf-e4cbc59bfc8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "059cfe2d-3799-436d-a23c-82cf7236c468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f608a1c-2f5b-45b2-8d4a-a45a5cf02828",
      "documentation": "Gets information about the specified provisioning artifact (also known as a version) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact",
      "responses": [
        {
          "uuid": "46956108-ab74-47ab-b0aa-6a5e143ed555",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a0ecc6a-55c2-4cdb-a281-c1874afc7e17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69eb35fe-006c-42ee-9196-b0e5cd8c562c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cea25e6-4fa0-4e3a-8b3d-a318d9b74293",
      "documentation": "<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters",
      "responses": [
        {
          "uuid": "a81cfb1a-3647-4e7a-8fd2-5668c0dc4865",
          "body": "{\n  \"ProvisioningArtifactParameters\": [\n    {\n      \"ParameterKey\": \"\",\n      \"DefaultValue\": \"\",\n      \"ParameterType\": \"\",\n      \"IsNoEcho\": {{faker 'datatype.boolean'}},\n      \"Description\": \"\",\n      \"ParameterConstraints\": {\n        \"AllowedValues\": [\n          \"\"\n        ],\n        \"AllowedPattern\": \"\",\n        \"ConstraintDescription\": \"\",\n        \"MaxLength\": \"\",\n        \"MinLength\": \"\",\n        \"MaxValue\": \"\",\n        \"MinValue\": \"\"\n      }\n    }\n  ],\n  \"ConstraintSummaries\": [\n    {\n      \"Type\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"UsageInstructions\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"ProvisioningArtifactPreferences\": {\n    \"StackSetAccounts\": [\n      \"\"\n    ],\n    \"StackSetRegions\": [\n      \"\"\n    ]\n  },\n  \"ProvisioningArtifactOutputs\": [\n    {\n      \"Key\": \"\",\n      \"Description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2bb829f-9272-4658-bda6-1569a39b894f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a9561db-770f-4ea8-8034-e4470510b72d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10631ede-c0af-489b-8e5f-9f722328a247",
      "documentation": "<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord",
      "responses": [
        {
          "uuid": "eca1cb2e-9874-47d2-8e88-a3b3c77fb08a",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  },\n  \"RecordOutputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7495e7bd-a327-4ca8-b114-6eaaac15d64a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14e34bee-491a-4da2-9d2c-432066490eda",
      "documentation": "Describes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction",
      "responses": [
        {
          "uuid": "ac261d81-8c9f-4915-8e16-c35748f6ca87",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aea6948b-c31a-4a03-8e82-2fff24870969",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2fb6291d-6587-415e-9468-969d514763bb",
      "documentation": "Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters",
      "responses": [
        {
          "uuid": "62c56aa7-23ac-4543-9af2-9d54af17ac94",
          "body": "{\n  \"ServiceActionParameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"DefaultValues\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "35f61133-494e-4409-854d-72b544a5cba8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c033555-a1de-49a4-a852-a12c3b8b73fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd1a9aad-3e79-4257-ba4f-6d6c1b8a70e1",
      "documentation": "Gets information about the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption",
      "responses": [
        {
          "uuid": "2814aec3-b9f0-45d7-a701-9eda4dacb1c8",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "828da730-895d-448c-bfd5-dfbd6910feef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0972b54-0ccd-4864-ae6b-1b3441ad7aa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12cfccac-09ec-4c81-b279-8eaa58590c78",
      "documentation": "<p>Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the management account in the organization.</p> <p>This API can't be invoked if there are active delegated administrators in the organization.</p> <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "4f0ffd08-586a-4fa3-8754-0b47dd0fc0a5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de941f02-4190-4a1e-8244-7b759111747f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "676013fc-5c67-419c-8968-241940c2dca4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd7f6b3f-ecaa-4825-a5c9-6e55b7b0b84e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8bbc705e-7176-49b9-9d65-aad6b4cb44d2",
      "documentation": "Disassociates the specified budget from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource",
      "responses": [
        {
          "uuid": "68a1a0c1-22b4-44a9-b6a3-a34820ab72ce",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab2c5c17-c685-488a-b7fd-8b2818a73cd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98fb2892-a70a-44ce-a968-7a0f941879a3",
      "documentation": "Disassociates a previously associated principal ARN from a specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio",
      "responses": [
        {
          "uuid": "c8608230-0442-41a6-b208-5911d81acf60",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d260e80f-8371-4ed2-8f1e-66a665ce5c80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "caabcb5b-c11f-4867-8f55-4577877e4b6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3aa94b4f-68ac-47d2-aa9c-f3c4e262af14",
      "documentation": "<p>Disassociates the specified product from the specified portfolio. </p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio",
      "responses": [
        {
          "uuid": "a3350720-42f1-495c-9fb5-cf5ff33d6879",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c9cdc00-7a44-4669-8f76-7e3edc985643",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8cd79b30-1cb2-4769-85fb-4225440ef23e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6128424-aeb9-478c-ae90-de578185712d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "326ecbdd-f621-44e5-9d61-949111ce717f",
      "documentation": "Disassociates the specified self-service action association from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "e91bdbf8-69e4-40dd-bb8a-bb1f1a4ab8c2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a19a60d5-2d6e-4225-a263-73f4aaaa91f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8e6e11b9-a68a-4f18-903c-2eafc638dc8a",
      "documentation": "Disassociates the specified TagOption from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource",
      "responses": [
        {
          "uuid": "dbf5cd17-224a-4f80-84ac-72944e80cebe",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de15827b-93f4-41f0-9d90-9e335fc2b4f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe9e2d52-28a0-41a9-970f-aca0008ef289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "897d5b41-041c-43bf-8f2e-833f9cfdfa20",
      "documentation": "<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the management account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p> <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "a946823c-6576-48c7-8f4d-4123242d9aba",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab7a657d-2540-4c21-87d1-b480909249e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88df1dfc-ac34-4bf6-9a2f-aa782cfa6f42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c804731-e8c3-4a4f-a942-184c425252a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8e1d88d-bb6c-4f4e-a058-850f8a467b91",
      "documentation": "Provisions or modifies a product based on the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "72abb89d-b17f-436f-84a3-569e02325b43",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b19f0a38-30ba-4f75-a712-59139a3a2f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed1d663b-b929-453d-bf9d-3bd169feb2ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f475706c-82c9-4f8f-a546-bdbf58d59c04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "528ea650-2904-49ca-93bc-4e81160afd2a",
      "documentation": "Executes a self-service action against a provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction",
      "responses": [
        {
          "uuid": "5916a2c8-0a10-4dc8-b23e-6d3f3dc3d806",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05b92d53-2c1c-44d5-88e9-002169cd43dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac0165a3-0ca1-41c4-9290-22f229c52556",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "492bb130-ed48-4433-981b-2d109bb62bd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8fa80f52-da7b-4c6f-b497-64642cd8e50d",
      "documentation": "Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus",
      "responses": [
        {
          "uuid": "637dc382-510c-44bc-b331-0e4f9014ec40",
          "body": "{\n  \"AccessStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0779be37-35c5-4dab-a276-56eb804bc94e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a0b904a-f8c2-4633-948d-0e76e4d5e410",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c318da30-17ce-4531-b7b1-1671a57bc7a2",
      "documentation": "This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetProvisionedProductOutputs",
      "responses": [
        {
          "uuid": "b117c450-85d9-4907-a2c0-adbeecb25679",
          "body": "{\n  \"Outputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da12c619-0049-49f3-b1e0-ed1779033db1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9665a1da-3e04-4c5f-8101-efd795d71c3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d632bf45-461d-47d2-8684-bcd44efb6d7d",
      "documentation": "<p>Requests the import of a resource as a Service Catalog provisioned product that is associated to a Service Catalog product and provisioning artifact. Once imported, all supported Service Catalog governance actions are supported on the provisioned product.</p> <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and non-root nested stacks are not supported.</p> <p>The CloudFormation stack must have one of the following statuses to be imported: <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>, <code>IMPORT_ROLLBACK_COMPLETE</code>.</p> <p>Import of the resource requires that the CloudFormation stack template matches the associated Service Catalog product provisioning artifact. </p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ImportAsProvisionedProduct",
      "responses": [
        {
          "uuid": "7810a1af-579e-4f95-8187-b8e2a8e2b61d",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "13c3d77b-ccc4-4347-8cf9-a81b841c5ed0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2e147e5-7cf8-42c2-94f0-46c871182f90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4349b04-f517-4a5e-92cd-763e5759aa80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb200c61-07d1-43f5-8fd4-38007d0a410d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7272ff52-fb85-4a23-9f07-d357bcbaa590",
      "documentation": "Lists all portfolios for which sharing was accepted by this account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares",
      "responses": [
        {
          "uuid": "86049be2-35a5-499b-b75f-885f2fd692c4",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8381312f-d7f4-40c4-95c1-50c0a758091c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bb3356e-364e-444b-b2cb-7058ce735e57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e40cf045-c519-44a6-853c-fe9787f3bf5e",
      "documentation": "Lists all the budgets associated to the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource",
      "responses": [
        {
          "uuid": "fb512b75-9161-43ae-8390-82256891df9e",
          "body": "{\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e75fd65-bd33-4c23-a06d-142580eb331f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04747215-d877-4719-94ec-2a2c80aeae86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5205d8f-412c-4c94-a0bb-7f28ec593ce5",
      "documentation": "Lists the constraints for the specified portfolio and product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio",
      "responses": [
        {
          "uuid": "871e7fb5-7d60-493d-b424-e14c5b7be927",
          "body": "{\n  \"ConstraintDetails\": [\n    {\n      \"ConstraintId\": \"\",\n      \"Type\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"ProductId\": \"\",\n      \"PortfolioId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4e5d149d-aa7a-4dac-a80e-50cbd7663316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac392524-33df-43c4-b42c-c8974c4f28f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf6810b3-fd53-4649-9d15-269d7d86f957",
      "documentation": "Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths",
      "responses": [
        {
          "uuid": "0152cea9-b807-43f3-8857-88e88793f05b",
          "body": "{\n  \"LaunchPathSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ConstraintSummaries\": [\n        {\n          \"Type\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Name\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3cc7d9d-7ff4-42e1-bbce-1c09cd420855",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "540a212c-413f-4c91-b2e1-1e0d8bdcf488",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "297caf35-3ae5-457e-a97a-5ec4be2e199f",
      "documentation": "<p>Lists the organization nodes that have access to the specified portfolio. This API can only be called by the management account in the organization or by a delegated admin.</p> <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess",
      "responses": [
        {
          "uuid": "ced04361-4a93-44d1-a46a-2ad9433fbf0e",
          "body": "{\n  \"OrganizationNodes\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d6ad965-7542-42dc-95ac-b5000f17f442",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3503dca1-1463-44cd-89f9-5ea40f19184a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f913c20-aa34-4e9b-9cdd-669dff4b5c43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36df6546-7984-4772-97d7-53bbc107054e",
      "documentation": "<p>Lists the account IDs that have access to the specified portfolio.</p> <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess",
      "responses": [
        {
          "uuid": "8812c771-6469-492c-9a9a-474999115618",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5eea4530-3aab-48bb-8425-923cf18f06a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb24398c-efd5-48b1-a658-dd654ecf7068",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbf10ad6-7c43-4b20-a5dc-c4701e8ad49e",
      "documentation": "Lists all portfolios in the catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios",
      "responses": [
        {
          "uuid": "6c4d777d-44c3-4ce3-8025-2eedda4bbc73",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "928a0f10-6845-41b6-9549-589058e334aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6541f60a-011b-4762-8126-e59ea8a0363b",
      "documentation": "Lists all portfolios that the specified product is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct",
      "responses": [
        {
          "uuid": "6e979e1a-a03e-4199-b82d-4205b0959edd",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f4846994-e3fc-47d8-8229-c872d7eb0e71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba078b71-5330-4c1c-bab5-edda395c8e9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1cf9da5c-c023-4eeb-9829-8da848004fac",
      "documentation": "Lists all principal ARNs associated with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio",
      "responses": [
        {
          "uuid": "1aae03ba-d448-4af9-9315-148057ae3164",
          "body": "{\n  \"Principals\": [\n    {\n      \"PrincipalARN\": \"\",\n      \"PrincipalType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8f7a575-886d-4f9b-9440-2cdd793dbc2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "100fa413-c30c-4fb8-9ae5-81edc1384b41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b618d19-0164-422c-85b9-aefbd2202d8e",
      "documentation": "Lists the plans for the specified provisioned product or all plans to which the user has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans",
      "responses": [
        {
          "uuid": "76d1a097-6595-4045-9142-6db9aac4285c",
          "body": "{\n  \"ProvisionedProductPlans\": [\n    {\n      \"PlanName\": \"\",\n      \"PlanId\": \"\",\n      \"ProvisionProductId\": \"\",\n      \"ProvisionProductName\": \"\",\n      \"PlanType\": \"\",\n      \"ProvisioningArtifactId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7de7cd7d-7723-4a75-a4f3-aef86d7f6c33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b031f94e-9acd-4d3b-ab48-e7fd7a42e7cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e8f9b43-be90-49c0-b9ef-fe7dc7f4d640",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts",
      "responses": [
        {
          "uuid": "d83fd2cd-40d7-4cde-80b5-81e876ced323",
          "body": "{\n  \"ProvisioningArtifactDetails\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Type\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Active\": {{faker 'datatype.boolean'}},\n      \"Guidance\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aca53204-0f83-4068-8e87-73681fa7a8f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df570eb8-fd1b-4612-baa0-c37e45024a26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "059fccd0-484a-462f-b933-8109aac9a288",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction",
      "responses": [
        {
          "uuid": "eb01644b-08e6-433a-8641-cf5c3d5cdf0c",
          "body": "{\n  \"ProvisioningArtifactViews\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"ProvisioningArtifact\": {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Description\": \"\",\n        \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Guidance\": \"\"\n      }\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b857de5a-0631-429a-9722-853efd83cbe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84034bd8-8ee4-48a5-a854-bf404bfc64cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0fbfd1f-8264-45fd-be38-1f129d6cd759",
      "documentation": "Lists the specified requests or all performed requests.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory",
      "responses": [
        {
          "uuid": "1ccd5641-dc7f-4cd9-821f-96e7158b07bc",
          "body": "{\n  \"RecordDetails\": [\n    {\n      \"RecordId\": \"\",\n      \"ProvisionedProductName\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisionedProductType\": \"\",\n      \"RecordType\": \"\",\n      \"ProvisionedProductId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"PathId\": \"\",\n      \"RecordErrors\": [\n        {\n          \"Code\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"RecordTags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "195654ea-86ce-4187-b4c5-15a8c6271715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc089e49-77b4-4d6e-8694-ce73f6fd4682",
      "documentation": "Lists the resources associated with the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption",
      "responses": [
        {
          "uuid": "d92609de-1157-4196-b776-c6d1c3f754bc",
          "body": "{\n  \"ResourceDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3cbb1f6-03ae-449b-844d-8bbc610af5ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28dfc474-d905-4d10-9da9-e86e610a8a64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96c5bf83-1540-4e2a-9a79-8b31dc276193",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4df8c487-a07f-4c63-9d8c-0d5aeb6da876",
      "documentation": "Lists all self-service actions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions",
      "responses": [
        {
          "uuid": "a258d736-4b3a-4f4a-a52d-20b2f7f1c91b",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9b97586c-57f2-4380-be97-bd0fc4c11ba0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "907c8f41-0d78-4ffb-b773-b5ee87e97bae",
      "documentation": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact",
      "responses": [
        {
          "uuid": "ab49b0b6-520a-4f39-ac83-a35ff5103f03",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5cfd0e1-b2e6-4a73-8fbb-ca278820c883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c758202-dd35-45d7-91b0-d5a0ff3b8cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38ea318b-2ddd-4b9f-bab3-ff227defeccf",
      "documentation": "Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct",
      "responses": [
        {
          "uuid": "aa4a551f-33fb-430d-8036-136fd6efe184",
          "body": "{\n  \"StackInstances\": [\n    {\n      \"Account\": \"\",\n      \"Region\": \"\",\n      \"StackInstanceStatus\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0eedf3a3-2412-45e1-9088-ab749aea7f33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb045c25-d1e3-43d9-adf0-cf5e4c13f08f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87beaa5a-1766-4d02-b52a-230db97d5685",
      "documentation": "Lists the specified TagOptions or all TagOptions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions",
      "responses": [
        {
          "uuid": "111e70c2-70f4-47af-a3a2-91d8a6d4194b",
          "body": "{\n  \"TagOptionDetails\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'datatype.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "76140ec3-e6d4-4bb6-bbbf-78eddf465737",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b3cbcd4-f3c5-46b9-80b0-cfd146de9cd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "154ded0c-de19-4559-8e14-192a5b49cbe5",
      "documentation": "<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\".</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct",
      "responses": [
        {
          "uuid": "4581035d-e139-46cd-a204-14380dd619eb",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "014688c8-5a09-411f-b446-7950ca1a85be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63416ad8-5215-4158-b74d-1027759d3a93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "033d6f3e-c8b4-454e-8b7a-e984d28b14aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ae0cf5b-5ad8-4282-b76a-c1848e6aad8d",
      "documentation": "Rejects an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare",
      "responses": [
        {
          "uuid": "33e116a3-b9f3-413d-a876-c5445e143b74",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "edd09e0f-4794-414c-9dea-8794af73e613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1886a35-4d6d-4d04-a6bf-990cb0c611e1",
      "documentation": "<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts",
      "responses": [
        {
          "uuid": "dff0ca49-6eb4-474d-b0a5-b43de252526c",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2bf6ff4-1e8c-416c-8a50-1966fd8598e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "620af61a-3f95-4082-bdca-778092fe1f82",
      "documentation": "Gets information about the products to which the caller has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts",
      "responses": [
        {
          "uuid": "d4861ba2-9ab1-48c5-908a-96d4d6123abc",
          "body": "{\n  \"ProductViewSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    }\n  ],\n  \"ProductViewAggregations\": {},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "25adcd44-abd2-4328-a2f9-92d9f9198aca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad10cd4c-a9fd-492b-a5e4-575075040f17",
      "documentation": "Gets information about the products for the specified portfolio or all products.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin",
      "responses": [
        {
          "uuid": "5819ea98-fba1-48f6-b55e-065809380425",
          "body": "{\n  \"ProductViewDetails\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"Status\": \"\",\n      \"ProductARN\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5adb2466-1742-419c-9637-b4374c3d6a97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fd1f16e-45d8-4a01-af80-d9cb8ddfe9ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4af7ff8-d821-4111-9d5e-3318d435ded6",
      "documentation": "Gets information about the provisioned products that meet the specified criteria.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts",
      "responses": [
        {
          "uuid": "eb70dc70-f0f5-42f5-8137-aa0e90967bf0",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"PhysicalId\": \"\",\n      \"ProductId\": \"\",\n      \"ProductName\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ProvisioningArtifactName\": \"\",\n      \"UserArn\": \"\",\n      \"UserArnSession\": \"\"\n    }\n  ],\n  \"TotalResultsCount\": {{faker 'datatype.number'}},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae958b2e-aaa6-493b-9a56-186db615c93b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7e292ec8-6d99-42b0-8915-788378f8ef39",
      "documentation": "<p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct",
      "responses": [
        {
          "uuid": "a57c9cd6-27c7-4fc2-89b0-718b9b89bede",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb93d52b-da12-4499-8de0-a6f22c0d4dcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "45b9487e-5c80-44f1-9c06-6e0cc67cb21f",
      "documentation": "Updates the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint",
      "responses": [
        {
          "uuid": "a517f397-a389-4492-bef8-a5b44f3c6fe4",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d887d81d-b902-4901-a9d1-3c9d02947a5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4dd43311-9fc9-414c-af66-20d667d2cfb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf23448d-2142-4fb7-b5f7-2876b3ea529f",
      "documentation": "<p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio",
      "responses": [
        {
          "uuid": "15d8f191-41b5-426d-bbd5-e37489f949c2",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5b2290f9-bfd3-4e2a-be63-1e546b6c8dce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b77da85-a061-41ce-b87c-1dec02583954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88e6ff64-73cf-4d03-855b-d636e52509d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f8ae78b-f818-472b-990f-4cc28f82fd1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d92d2628-d4fb-463e-a72d-c780c8b1c65e",
      "documentation": "<p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p> <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p> <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p> <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p> <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolioShare",
      "responses": [
        {
          "uuid": "5de03724-16c1-4643-9234-3a2b480ef288",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09717b6f-5e70-4d52-99ad-41451b97fb1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f36a0b6-dce2-49d1-8c34-ad2df8ef7a82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b993be54-e054-4fed-a185-913485ec9350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87483d37-3251-4436-874d-613a0ac1e602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e641c215-5235-43a2-92bb-d9d382e38b48",
      "documentation": "Updates the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct",
      "responses": [
        {
          "uuid": "1a6c8f37-2bfc-4aed-9613-651bc6dc9a5c",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'datatype.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7eddb338-8cea-47cc-8147-db1c0eef2a13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "897a85b5-07be-45b3-b68b-2c34aa3f13b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "134405a7-1929-4e9b-ab1f-09de67170f6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfb7c7ec-b0f9-4459-80af-d54483cf0689",
      "documentation": "<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct",
      "responses": [
        {
          "uuid": "f8167485-a4a7-4d8d-bb77-6f989813838b",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b216d239-6c78-46b9-ab55-95822b6a27f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b4f349b-89e9-42ad-956a-bb122bbc7492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc4cef5d-a466-4c0b-8dd6-dd513bfca3ee",
      "documentation": "Requests updates to the properties of the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties",
      "responses": [
        {
          "uuid": "f0210348-f1b7-4455-817b-9b0869e4a14e",
          "body": "{\n  \"ProvisionedProductId\": \"\",\n  \"ProvisionedProductProperties\": {},\n  \"RecordId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "840b747c-4ba5-4948-97b4-013bc63810b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd5f50ea-93ef-4e7b-b159-7df5d8caf967",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "babd2b76-a611-4a5b-88a7-35af998434f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e5109f8-b065-4c56-94d0-5a31af3cc4bf",
      "documentation": "<p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact",
      "responses": [
        {
          "uuid": "dd454a80-32de-4999-8df3-009d351031c2",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a21c45ff-dedf-43c2-8201-79aa9bb60327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec72b4ad-a41c-456b-a266-14d13283a5a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0157e3a6-b62a-41df-af82-36a8fa9a0dbb",
      "documentation": "Updates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction",
      "responses": [
        {
          "uuid": "a589d2b6-7ee9-491e-bf41-fd77482bbcf0",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba2503d7-6f6f-422f-a865-43051aba924a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dded11be-b2bb-4802-bf2e-8779986a6714",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f23b2f9-5297-4e89-b6aa-e734871d4393",
      "documentation": "Updates the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption",
      "responses": [
        {
          "uuid": "0fa9f311-826d-44c7-8b75-494f3ef60422",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'datatype.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7227adac-4740-4e40-96c3-033c9c4ea2c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa33e395-4e59-41b9-a32b-293901f17c0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2270bcc3-1c3b-47ad-abca-94dac3bdce25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c7cb4759-1690-47ac-8440-630ccd1b0cd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}