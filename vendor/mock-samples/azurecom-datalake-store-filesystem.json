{
  "uuid": "a47e1672-dd78-4a3a-9a3d-6d1dad4ebf13",
  "lastMigration": 24,
  "name": "DataLakeStoreFileSystemManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6ee8bbf3-9423-4a59-9ae3-eec6045802e2",
      "documentation": "Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.",
      "method": "post",
      "endpoint": "WebHdfsExt/:path",
      "responses": [
        {
          "uuid": "6a94d2b0-9b79-4e51-bb98-df1b015f4842",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab3f5827-28fe-48b1-b8d1-64e0f59ba9f7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "An unexpected error from the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c18ea9b-2805-4590-bf56-253475da364b",
      "documentation": "Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported.",
      "method": "put",
      "endpoint": "WebHdfsExt/:path",
      "responses": [
        {
          "uuid": "a3140548-dd74-48e8-bef6-64fb1f567962",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully set the expiration time on the specified file.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56b40d81-c5a7-41cc-80a1-d3a7e41257b2",
          "body": "{\n  \"remoteException\": {\n    \"exception\": \"\",\n    \"javaClassName\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An unexpected error from the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c482a044-b5a2-4cf2-b718-956a57a001e7",
      "documentation": "Checks if the specified access is available at the given path.",
      "method": "get",
      "endpoint": "webhdfs/v1/:path",
      "responses": [
        {
          "uuid": "fbe31f45-afee-44b2-a70a-25bc7a203b39",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "872126f5-5b28-48c2-8570-f27777ac5541",
          "body": "{\n  \"remoteException\": {\n    \"exception\": \"\",\n    \"javaClassName\": \"\",\n    \"message\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An unexpected error from the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}