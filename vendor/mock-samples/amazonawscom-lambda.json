{
  "uuid": "13a48c18-3eca-411a-a38a-df7ff28d7fc4",
  "lastMigration": 24,
  "name": "AWS Lambda",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c9ac39ba-6a53-40de-9f51-84d3c2773d7d",
      "documentation": "<p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts. </p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "9f72ef2b-aea5-4286-a1de-3221a09e0d1b",
          "body": "{\n  \"Statement\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3aa6fc11-ef8e-4ce5-a0ce-c8eb8889e080",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07d222a2-ddf8-43c2-8751-858d9440495e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b562383b-ef57-41c3-8c9d-37ba6c35c9b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7accea3-6974-49ac-9bbf-1746d6b289d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff43670d-fe28-494f-826d-04cff4226bd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e568c249-5719-4f7c-a4fa-e67e3dad2200",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "777a1b1f-d153-45cc-bc94-70f70aa70eff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "205eda57-4bf5-4730-a5ef-cde13a9fc8c9",
      "documentation": "Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "3f1a0482-a21d-4c65-bf4a-e497617f1eed",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2566ec36-3294-4bc8-ba7f-f99542606f8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fa7b63d-741d-4739-ae98-8224af1e0ea9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15f13897-18bb-484d-bb76-82ac253250cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bae7c49e-5615-4400-9608-16459f278b85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50c9884d-08f9-4654-b84f-7c8e1ed8bd53",
      "documentation": "<p>Grants an Amazon Web Services service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For Amazon Web Services services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For Amazon Web Services services, you can also specify the ARN of the associated resource as the <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permissions policy for the function. For more information about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "622eaec6-5fd6-4759-97d0-410e76aa3b13",
          "body": "{\n  \"Statement\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc7c0bee-344e-44ec-8cf8-58d76f2e3454",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e46adf1e-d65c-4d42-812d-f25c6cacbbb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d9c0c83-3714-43f0-b3a3-7af388b7c6b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96f0173e-0198-4ce1-8058-ff4a61e74dfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75d015af-4d01-4e56-a045-e99fe98c9220",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dec45965-7e11-4ea6-8773-7bf1d16d4cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "320d2a49-efd7-4feb-9bb7-e2bdd0e3a8fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "064e80a5-2fef-4475-bbbc-f8ac31847163",
      "documentation": "Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "c440227f-e449-49fd-acba-756e6d9a6124",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0223e855-c123-4af4-85fe-1065daa4dbeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2486dba7-f3fd-478b-8005-1dbd8b5b3d7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc0d3c2f-7640-4613-aa64-3256f5112a94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a15fedbf-a63a-44eb-9243-fb00fc487714",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47cc5302-7c15-46ae-b515-302e37c680d2",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "9d992488-34cd-4be3-9f04-3720b4b0423c",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a9d41f8-7cc3-4e7f-af30-43e12c665a4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93bfd2a3-63c0-4a91-a936-f3051e065436",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a994644-90a3-4d61-99ba-1dff9b6b7442",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "507037eb-ffc1-479f-9ab1-0286565664c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "554e219c-4f7d-4da2-9b17-440f2a379a4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c0558ec-0534-4bfc-b6af-e0377af10e0c",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a> for a Lambda function.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "0ae0a74f-5656-4c69-a833-15b018be5012",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Aliases\": [\n    {\n      \"AliasArn\": \"\",\n      \"Name\": \"\",\n      \"FunctionVersion\": \"\",\n      \"Description\": \"\",\n      \"RoutingConfig\": {\n        \"AdditionalVersionWeights\": {}\n      },\n      \"RevisionId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7f38fc0b-1050-432c-a33d-02a9856dcf6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b21d5841-8fd9-4b3a-a941-62c84f736742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb8298de-1ee6-4170-8160-20f461fd41f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "24052a0e-0eab-4d1f-b5cf-e2d7863912a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93f14981-3535-4789-b99a-ff4872c53b55",
      "documentation": "Creates a code signing configuration. A <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">code signing configuration</a> defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail). ",
      "method": "post",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "4ac646aa-68e4-46ca-9e85-4628c93fc3cc",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2162d20b-e49d-4e70-9334-e14354f39532",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83e41234-c402-47d2-bb87-d1e6780d9d05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "28979614-9adf-41ee-922f-fa3a19c9031c",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html\">code signing configurations</a>. A request returns up to 10,000 configurations per call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call. ",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "a67ec0b7-6cce-4c90-9808-ade4cbf6c56c",
          "body": "{\n  \"NextMarker\": \"\",\n  \"CodeSigningConfigs\": [\n    {\n      \"CodeSigningConfigId\": \"\",\n      \"CodeSigningConfigArn\": \"\",\n      \"Description\": \"\",\n      \"AllowedPublishers\": {\n        \"SigningProfileVersionArns\": [\n          \"\"\n        ]\n      },\n      \"CodeSigningPolicies\": {\n        \"UntrustedArtifactOnDeployment\": \"\"\n      },\n      \"LastModified\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19ddb6ad-5999-4381-a86c-fa9f1f9dfb2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5198d889-4266-441a-b112-7b6d27731888",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35285472-6381-44f0-bf10-d06a2fd4075b",
      "documentation": "<p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source and triggers the function.</p> <p>For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\"> Configuring a Dynamo DB stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\"> Configuring a Kinesis stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\"> Configuring an SQS queue as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\"> Configuring an MQ broker as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\"> Configuring MSK as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\"> Configuring Self-Managed Apache Kafka as an event source</a> </p> </li> </ul> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "post",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "ba6c85f2-6d67-4459-93b0-70fc9a947e5f",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'datatype.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"ParallelizationFactor\": {{faker 'datatype.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'datatype.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'datatype.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d28f9ed2-5e7a-48d8-a456-daa8612cabb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d74ac44b-7afa-4724-bdd6-bd37f6dd1fb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4842e72e-092e-47f7-8150-313aeb2629f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c0135cf-706a-442c-b169-d258ef64f479",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "590f82b6-97cb-49fe-ab81-d7d43d69748c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6e8f832-5c1e-4519-b19d-657b73fd8977",
      "documentation": "Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a single event source.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "3d7a00bb-10a9-4ce6-ba99-880a01595e1e",
          "body": "{\n  \"NextMarker\": \"\",\n  \"EventSourceMappings\": [\n    {\n      \"UUID\": \"\",\n      \"StartingPosition\": \"\",\n      \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"BatchSize\": {{faker 'datatype.number'}},\n      \"MaximumBatchingWindowInSeconds\": {{faker 'datatype.number'}},\n      \"ParallelizationFactor\": {{faker 'datatype.number'}},\n      \"EventSourceArn\": \"\",\n      \"FunctionArn\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"LastProcessingResult\": \"\",\n      \"State\": \"\",\n      \"StateTransitionReason\": \"\",\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      },\n      \"Topics\": [\n        \"\"\n      ],\n      \"Queues\": [\n        \"\"\n      ],\n      \"SourceAccessConfigurations\": [\n        {\n          \"Type\": \"\",\n          \"URI\": \"\"\n        }\n      ],\n      \"SelfManagedEventSource\": {\n        \"Endpoints\": {}\n      },\n      \"MaximumRecordAgeInSeconds\": {{faker 'datatype.number'}},\n      \"BisectBatchOnFunctionError\": {{faker 'datatype.boolean'}},\n      \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n      \"TumblingWindowInSeconds\": {{faker 'datatype.number'}},\n      \"FunctionResponseTypes\": [\n        \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "073cfa29-f350-4118-948c-5bb360d5f303",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf0427b6-1f96-465d-bc0b-4792d2a2540d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6bc303d3-5034-4e81-9f6b-c5f43a67641b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63efad2c-40da-42a5-94af-a77267eec9d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9edd3d5c-35f7-4efe-9d5e-2451eb6c1037",
      "documentation": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>You set the package type to <code>Image</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties. </p> <p>You set the package type to <code>Zip</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set set of signing profiles, which define the trusted publishers for this function.</p> <p>If another account or an Amazon Web Services service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions",
      "responses": [
        {
          "uuid": "501b69f3-aafe-4b1d-9ea0-63ff71b7f4d1",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'datatype.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MemorySize\": {{faker 'datatype.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dc8eede1-a040-40c3-b576-9f4ab1e9475b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e4eac9f-023a-4745-b15f-1f9f15b98598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92efce9d-2552-4331-83d8-a37e4a2f8d29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8eac4601-e857-412d-94cf-5fd356fdf3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27e270f8-c9d1-48c6-91a4-86f2f23962c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96bb0723-37d1-4a19-87bb-f9622ca03d1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2bf6d47-c14a-41ed-8a5a-32f0e4a57f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b010953-80cc-4208-b6e4-4a049778c129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10954ea9-eaab-42a3-98af-c4b1aed88662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1851342-f689-4451-9e1e-efca9392b7cd",
      "documentation": "Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "128e4994-f99d-4ecc-9a44-3f788bbef8ee",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c1defbd-912a-4c7e-ad8f-aaf2e464e2fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "acca404e-3c4f-4e1a-9778-d5d9085eb47c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3676e7bc-fa9e-46a7-ab08-c4e1521c6b41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfa1f9db-4e1e-4af7-a62c-268f16697491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a086e81-d333-4a74-916f-ce8e2d44520e",
      "documentation": "Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "a78358b6-47f7-4720-a527-cb1ed885d817",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e4ea9d4-940f-445f-9cd7-bf952a308d29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dab49204-6997-41b4-8e72-132c8aeb0d55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0ff2c7b-1c94-435b-802a-b09d3e4c5935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2204a8a3-2fec-4475-b3ea-b4ba3c846784",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4707e76e-294b-412b-8063-1277c1183adb",
      "documentation": "Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "da855c8f-92f4-4f13-b0b3-7814b4977552",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e3ae7fb-420f-4e7c-8ea1-e62a45c1cc72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2879cc61-d24d-4301-a481-2d81ec892362",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10464901-11b5-4ff5-a6b1-deb4ed7d8820",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5dec9c8f-f927-4f9d-8d4d-25e17a319dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b925c51d-fd5b-4f51-9bc3-9b0c142c5230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfc652fb-f2eb-454f-b36d-cfe08c060705",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "755ee3fc-d06a-438d-9ff7-7ff61fc34eb3",
      "documentation": "Deletes the code signing configuration. You can delete the code signing configuration only if no function is using it. ",
      "method": "delete",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "3da31b56-feef-4405-9567-02187caf0f8f",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e1c64f5-77d7-4111-a003-ac46b96e1ef3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8dbe9fbc-ba44-40ac-9429-6322b0a82492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "586db569-8e2e-4b7b-b951-79901136b712",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c9c8deaa-7f92-4b03-b44d-187c4451e9b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3903bfb-fa76-4ddc-825a-24426f9a7e8a",
      "documentation": "Returns information about the specified code signing configuration.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "86e3eeda-7742-4dc3-8712-257e3662c964",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "224c16bb-0235-478b-b3c6-48a7d75196e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1647742-f228-460d-901e-325c43b9877a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98068b6d-dd79-4b6b-ae78-37b8dc360747",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c66b34f5-deac-4494-a267-d0a2dce60556",
      "documentation": "Update the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "dbb595e8-b841-4457-93bc-ae1884ebf9dd",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e87ed9c1-00b7-412a-a3c3-51690b945adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c09d6cd8-099b-4189-b923-66e358a06a05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ec20db8-6200-4847-a1a6-a12a699fd6a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "86ab8b81-602f-40b3-8ef8-f9de95ac5bf8",
      "documentation": "<p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p> <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "55089d14-c4bf-4656-9ee6-34bf8568221c",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'datatype.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"ParallelizationFactor\": {{faker 'datatype.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'datatype.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'datatype.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46df32df-03f0-4a5e-bb2f-93a66a6b79a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5616f3ad-8334-4a3c-9536-7aa43a5bbaea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30b8c5da-e4af-4d50-bf7a-9b0f91484fdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46237525-3e75-43d6-bf1e-ee49e8f3c40d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8526d156-14d3-4d7c-bcb8-24b92fe01d94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05a64581-52c3-4f03-8ec3-3501ddc3a7bc",
      "documentation": "Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "9762e859-f625-4715-84f8-0a9438029ed0",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'datatype.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"ParallelizationFactor\": {{faker 'datatype.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'datatype.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'datatype.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "509d1e95-7458-424f-852d-de33a0f89481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9874968-0289-41ab-b6f3-eb1ccca7c7f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea662d21-9646-4cc8-b788-5205dfd6f022",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "559e042e-5d15-49a1-b218-fbf517b0108c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57c5952c-73bf-4b03-9dc3-e210f4c80d8a",
      "documentation": "<p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "put",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "ce910638-c9f3-4f44-a35c-f0a42314d132",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'datatype.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"ParallelizationFactor\": {{faker 'datatype.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'datatype.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'datatype.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'datatype.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "998dfe1d-2b23-4830-9078-44635a8257f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c977593-348e-4f8b-a592-02d466218b12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66e98d59-d57b-453a-a2a2-bb3d2c8de1cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84beec64-273e-42dc-b2f4-32856ae96a8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da9f3056-d149-4f24-a650-661041213e83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e11917b-9659-41a0-8325-1db7a7f2c1f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "917cc5e7-89d7-44ef-adf1-0f03dc3a10e5",
      "documentation": "<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "78b45872-f21d-4d5a-8654-ff4556503fbb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f40484b-4bd4-488f-8302-6ebb52edf9cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2b8351b-4d7f-45e5-be81-fbdd8c6055a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b33d7794-3822-4c84-8586-6417b9cf878f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba9f7a29-7784-4170-9697-23688ca3e286",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e1ca0e9-270a-41af-b7b6-f25e5047fe8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c3e88da-9170-4aae-b3ae-f24fb8b4f8ef",
      "documentation": "Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "1ddbe071-68af-4082-b1bf-b6cb470288e5",
          "body": "{\n  \"Configuration\": {\n    \"FunctionName\": \"\",\n    \"FunctionArn\": \"\",\n    \"Runtime\": \"\",\n    \"Role\": \"\",\n    \"Handler\": \"\",\n    \"CodeSize\": {{faker 'datatype.number'}},\n    \"Description\": \"\",\n    \"Timeout\": {{faker 'datatype.number'}},\n    \"MemorySize\": {{faker 'datatype.number'}},\n    \"LastModified\": \"\",\n    \"CodeSha256\": \"\",\n    \"Version\": \"\",\n    \"VpcConfig\": {\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"VpcId\": \"\"\n    },\n    \"DeadLetterConfig\": {\n      \"TargetArn\": \"\"\n    },\n    \"Environment\": {\n      \"Variables\": {},\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"KMSKeyArn\": \"\",\n    \"TracingConfig\": {\n      \"Mode\": \"\"\n    },\n    \"MasterArn\": \"\",\n    \"RevisionId\": \"\",\n    \"Layers\": [\n      {\n        \"Arn\": \"\",\n        \"CodeSize\": {{faker 'datatype.number'}},\n        \"SigningProfileVersionArn\": \"\",\n        \"SigningJobArn\": \"\"\n      }\n    ],\n    \"State\": \"\",\n    \"StateReason\": \"\",\n    \"StateReasonCode\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"LastUpdateStatusReason\": \"\",\n    \"LastUpdateStatusReasonCode\": \"\",\n    \"FileSystemConfigs\": [\n      {\n        \"Arn\": \"\",\n        \"LocalMountPath\": \"\"\n      }\n    ],\n    \"PackageType\": \"\",\n    \"ImageConfigResponse\": {\n      \"ImageConfig\": {\n        \"EntryPoint\": [\n          \"\"\n        ],\n        \"Command\": [\n          \"\"\n        ],\n        \"WorkingDirectory\": \"\"\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"Code\": {\n    \"RepositoryType\": \"\",\n    \"Location\": \"\",\n    \"ImageUri\": \"\",\n    \"ResolvedImageUri\": \"\"\n  },\n  \"Tags\": {},\n  \"Concurrency\": {\n    \"ReservedConcurrentExecutions\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61c0b70e-2e8b-4137-8bb8-7be66cb3a83d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f014032-50df-40d0-808e-b1f843b8a7a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0317cec-fa39-4787-85e9-1bc3926b1662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2767b109-c736-4551-b378-bfa964052cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "737678a0-2f50-49c6-97a6-777a2fd30ed8",
      "documentation": "Removes the code signing configuration from the function.",
      "method": "delete",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "358b8ff4-dfdf-4c6d-9273-5a82f44734e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f6e6b1c0-00f0-45cc-837b-6a1695721b86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb9dba15-c7d5-4633-9535-af1b040546f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0825ca1-ebae-4268-90ae-8ddfa4f86118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dae66d91-0cbd-4afd-81e5-264d782b3ca3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0787a53-da09-4b17-8ae9-40c15e846fa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "548a0c04-bf86-4d0b-98f8-ce1015caf320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51d12bc5-0cd3-4c1a-9248-7efa93122f54",
      "documentation": "Returns the code signing configuration for the specified function.",
      "method": "get",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "4169ef01-8eef-4646-a342-651bdca11269",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37cef084-cd65-448f-9a1f-79ae0d74d03d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da5809c4-3028-481d-ad0d-ff5e34e8740a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6a775dc-9a89-46f8-87d3-02fae560d020",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8428e53a-fe5c-4ae6-a074-ccf64a7c0904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59fc7d3e-35bc-48aa-98cc-c3095961d08f",
      "documentation": "Update the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "6f152e71-238c-43a4-956d-8c0ca67ab500",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b224d967-e217-4e7b-b6b9-f715ce26e364",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76caf47a-4dc5-4a1b-91a4-031371d53703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68fad402-62f3-4241-b7de-ee6859322e2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c09e3b93-6038-4d5a-90ed-edc87d5d75ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a707a5e-9467-4698-bd94-19879f3e79a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1d75b0a-6744-48a6-86a1-9410c0435c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "134b1528-9832-49cb-bff6-e1d3a451b435",
      "documentation": "Removes a concurrent execution limit from a function.",
      "method": "delete",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "1312fd2b-356d-4ce7-a375-d9ed12e6886c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21eef1e3-5d17-43ee-9c19-dc8711509748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5ac18ed-500e-4e51-ac4e-f93b7de5b4f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e4a13f9-6e28-4679-b97c-ec2ba9e067a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73d71008-ca93-4f73-860a-861fe6e4ac88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76c7a682-7b98-4875-9781-b98da84c66af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2df913f2-c349-40f6-89ff-a8b6a963997e",
      "documentation": "<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>",
      "method": "put",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "cdace568-240a-4e82-857b-4669820dab60",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c168853c-fe05-40d6-a76b-025e3977baf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3527c1af-f60f-4434-aa36-14f909d1523a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c29021d3-e4b5-411e-a0f7-6697f2e7fae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fba441c2-dae5-4a0f-831b-70125e387255",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2dabc7b-deb3-4a83-bd7d-567926b35af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "abd5e45f-9de9-4519-a453-74b36159b759",
      "documentation": "<p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "delete",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "cbd1466b-2a45-4e42-a267-6b14a1c1278c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42e3da31-7e8d-478f-83ff-3cf3bc718176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df0694f4-bbe7-479f-817d-b62b07990342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e00f2617-0b88-4b19-9939-49e662307f58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be1bda10-5955-48b1-9654-7b6d98490301",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba7c64c9-3314-4b3e-864e-941d18923e3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5be33304-8c4d-4b63-b0f9-aaddec7498bf",
      "documentation": "<p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "62ab276c-4260-448c-b6af-8eb25023a093",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'datatype.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a437413d-7152-4d79-82a4-04854dc47e82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e2b4bfc-65b8-4b67-a1d3-0bebc35f33f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22ab823e-0326-4b27-b4ec-7d3ec475b8a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11accc85-7b9a-4d70-854f-650bbd5f2e33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "746388db-2e5d-424d-9176-40fe39c5c405",
      "documentation": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>",
      "method": "put",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "48543861-f421-45aa-ab92-4b759dd713b9",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'datatype.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf8d9bfc-9691-4382-8d54-ed60d5312bcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea4e68cd-9edc-4bbc-a310-a91d9645bf25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0199222-4792-4b10-a96c-03443a4f071b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28f2298e-6cb1-4a33-9204-d5842c9152e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6a9672f-88c5-40b1-89aa-be001cb2f752",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a36768ad-a16f-4a28-8dad-e8f365594225",
      "documentation": "<p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "post",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "318a650f-9d93-4d86-be43-93a1f19339ee",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'datatype.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5279733a-9b71-46d2-bca2-77a647fb2be1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7f45d45-b54a-47e3-b2d2-9884569a9200",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b3056ed-8d6a-42be-ada2-0a540a730d92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c0c66c4-149c-4b2b-a1f9-21368fb1ab9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "018de663-0d3f-4192-9bbb-805433ca6680",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bad5734d-2660-4414-a4c9-1d0255fc256b",
      "documentation": "Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "46637867-8e34-4833-8492-793be3fe73a6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92ca7f27-167d-4475-92d6-6510c892e9fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb2d61e6-a791-4019-88d5-f54062d2e4a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "29eb631d-bc7c-4aff-b769-916ef554d701",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "396b0ba4-36a3-4ef5-8876-a93eb2a08615",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'datatype.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'datatype.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21231713-9df3-4332-b052-d9301318bf89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b150163-3b98-480e-90f7-87586df11bca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ecfe67b-0d48-414d-aee3-9c8f03e99b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d838bdb-c866-4f79-b464-a7985925aa9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6716e00-055a-4764-bd28-aa88e6bf6142",
      "documentation": "Deletes the provisioned concurrency configuration for a function.",
      "method": "delete",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "b0eac8c9-c326-4fa6-880d-8d0f06cd030e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d64dbdf-460d-4a0a-86bd-c64a2fe2d517",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51fb2965-c1f7-43d5-9e90-46f334e60b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4c0d64d-7b50-4c48-8439-77b3853c547b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98ed9295-16f0-442c-99a7-9c8b729cc7c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "620cd7b8-10df-4e5b-bd18-8262210498f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e702b202-3bdc-466e-a51d-c60a9b203709",
      "documentation": "Retrieves the provisioned concurrency configuration for a function's alias or version.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "7d112020-4e7a-47a1-89cd-82f62af779b2",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee93939e-9920-4c27-a6ee-8023fd5e57dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9751db5-4f42-4e88-9b6d-c7d224e41012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f50809c1-3363-4a3f-a82c-d01fd21f610f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b66b9a3-5efb-49a9-84c5-7e212bb1def1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e45ff9e-742b-4cef-92d8-44ebd50fe657",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ProvisionedConcurrencyConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27d3f5c3-9cdf-4d7a-9632-1b081bc09f1b",
      "documentation": "Adds a provisioned concurrency configuration to a function's alias or version.",
      "method": "put",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "30465619-8d49-41a8-b62a-2b42ab6fbe29",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "862feaa1-b60e-468f-a3b1-f567e1e0603a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c44ce23-d443-4726-b2c2-322299d6f445",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "078e469a-6b87-4064-8244-b92e87962fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4d7fa19-96c5-472d-8b60-8770894dd8d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "261611c2-d3d9-45f4-a934-41323d626210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "555872f8-233d-4b16-bb03-6487517b9223",
      "documentation": "Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an Amazon Web Services Region.",
      "method": "get",
      "endpoint": "2016-08-19/account-settings/",
      "responses": [
        {
          "uuid": "c56f7707-d1f3-4427-b4ca-ae2557f2a679",
          "body": "{\n  \"AccountLimit\": {\n    \"TotalCodeSize\": {{faker 'datatype.number'}},\n    \"CodeSizeUnzipped\": {{faker 'datatype.number'}},\n    \"CodeSizeZipped\": {{faker 'datatype.number'}},\n    \"ConcurrentExecutions\": {{faker 'datatype.number'}},\n    \"UnreservedConcurrentExecutions\": {{faker 'datatype.number'}}\n  },\n  \"AccountUsage\": {\n    \"TotalCodeSize\": {{faker 'datatype.number'}},\n    \"FunctionCount\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2af50c6d-3ca5-482c-9780-a02515c19d35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a668013c-56d4-4423-8e86-add657c521ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a193dfc-46c4-471c-9e02-dccb1e9e6d06",
      "documentation": "Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "6358e543-6e73-4a1d-aec8-000fa11da25b",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d413d062-ce25-4782-8913-c0091cdd2336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5232bbc1-d83f-4200-9ce5-c48776b30516",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67fff1c2-aef1-4b1c-b35f-50fc700fe132",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26aaf378-42c4-4f3f-b644-4aee7d4ebb31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e211848d-ccf4-4edb-8190-4b2f08d3cc5e",
      "documentation": "<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "9bcc12f5-f901-48ae-ac08-87f687ee0efa",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'datatype.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MemorySize\": {{faker 'datatype.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cba41082-f7b5-474d-8c57-4f046c1bd9be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97a3682f-c1e1-4072-859f-a1fbb18f151e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12659d66-eaec-4911-97e1-475b25b93198",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed403445-0863-40b3-99f7-bbac6de045a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3331dc18-c838-459f-963b-e936ecee4c8c",
      "documentation": "<p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or Amazon Web Services service, use <a>AddPermission</a>.</p>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "3b6793ef-e93a-4531-8ab3-5f95bea589d7",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'datatype.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MemorySize\": {{faker 'datatype.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "806596f3-3bc4-4104-a8ef-97c56dfad863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb009404-ab77-4b94-8e79-c104855275d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03cfa830-091d-4672-87a2-3094dca15707",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8fae2b9-6779-4fa4-a137-e2f3b5edd58a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7e437ed-dc06-44de-94af-e24d7255ab46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcc5a515-523d-4752-a2d2-2accf26c0603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ad3ed4f-a252-46b1-9481-7966e289cac8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80eebef7-cdf5-4a36-be6d-05affe2c25bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8743d855-22b2-4314-8bc8-71e30ac906ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f898d8f-d23b-4d92-9c87-d01cfbbb26d5",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers#find=LayerVersion&Arn",
      "responses": [
        {
          "uuid": "037576f2-b8d4-498b-9678-e71b48365296",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'datatype.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'datatype.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22c5d8dd-6608-4584-a086-ed7b9b41f0d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abb6a1b5-03d9-4dac-b68f-e99b1a003040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a192524b-9c33-4b7d-8f8b-687bbea855e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c09c1051-0acb-423c-9828-1dc5688dbba1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1950b33b-d6ae-42da-a540-93cfe3a09ad4",
      "documentation": "<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>, Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p> <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/invocations",
      "responses": [
        {
          "uuid": "2d95c091-d3e5-478b-a749-9b36c20a1996",
          "body": "{\n  \"StatusCode\": {{faker 'datatype.number'}},\n  \"Payload\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3821444-44e8-419d-8668-794e4fd8b5ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a1d8797-7b20-4409-b085-87521e707c7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43f91c0f-e1a1-4083-9d57-fc9a1d0021aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b26abde-c42e-4b98-854e-b849e7815fcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RequestTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a20e97c8-b59c-4397-8ae8-434485e221e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedMediaTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab51a2d2-ef28-4fae-b1a2-225af8f5bfcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5b516c1-aaa7-41da-98b4-39c7d9d1f56d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28c5f857-529a-41dc-bfb7-61ef8aa2650e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EC2UnexpectedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e332fe5-f046-4620-9aa0-664d52916d87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "SubnetIPAddressLimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2de36aca-af9d-4036-a429-00e098d08c60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ENILimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41645b9b-116a-4a35-9865-395441729311",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EFSMountConnectivityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2190c52e-f8cf-497d-8a1b-9c61ff1f9d2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EFSMountFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68bcda85-169d-4947-b623-cc86ae59091f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EFSMountTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4f904f8-a900-4b28-86b3-299d238cf3a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EFSIOException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6da15254-55ee-4433-8361-015039af717a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EC2ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0632fac-55ef-417d-8f6a-48635ba97904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EC2AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9157a303-2b14-4a1a-8b33-dff0c6bb03a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidSubnetIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6055bb38-508c-4128-8238-fe63d1d723ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidSecurityGroupIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd7c12e3-b1fe-4335-a141-5ec55ae1a902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidZipFileException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6815b546-0ea3-47b5-940b-84eb9c59184c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "KMSDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b89d8d98-6e5f-4d43-8abd-8a7f0725d72b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "KMSInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d21e98f1-f9e6-43b6-aa57-11035e9138f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "KMSAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09a331ef-9d49-459a-9307-1d0692f59b8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "KMSNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "635b9d44-0a90-410e-8e69-9cb7f14b9f0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e71b1611-351a-434f-9e8b-f93243f4dd8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c87c984-83cc-43ce-9685-72fab785b859",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "ResourceNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93362164-475d-47c8-bcd5-86dc0e42ca8f",
      "documentation": "<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>",
      "method": "post",
      "endpoint": "2014-11-13/functions/:FunctionName/invoke-async/",
      "responses": [
        {
          "uuid": "ba7e61b7-2457-42ce-bb75-409cf27e3f81",
          "body": "{\n  \"Status\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4bc5931f-f4db-4312-b182-d43d6d686470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eadfcf34-72d0-441c-b221-1405f8c3a5ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2029caa2-9c05-4d3c-9604-78f7f78ad07a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8913a416-65ed-43ea-ac0d-df7dbce81023",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19c791f2-e144-48bf-b9dd-6e9aa6c3d951",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "781053a0-aa05-4039-b03c-739140d0778d",
      "documentation": "<p>Retrieves a list of configurations for asynchronous invocation for a function.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config/list",
      "responses": [
        {
          "uuid": "37fb2995-88f6-49af-b876-f653abfeaf6c",
          "body": "{\n  \"FunctionEventInvokeConfigs\": [\n    {\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"FunctionArn\": \"\",\n      \"MaximumRetryAttempts\": {{faker 'datatype.number'}},\n      \"MaximumEventAgeInSeconds\": {{faker 'datatype.number'}},\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4440167a-cb0b-486b-a3bb-8d3544f5da61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4316c00-e9d6-4522-b594-c65929877bb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf6f7c4d-f7b4-4b8b-b243-a80edbb1d0e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d02388e-14f4-4d97-be40-583a4792ef9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35a427ba-934a-481c-9e70-a17e8d0763ef",
      "documentation": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>",
      "method": "get",
      "endpoint": "2015-03-31/functions/",
      "responses": [
        {
          "uuid": "b4307ba0-6f0b-4cb9-a67a-7bcb2c726e22",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Functions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MemorySize\": {{faker 'datatype.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'datatype.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "723b91b5-688d-48ee-8bb9-798d46815932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90b5da90-f084-4dc0-be5b-7241309ab8c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60b20db2-1756-476b-ad7d-cb08b37da427",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "da9c0523-52e8-4cbc-ad9b-c763defc6e46",
      "documentation": "List the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn/functions",
      "responses": [
        {
          "uuid": "0648f1aa-51b9-4e71-bf9d-da52c3dadfd4",
          "body": "{\n  \"NextMarker\": \"\",\n  \"FunctionArns\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67f8b965-9eb4-4b52-81ab-dce25d009f7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bcfe668-ce81-4788-ba21-bd0f0d1089cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b3f972b-4cbb-4942-bfe4-e77bce6589dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7e8b375b-395b-4638-b536-dd1a15a6b216",
      "documentation": "Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only versions that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "4a5310ee-1415-44b7-8d3b-9585ff89e84b",
          "body": "{\n  \"NextMarker\": \"\",\n  \"LayerVersions\": [\n    {\n      \"LayerVersionArn\": \"\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Description\": \"\",\n      \"CreatedDate\": \"\",\n      \"CompatibleRuntimes\": [\n        \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n      ],\n      \"LicenseInfo\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6587c0a5-00eb-4f93-92c3-90c38d7bd168",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e729ed8b-d6a9-4ea3-8991-32998e156333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3289e344-cfc6-4ba2-9dd3-a3e6141e0198",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4c60d2d-2cea-451e-bb1a-d1bd73767aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d31c920-1f19-4896-86a4-8f6f7b7b126d",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "a07a2649-fccd-4207-94c6-1553a2b6693e",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'datatype.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'datatype.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f83a5e19-1c07-4d72-8aa1-7f499962df43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47c62c61-1706-40f9-9a4e-1e1a079fe703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "217cca3a-74f6-4d0c-a734-249c2a65ca93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1249f3ae-8d33-449e-9f27-fbf88beecd05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a65e8579-d106-48c6-af27-9638a0369a16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "414fc3d5-5e5e-4231-858b-3e78a1f7e91c",
      "documentation": "Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers",
      "responses": [
        {
          "uuid": "f15bcfb9-f12f-4678-b3c8-b04c22559da4",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Layers\": [\n    {\n      \"LayerName\": \"\",\n      \"LayerArn\": \"\",\n      \"LatestMatchingVersion\": {\n        \"LayerVersionArn\": \"\",\n        \"Version\": {{faker 'datatype.number'}},\n        \"Description\": \"\",\n        \"CreatedDate\": \"\",\n        \"CompatibleRuntimes\": [\n          \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n        ],\n        \"LicenseInfo\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73d3ec46-64c3-40eb-9503-a23460a4aeb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64f9b87d-175b-4ca7-a965-033b073d564e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93660cd8-23bf-46a4-a0aa-7e9a966a66bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "117e504b-d9ec-43dc-a372-9ae0193efe19",
      "documentation": "Retrieves a list of provisioned concurrency configurations for a function.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#List=ALL",
      "responses": [
        {
          "uuid": "096b05d4-8e2a-4ba0-aeb1-a50dcdac57d3",
          "body": "{\n  \"ProvisionedConcurrencyConfigs\": [\n    {\n      \"FunctionArn\": \"\",\n      \"RequestedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n      \"AvailableProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n      \"AllocatedProvisionedConcurrentExecutions\": {{faker 'datatype.number'}},\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"LastModified\": \"\"\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a2e4489-9bf4-4246-bfb0-0bee59738649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88effa75-50a9-42d0-abf4-2dc71ea363fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b43e83c0-c04c-4a8c-8760-e031fa999225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2de8b90-ce15-4989-82d1-088deae49dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b294497e-c488-4d41-9a15-c1fa37b8fce7",
      "documentation": "Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can also view tags with <a>GetFunction</a>.",
      "method": "get",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "5b9f954a-e33c-4cf6-a680-6d130ed11e3c",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "152de02e-9078-4d58-9831-1a74e849cf67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d09db056-e3bd-4ec6-b291-09d07c470e0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "103865fb-c23a-4172-a372-408741eec3d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05d7920c-7d0f-4f51-826a-ddc22002ee43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6fa8ca7-5b03-487d-a509-f6e7dd3a9b9d",
      "documentation": "Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.",
      "method": "post",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "cca6ddc6-b348-4af9-baaf-10be248bec87",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e107676-4312-44ae-94ad-4b0416ca7fab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80f6e564-cb53-4f52-9268-833d69cfea88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ba9beb5-1e5c-4442-9eb9-440ffaabd960",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8f61815-d173-439b-acee-544aed4030ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c71cb589-4893-4402-bc34-7d9728f3169e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af6e8d2c-d321-473a-b2d3-2b8ec18aa26c",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>, with the version-specific configuration of each. Lambda returns up to 50 versions per call.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "46913493-b27e-4b6c-a8a9-cb49add13808",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Versions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MemorySize\": {{faker 'datatype.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'datatype.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26132ceb-2885-4d3a-a580-003a3b2c90d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6340d50-c7eb-4b18-840e-198fb27c2a8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "203875fb-3ccb-46b7-aa0c-9d5d36ea641b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de1dbff7-59c2-4b1b-8827-c9a9cc16c45a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "84712c32-4f02-4bfe-b711-6455f67c0814",
      "documentation": "<p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.</p> <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "d4fad79f-dc16-460e-92aa-608954506d29",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'datatype.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MemorySize\": {{faker 'datatype.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b381df0e-e007-40ce-b88a-1431eccf294b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab8a4182-6103-4831-93b2-14be41781c26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed0c54cb-ab1c-43d1-ad5b-0765b2dda094",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "afd0a552-64ab-4f93-888d-c45ed62cb3c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "deecb094-65d7-4093-99a6-b9c951ce9ef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f2405fb-85d8-46d6-8817-1370e101ad76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49c57038-0779-4619-9887-15165bcbfa0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9ea596b-0903-4889-8805-1acb5fb1b8e2",
      "documentation": "Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy/:StatementId",
      "responses": [
        {
          "uuid": "761f6189-bb6a-4318-bf87-7d036878e47f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1309cb7-7e36-45b3-a756-676e1cdc27d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bbf992f-bb66-4ae6-8285-78bcefb8ed21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4891923-58e0-440b-85b8-fa0edda0a1c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2dac80c4-fa90-43de-8fe2-f50687fa4688",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1071406c-956b-4e36-abfa-c694cb2818fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c93b1092-76f0-404f-af81-51aae353aeff",
      "documentation": "Revokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/policy/:StatementId",
      "responses": [
        {
          "uuid": "62d4732a-a494-4c7c-a870-142c26b705c5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71d2cc5f-84c2-4475-b2cf-c9dd17f9c35f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9e088f4-62d5-41a5-a162-029db0886f53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12b6ea0b-71bc-4813-9473-cfafdb90f7de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "526a6ce4-1002-4779-937d-dd2feb55b2e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90aa4e01-64b5-4f6c-9f1a-659020f8766f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db3a3b81-c2d1-47d3-821a-468b7ccaabce",
      "documentation": "Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.",
      "method": "delete",
      "endpoint": "2017-03-31/tags/:ARN#tagKeys",
      "responses": [
        {
          "uuid": "31e07353-050f-416a-b9e7-5cd0062d7802",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a7bd6fd-8471-40e2-b489-0d48335d8506",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a61f6c4-257b-4a28-b774-49178b11e8e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a4e8fdd-8f94-43a3-a2b2-bda6f8efa9a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc5ebb75-d471-434b-bba1-06d93231b613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8db50594-220b-44e1-93f8-67248c198b11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3541f8cb-627b-4514-9549-05d8be8bfc2c",
      "documentation": "<p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">Configuring code signing</a>.</p> <p>The function's code is locked when you publish a version. You can't modify the code of a published version, only the unpublished version.</p> <note> <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.</p> </note>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/code",
      "responses": [
        {
          "uuid": "91f6416c-0948-4c87-a081-f45a930f4896",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'datatype.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MemorySize\": {{faker 'datatype.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'datatype.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "60436f80-830f-41b2-8f7a-b7b12d03d3dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a701a07-b9df-43ab-9bef-adfb41611a04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec772298-7985-4588-8f43-b439ee41ce3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4b8b8d9-b570-4237-8c40-19645c09df00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca030ffd-c509-42dc-a8ea-d290beee019d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "408e54ca-38b3-41c0-8b85-ba9688e2ff88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fe82e3f-b5fd-483d-aa92-226ae65abf5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a4632d6-408b-49c7-b203-f4b179aeb3e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e343bbc5-7637-4d15-ac1b-a694b16fc02b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81983b1d-d083-4782-b91b-c8ee0944f72d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}