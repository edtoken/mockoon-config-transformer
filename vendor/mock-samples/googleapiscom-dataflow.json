{
  "uuid": "fc5141ba-df95-40cd-a4ab-3cb3a1afaeb2",
  "lastMigration": 24,
  "name": "Dataflow API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5484bac3-0cff-4425-812f-39cad56d5ad0",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/WorkerMessages",
      "responses": [
        {
          "uuid": "97c35247-b89d-4ba6-90b0-83611d6d2d65",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2729751-d280-478b-bc25-9ce2f56b7cb5",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "4429a660-242f-49c8-9d8b-64b0b527cc1c",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'datatype.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'datatype.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n            \"numWorkers\": {{faker 'datatype.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'datatype.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'datatype.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'datatype.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'datatype.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'datatype.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ],\n        \"stepNamesHash\": \"\"\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb9c69b5-69e3-44fb-a5cc-3ce6dc380094",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "b6149e6f-d109-48b7-8d6f-cc1571c3ed70",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b2f72ef-ccb2-4a9a-8859-bb08f3c902dc",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "c642142b-1527-4c59-9269-0f6e8f8cc0bc",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "34b5ca87-01e5-4cc8-a6ee-2fc3a2fadf93",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "1cca1cf6-39f6-4e9a-bb82-0dfb3a2652a5",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dcbfe475-775f-40cc-8c62-4f0a6e234dec",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "0bda5f78-e005-43de-87a9-59f33a85ff6c",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25e3fc12-68a5-4cec-829c-9b5c946f2ad6",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "985ce99d-4e1a-4cc7-ab4c-1ffeebb15892",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f85f044-d75a-4841-b501-3ffd0ece8751",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "54ece825-d949-4576-be0e-2ff326678563",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8bb820e-4791-454f-8878-b9718c097196",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "4a7dc13a-16c6-497f-82b7-cb54bac024b1",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'datatype.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80f40694-1654-4c43-b450-269188bc599a",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "b839f9c9-0340-485f-8078-5a92a34c76e9",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'datatype.number'}},\n                  \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'datatype.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'datatype.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'datatype.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'datatype.boolean'}},\n                        \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'datatype.boolean'}},\n                        \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'datatype.boolean'}},\n                  \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'datatype.boolean'}},\n                  \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'datatype.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'datatype.boolean'}},\n              \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'datatype.boolean'}},\n              \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'datatype.number'}},\n                      \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'datatype.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'datatype.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'datatype.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'datatype.boolean'}},\n                            \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'datatype.boolean'}},\n                            \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'datatype.boolean'}},\n                      \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'datatype.boolean'}},\n        \"receiveWorkPort\": {{faker 'datatype.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'datatype.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'datatype.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'datatype.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'datatype.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'datatype.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'datatype.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'datatype.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'datatype.number'}},\n          \"persistentStateVersion\": {{faker 'datatype.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'datatype.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01e9c0e8-29ad-40b0-800e-899d43606f2a",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "cbe89b71-bd59-4202-b10b-b56a55baa063",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fcfad117-6d94-4de1-a222-5168ca41e7c6",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "06fd81d5-ca98-44f6-8984-f99fbef08a88",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd1db0f6-7a67-402c-acc6-2c106413b232",
      "documentation": "List the jobs of a project across all regions.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs:aggregated",
      "responses": [
        {
          "uuid": "c415f683-99cc-4ad5-a9d3-6befadb6e3a5",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'datatype.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'datatype.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n            \"numWorkers\": {{faker 'datatype.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'datatype.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'datatype.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'datatype.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'datatype.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'datatype.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ],\n        \"stepNamesHash\": \"\"\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "012bf3d5-68b8-4481-83c0-6652675982f8",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/WorkerMessages",
      "responses": [
        {
          "uuid": "d5cac2d7-d933-4dc4-abe9-2d07be3847c0",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e75da103-5949-4d6f-8709-e815d26ce96e",
      "documentation": "Launch a job with a FlexTemplate.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/flexTemplates:launch",
      "responses": [
        {
          "uuid": "07c1b406-44cf-4ffe-ad8d-2d0abf30d24a",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'datatype.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'datatype.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n          \"numWorkers\": {{faker 'datatype.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'datatype.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'datatype.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'datatype.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'datatype.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'datatype.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'datatype.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'datatype.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ],\n      \"stepNamesHash\": \"\"\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99437b5e-a5c1-4ab9-87d7-a3328954fe53",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "95e5ba09-453c-4e43-8dc6-51934fdd4de3",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'datatype.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'datatype.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n            \"numWorkers\": {{faker 'datatype.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'datatype.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'datatype.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'datatype.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'datatype.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'datatype.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ],\n        \"stepNamesHash\": \"\"\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7aa63ffd-0217-4337-9411-2ad703b6d574",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "359043d6-0f72-4ed5-865e-d00f956aece9",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b344df2b-feba-407a-b292-0dd390c6dcc1",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "41c3b626-e271-48ee-8e63-72d33ff3a802",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "adb95bc0-566a-429b-8307-a93f6a05d596",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "d884d88f-4f9a-4f34-9221-cdef2c98cfda",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c99e13e-79a3-4824-afe9-04c01d8e3b5d",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "718d4bdc-eae8-40b7-9295-04765892bf42",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "728867a9-88f3-482e-b7f7-56eff9ff8858",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "b281d29e-8906-47af-b8ea-88a7bcaf5ac2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3dbfb179-c26b-4320-b8ea-99d33a34d4b1",
      "documentation": "Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/executionDetails",
      "responses": [
        {
          "uuid": "9f530ab3-53cc-42ef-9207-072498745e02",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"stages\": [\n    {\n      \"endTime\": \"\",\n      \"metrics\": [\n        {\n          \"cumulative\": {{faker 'datatype.boolean'}},\n          \"distribution\": \"\",\n          \"gauge\": \"\",\n          \"internal\": \"\",\n          \"kind\": \"\",\n          \"meanCount\": \"\",\n          \"meanSum\": \"\",\n          \"name\": {\n            \"context\": {},\n            \"name\": \"\",\n            \"origin\": \"\"\n          },\n          \"scalar\": \"\",\n          \"set\": \"\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"progress\": {\n        \"currentProgress\": {{faker 'datatype.float'}},\n        \"dataPoints\": [\n          {\n            \"time\": \"\",\n            \"value\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"stageId\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\",\n      \"stragglerSummary\": {\n        \"stragglerCauseCount\": {},\n        \"totalStragglerCount\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f5e16da-4732-4635-8b7b-697cdafac0db",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "19766695-285a-4d6e-a6fc-a0699d5f7724",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8512427c-1cd3-4128-8dd3-593c0bb49b81",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "3d3eb000-7968-4f89-be35-05a592161afc",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'datatype.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d60ba6c9-fc27-4356-adcf-27bb90c18fdf",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/snapshots",
      "responses": [
        {
          "uuid": "ba2a2e8a-251a-4c4c-9a83-708d9812e9c5",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c922933-e1d2-4bd4-930e-fbfc4ed1c40d",
      "documentation": "Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/stages/:stageId/executionDetails",
      "responses": [
        {
          "uuid": "f0792989-4c67-4d1d-9003-f1c276ac69fd",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"workers\": [\n    {\n      \"workItems\": [\n        {\n          \"attemptId\": \"\",\n          \"endTime\": \"\",\n          \"metrics\": [\n            {\n              \"cumulative\": {{faker 'datatype.boolean'}},\n              \"distribution\": \"\",\n              \"gauge\": \"\",\n              \"internal\": \"\",\n              \"kind\": \"\",\n              \"meanCount\": \"\",\n              \"meanSum\": \"\",\n              \"name\": {\n                \"context\": {},\n                \"name\": \"\",\n                \"origin\": \"\"\n              },\n              \"scalar\": \"\",\n              \"set\": \"\",\n              \"updateTime\": \"\"\n            }\n          ],\n          \"progress\": {\n            \"currentProgress\": {{faker 'datatype.float'}},\n            \"dataPoints\": [\n              {\n                \"time\": \"\",\n                \"value\": {{faker 'datatype.float'}}\n              }\n            ]\n          },\n          \"startTime\": \"\",\n          \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\",\n          \"stragglerInfo\": {\n            \"causes\": {},\n            \"startTime\": \"\"\n          },\n          \"taskId\": \"\"\n        }\n      ],\n      \"workerName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d83744b-d9c4-4ad1-9ccd-09cca62a0416",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "ef1703a4-7202-4b20-88c3-4e6a89661432",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'datatype.number'}},\n                  \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'datatype.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'datatype.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'datatype.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'datatype.boolean'}},\n                        \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'datatype.boolean'}},\n                        \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'datatype.boolean'}},\n                  \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'datatype.number'}},\n                \"producerInstructionIndex\": {{faker 'datatype.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'datatype.boolean'}},\n                  \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'datatype.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'datatype.boolean'}},\n              \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'datatype.boolean'}},\n              \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'datatype.number'}},\n                      \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'datatype.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'datatype.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'datatype.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'datatype.boolean'}},\n                            \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'datatype.boolean'}},\n                            \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'datatype.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'datatype.boolean'}},\n                      \"producesSortedKeys\": {{faker 'datatype.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'datatype.number'}},\n                    \"producerInstructionIndex\": {{faker 'datatype.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'datatype.boolean'}},\n        \"receiveWorkPort\": {{faker 'datatype.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'datatype.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'datatype.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'datatype.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'datatype.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'datatype.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'datatype.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'datatype.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'datatype.number'}},\n          \"persistentStateVersion\": {{faker 'datatype.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'datatype.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a19d1ab-351a-4424-ab04-29923df9ab41",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "a13ced33-79f3-405a-9639-f849b41c0c42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dad346e6-d4aa-4335-b5c4-4ce41b39a011",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "faaa3981-2240-4488-a535-c32e726b7467",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44b0e4e2-0f2c-4356-a68e-9ddc59ffa77e",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots",
      "responses": [
        {
          "uuid": "e068c8a0-28e1-49eb-abcd-94c004b84423",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab357c25-1b91-4295-b82f-2c1c8fdb3369",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "61401b33-a991-4f30-a4a0-029a53b92b3c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "581d2375-01cd-480f-a805-c9858a5aa891",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "47c5d9d9-d8a5-432a-b2fc-a99c1d6a28e2",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "463624be-b46f-4cf6-9cad-6dc6cfe01d10",
      "documentation": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm the given query parses correctly, and if able to look up schema information from DataCatalog, will validate that the query analyzes properly as well.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/sql:validate",
      "responses": [
        {
          "uuid": "9f5f9a03-4f0e-4f58-87a7-ecb64d2b7a61",
          "body": "{\n  \"errorMessage\": \"\",\n  \"queryInfo\": {\n    \"queryProperty\": [\n      \"{{oneOf (array 'QUERY_PROPERTY_UNSPECIFIED' 'HAS_UNBOUNDED_SOURCE')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12cf3d16-362c-48bd-91d0-7d2bb4900825",
      "documentation": "Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates",
      "responses": [
        {
          "uuid": "ef8f243a-40cc-4402-816b-0d10dd9de3fa",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "197a9024-3115-450c-bd8c-c5e46f789ce3",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:get",
      "responses": [
        {
          "uuid": "acb52ba4-e3c0-44fc-8344-be757ac6f541",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'datatype.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'datatype.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON' 'GO')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "321fac8e-e0e9-42a5-a5fe-08420f360074",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:launch",
      "responses": [
        {
          "uuid": "0cf92de2-4668-4f95-9f3f-9465190e8fb4",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'datatype.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'datatype.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n          \"numWorkers\": {{faker 'datatype.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'datatype.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'datatype.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'datatype.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'datatype.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'datatype.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'datatype.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'datatype.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ],\n      \"stepNamesHash\": \"\"\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc538952-fbf1-48bb-94c3-34780e115a22",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "39f2eb14-1e7a-4d54-97db-4b58fc232238",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf79a044-6626-4d73-b533-b8673b66e116",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "77387663-ae79-46c2-afe1-8b2dd3f0a137",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aaa20f9a-efe4-4127-9bd4-88d912894259",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "36958a09-f624-4eed-9c36-5ecaffc644e7",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91751c6e-0fea-4773-9bc3-1daf35b37b93",
      "documentation": "Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates",
      "responses": [
        {
          "uuid": "c2125d57-5016-43d8-b05d-b840a53e05ff",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'datatype.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'datatype.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n        \"numWorkers\": {{faker 'datatype.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'datatype.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'datatype.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'datatype.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'datatype.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'datatype.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'datatype.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'datatype.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ],\n    \"stepNamesHash\": \"\"\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9683e6f5-3a6c-47ee-ab89-9f6c2b458b60",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/templates:get",
      "responses": [
        {
          "uuid": "d40ff8ed-6094-4834-bf58-89e6d724fc97",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'datatype.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'datatype.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON' 'GO')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f278cba6-2d89-451d-8f49-607e84cab59f",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates:launch",
      "responses": [
        {
          "uuid": "6c4332a8-282e-48ac-a3a7-3a89522924ac",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'datatype.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'datatype.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'datatype.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'datatype.number'}},\n          \"numWorkers\": {{faker 'datatype.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'datatype.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'datatype.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'datatype.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'datatype.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'datatype.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'datatype.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'datatype.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'datatype.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'datatype.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ],\n      \"stepNamesHash\": \"\"\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'datatype.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}