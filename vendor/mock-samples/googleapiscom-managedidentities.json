{
  "uuid": "7f19ca2f-e668-4925-aa3b-380ac8b8927f",
  "lastMigration": 24,
  "name": "Managed Service for Microsoft Active Directory API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9015d36e-79ed-4e95-9b83-b86f14e5beaf",
      "documentation": "CheckMigrationPermission API gets the current state of DomainMigration",
      "method": "post",
      "endpoint": "v1beta1/:domain:checkMigrationPermission",
      "responses": [
        {
          "uuid": "e776118f-6810-40e8-9f8c-1c78536688d2",
          "body": "{\n  \"onpremDomains\": [\n    {\n      \"name\": \"\",\n      \"sidFilteringState\": \"{{oneOf (array 'SID_FILTERING_STATE_UNSPECIFIED' 'ENABLED' 'DISABLED')}}\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'DISABLED' 'ENABLED' 'NEEDS_MAINTENANCE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d488cb0-1823-47ef-a53b-86d696b5feac",
      "documentation": "Disable Domain Migration",
      "method": "post",
      "endpoint": "v1beta1/:domain:disableMigration",
      "responses": [
        {
          "uuid": "99f91ef5-bc51-4e15-b443-d33c002224ea",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9ce7d69-0fbe-4b26-a0f1-d66af29d3717",
      "documentation": "Enable Domain Migration",
      "method": "post",
      "endpoint": "v1beta1/:domain:enableMigration",
      "responses": [
        {
          "uuid": "ed868227-6046-4e48-9d2a-652b3bb9980e",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3187ec18-6978-4338-90dc-3bb204f16092",
      "documentation": "Extend Schema for Domain",
      "method": "post",
      "endpoint": "v1beta1/:domain:extendSchema",
      "responses": [
        {
          "uuid": "c1f9c8d4-9c72-497a-a96f-d787639f42ff",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "111040dc-e7b7-4780-8fc0-9a9f3b63a7fb",
      "documentation": "Deletes identified Peering.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "e917c4a2-ac5c-4265-ba57-b0ffde269d78",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef134bcf-eebd-4179-800d-bb618a473396",
      "documentation": "Gets details of a single Peering.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "216d86b8-2e43-4d88-a724-45fc07ea64dc",
          "body": "{\n  \"authorizedNetwork\": \"\",\n  \"createTime\": \"\",\n  \"domainResource\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n  \"statusMessage\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5574b70-583c-4631-bd3d-93beeb9af440",
      "documentation": "Updates the labels for specified Peering.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "4ebe1722-2736-461c-a15e-6e362a427255",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8e0c04d3-f044-40a4-a3f9-4fa50d81ffa7",
      "documentation": "Gets the domain ldaps settings.",
      "method": "get",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "69873adc-d11f-41e2-a541-da3f5d21a98d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "448c7819-096d-4698-9cbe-a1c1c531c500",
      "documentation": "Patches a single ldaps settings.",
      "method": "patch",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "f9bfb456-918d-4919-aecc-f322bf39a061",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10305a64-8782-4619-911a-91ff5f10b566",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "90e4259c-9c99-4ee2-a694-9f72912d8a2c",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07b7948f-fe39-4cb4-9500-28eb6e1b5c72",
      "documentation": "Adds an AD trust to a domain.",
      "method": "post",
      "endpoint": "v1beta1/:name:attachTrust",
      "responses": [
        {
          "uuid": "4512fe47-6290-4e70-9430-59689aeafc14",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7811d8d4-ba7b-4c7a-8856-e7fe3d52ea73",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "9ee47ccf-9d68-439a-86f3-01a4e6832c0b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6169178-2a2d-4fb7-9527-81276ab405f6",
      "documentation": "Removes an AD trust.",
      "method": "post",
      "endpoint": "v1beta1/:name:detachTrust",
      "responses": [
        {
          "uuid": "594ee07d-f770-4dfb-8b03-b824c3d23fbb",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4b323e3-22a9-4e68-b482-f9b5df8f203d",
      "documentation": "Updates the DNS conditional forwarder.",
      "method": "post",
      "endpoint": "v1beta1/:name:reconfigureTrust",
      "responses": [
        {
          "uuid": "459855cc-28ca-44ad-b216-f7bf7fd9bdb3",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d681fd2-d6d3-41e3-844e-52b89eed092c",
      "documentation": "Resets a domain's administrator password.",
      "method": "post",
      "endpoint": "v1beta1/:name:resetAdminPassword",
      "responses": [
        {
          "uuid": "b68a53b9-475e-4511-839a-2773f870ddcf",
          "body": "{\n  \"password\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aba1e03c-0400-44f0-9e9b-924db98456f9",
      "documentation": "RestoreBackup restores domain mentioned in the RestoreBackupRequest",
      "method": "post",
      "endpoint": "v1beta1/:name:restore",
      "responses": [
        {
          "uuid": "5f18428b-6e4a-48fe-88e3-87f972fe9af3",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f4172b2-b8bd-491c-b624-519e90cf0be7",
      "documentation": "Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.",
      "method": "post",
      "endpoint": "v1beta1/:name:validateTrust",
      "responses": [
        {
          "uuid": "b904a5f3-709e-483d-b150-0542bcb083fa",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57e7b739-9202-4bc7-a72d-62e5e49d88dc",
      "documentation": "Lists Backup in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "e5848434-cbad-4abe-a136-2a88af81c664",
          "body": "{\n  \"backups\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'FAILED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'ON_DEMAND' 'SCHEDULED' 'SCHEMA_EXTENSION')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26a64d0a-5410-4ebb-b5d0-e786a14c8813",
      "documentation": "Creates a Backup for a domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "ebab1eb1-a1f5-498b-87ed-3e541ade9342",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "74347b5b-6b1e-4113-b4e0-68095083590a",
      "documentation": "Lists domains in a project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "4d703511-06d5-4d0b-8300-618ff9abdd69",
          "body": "{\n  \"domains\": [\n    {\n      \"admin\": \"\",\n      \"auditLogsEnabled\": {{faker 'datatype.boolean'}},\n      \"authorizedNetworks\": [\n        \"\"\n      ],\n      \"createTime\": \"\",\n      \"fqdn\": \"\",\n      \"labels\": {},\n      \"locations\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"reservedIpRange\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'READY' 'UPDATING' 'DELETING' 'REPAIRING' 'PERFORMING_MAINTENANCE' 'UNAVAILABLE')}}\",\n      \"statusMessage\": \"\",\n      \"trusts\": [\n        {\n          \"createTime\": \"\",\n          \"lastTrustHeartbeatTime\": \"\",\n          \"selectiveAuthentication\": {{faker 'datatype.boolean'}},\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'UPDATING' 'DELETING' 'CONNECTED' 'DISCONNECTED')}}\",\n          \"stateDescription\": \"\",\n          \"targetDnsIpAddresses\": [\n            \"\"\n          ],\n          \"targetDomainName\": \"\",\n          \"trustDirection\": \"{{oneOf (array 'TRUST_DIRECTION_UNSPECIFIED' 'INBOUND' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"trustHandshakeSecret\": \"\",\n          \"trustType\": \"{{oneOf (array 'TRUST_TYPE_UNSPECIFIED' 'FOREST' 'EXTERNAL')}}\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8a2041b-e19a-4bd4-acff-f4f20b7738b8",
      "documentation": "Creates a Microsoft AD domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "e02b2c14-d436-4604-8d8c-bc206aedf472",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be2fa351-79b0-4c5a-a50e-9af1d6f06530",
      "documentation": "Lists Peerings in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "94b977be-8adb-4803-93ef-73c663899150",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"peerings\": [\n    {\n      \"authorizedNetwork\": \"\",\n      \"createTime\": \"\",\n      \"domainResource\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25796247-94ea-4eec-9d93-31f9022db233",
      "documentation": "Creates a Peering for Managed AD instance.",
      "method": "post",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "70c093ab-84fe-427f-b37f-79965b751e51",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e21fe51e-cbcc-4e97-8f29-1a24253ed9df",
      "documentation": "Lists SqlIntegrations in a given domain.",
      "method": "get",
      "endpoint": "v1beta1/:parent/sqlIntegrations",
      "responses": [
        {
          "uuid": "6d9e7a1c-7207-4fe4-8d08-dcc135a2ba1a",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"sqlIntegrations\": [\n    {\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"sqlInstance\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'DELETING' 'READY')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ffe4064-127b-4474-8bd5-66490dfa896d",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "d53b5c2c-0bee-4047-99c8-d8f23fc29d1c",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2226561a-86a9-4aaf-935f-b86d241f09c1",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "e2e4d579-48fa-4152-939e-0f2e9377b399",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22340f64-975e-47ea-9c92-4d72151ef9eb",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "4ad831aa-b956-47b4-b93d-e6ae4c0a6c76",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}