{
  "uuid": "872903cb-05c0-4042-a98c-1f87aba0a8dd",
  "lastMigration": 24,
  "name": "Fulfillment API",
  "endpointPrefix": "sell/fulfillment/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9e406f61-e0f7-47ac-9970-2fe4228996fe",
      "documentation": "Use this call to search for and retrieve one or more orders based on their creation date, last modification date, or fulfillment status using the filter parameter. You can alternatively specify a list of orders using the orderIds parameter. Include the optional fieldGroups query parameter set to TAX_BREAKDOWN to return a breakdown of the taxes and fees. The returned Order objects contain information you can use to create and process fulfillments, including: Information about the buyer and seller Information about the order's line items The plans for packaging, addressing and shipping the order The status of payment, packaging, addressing, and shipping the order A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs A summary of applied taxes and fees, and optionally a breakdown of each Important: In this call, the cancelStatus.cancelRequests array is returned but is always empty. Use the getOrder call instead, which returns this array fully populated with information about any cancellation requests.",
      "method": "get",
      "endpoint": "order",
      "responses": [
        {
          "uuid": "27214aff-a988-4393-a711-af11c84a7c93",
          "body": "{\n  \"href\": \"\",\n  \"limit\": {{faker 'datatype.number'}},\n  \"next\": \"\",\n  \"offset\": {{faker 'datatype.number'}},\n  \"orders\": [\n    {\n      \"buyer\": {\n        \"taxAddress\": {\n          \"city\": \"\",\n          \"countryCode\": \"\",\n          \"postalCode\": \"\",\n          \"stateOrProvince\": \"\"\n        },\n        \"taxIdentifier\": {\n          \"issuingCountry\": \"\",\n          \"taxIdentifierType\": \"\",\n          \"taxpayerId\": \"\"\n        },\n        \"username\": \"\"\n      },\n      \"buyerCheckoutNotes\": \"\",\n      \"cancelStatus\": {\n        \"cancelRequests\": [\n          {\n            \"cancelCompletedDate\": \"\",\n            \"cancelInitiator\": \"\",\n            \"cancelReason\": \"\",\n            \"cancelRequestId\": \"\",\n            \"cancelRequestState\": \"\",\n            \"cancelRequestedDate\": \"\"\n          }\n        ],\n        \"cancelState\": \"\",\n        \"cancelledDate\": \"\"\n      },\n      \"creationDate\": \"\",\n      \"ebayCollectAndRemitTax\": {{faker 'datatype.boolean'}},\n      \"fulfillmentHrefs\": [\n        \"\"\n      ],\n      \"fulfillmentStartInstructions\": [\n        {\n          \"ebaySupportedFulfillment\": {{faker 'datatype.boolean'}},\n          \"finalDestinationAddress\": {\n            \"addressLine1\": \"\",\n            \"addressLine2\": \"\",\n            \"city\": \"\",\n            \"country\": \"\",\n            \"county\": \"\",\n            \"postalCode\": \"\",\n            \"stateOrProvince\": \"\"\n          },\n          \"fulfillmentInstructionsType\": \"\",\n          \"maxEstimatedDeliveryDate\": \"\",\n          \"minEstimatedDeliveryDate\": \"\",\n          \"pickupStep\": {\n            \"merchantLocationKey\": \"\"\n          },\n          \"shippingStep\": {\n            \"shipTo\": {\n              \"companyName\": \"\",\n              \"contactAddress\": {\n                \"addressLine1\": \"\",\n                \"addressLine2\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n                \"county\": \"\",\n                \"postalCode\": \"\",\n                \"stateOrProvince\": \"\"\n              },\n              \"email\": \"\",\n              \"fullName\": \"\",\n              \"primaryPhone\": {\n                \"phoneNumber\": \"\"\n              }\n            },\n            \"shipToReferenceId\": \"\",\n            \"shippingCarrierCode\": \"\",\n            \"shippingServiceCode\": \"\"\n          }\n        }\n      ],\n      \"lastModifiedDate\": \"\",\n      \"legacyOrderId\": \"\",\n      \"lineItems\": [\n        {\n          \"appliedPromotions\": [\n            {\n              \"description\": \"\",\n              \"discountAmount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"promotionId\": \"\"\n            }\n          ],\n          \"deliveryCost\": {\n            \"importCharges\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"shippingCost\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"shippingIntermediationFee\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"discountedLineItemCost\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"ebayCollectAndRemitTaxes\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"collectionMethod\": \"\",\n              \"ebayReference\": {\n                \"name\": \"\",\n                \"value\": \"\"\n              },\n              \"taxType\": \"\"\n            }\n          ],\n          \"giftDetails\": {\n            \"message\": \"\",\n            \"recipientEmail\": \"\",\n            \"senderName\": \"\"\n          },\n          \"itemLocation\": {\n            \"countryCode\": \"\",\n            \"location\": \"\",\n            \"postalCode\": \"\"\n          },\n          \"legacyItemId\": \"\",\n          \"legacyVariationId\": \"\",\n          \"lineItemCost\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"lineItemFulfillmentInstructions\": {\n            \"guaranteedDelivery\": {{faker 'datatype.boolean'}},\n            \"maxEstimatedDeliveryDate\": \"\",\n            \"minEstimatedDeliveryDate\": \"\",\n            \"shipByDate\": \"\"\n          },\n          \"lineItemFulfillmentStatus\": \"\",\n          \"lineItemId\": \"\",\n          \"listingMarketplaceId\": \"\",\n          \"properties\": {\n            \"buyerProtection\": {{faker 'datatype.boolean'}},\n            \"fromBestOffer\": {{faker 'datatype.boolean'}},\n            \"soldViaAdCampaign\": {{faker 'datatype.boolean'}}\n          },\n          \"purchaseMarketplaceId\": \"\",\n          \"quantity\": {{faker 'datatype.number'}},\n          \"refunds\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"refundDate\": \"\",\n              \"refundId\": \"\",\n              \"refundReferenceId\": \"\"\n            }\n          ],\n          \"sku\": \"\",\n          \"soldFormat\": \"\",\n          \"taxes\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"taxType\": \"\"\n            }\n          ],\n          \"title\": \"\",\n          \"total\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          }\n        }\n      ],\n      \"orderFulfillmentStatus\": \"\",\n      \"orderId\": \"\",\n      \"orderPaymentStatus\": \"\",\n      \"paymentSummary\": {\n        \"payments\": [\n          {\n            \"amount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"paymentDate\": \"\",\n            \"paymentHolds\": [\n              {\n                \"expectedReleaseDate\": \"\",\n                \"holdAmount\": {\n                  \"convertedFromCurrency\": \"\",\n                  \"convertedFromValue\": \"\",\n                  \"currency\": \"\",\n                  \"value\": \"\"\n                },\n                \"holdReason\": \"\",\n                \"holdState\": \"\",\n                \"releaseDate\": \"\",\n                \"sellerActionsToRelease\": [\n                  {\n                    \"sellerActionToRelease\": \"\"\n                  }\n                ]\n              }\n            ],\n            \"paymentMethod\": \"\",\n            \"paymentReferenceId\": \"\",\n            \"paymentStatus\": \"\"\n          }\n        ],\n        \"refunds\": [\n          {\n            \"amount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"refundDate\": \"\",\n            \"refundId\": \"\",\n            \"refundReferenceId\": \"\",\n            \"refundStatus\": \"\"\n          }\n        ],\n        \"totalDueSeller\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"pricingSummary\": {\n        \"adjustment\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"deliveryCost\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"deliveryDiscount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"fee\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"priceDiscountSubtotal\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"priceSubtotal\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"tax\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"total\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"program\": {\n        \"authenticityVerification\": {\n          \"outcomeReason\": \"\",\n          \"status\": \"\"\n        },\n        \"fulfillmentProgram\": {\n          \"fulfilledBy\": \"\"\n        }\n      },\n      \"salesRecordReference\": \"\",\n      \"sellerId\": \"\",\n      \"totalFeeBasisAmount\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"totalMarketplaceFee\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      }\n    }\n  ],\n  \"prev\": \"\",\n  \"total\": {{faker 'datatype.number'}},\n  \"warnings\": [\n    {\n      \"category\": \"\",\n      \"domain\": \"\",\n      \"errorId\": {{faker 'datatype.number'}},\n      \"inputRefIds\": [\n        \"\"\n      ],\n      \"longMessage\": \"\",\n      \"message\": \"\",\n      \"outputRefIds\": [\n        \"\"\n      ],\n      \"parameters\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"subdomain\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ef1b342-b838-4d59-97ff-c3134c4c8c5f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbf00f57-bfcd-44d4-95ca-22c68a2b417a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd4d7b1c-e9f0-4e4f-9fa2-c4277df6d74c",
      "documentation": "Use this call to retrieve the contents of an order based on its unique identifier, orderId. This value was returned in the getOrders call's orders.orderId field when you searched for orders by creation date, modification date, or fulfillment status. Include the optional fieldGroups query parameter set to TAX_BREAKDOWN to return a breakdown of the taxes and fees. The returned Order object contains information you can use to create and process fulfillments, including: Information about the buyer and seller Information about the order's line items The plans for packaging, addressing and shipping the order The status of payment, packaging, addressing, and shipping the order A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs A summary of applied taxes and fees, and optionally a breakdown of each",
      "method": "get",
      "endpoint": "order/:orderId",
      "responses": [
        {
          "uuid": "fb27e30e-de73-4ffb-9f5e-e508924a9158",
          "body": "{\n  \"buyer\": {\n    \"taxAddress\": {\n      \"city\": \"\",\n      \"countryCode\": \"\",\n      \"postalCode\": \"\",\n      \"stateOrProvince\": \"\"\n    },\n    \"taxIdentifier\": {\n      \"issuingCountry\": \"\",\n      \"taxIdentifierType\": \"\",\n      \"taxpayerId\": \"\"\n    },\n    \"username\": \"\"\n  },\n  \"buyerCheckoutNotes\": \"\",\n  \"cancelStatus\": {\n    \"cancelRequests\": [\n      {\n        \"cancelCompletedDate\": \"\",\n        \"cancelInitiator\": \"\",\n        \"cancelReason\": \"\",\n        \"cancelRequestId\": \"\",\n        \"cancelRequestState\": \"\",\n        \"cancelRequestedDate\": \"\"\n      }\n    ],\n    \"cancelState\": \"\",\n    \"cancelledDate\": \"\"\n  },\n  \"creationDate\": \"\",\n  \"ebayCollectAndRemitTax\": {{faker 'datatype.boolean'}},\n  \"fulfillmentHrefs\": [\n    \"\"\n  ],\n  \"fulfillmentStartInstructions\": [\n    {\n      \"ebaySupportedFulfillment\": {{faker 'datatype.boolean'}},\n      \"finalDestinationAddress\": {\n        \"addressLine1\": \"\",\n        \"addressLine2\": \"\",\n        \"city\": \"\",\n        \"country\": \"\",\n        \"county\": \"\",\n        \"postalCode\": \"\",\n        \"stateOrProvince\": \"\"\n      },\n      \"fulfillmentInstructionsType\": \"\",\n      \"maxEstimatedDeliveryDate\": \"\",\n      \"minEstimatedDeliveryDate\": \"\",\n      \"pickupStep\": {\n        \"merchantLocationKey\": \"\"\n      },\n      \"shippingStep\": {\n        \"shipTo\": {\n          \"companyName\": \"\",\n          \"contactAddress\": {\n            \"addressLine1\": \"\",\n            \"addressLine2\": \"\",\n            \"city\": \"\",\n            \"country\": \"\",\n            \"county\": \"\",\n            \"postalCode\": \"\",\n            \"stateOrProvince\": \"\"\n          },\n          \"email\": \"\",\n          \"fullName\": \"\",\n          \"primaryPhone\": {\n            \"phoneNumber\": \"\"\n          }\n        },\n        \"shipToReferenceId\": \"\",\n        \"shippingCarrierCode\": \"\",\n        \"shippingServiceCode\": \"\"\n      }\n    }\n  ],\n  \"lastModifiedDate\": \"\",\n  \"legacyOrderId\": \"\",\n  \"lineItems\": [\n    {\n      \"appliedPromotions\": [\n        {\n          \"description\": \"\",\n          \"discountAmount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"promotionId\": \"\"\n        }\n      ],\n      \"deliveryCost\": {\n        \"importCharges\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"shippingCost\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"shippingIntermediationFee\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"discountedLineItemCost\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"ebayCollectAndRemitTaxes\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"collectionMethod\": \"\",\n          \"ebayReference\": {\n            \"name\": \"\",\n            \"value\": \"\"\n          },\n          \"taxType\": \"\"\n        }\n      ],\n      \"giftDetails\": {\n        \"message\": \"\",\n        \"recipientEmail\": \"\",\n        \"senderName\": \"\"\n      },\n      \"itemLocation\": {\n        \"countryCode\": \"\",\n        \"location\": \"\",\n        \"postalCode\": \"\"\n      },\n      \"legacyItemId\": \"\",\n      \"legacyVariationId\": \"\",\n      \"lineItemCost\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"lineItemFulfillmentInstructions\": {\n        \"guaranteedDelivery\": {{faker 'datatype.boolean'}},\n        \"maxEstimatedDeliveryDate\": \"\",\n        \"minEstimatedDeliveryDate\": \"\",\n        \"shipByDate\": \"\"\n      },\n      \"lineItemFulfillmentStatus\": \"\",\n      \"lineItemId\": \"\",\n      \"listingMarketplaceId\": \"\",\n      \"properties\": {\n        \"buyerProtection\": {{faker 'datatype.boolean'}},\n        \"fromBestOffer\": {{faker 'datatype.boolean'}},\n        \"soldViaAdCampaign\": {{faker 'datatype.boolean'}}\n      },\n      \"purchaseMarketplaceId\": \"\",\n      \"quantity\": {{faker 'datatype.number'}},\n      \"refunds\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"refundDate\": \"\",\n          \"refundId\": \"\",\n          \"refundReferenceId\": \"\"\n        }\n      ],\n      \"sku\": \"\",\n      \"soldFormat\": \"\",\n      \"taxes\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"taxType\": \"\"\n        }\n      ],\n      \"title\": \"\",\n      \"total\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      }\n    }\n  ],\n  \"orderFulfillmentStatus\": \"\",\n  \"orderId\": \"\",\n  \"orderPaymentStatus\": \"\",\n  \"paymentSummary\": {\n    \"payments\": [\n      {\n        \"amount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"paymentDate\": \"\",\n        \"paymentHolds\": [\n          {\n            \"expectedReleaseDate\": \"\",\n            \"holdAmount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"holdReason\": \"\",\n            \"holdState\": \"\",\n            \"releaseDate\": \"\",\n            \"sellerActionsToRelease\": [\n              {\n                \"sellerActionToRelease\": \"\"\n              }\n            ]\n          }\n        ],\n        \"paymentMethod\": \"\",\n        \"paymentReferenceId\": \"\",\n        \"paymentStatus\": \"\"\n      }\n    ],\n    \"refunds\": [\n      {\n        \"amount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"refundDate\": \"\",\n        \"refundId\": \"\",\n        \"refundReferenceId\": \"\",\n        \"refundStatus\": \"\"\n      }\n    ],\n    \"totalDueSeller\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"pricingSummary\": {\n    \"adjustment\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"deliveryCost\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"deliveryDiscount\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"fee\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"priceDiscountSubtotal\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"priceSubtotal\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"tax\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"total\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"program\": {\n    \"authenticityVerification\": {\n      \"outcomeReason\": \"\",\n      \"status\": \"\"\n    },\n    \"fulfillmentProgram\": {\n      \"fulfilledBy\": \"\"\n    }\n  },\n  \"salesRecordReference\": \"\",\n  \"sellerId\": \"\",\n  \"totalFeeBasisAmount\": {\n    \"convertedFromCurrency\": \"\",\n    \"convertedFromValue\": \"\",\n    \"currency\": \"\",\n    \"value\": \"\"\n  },\n  \"totalMarketplaceFee\": {\n    \"convertedFromCurrency\": \"\",\n    \"convertedFromValue\": \"\",\n    \"currency\": \"\",\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b724df8-70bb-46b9-811f-9697d537f1d8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e0c40a2-738b-4c7f-ad08-a2a5654f0e05",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a16229e4-7212-4c60-8fbc-ee8c6641fa37",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1907f586-ff05-4ee7-9000-3ede2d53bddf",
      "documentation": "Use this call to retrieve the contents of all fulfillments currently defined for a specified order based on the order's unique identifier, orderId. This value is returned in the getOrders call's members.orderId field when you search for orders by creation date or shipment status.",
      "method": "get",
      "endpoint": "order/:orderId/shipping_fulfillment",
      "responses": [
        {
          "uuid": "8c994ad3-7c56-4a4d-80f4-7e09fdd6ec57",
          "body": "{\n  \"fulfillments\": [\n    {\n      \"fulfillmentId\": \"\",\n      \"lineItems\": [\n        {\n          \"lineItemId\": \"\",\n          \"quantity\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"shipmentTrackingNumber\": \"\",\n      \"shippedDate\": \"\",\n      \"shippingCarrierCode\": \"\"\n    }\n  ],\n  \"total\": {{faker 'datatype.number'}},\n  \"warnings\": [\n    {\n      \"category\": \"\",\n      \"domain\": \"\",\n      \"errorId\": {{faker 'datatype.number'}},\n      \"inputRefIds\": [\n        \"\"\n      ],\n      \"longMessage\": \"\",\n      \"message\": \"\",\n      \"outputRefIds\": [\n        \"\"\n      ],\n      \"parameters\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"subdomain\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9fdac103-e2f5-4b0b-9609-bde8c20aee75",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "832b5eec-b2b6-4b04-801a-3956e2233170",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d836f2be-f55b-418b-9a80-b0884a2a6227",
      "documentation": "When you group an order's line items into one or more packages, each package requires a corresponding plan for handling, addressing, and shipping; this is a shipping fulfillment. For each package, execute this call once to generate a shipping fulfillment associated with that package. Note: A single line item in an order can consist of multiple units of a purchased item, and one unit can consist of multiple parts or components. Although these components might be provided by the manufacturer in separate packaging, the seller must include all components of a given line item in the same package. Before using this call for a given package, you must determine which line items are in the package. If the package has been shipped, you should provide the date of shipment in the request. If not provided, it will default to the current date and time.",
      "method": "post",
      "endpoint": "order/:orderId/shipping_fulfillment",
      "responses": [
        {
          "uuid": "df2710f2-7b33-46c8-a357-5e64a39e8028",
          "body": "{}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created. The call also returns the following location code: <br /><br /><code>{ENV}/sell/fulfillment/v1/order/{ORDERID}/shipping_fulfillment/{FULFILLMENTID}</code> <br /><br />The <code>ENV</code> string is the HTTPS path to the same eBay supported environment in which this call was issued. The <code>ORDERID</code> parameter is the unique identifier of the order addressed by this call; for example, <code>01-03955-36441</code>. The <code>FULFILLMENTID</code> parameter identifies the newly created fulfillment; for example, <code>9405509699937003457459</code>. Use this Get Fulfillment URI to retrieve the contents of the new fulfillment.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6951353f-94ff-4f37-a8e3-e69dd45696aa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5319395-117f-41b5-8fa5-4e156e4b2065",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. <br /><br /><span class=\"tablenote\"><strong>Note:</strong> In some cases, this call may succeed if you issue it once more after receiving this error.</span>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef45a738-f918-429e-ae16-9be27a58a0df",
      "documentation": "Use this call to retrieve the contents of a fulfillment based on its unique identifier, fulfillmentId (combined with the associated order's orderId). The fulfillmentId value was originally generated by the createShippingFulfillment call, and is returned by the getShippingFulfillments call in the members.fulfillmentId field.",
      "method": "get",
      "endpoint": "order/:orderId/shipping_fulfillment/:fulfillmentId",
      "responses": [
        {
          "uuid": "63b7c1c2-1f59-43cd-a2fc-afd19ad074ac",
          "body": "{\n  \"fulfillmentId\": \"\",\n  \"lineItems\": [\n    {\n      \"lineItemId\": \"\",\n      \"quantity\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"shipmentTrackingNumber\": \"\",\n  \"shippedDate\": \"\",\n  \"shippingCarrierCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1cfb644d-67b2-4985-b66b-b6a859c67245",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f596ae0c-5991-453c-b140-204f85d24681",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e598342c-6d63-4db2-85fb-642059133378",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "749f3770-3f5b-419b-a914-08c9149f8f8b",
      "documentation": "Issue Refund",
      "method": "post",
      "endpoint": "order/:order_id/issue_refund",
      "responses": [
        {
          "uuid": "498b22ee-10c1-49b9-b102-b426a808880e",
          "body": "{\n  \"refundId\": \"\",\n  \"refundStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f9d577a5-9292-411f-9d1c-e21dc12040e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea1e474f-638b-48e3-841f-c89712555b47",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Access Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a6fb586-71e4-4dc7-a543-67e63ef3503b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "718141fd-b3b6-442a-91f8-85609dddadbf",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a32f4533-2dc9-4437-99e2-c31a120d9f53",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa326127-4dc0-433b-9bec-11ebe149fe6b",
      "documentation": "Get Payment Dispute Details",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id",
      "responses": [
        {
          "uuid": "e8351ea4-ac61-4e00-bcca-689d093c4569",
          "body": "{\n  \"amount\": {\n    \"currency\": \"\",\n    \"value\": \"\"\n  },\n  \"availableChoices\": [\n    \"\"\n  ],\n  \"buyerProvided\": {\n    \"note\": \"\",\n    \"returnShipmentTracking\": [\n      {\n        \"shipmentTrackingNumber\": \"\",\n        \"shippingCarrierCode\": \"\"\n      }\n    ]\n  },\n  \"buyerUsername\": \"\",\n  \"closedDate\": \"\",\n  \"evidence\": [\n    {\n      \"evidenceId\": \"\",\n      \"evidenceType\": \"\",\n      \"files\": [\n        {\n          \"fileId\": \"\",\n          \"fileType\": \"\",\n          \"name\": \"\",\n          \"uploadedDate\": \"\"\n        }\n      ],\n      \"lineItems\": [\n        {\n          \"itemId\": \"\",\n          \"lineItemId\": \"\"\n        }\n      ],\n      \"providedDate\": \"\",\n      \"requestDate\": \"\",\n      \"respondByDate\": \"\",\n      \"shipmentTracking\": [\n        {\n          \"shipmentTrackingNumber\": \"\",\n          \"shippingCarrierCode\": \"\"\n        }\n      ]\n    }\n  ],\n  \"evidenceRequests\": [\n    {\n      \"evidenceId\": \"\",\n      \"evidenceType\": \"\",\n      \"lineItems\": [\n        {\n          \"itemId\": \"\",\n          \"lineItemId\": \"\"\n        }\n      ],\n      \"requestDate\": \"\",\n      \"respondByDate\": \"\"\n    }\n  ],\n  \"lineItems\": [\n    {\n      \"itemId\": \"\",\n      \"lineItemId\": \"\"\n    }\n  ],\n  \"monetaryTransactions\": [\n    {\n      \"amount\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"exchangeRate\": \"\",\n        \"value\": \"\"\n      },\n      \"date\": \"\",\n      \"reason\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"openDate\": \"\",\n  \"orderId\": \"\",\n  \"paymentDisputeId\": \"\",\n  \"paymentDisputeStatus\": \"\",\n  \"reason\": \"\",\n  \"resolution\": {\n    \"fees\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"protectedAmount\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"protectionStatus\": \"\",\n    \"reasonForClosure\": \"\",\n    \"recoupAmount\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"totalFeeCredit\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"respondByDate\": \"\",\n  \"returnAddress\": {\n    \"addressLine1\": \"\",\n    \"addressLine2\": \"\",\n    \"city\": \"\",\n    \"country\": \"\",\n    \"county\": \"\",\n    \"fullName\": \"\",\n    \"postalCode\": \"\",\n    \"primaryPhone\": {\n      \"countryCode\": \"\",\n      \"number\": \"\"\n    },\n    \"stateOrProvince\": \"\"\n  },\n  \"revision\": {{faker 'datatype.number'}},\n  \"sellerResponse\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c4657f37-be11-4f3d-9062-3140edcb276d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc4e0249-37af-492c-9657-313209f925ba",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "970fa5f8-68ea-4ea1-8b38-60c7b1f1245d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32c6077f-71fb-4efd-81df-f07ea48fb621",
      "documentation": "Accept Payment Dispute",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/accept",
      "responses": [
        {
          "uuid": "4992529e-8970-4544-9bbf-24917f186b1c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09c112df-d784-450b-817e-507bedb3c2fc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b92ef659-d9f7-4221-bb34-61b4a3e615d9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49189d6a-6a53-40e7-83da-9878386686f3",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b82c1c27-78ef-42d0-8103-d7227114cba5",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6921b1d2-8f1c-4ae9-a8d1-b9a86661245a",
      "documentation": "Get Payment Dispute Activity",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id/activity",
      "responses": [
        {
          "uuid": "ea41809d-ffce-4f23-9aa1-565748c83893",
          "body": "{\n  \"activity\": [\n    {\n      \"activityDate\": \"\",\n      \"activityType\": \"\",\n      \"actor\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ed948db-0d26-445c-af26-0547af92a182",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b07c903-a40c-421d-8fef-785e401c9ecd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9566e5f3-260e-4d83-ae5d-7acc53990540",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa7f1b36-5b00-4d31-b4de-ce2e9d611472",
      "documentation": "Add an Evidence File",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/add_evidence",
      "responses": [
        {
          "uuid": "25afc468-f3cc-4aae-9a46-8898918f1238",
          "body": "{\n  \"evidenceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b14fcf8c-a729-4516-9e09-57a418e72816",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "067ee489-4c1c-4dcf-aba7-9965f75f9011",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a42fe125-7d0e-4455-94e9-7ad50d78350a",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7481cc4-961d-4a82-b17a-0704f9761d54",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e62d3ff3-90ad-4d8b-a2bb-5d7bb0c52209",
      "documentation": "Contest Payment Dispute",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/contest",
      "responses": [
        {
          "uuid": "08e7c7cc-9bb7-4409-b2bd-1f49512e5eb1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2252242b-e99f-4f55-8933-55faaeaf6471",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbd825ea-fc0c-4732-86fe-5ac12e9f6ad6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d855922-fd5b-41bc-aaf0-52f14104de76",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e6ac6ba-e63e-4ba1-8013-8c85a7e3975e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "694ca0e9-bb42-4b81-a335-0aa0989b42a3",
      "documentation": "Get Payment Dispute Evidence File",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id/fetch_evidence_content",
      "responses": [
        {
          "uuid": "35236c46-71d9-48ac-8112-1996895daaa8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07459fd5-041e-4c57-b428-b53a2ada073e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e4e0b10-6a42-4294-a01a-f739113bea98",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59809a4d-94a8-4572-91a8-dc3ee9120573",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ab855f4-d02e-4b52-8904-86069abeec24",
      "documentation": "Update evidence",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/update_evidence",
      "responses": [
        {
          "uuid": "0934cab5-32ff-458d-aa19-274a021ed024",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bffcee2b-b405-4ba0-af21-f2d8a91b3397",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e5b04d9-d2ac-449b-b9a6-8c50f202cc80",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5106e135-02e5-400d-8a37-ab77fdfc6cec",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d42d6e8c-13ba-44aa-9471-e04091dedfe1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee8b1a1c-a0e5-46bd-b512-39d18da59a7c",
      "documentation": "Upload an Evidence File",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/upload_evidence_file",
      "responses": [
        {
          "uuid": "972577a7-3eab-42c0-a926-35476510f86d",
          "body": "{\n  \"fileId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac1e8c42-3884-43b6-a51a-b94eba46c39a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3071ffcb-87b6-4edf-a6f5-cfe5c06ea23e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17ed716e-f5e0-42f9-a921-e3a9f841985b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f4fa7eb1-273d-4495-aef1-f884df22fddf",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f42a3d6-fa9e-40ae-b467-26381f11d676",
      "documentation": "Search Payment Dispute by Filters",
      "method": "get",
      "endpoint": "payment_dispute_summary",
      "responses": [
        {
          "uuid": "4137cedb-03b6-4c4d-ad11-2c09b1afe32d",
          "body": "{\n  \"href\": \"\",\n  \"limit\": {{faker 'datatype.number'}},\n  \"next\": \"\",\n  \"offset\": {{faker 'datatype.number'}},\n  \"paymentDisputeSummaries\": [\n    {\n      \"amount\": {\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"buyerUsername\": \"\",\n      \"closedDate\": \"\",\n      \"openDate\": \"\",\n      \"orderId\": \"\",\n      \"paymentDisputeId\": \"\",\n      \"paymentDisputeStatus\": \"\",\n      \"reason\": \"\",\n      \"respondByDate\": \"\"\n    }\n  ],\n  \"prev\": \"\",\n  \"total\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37bba981-6c04-4376-9c9b-5f58f7912ce5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "158b7ad7-0ecf-464f-bf7e-548e94e7926f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}