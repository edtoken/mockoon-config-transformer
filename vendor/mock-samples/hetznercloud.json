{
  "uuid": "d2da2257-ae5a-484d-abf4-f421b975f7e3",
  "lastMigration": 24,
  "name": "Hetzner Cloud API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3ef661b5-5e48-476b-bd3f-8e381d2acc6a",
      "documentation": "Get all Actions",
      "method": "get",
      "endpoint": "actions",
      "responses": [
        {
          "uuid": "cb795f28-85b4-46d3-bc69-73164b8fd342",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12b8af62-b6a7-4d5d-9059-5802f38779b7",
      "documentation": "Get an Action",
      "method": "get",
      "endpoint": "actions/:id",
      "responses": [
        {
          "uuid": "11959c46-15d1-423d-a1f8-01a513b6704f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8817e2eb-33ff-4b0f-949d-4b3420ef631d",
      "documentation": "Get all Certificates",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "e42ef495-08b6-4091-9cff-1d780b70a7f2",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"domain_names\": [\n        \"example.com\",\n        \"webmail.example.com\",\n        \"www.example.com\"\n      ],\n      \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n      \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n      \"status\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\"\n        },\n        \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n        \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n      },\n      \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n      \"used_by\": [\n        {\n          \"id\": 4711,\n          \"type\": \"load_balancer\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificates` key contains an array of Certificate objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c563d79-0ef1-4a29-aa28-2e5de1159e57",
      "documentation": "Create a Certificate",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "9917eade-f378-450e-9864-feec7ae6dc36",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `certificate` key contains the Certificate that was just created. For type `managed` Certificates the `action` key contains the Action that allows for tracking the issuance process. For type `uploaded` Certificates the `action` is always null.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "445dae74-5b60-4fcf-894a-311b6fbe5254",
      "documentation": "Delete a Certificate",
      "method": "delete",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "7b6d17f9-05f5-40df-940b-e3fd2ef72cd8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Certificate deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c499ca40-d806-4b0f-95ed-aa03fcd23a7b",
      "documentation": "Get a Certificate",
      "method": "get",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "829909d8-90a2-4839-a872-748b747ee860",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains a Certificate object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4661bf7-9900-4239-bf8f-b392d288bb1f",
      "documentation": "Update a Certificate",
      "method": "put",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "d7562f66-72dc-4a3c-9804-4c5ae10dbd7f",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the Certificate that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "703dd257-b257-48c3-8c0d-be561f846f8e",
      "documentation": "Get all Actions for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions",
      "responses": [
        {
          "uuid": "1fe23537-40f4-455e-96c4-09107bee1c35",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3406c646-2f87-4691-9d15-254e44fa9c15",
      "documentation": "Retry Issuance or Renewal",
      "method": "post",
      "endpoint": "certificates/:id/actions/retry",
      "responses": [
        {
          "uuid": "6dc487b7-c8f7-4d24-8b55-d9d834acae78",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the resulting Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6342c0e2-6e97-403c-be51-7be607014f97",
      "documentation": "Get an Action for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "523d6977-2082-4b63-bfa8-4f5743181ce3",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Certificate Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6fd881b0-7bc3-4d57-9202-5637832d10ba",
      "documentation": "Get all Datacenters",
      "method": "get",
      "endpoint": "datacenters",
      "responses": [
        {
          "uuid": "798be09a-9c7b-41a8-a5bd-24c4f3679dcc",
          "body": "{\n  \"datacenters\": [\n    {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    }\n  ],\n  \"recommendation\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The reply contains the `datacenters` and `recommendation` keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25eb1017-8068-4ca9-bedc-38dc5fdaaa0b",
      "documentation": "Get a Datacenter",
      "method": "get",
      "endpoint": "datacenters/:id",
      "responses": [
        {
          "uuid": "c7bb16b8-55a7-401e-87c1-f0dabaa5ad31",
          "body": "{\n  \"datacenter\": {\n    \"description\": \"Falkenstein DC Park 8\",\n    \"id\": 42,\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"fsn1-dc8\",\n    \"server_types\": {\n      \"available\": [\n        1,\n        2,\n        3\n      ],\n      \"available_for_migration\": [\n        1,\n        2,\n        3\n      ],\n      \"supported\": [\n        1,\n        2,\n        3\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `datacenter` key in the reply contains a Datacenter object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "58a58d78-90c7-46b9-bc84-f35b65478693",
      "documentation": "Get all Firewalls",
      "method": "get",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "b0bc4dce-9eba-4b88-a708-cd4dfbce6b33",
          "body": "{\n  \"firewalls\": [\n    {\n      \"applied_to\": [\n        {\n          \"applied_to_resources\": [\n            {\n              \"server\": {\n                \"id\": 42\n              },\n              \"type\": \"{{oneOf (array 'server')}}\"\n            }\n          ],\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 42\n          },\n          \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n        }\n      ],\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"rules\": [\n        {\n          \"description\": \"\",\n          \"destination_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ],\n          \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n          \"port\": \"80\",\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n          \"source_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewalls` key contains an array of Firewall objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f448e54e-f6c1-4806-8b4b-b0e6b22f73b4",
      "documentation": "Create a Firewall",
      "method": "post",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "8cbbec32-e185-4f3f-b330-8dfb741ec67e",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"set_firewall_rules\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 13,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    },\n    {\n      \"command\": \"apply_firewall\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 14,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        },\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    }\n  ],\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `firewall` key contains the Firewall that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0adf42f6-cd72-4de9-b989-44684b42a5fa",
      "documentation": "Delete a Firewall",
      "method": "delete",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "81d477d7-44db-4957-8198-4d0b798d1102",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Firewall deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc042bcf-9133-4101-8537-50eb2e19f38d",
      "documentation": "Get a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "520cedb9-7c85-470c-b734-9f3d7397cca9",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains a Firewall object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9eb5dc27-05e4-40f4-8274-2eedf56004e9",
      "documentation": "Update a Firewall",
      "method": "put",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "d54606d3-7377-4b9f-ab5e-d379f58b5704",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains the Firewall that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0901e9ff-4aa6-4b15-b339-0f700c3f5a2a",
      "documentation": "Get all Actions for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions",
      "responses": [
        {
          "uuid": "cd81a20f-4979-45fa-8119-cc6da9f1e1f0",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "efd8519d-781e-4ee9-a207-cfa8892d2b18",
      "documentation": "Apply to Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/apply_to_resources",
      "responses": [
        {
          "uuid": "8c00c243-0284-4c6b-bd94-bbfb41ac9709",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `apply_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eec10883-5a7c-4953-b684-1580161ca84a",
      "documentation": "Remove from Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/remove_from_resources",
      "responses": [
        {
          "uuid": "2d713889-a916-4910-b21f-bd7e78cd156e",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `remove_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b11526d-be8c-44c1-88f9-93c9a1e56c69",
      "documentation": "Set Rules",
      "method": "post",
      "endpoint": "firewalls/:id/actions/set_rules",
      "responses": [
        {
          "uuid": "91a46593-e5b6-46cd-bed2-62ef60fed9b6",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains one `set_firewall_rules` Action plus one `apply_firewall` Action per resource where the Firewall is active",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "53f0f273-aabb-44fb-8648-c3c5092cb672",
      "documentation": "Get an Action for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "92482b9c-d7fb-48e7-9c10-3ad9a15e950f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Firewall Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1cb50ae4-784e-4d90-80db-8a97c46a91a1",
      "documentation": "Get all Floating IPs",
      "method": "get",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "54d00fac-f476-41ab-b406-67d93fbcadb4",
          "body": "{\n  \"floating_ips\": [\n    {\n      \"blocked\": {{faker 'datatype.boolean'}},\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"description\": \"this describes my resource\",\n      \"dns_ptr\": [\n        {\n          \"dns_ptr\": \"server.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      ],\n      \"home_location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"id\": 42,\n      \"ip\": \"131.232.99.1\",\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"server\": 42,\n      \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ips` key in the reply contains an array of Floating IP objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c906f57-9a40-4a36-9049-c620641ebdbe",
      "documentation": "Create a Floating IP",
      "method": "post",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "fd919e8d-6103-4112-961d-e2ea91db63bc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"floating_ip\": {\n    \"blocked\": {{faker 'datatype.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `floating_ip` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09cee796-8a5c-4818-b0eb-fff8eb5e33de",
      "documentation": "Delete a Floating IP",
      "method": "delete",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "86f56bd1-7ceb-4d93-897a-c583958c2575",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Floating IP deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99ca6305-89f7-4f37-b9c4-324fed0bd6e0",
      "documentation": "Get a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "54ecdcab-2395-4a0a-81a0-97177aab3fd5",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'datatype.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains a Floating IP object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "715e7829-4e28-440d-aba1-52de77e629ab",
      "documentation": "Update a Floating IP",
      "method": "put",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "2254028a-ae11-44ab-bccb-098421009787",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'datatype.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains the modified Floating IP object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f76bb6e-b696-44e1-ae79-d5000467d0ea",
      "documentation": "Get all Actions for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions",
      "responses": [
        {
          "uuid": "045fffe5-4c38-4f75-93c2-38c3871878bc",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c0b3301-5109-4270-a880-bb49bb7296a8",
      "documentation": "Assign a Floating IP to a Server",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/assign",
      "responses": [
        {
          "uuid": "653f6358-8055-4d7f-8328-88a606f8347d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `assign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d9dbb9b-3090-44af-a207-5ec74dc1664b",
      "documentation": "Change reverse DNS entry for a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "cf59b7d3-2331-41fc-9183-357b122b29e0",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_dns_ptr` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bce8d557-b1c2-4e20-80da-3bf4be968948",
      "documentation": "Change Floating IP Protection",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "2f29354e-014d-4dac-a3cf-6472f7986f40",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cb0f56a-bdd3-4c8e-b77c-34786698c7ba",
      "documentation": "Unassign a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/unassign",
      "responses": [
        {
          "uuid": "d5c11cef-5f52-4ad6-8420-0355afc6e528",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `unassign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "927f35a6-ca97-4b64-a663-506fc33e3a32",
      "documentation": "Get an Action for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "074246d3-c0df-45fe-87ba-61fc5bbce8a8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "583de6e6-8c80-46a7-b989-1a972d3513e3",
      "documentation": "Get all Images",
      "method": "get",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "7efde72d-2d00-4ad5-ba30-c2430d9e2401",
          "body": "{\n  \"images\": [\n    {\n      \"bound_to\": {{faker 'datatype.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'datatype.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `images` key in the reply contains an array of Image objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "871249b7-73bb-440e-b192-13151df9bb71",
      "documentation": "Delete an Image",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "e936285b-0458-4fbc-86ef-a7d0360464b5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b8139fa-03fb-4f0a-8d8e-e0cdf1f797a6",
      "documentation": "Get an Image",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "e4be973d-2e84-4efe-8ff1-c4dff199f97b",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'datatype.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'datatype.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `image` key in the reply contains an Image object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cba0dc0d-351f-4b05-98f7-88579f32022a",
      "documentation": "Update an Image",
      "method": "put",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "47fb1915-6604-49d2-86fc-bc02eec34a6a",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'datatype.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'datatype.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The image key in the reply contains the modified Image object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76f98337-1b2d-4d8b-94ab-2762b5b5c95d",
      "documentation": "Get all Actions for an Image",
      "method": "get",
      "endpoint": "images/:id/actions",
      "responses": [
        {
          "uuid": "30cdabb5-0dea-49af-ae88-ae530f0e88d4",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3bd5b1cd-2a6a-49f0-aeb0-6ce89203a532",
      "documentation": "Change Image Protection",
      "method": "post",
      "endpoint": "images/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "97066d81-b0e7-45aa-a24b-6306a31fad73",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ca987d8-f1be-4259-92fa-a0c42d72fe0e",
      "documentation": "Get an Action for an Image",
      "method": "get",
      "endpoint": "images/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "ddb0bb7d-ad9b-4c79-bffd-088d86413182",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Image Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "135c1f72-b2e3-475d-95ef-916bd4ec319a",
      "documentation": "Get all ISOs",
      "method": "get",
      "endpoint": "isos",
      "responses": [
        {
          "uuid": "b3b66262-6f65-4d11-b749-584388de77cb",
          "body": "{\n  \"isos\": [\n    {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `isos` key in the reply contains an array of iso objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2cfe7861-c3b6-421b-a862-44777b3042f1",
      "documentation": "Get an ISO",
      "method": "get",
      "endpoint": "isos/:id",
      "responses": [
        {
          "uuid": "e5d2ab42-c913-40db-8972-e5c501cb1ba8",
          "body": "{\n  \"iso\": {\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"FreeBSD 11.0 x64\",\n    \"id\": 42,\n    \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"type\": \"{{oneOf (array 'public' 'private')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `iso` key in the reply contains an array of ISO objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "842f633b-8aab-4152-b18e-92ddbf961091",
      "documentation": "Get all Load Balancer Types",
      "method": "get",
      "endpoint": "load_balancer_types",
      "responses": [
        {
          "uuid": "6118db1b-63e8-411c-89cf-904902076832",
          "body": "{\n  \"load_balancer_types\": [\n    {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_types` key in the reply contains an array of Load Balancer type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aee8cbb1-afc6-441e-bbd5-7d383fdca942",
      "documentation": "Get a Load Balancer Type",
      "method": "get",
      "endpoint": "load_balancer_types/:id",
      "responses": [
        {
          "uuid": "ef5334db-ff5c-4ebf-a553-414a6a585e51",
          "body": "{\n  \"load_balancer_type\": {\n    \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n    \"description\": \"LB11\",\n    \"id\": 1,\n    \"max_assigned_certificates\": 10,\n    \"max_connections\": 20000,\n    \"max_services\": 5,\n    \"max_targets\": 25,\n    \"name\": \"lb11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b0ed14a-5a65-429f-8dd3-cbfce29aae0a",
      "documentation": "Get all Load Balancers",
      "method": "get",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "fbd0f9ec-ed19-42bf-be02-a34e68566618",
          "body": "{\n  \"load_balancers\": [\n    {\n      \"algorithm\": {\n        \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n      },\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"included_traffic\": 10000,\n      \"ingoing_traffic\": {{faker 'datatype.number'}},\n      \"labels\": {},\n      \"load_balancer_type\": {\n        \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n        \"description\": \"LB11\",\n        \"id\": 1,\n        \"max_assigned_certificates\": 10,\n        \"max_connections\": 20000,\n        \"max_services\": 5,\n        \"max_targets\": 25,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      },\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": {{faker 'datatype.number'}},\n      \"private_net\": [\n        {\n          \"ip\": \"10.0.0.2\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"public_net\": {\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"ipv4\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      },\n      \"services\": [\n        {\n          \"destination_port\": 80,\n          \"health_check\": {\n            \"http\": {\n              \"domain\": \"example.com\",\n              \"path\": \"/\",\n              \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n              \"status_codes\": [\n                \"2??\",\n                \"3??\"\n              ],\n              \"tls\": {{faker 'datatype.boolean'}}\n            },\n            \"interval\": 15,\n            \"port\": 4711,\n            \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n            \"retries\": 3,\n            \"timeout\": 10\n          },\n          \"http\": {\n            \"certificates\": [\n              897\n            ],\n            \"cookie_lifetime\": 300,\n            \"cookie_name\": \"HCLBSTICKY\",\n            \"redirect_http\": true,\n            \"sticky_sessions\": true\n          },\n          \"listen_port\": 443,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n          \"proxyprotocol\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"targets\": [\n        {\n          \"health_status\": [\n            {\n              \"listen_port\": 443,\n              \"status\": \"healthy\"\n            }\n          ],\n          \"ip\": {\n            \"ip\": \"203.0.113.1\"\n          },\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 80\n          },\n          \"targets\": [\n            {\n              \"health_status\": [\n                {\n                  \"listen_port\": 443,\n                  \"status\": \"healthy\"\n                }\n              ],\n              \"server\": {\n                \"id\": 85\n              },\n              \"type\": \"server\",\n              \"use_private_ip\": {{faker 'datatype.boolean'}}\n            }\n          ],\n          \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n          \"use_private_ip\": {{faker 'datatype.boolean'}}\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancers` key contains a list of Load Balancers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03ce923e-3d17-440d-bf36-9567f10a091e",
      "documentation": "Create a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "e531c838-2821-43dc-aec3-bdf6feb50a05",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'datatype.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'datatype.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'datatype.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `load_balancer` key contains the Load Balancer that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4ab3187-0bd3-418d-ba12-ea79f5cf3431",
      "documentation": "Delete a Load Balancer",
      "method": "delete",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "fe2182e1-a9bf-4e22-8057-68629e2cce1c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Load Balancer deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80d94180-4317-4296-ba1f-8b3b2913d41a",
      "documentation": "Get a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "9f4eca1d-0cbd-475e-912b-3d8c9618a59a",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'datatype.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'datatype.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'datatype.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6dbd953-8c84-49ac-bf8c-2624dd4f82af",
      "documentation": "Update a Load Balancer",
      "method": "put",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "ec057287-3b69-4f80-9f9d-9a7d5b9ba3ec",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'datatype.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'datatype.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'datatype.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the updated Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d6a0ba41-decb-4292-99e2-c00ed2968008",
      "documentation": "Get all Actions for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions",
      "responses": [
        {
          "uuid": "9d1c2938-1755-47a1-bfa7-706a47b5b504",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d98f592-b40c-48eb-96fa-0df7c9f9a7c5",
      "documentation": "Add Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_service",
      "responses": [
        {
          "uuid": "610cfadc-c76f-4db3-8458-12da692c04da",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ccaf0dfb-c3fb-4841-8a42-f633e97835c7",
      "documentation": "Add Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_target",
      "responses": [
        {
          "uuid": "1ce82395-45d6-4d28-9832-92c1419c6f9c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35da5535-4a35-4f26-9501-693e013c3dc3",
      "documentation": "Attach a Load Balancer to a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "aa1280ba-f53f-4a5f-84fc-207c473e0bcc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_to_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fed559bc-4231-427d-88e2-2be54445c6b4",
      "documentation": "Change Algorithm",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_algorithm",
      "responses": [
        {
          "uuid": "c9f17cad-4b7c-4711-a287-1f9da0be8404",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_algorithm` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd6d481f-79b7-4641-8631-3ba902e8b2da",
      "documentation": "Change reverse DNS entry for this Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "ab4ddfdc-228f-43fd-a660-a16188a12afd",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6724439-e9a4-437d-9da6-ca4640e270d1",
      "documentation": "Change Load Balancer Protection",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "79352ed6-7fa7-4d9e-93d3-7620eeccb3c6",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16ea7811-8f99-4100-aee5-c0edc35d395b",
      "documentation": "Change the Type of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "73fc7099-f21a-4ec4-9eea-4ad67feaaff8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_load_balancer_type` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df47799b-9786-4ae2-9a79-26b57722c595",
      "documentation": "Delete Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/delete_service",
      "responses": [
        {
          "uuid": "35c2fdf8-a174-4855-8b12-1973b6d98f2c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f78c221-1f05-4f9b-928c-9fa65d5af113",
      "documentation": "Detach a Load Balancer from a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "ce4ef261-4d53-4513-93b6-7e9146e74848",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_from_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37e01a53-5513-401a-9730-ae0b3ed7c8f0",
      "documentation": "Disable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/disable_public_interface",
      "responses": [
        {
          "uuid": "7fd274e4-42b3-40b0-a1c7-92789676a3af",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `disable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "840ac495-7deb-4547-bec9-54037df0ff4f",
      "documentation": "Enable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/enable_public_interface",
      "responses": [
        {
          "uuid": "b6d91485-7134-4a7a-a8bb-10fa0122d4bc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `enable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "324ab823-1cd1-45fc-af10-7fcf3eabebcf",
      "documentation": "Remove Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/remove_target",
      "responses": [
        {
          "uuid": "3be09578-7a11-44fd-a936-ea851c4e5141",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `remove_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7dca3db7-fcfa-4b98-bee5-5329925a7dd7",
      "documentation": "Update Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/update_service",
      "responses": [
        {
          "uuid": "35d5db83-c38b-4427-9c3a-2f66000d92fc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `update_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0adcd58e-a3cf-489e-a5db-76c0518f0979",
      "documentation": "Get an Action for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "14a022db-4c08-400a-88e9-9ba7e0a3d6d2",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Load Balancer Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "914a7980-c8b5-427d-8cdc-8b4f9a9b17a1",
      "documentation": "Get Metrics for a LoadBalancer",
      "method": "get",
      "endpoint": "load_balancers/:id/metrics",
      "responses": [
        {
          "uuid": "fcf5b493-0cd2-4648-ae50-26665c9e5148",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88e3c56c-aa08-49f1-9484-185460dfbd51",
      "documentation": "Get all Locations",
      "method": "get",
      "endpoint": "locations",
      "responses": [
        {
          "uuid": "9f87e862-e867-4789-8b95-f487d23406c7",
          "body": "{\n  \"locations\": [\n    {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `locations` key in the reply contains an array of Location objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5db09e28-8944-4cb4-a46c-0bdc819ba005",
      "documentation": "Get a Location",
      "method": "get",
      "endpoint": "locations/:id",
      "responses": [
        {
          "uuid": "251cea7b-679e-4dbe-becb-d2ad00a8a3d2",
          "body": "{\n  \"location\": {\n    \"city\": \"Falkenstein\",\n    \"country\": \"DE\",\n    \"description\": \"Falkenstein DC Park 1\",\n    \"id\": 1,\n    \"latitude\": 50.47612,\n    \"longitude\": 12.370071,\n    \"name\": \"fsn1\",\n    \"network_zone\": \"eu-central\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `location` key in the reply contains a Location object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a2019a7-be24-48e3-87ad-5216e28a6c02",
      "documentation": "Get all Networks",
      "method": "get",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "edd2b09d-bc2b-4dcf-b7df-da0bfbb32aec",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"networks\": [\n    {\n      \"created\": \"2016-01-30T23:50:00+00:00\",\n      \"id\": 4711,\n      \"ip_range\": \"10.0.0.0/16\",\n      \"labels\": {},\n      \"load_balancers\": [\n        42\n      ],\n      \"name\": \"mynet\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"routes\": [\n        {\n          \"destination\": \"10.100.1.0/24\",\n          \"gateway\": \"10.0.1.1\"\n        }\n      ],\n      \"servers\": [\n        42\n      ],\n      \"subnets\": [\n        {\n          \"gateway\": \"10.0.0.1\",\n          \"ip_range\": \"10.0.1.0/24\",\n          \"network_zone\": \"eu-central\",\n          \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `networks` key contains a list of networks",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c034086-a1bd-40c6-93da-c85a0d22a184",
      "documentation": "Create a Network",
      "method": "post",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "ed05ee09-5230-4aba-9dbe-13fcacff7557",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `network` key contains the network that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f783e98-1e7b-48d0-b09b-dcedf083b159",
      "documentation": "Delete a Network",
      "method": "delete",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "7e95ef52-f4ab-4685-a5be-e33e2c5fdc68",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Network deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0b8b4f7-1288-4509-95fb-589950fe9d6a",
      "documentation": "Get a Network",
      "method": "get",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "ebe89abc-7e29-4e37-9d1c-26b4a2fbbdcd",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2183d716-ce95-40a2-87cf-8146f915db9b",
      "documentation": "Update a Network",
      "method": "put",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "68d039a9-1a10-4243-a4f7-a1f6d2887321",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the updated network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ba51fee-4d6b-4780-8db3-9c3840ce18ed",
      "documentation": "Get all Actions for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions",
      "responses": [
        {
          "uuid": "c6df6f12-4b7d-45f3-bb1c-4c7e23cb7faa",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76428ad9-6f70-4bed-902b-08f80c6dacfe",
      "documentation": "Add a route to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_route",
      "responses": [
        {
          "uuid": "ba8861db-1cba-403e-a437-51c131c3d13b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0362907b-9205-46a9-ab27-b3c4144b346d",
      "documentation": "Add a subnet to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_subnet",
      "responses": [
        {
          "uuid": "8dcc2009-ce89-4ebc-97f0-13bd925a50bc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6892ad52-1797-4efa-add2-dfc713099c41",
      "documentation": "Change IP range of a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/change_ip_range",
      "responses": [
        {
          "uuid": "5b446750-c5a9-422c-a876-4e669cbdc7dc",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_ip_range` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bdd46ceb-b47c-4086-b406-48028322ebb7",
      "documentation": "Change Network Protection",
      "method": "post",
      "endpoint": "networks/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "d45ce421-db73-47ed-b407-2f8f50d6fa7e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "79f7d0c5-6594-41a1-8691-e9e28c803d66",
      "documentation": "Delete a route from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_route",
      "responses": [
        {
          "uuid": "77dbcb5b-a55f-42e1-97c7-71056bd275bd",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16951ed5-5af7-480f-bf3b-171071b60671",
      "documentation": "Delete a subnet from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_subnet",
      "responses": [
        {
          "uuid": "0967ec34-2a62-44c9-9aa9-2b1adbceda56",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47e76b63-3b07-4a00-89f7-eb2e6ccbf713",
      "documentation": "Get an Action for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "921ab54a-df5b-47d1-b22b-45a0857c2562",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Network Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30bc4244-6b39-4bef-ba1d-b2488bc2e75c",
      "documentation": "Get all PlacementGroups",
      "method": "get",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "857df98e-c2ee-487c-b141-036ecaef4fbc",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"placement_groups\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_groups` key contains an array of PlacementGroup objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95b22ac9-84c8-4971-b764-388c17cadb67",
      "documentation": "Create a PlacementGroup",
      "method": "post",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "d020a830-a736-4860-890a-568c027d7d36",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `PlacementGroup` key contains the PlacementGroup that was just created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bdbb7f3e-3d4e-4fdb-9247-0c0d32967b1e",
      "documentation": "Delete a PlacementGroup",
      "method": "delete",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "62c9a19e-9702-41db-b001-6fb7169dde5e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "PlacementGroup deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e666cfbe-0702-416c-a7e6-4e8b79c0dcd2",
      "documentation": "Get a PlacementGroup",
      "method": "get",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "6e572e0d-4bf4-4c60-b1f2-770d6ca9e890",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_group` key contains a PlacementGroup object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad6f905a-d3f4-4d06-be23-f236b666a3eb",
      "documentation": "Update a PlacementGroup",
      "method": "put",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "91021a7a-7397-4294-90ff-ee12b73c8133",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the PlacementGroup that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b106b72-c516-4eb6-b9e9-28b50c2944a8",
      "documentation": "Get all prices",
      "method": "get",
      "endpoint": "pricing",
      "responses": [
        {
          "uuid": "5f6511d4-fc7e-4ce8-8adf-3134c839b17c",
          "body": "{\n  \"pricing\": {\n    \"currency\": \"EUR\",\n    \"floating_ip\": {\n      \"price_monthly\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"floating_ips\": [\n      {\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n      }\n    ],\n    \"image\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"load_balancer_types\": [\n      {\n        \"id\": 1,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"server_backup\": {\n      \"percentage\": \"20.0000000000\"\n    },\n    \"server_types\": [\n      {\n        \"id\": 4,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"traffic\": {\n      \"price_per_tb\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"vat_rate\": \"19.000000\",\n    \"volume\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `pricing` key in the reply contains an pricing object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5cca431c-1bdd-4b57-8339-fce37f55315f",
      "documentation": "Get all Server Types",
      "method": "get",
      "endpoint": "server_types",
      "responses": [
        {
          "uuid": "38ad0535-a298-4e60-ace1-abf30f26a7fa",
          "body": "{\n  \"server_types\": [\n    {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'datatype.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 24,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_types` key in the reply contains an array of Server type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "79aefcce-10bb-491a-9be0-76ed2acbf4d5",
      "documentation": "Get a Server Type",
      "method": "get",
      "endpoint": "server_types/:id",
      "responses": [
        {
          "uuid": "158e0145-9023-4287-b1c5-d14d959079bd",
          "body": "{\n  \"server_type\": {\n    \"cores\": 1,\n    \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n    \"deprecated\": {{faker 'datatype.boolean'}},\n    \"description\": \"CX11\",\n    \"disk\": 24,\n    \"id\": 1,\n    \"memory\": 1,\n    \"name\": \"cx11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ],\n    \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_type` key in the reply contains a Server type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e7bf41b-6cb2-49e0-acc7-6e815ad87c99",
      "documentation": "Get all Servers",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "bceea8df-d471-4a5e-b694-4c1ff72b2e42",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"servers\": [\n    {\n      \"backup_window\": \"22-02\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"datacenter\": {\n        \"description\": \"Falkenstein DC Park 8\",\n        \"id\": 42,\n        \"location\": {\n          \"city\": \"Falkenstein\",\n          \"country\": \"DE\",\n          \"description\": \"Falkenstein DC Park 1\",\n          \"id\": 1,\n          \"latitude\": 50.47612,\n          \"longitude\": 12.370071,\n          \"name\": \"fsn1\",\n          \"network_zone\": \"eu-central\"\n        },\n        \"name\": \"fsn1-dc8\",\n        \"server_types\": {\n          \"available\": [\n            1,\n            2,\n            3\n          ],\n          \"available_for_migration\": [\n            1,\n            2,\n            3\n          ],\n          \"supported\": [\n            1,\n            2,\n            3\n          ]\n        }\n      },\n      \"id\": 42,\n      \"image\": {\n        \"bound_to\": {{faker 'datatype.number'}},\n        \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"created_from\": {\n          \"id\": 1,\n          \"name\": \"Server\"\n        },\n        \"deleted\": \"\",\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n        \"disk_size\": 10,\n        \"id\": 42,\n        \"image_size\": 2.3,\n        \"labels\": {},\n        \"name\": \"ubuntu-20.04\",\n        \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n        \"os_version\": \"20.04\",\n        \"protection\": {\n          \"delete\": {{faker 'datatype.boolean'}}\n        },\n        \"rapid_deploy\": {{faker 'datatype.boolean'}},\n        \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n        \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n      },\n      \"included_traffic\": 654321,\n      \"ingoing_traffic\": 123456,\n      \"iso\": {\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"FreeBSD 11.0 x64\",\n        \"id\": 42,\n        \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n        \"type\": \"{{oneOf (array 'public' 'private')}}\"\n      },\n      \"labels\": {},\n      \"load_balancers\": [\n        {{faker 'datatype.number'}}\n      ],\n      \"locked\": {{faker 'datatype.boolean'}},\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": 123456,\n      \"placement_group\": {\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"id\": 42,\n        \"labels\": {},\n        \"name\": \"my-resource\",\n        \"servers\": [\n          42\n        ],\n        \"type\": \"{{oneOf (array 'spread')}}\"\n      },\n      \"primary_disk_size\": 50,\n      \"private_net\": [\n        {\n          \"alias_ips\": [\n            \"\"\n          ],\n          \"ip\": \"10.0.0.2\",\n          \"mac_address\": \"86:00:ff:2a:7d:e1\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}},\n        \"rebuild\": {{faker 'datatype.boolean'}}\n      },\n      \"public_net\": {\n        \"firewalls\": [\n          {\n            \"id\": 42,\n            \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n          }\n        ],\n        \"floating_ips\": [\n          478\n        ],\n        \"ipv4\": {\n          \"blocked\": {{faker 'datatype.boolean'}},\n          \"dns_ptr\": \"server01.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"blocked\": {{faker 'datatype.boolean'}},\n          \"dns_ptr\": [\n            {\n              \"dns_ptr\": \"server.example.com\",\n              \"ip\": \"2001:db8::1\"\n            }\n          ],\n          \"ip\": \"2001:db8::/64\"\n        }\n      },\n      \"rescue_enabled\": {{faker 'datatype.boolean'}},\n      \"server_type\": {\n        \"cores\": 1,\n        \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n        \"deprecated\": {{faker 'datatype.boolean'}},\n        \"description\": \"CX11\",\n        \"disk\": 25,\n        \"id\": 1,\n        \"memory\": 1,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n      },\n      \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n      \"volumes\": [\n        {{faker 'datatype.number'}}\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paged array of servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "x-next",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5902eb83-6a15-4bfe-b9db-007249e432ea",
      "documentation": "Create a Server",
      "method": "post",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "5b15e0d5-c77f-4f73-bc68-0c0edbc9bbd7",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"root_password\": \"YItygq1v3GYjjMomLaKc\",\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'datatype.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'datatype.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"locked\": {{faker 'datatype.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}},\n      \"rebuild\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'datatype.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'datatype.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'datatype.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "028648cf-d0b4-4473-94e7-58939b43df1c",
      "documentation": "Delete a Server",
      "method": "delete",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "192109d1-3474-44ea-b932-1e74ffbfa76a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fb9608a-1cc0-46a4-950f-423db897a8f9",
      "documentation": "Get a Server",
      "method": "get",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "3d9966b3-36ad-48be-b3ea-a1b4a598a171",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'datatype.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'datatype.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"locked\": {{faker 'datatype.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}},\n      \"rebuild\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'datatype.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'datatype.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'datatype.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd9337be-2dd9-470c-94ce-b55ec4f8802b",
      "documentation": "Update a Server",
      "method": "put",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "35403c94-f2de-47f2-962d-8b675ea2c2d5",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'datatype.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'datatype.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"locked\": {{faker 'datatype.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}},\n      \"rebuild\": {{faker 'datatype.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'datatype.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'datatype.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'datatype.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'datatype.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains the updated Server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba750d29-a88b-42b6-ba6f-50ac0ffbfb02",
      "documentation": "Get all Actions for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions",
      "responses": [
        {
          "uuid": "b5051ce6-5a87-4ba4-95ef-78eca1228147",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c078dc4-f265-47ba-b8ef-3d9c6313e172",
      "documentation": "Add a Server to a Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/add_to_placement_group",
      "responses": [
        {
          "uuid": "9060d648-600d-4308-8857-777026e4ef50",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99334509-de23-48ce-8f9c-984d877c758c",
      "documentation": "Attach an ISO to a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_iso",
      "responses": [
        {
          "uuid": "9c3b5a04-18dc-46a2-b814-d7a83fb43c0e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46d71c1d-bc64-4a14-bb23-7675216985ef",
      "documentation": "Attach a Server to a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "694b9051-6fff-4498-83ad-68abe61de518",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b7e3701-a002-427a-81e7-a318c6330087",
      "documentation": "Change alias IPs of a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/change_alias_ips",
      "responses": [
        {
          "uuid": "4728cb28-ff84-411b-8a95-6be324dea307",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11b85cc3-fe1c-44b6-a229-5b38a501ebc8",
      "documentation": "Change reverse DNS entry for this Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "5eab9ab7-3271-47da-be39-5fd3104ccc8d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f2e2eef-0dd8-4508-8407-69ffa48e0208",
      "documentation": "Change Server Protection",
      "method": "post",
      "endpoint": "servers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "093e4e9e-61a0-4d01-9549-c1dbc2023620",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e61e406-183a-4720-af15-53ade36ffa24",
      "documentation": "Change the Type of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "94e9a71d-c401-4b0b-a40f-fdcfc8635119",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4c60aee-418a-45e4-801c-ce9f42033029",
      "documentation": "Create Image from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/create_image",
      "responses": [
        {
          "uuid": "06894e10-f457-4bcc-8efa-9c630dc39aad",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"image\": {\n    \"bound_to\": {{faker 'datatype.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'datatype.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `image` key in the reply contains an the created Image, which is an object with this structure\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ee7de49-6e2b-4950-8c9e-a66b6b5b5d15",
      "documentation": "Detach a Server from a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "e8c418d4-e1e8-4099-8bf3-7b9af7ed6d38",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ff2f9a5-4bd8-4031-8f87-6388282b03be",
      "documentation": "Detach an ISO from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_iso",
      "responses": [
        {
          "uuid": "bf319952-ce82-4d50-bd9c-6805f04dca29",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f13ab78-c09f-4b86-90f7-a2e7deccf574",
      "documentation": "Disable Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_backup",
      "responses": [
        {
          "uuid": "e978ae55-c433-486c-83d3-d2ca4a5c89be",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50aeb01b-5baf-4398-b71a-b4c2bafa1f8f",
      "documentation": "Disable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_rescue",
      "responses": [
        {
          "uuid": "b30444d5-7416-4879-9791-622684c9c688",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76a2ba1f-120a-4fba-abf2-219dd9973559",
      "documentation": "Enable and Configure Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_backup",
      "responses": [
        {
          "uuid": "d3a571d8-c968-42f5-997a-2aa1d381cf25",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42e72ea7-5be7-451c-8d33-3e08256c1307",
      "documentation": "Enable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_rescue",
      "responses": [
        {
          "uuid": "9c45fd8a-c84d-4929-8a0b-6ab4011e81e5",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the root password that can be used to access the booted rescue system.\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ae416ba8-4348-49b2-ac9d-a59d5dcdcb07",
      "documentation": "Power off a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweroff",
      "responses": [
        {
          "uuid": "82ed99be-ee77-4976-bf70-170d101b3eed",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "118cd7d4-8fcb-4c09-95e6-3a998a5a5be3",
      "documentation": "Power on a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweron",
      "responses": [
        {
          "uuid": "d58fbbb2-547c-4fb8-84f9-c15644d13aec",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "056a08c9-c263-4ece-bdb7-b39a3b3af624",
      "documentation": "Soft-reboot a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reboot",
      "responses": [
        {
          "uuid": "cb545f14-1b0e-4a02-bd3d-570fd622ddd5",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00faf7b7-7aa6-4ab7-92af-09b35ca14fc9",
      "documentation": "Rebuild a Server from an Image",
      "method": "post",
      "endpoint": "servers/:id/actions/rebuild",
      "responses": [
        {
          "uuid": "7893de8f-ae95-4e4f-9f8d-9c7ef983a35d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87468dc6-8ac4-40ee-b930-d8ff21621f63",
      "documentation": "Remove from Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/remove_from_placement_group",
      "responses": [
        {
          "uuid": "e56bd444-e5ff-408e-8d87-4a2612c3e34f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aed0b63f-516c-453a-a539-e517deb3f45f",
      "documentation": "Request Console for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/request_console",
      "responses": [
        {
          "uuid": "ceffc42a-1a77-41bc-8ea9-2baede77f863",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"password\": \"9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\",\n  \"wss_url\": \"wss://console.hetzner.cloud/?server_id=1&token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdbe69fe-4f96-4e48-965e-c3a7d3ee93a9",
      "documentation": "Reset a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset",
      "responses": [
        {
          "uuid": "9babbfc2-7231-4ab5-914c-9739ab88bec2",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9828cf4-e406-4af4-8571-8eb6ea6df538",
      "documentation": "Reset root Password of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset_password",
      "responses": [
        {
          "uuid": "3a038535-9821-4969-ab97-424166dc418b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the new root password that will be active if the Action succeeds.\n\nThe `action` key in the reply contains an Action object with this structure:\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "025a6bbd-0575-4704-8d96-ddf59f5b122d",
      "documentation": "Shutdown a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/shutdown",
      "responses": [
        {
          "uuid": "faec579a-1359-4a74-8e10-083850975f24",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39b8c3ee-d150-4280-8be4-6ef7136c8959",
      "documentation": "Get an Action for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "f6ba8c3f-7020-4b3c-9ffe-9aa7a4745dc6",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "49df5c91-7527-4d81-a13a-98a630273723",
      "documentation": "Get Metrics for a Server",
      "method": "get",
      "endpoint": "servers/:id/metrics",
      "responses": [
        {
          "uuid": "ec5075f4-c836-410f-831d-d71853ef797f",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de13777a-d37c-46ed-b624-a0c34b8c6d96",
      "documentation": "Get all SSH keys",
      "method": "get",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "08e31b7e-f316-47c0-87d7-20c65d81b94a",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"ssh_keys\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_keys` key in the reply contains an array of SSH key objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e11ac187-644b-4c83-8425-c1a8703d13e7",
      "documentation": "Create an SSH key",
      "method": "post",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "b77f6e62-12a1-4414-aef4-0ca2b9a96786",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `ssh_key` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b1683505-8c14-40b3-afa0-8ecd65c3ec87",
      "documentation": "Delete an SSH key",
      "method": "delete",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "31a51a80-df90-4b92-9ead-c51388ee1f6d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SSH key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a4376e3-a479-4105-b275-a3b506cedbf7",
      "documentation": "Get a SSH key",
      "method": "get",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "0219168f-fc83-4d98-94f1-0edd1235887d",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains an SSH key object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22b51927-0d01-48dc-a480-23ea8cdb199d",
      "documentation": "Update an SSH key",
      "method": "put",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "24c11627-d51d-4fe0-a6f7-12d553dc9ac6",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains the modified SSH key object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c6be9bd-7227-493a-8d7c-2687f758c5b9",
      "documentation": "Get all Volumes",
      "method": "get",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "24bfd6a0-57a9-470a-93a6-603f00c72b19",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"volumes\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"format\": \"xfs\",\n      \"id\": 42,\n      \"labels\": {},\n      \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'datatype.boolean'}}\n      },\n      \"server\": 12,\n      \"size\": 42,\n      \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volumes` key contains a list of volumes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef2bff30-742f-4cb3-8dcb-3f1456f87cfc",
      "documentation": "Create a Volume",
      "method": "post",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "45b85aff-73f8-44cf-8141-33c5df3b11ca",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `volume` key contains the Volume that was just created\n\nThe `action` key contains the Action tracking Volume creation\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "555b9bee-fb92-4165-b4d8-467b6f8332a6",
      "documentation": "Delete a Volume",
      "method": "delete",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "7e417a13-4d71-446b-9870-ea8ede881169",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Volume deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3166158b-c74a-4425-bb46-7fd6ecbd6cfc",
      "documentation": "Get a Volume",
      "method": "get",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "9190f90a-4ae9-495c-9ef0-41894167107e",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4ee896d-bda7-4cb4-920f-c773927c587d",
      "documentation": "Update a Volume",
      "method": "put",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "8b7a6ccb-f22a-4a63-8f90-aa8014e34d17",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'datatype.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the updated volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab3625da-c6e0-4970-9679-506cdc84536b",
      "documentation": "Get all Actions for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions",
      "responses": [
        {
          "uuid": "bbe97b30-8127-4277-9ee6-8d0e0cd36e8f",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7dbdb2bc-34c8-4f28-9585-76410d945a2b",
      "documentation": "Attach Volume to a Server",
      "method": "post",
      "endpoint": "volumes/:id/actions/attach",
      "responses": [
        {
          "uuid": "804c4d77-a03a-4e30-8e4e-a447cf875f69",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48120293-ea7d-4442-8e81-37a1fce03c69",
      "documentation": "Change Volume Protection",
      "method": "post",
      "endpoint": "volumes/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "2a463dee-e76d-4ce5-88b7-f355ce05543e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3e1b7be-508f-43c3-bc0a-317fb954c82d",
      "documentation": "Detach Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/detach",
      "responses": [
        {
          "uuid": "6490724e-34f8-4ec8-b6f9-64fd3df16b9e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96ace0a3-11ca-4767-a09a-3f1144e0081e",
      "documentation": "Resize Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/resize",
      "responses": [
        {
          "uuid": "67a7c7ba-c8f4-4152-976d-e31e1a728238",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `resize_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c4cb047-bbbf-414b-8b74-3eae0b1aacb8",
      "documentation": "Get an Action for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "87eeca69-73d9-4520-b2f1-eb5293f64ba5",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Volume Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}