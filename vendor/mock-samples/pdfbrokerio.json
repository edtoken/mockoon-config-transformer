{
  "uuid": "0f87b913-5b24-4694-b3e4-c1c345cdb060",
  "lastMigration": 24,
  "name": "PdfBroker.io API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b6b77e6c-e37a-4306-b49c-e92d4a642e05",
      "documentation": "Basic method to verify api is up and running",
      "method": "get",
      "endpoint": "api/pdf",
      "responses": [
        {
          "uuid": "5c2c9627-08f1-44bb-8274-f639f31cde6b",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "84f68465-a983-4684-a9b0-d1f8941ff42e",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f50787b3-d9e6-4101-b5e2-3e14cfc27156",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c11c0013-f6ce-472e-9199-3b1a5ce39cdf",
      "documentation": "Concatenate multiple pdf files into single pdf file..",
      "method": "post",
      "endpoint": "api/pdf/pdfconcat",
      "responses": [
        {
          "uuid": "3f07f4d1-e32d-43d7-a4e4-ac936ee160e1",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88cb5779-c426-410a-b5dd-692c8013dbd5",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04b0c439-4524-4619-9fdd-b0cb3ce4c81f",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de62df55-8a1d-4b63-8398-51d10912075e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4dc814a-7313-4355-aeac-318e5f31675b",
      "documentation": "Generate an image of to provided pdf file",
      "method": "post",
      "endpoint": "api/pdf/pdftoimage",
      "responses": [
        {
          "uuid": "50ef2f6e-2704-4eb2-be06-4ccaa0433d3f",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"ImageBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Generate an image of the provided pdf file. Either the image file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07290111-5c67-45eb-bb5d-0db2f5254603",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31f13cb1-f4dc-43e1-a661-283ab1835c4a",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c0b9fb8-e502-492d-99aa-c5088d0f76f9",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57e71a60-62f0-4f74-a0ae-07c1babc0836",
      "documentation": "Write text on a page in a pdf document.",
      "method": "post",
      "endpoint": "api/pdf/pdfwritestring",
      "responses": [
        {
          "uuid": "e2a9de28-7f68-429e-9568-6e3ace169480",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe015cda-ef99-4ae7-8d10-1405563e7833",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f525209-8a04-4df9-a503-8439432622a3",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13d33ecc-8a31-4848-bbc9-2786112a261b",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "542dfb09-1f9e-4d4b-9183-799df13094c8",
      "documentation": "Generate pdf file from url using the excellent tool wkhtmltopdf.",
      "method": "post",
      "endpoint": "api/pdf/wkhtmltopdf",
      "responses": [
        {
          "uuid": "f129be6d-d695-4dd0-9b1b-5cdc4abafe34",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "08601954-aa2d-4eb1-8888-5554cf7b47dc",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs executing request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f49ad4b-0274-40b9-8f84-2e361119ed16",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70b30077-4112-49a4-a30e-2de47d306f4e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb2f3ed9-2314-4527-b476-c2bc12ffdf97",
      "documentation": "Create pdf-file from complete XSL-FO document.",
      "method": "post",
      "endpoint": "api/pdf/xslfo",
      "responses": [
        {
          "uuid": "fcdb27d0-27a5-42b3-a656-3f761eb530ac",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71bbf5f4-a227-4ec3-9fd0-b29df26c7311",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61474180-8bcf-4d08-80e9-383ee8993a4e",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f039f67-18bb-4cf5-9fa2-d9c6ccb0a418",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a17aa3c7-e6bd-4734-8b86-378eae498bce",
      "documentation": "Create pdf-file from transforming xml document with Xsl-Fo transform document.",
      "method": "post",
      "endpoint": "api/pdf/xslfowithtransform",
      "responses": [
        {
          "uuid": "99e02706-2a40-4aa4-a6ed-279392d18749",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fd39d6e-f328-4b0d-aa29-3a243a62966b",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05304a15-0183-45cb-938e-3a93295bf9e9",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e185d5d-2f4c-4fc1-9ebc-94f4fdd1d1ee",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}