{
  "uuid": "8f4e2e28-dbbf-4879-9ef9-280be16519ab",
  "lastMigration": 24,
  "name": "AWS CodeBuild",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "332c8fed-b587-4982-8b1f-cc88c2567567",
      "documentation": "Deletes one or more builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchDeleteBuilds",
      "responses": [
        {
          "uuid": "58e3d7f1-7341-4846-8e2f-cd584f676133",
          "body": "{\n  \"buildsDeleted\": [\n    \"\"\n  ],\n  \"buildsNotDeleted\": [\n    {\n      \"id\": \"\",\n      \"statusCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbe68358-169c-43fb-9e7e-5528317668d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cceb75d0-f8c9-476d-89c8-3d1396b51aa9",
      "documentation": "Retrieves information about one or more batch builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetBuildBatches",
      "responses": [
        {
          "uuid": "8b2853e5-7fc1-422d-93f9-7cd4b60e8e32",
          "body": "{\n  \"buildBatches\": [\n    {\n      \"id\": \"\",\n      \"arn\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentPhase\": \"\",\n      \"buildBatchStatus\": \"\",\n      \"sourceVersion\": \"\",\n      \"resolvedSourceVersion\": \"\",\n      \"projectName\": \"\",\n      \"phases\": [\n        {\n          \"phaseType\": \"\",\n          \"phaseStatus\": \"\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\",\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"durationInSeconds\": {{faker 'datatype.number'}},\n          \"contexts\": [\n            {\n              \"statusCode\": \"\",\n              \"message\": \"\"\n            }\n          ]\n        }\n      ],\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'datatype.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'datatype.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"location\": \"\",\n          \"sha256sum\": \"\",\n          \"md5sum\": \"\",\n          \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'datatype.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"logConfig\": {\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"buildTimeoutInMinutes\": {{faker 'datatype.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n      \"complete\": {{faker 'datatype.boolean'}},\n      \"initiator\": \"\",\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"encryptionKey\": \"\",\n      \"buildBatchNumber\": {{faker 'datatype.number'}},\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"buildBatchConfig\": {\n        \"serviceRole\": \"\",\n        \"combineArtifacts\": {{faker 'datatype.boolean'}},\n        \"restrictions\": {\n          \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n          \"computeTypesAllowed\": [\n            \"\"\n          ]\n        },\n        \"timeoutInMins\": {{faker 'datatype.number'}}\n      },\n      \"buildGroups\": [\n        {\n          \"identifier\": \"\",\n          \"dependsOn\": [\n            \"\"\n          ],\n          \"ignoreFailure\": {{faker 'datatype.boolean'}},\n          \"currentBuildSummary\": {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          },\n          \"priorBuildSummaryList\": [\n            {\n              \"arn\": \"\",\n              \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n              \"buildStatus\": \"\",\n              \"primaryArtifact\": {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              },\n              \"secondaryArtifacts\": [\n                {\n                  \"type\": \"\",\n                  \"location\": \"\",\n                  \"identifier\": \"\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"debugSessionEnabled\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"buildBatchesNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93292348-152b-4fb8-b64e-aab362a0dfe8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a8a88cb-158b-4ccd-96b6-715d2eee3948",
      "documentation": "Gets information about one or more builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetBuilds",
      "responses": [
        {
          "uuid": "30cb4440-7fc8-4692-920c-a7c949354bbb",
          "body": "{\n  \"builds\": [\n    {\n      \"id\": \"\",\n      \"arn\": \"\",\n      \"buildNumber\": {{faker 'datatype.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentPhase\": \"\",\n      \"buildStatus\": \"\",\n      \"sourceVersion\": \"\",\n      \"resolvedSourceVersion\": \"\",\n      \"projectName\": \"\",\n      \"phases\": [\n        {\n          \"phaseType\": \"\",\n          \"phaseStatus\": \"\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\",\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"durationInSeconds\": {{faker 'datatype.number'}},\n          \"contexts\": [\n            {\n              \"statusCode\": \"\",\n              \"message\": \"\"\n            }\n          ]\n        }\n      ],\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'datatype.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'datatype.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"location\": \"\",\n          \"sha256sum\": \"\",\n          \"md5sum\": \"\",\n          \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'datatype.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"logs\": {\n        \"groupName\": \"\",\n        \"streamName\": \"\",\n        \"deepLink\": \"\",\n        \"s3DeepLink\": \"\",\n        \"cloudWatchLogsArn\": \"\",\n        \"s3LogsArn\": \"\",\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"timeoutInMinutes\": {{faker 'datatype.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n      \"buildComplete\": {{faker 'datatype.boolean'}},\n      \"initiator\": \"\",\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"networkInterface\": {\n        \"subnetId\": \"\",\n        \"networkInterfaceId\": \"\"\n      },\n      \"encryptionKey\": \"\",\n      \"exportedEnvironmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"reportArns\": [\n        \"\"\n      ],\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"debugSession\": {\n        \"sessionEnabled\": {{faker 'datatype.boolean'}},\n        \"sessionTarget\": \"\"\n      },\n      \"buildBatchArn\": \"\"\n    }\n  ],\n  \"buildsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "97dee77e-11d5-40d4-86ea-6ae8b582d436",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e09c01dc-53dc-49e0-a37f-f38bf4d235cb",
      "documentation": "Gets information about one or more build projects.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetProjects",
      "responses": [
        {
          "uuid": "cc9d4e7b-bd31-4a26-8d24-a9c5cf204257",
          "body": "{\n  \"projects\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"description\": \"\",\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'datatype.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'datatype.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"sourceVersion\": \"\",\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"path\": \"\",\n          \"namespaceType\": \"\",\n          \"name\": \"\",\n          \"packaging\": \"\",\n          \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'datatype.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"timeoutInMinutes\": {{faker 'datatype.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n      \"encryptionKey\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"webhook\": {\n        \"url\": \"\",\n        \"payloadUrl\": \"\",\n        \"secret\": \"\",\n        \"branchFilter\": \"\",\n        \"filterGroups\": [\n          [\n            {\n              \"type\": \"\",\n              \"pattern\": \"\",\n              \"excludeMatchedPattern\": {{faker 'datatype.boolean'}}\n            }\n          ]\n        ],\n        \"buildType\": \"\",\n        \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"badge\": {\n        \"badgeEnabled\": {{faker 'datatype.boolean'}},\n        \"badgeRequestUrl\": \"\"\n      },\n      \"logsConfig\": {\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"buildBatchConfig\": {\n        \"serviceRole\": \"\",\n        \"combineArtifacts\": {{faker 'datatype.boolean'}},\n        \"restrictions\": {\n          \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n          \"computeTypesAllowed\": [\n            \"\"\n          ]\n        },\n        \"timeoutInMins\": {{faker 'datatype.number'}}\n      },\n      \"concurrentBuildLimit\": {{faker 'datatype.number'}},\n      \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n      \"publicProjectAlias\": \"\",\n      \"resourceAccessRole\": \"\"\n    }\n  ],\n  \"projectsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94f18380-a215-41a9-a856-0f9428511128",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e005663e-065e-446e-b887-77fb28733e25",
      "documentation": " Returns an array of report groups. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetReportGroups",
      "responses": [
        {
          "uuid": "f350338c-9d35-40be-9f00-74eceb29a13e",
          "body": "{\n  \"reportGroups\": [\n    {\n      \"arn\": \"\",\n      \"name\": \"\",\n      \"type\": \"\",\n      \"exportConfig\": {\n        \"exportConfigType\": \"\",\n        \"s3Destination\": {\n          \"bucket\": \"\",\n          \"bucketOwner\": \"\",\n          \"path\": \"\",\n          \"packaging\": \"\",\n          \"encryptionKey\": \"\",\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"status\": \"\"\n    }\n  ],\n  \"reportGroupsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1dbe9923-a3b6-4be1-b784-fe1e8ce15a6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c0e0908-ffd1-4583-8d51-588d8e085011",
      "documentation": " Returns an array of reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetReports",
      "responses": [
        {
          "uuid": "1462eb32-b5f2-411b-85fc-ccc9bdd2f8d0",
          "body": "{\n  \"reports\": [\n    {\n      \"arn\": \"\",\n      \"type\": \"\",\n      \"name\": \"\",\n      \"reportGroupArn\": \"\",\n      \"executionId\": \"\",\n      \"status\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"expired\": \"{{faker 'date.recent' 365}}\",\n      \"exportConfig\": {\n        \"exportConfigType\": \"\",\n        \"s3Destination\": {\n          \"bucket\": \"\",\n          \"bucketOwner\": \"\",\n          \"path\": \"\",\n          \"packaging\": \"\",\n          \"encryptionKey\": \"\",\n          \"encryptionDisabled\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"truncated\": {{faker 'datatype.boolean'}},\n      \"testSummary\": {\n        \"total\": {{faker 'datatype.number'}},\n        \"statusCounts\": {},\n        \"durationInNanoSeconds\": {{faker 'datatype.number'}}\n      },\n      \"codeCoverageSummary\": {\n        \"lineCoveragePercentage\": {{faker 'datatype.float'}},\n        \"linesCovered\": {{faker 'datatype.number'}},\n        \"linesMissed\": {{faker 'datatype.number'}},\n        \"branchCoveragePercentage\": {{faker 'datatype.float'}},\n        \"branchesCovered\": {{faker 'datatype.number'}},\n        \"branchesMissed\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"reportsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e7e0757-9c26-49c3-a3a9-329394196f6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82cf4fec-9128-44c9-90e6-18ea6a496280",
      "documentation": "Creates a build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateProject",
      "responses": [
        {
          "uuid": "d4f44c29-4abf-4698-b131-ec0c832f4aa6",
          "body": "{\n  \"project\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"description\": \"\",\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"sourceVersion\": \"\",\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"path\": \"\",\n      \"namespaceType\": \"\",\n      \"name\": \"\",\n      \"packaging\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"timeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"encryptionKey\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"webhook\": {\n      \"url\": \"\",\n      \"payloadUrl\": \"\",\n      \"secret\": \"\",\n      \"branchFilter\": \"\",\n      \"filterGroups\": [\n        [\n          {\n            \"type\": \"\",\n            \"pattern\": \"\",\n            \"excludeMatchedPattern\": {{faker 'datatype.boolean'}}\n          }\n        ]\n      ],\n      \"buildType\": \"\",\n      \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"badge\": {\n      \"badgeEnabled\": {{faker 'datatype.boolean'}},\n      \"badgeRequestUrl\": \"\"\n    },\n    \"logsConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'datatype.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'datatype.number'}}\n    },\n    \"concurrentBuildLimit\": {{faker 'datatype.number'}},\n    \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n    \"publicProjectAlias\": \"\",\n    \"resourceAccessRole\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "40a23dbf-3fd8-461d-bedd-98b80d35ce95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f029af4d-7690-4fbc-85be-e9c50cf97d37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51bb876c-a0bd-4940-98ed-1761c7cd934d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6332eba4-691a-41ec-a40d-407858572d3e",
      "documentation": " Creates a report group. A report group contains a collection of reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateReportGroup",
      "responses": [
        {
          "uuid": "fa232bf1-b438-476e-bc8b-53d6325d5192",
          "body": "{\n  \"reportGroup\": {\n    \"arn\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"exportConfig\": {\n      \"exportConfigType\": \"\",\n      \"s3Destination\": {\n        \"bucket\": \"\",\n        \"bucketOwner\": \"\",\n        \"path\": \"\",\n        \"packaging\": \"\",\n        \"encryptionKey\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}}\n      }\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "13b2a8b7-c8ba-4fe5-81c2-58756c69d989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a9c1c11-dc4f-4dea-923c-c1c004a86558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ccd28c4d-60f9-4ade-9ee3-f449da7e41d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "231a8af3-2fd6-4b46-ae3a-dc683dd9d2aa",
      "documentation": "<p>For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.</p> <important> <p>If you enable webhooks for an CodeBuild project, and the project is used as a build step in CodePipeline, then two identical builds are created for each commit. One build is triggered through webhooks, and one through CodePipeline. Because billing is on a per-build basis, you are billed for both builds. Therefore, if you are using CodePipeline, we recommend that you disable webhooks in CodeBuild. In the CodeBuild console, clear the Webhook box. For more information, see step 5 in <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console\">Change a Build Project's Settings</a>.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateWebhook",
      "responses": [
        {
          "uuid": "fe7b1aba-f2c3-42ea-9f5a-1ce18ee08b08",
          "body": "{\n  \"webhook\": {\n    \"url\": \"\",\n    \"payloadUrl\": \"\",\n    \"secret\": \"\",\n    \"branchFilter\": \"\",\n    \"filterGroups\": [\n      [\n        {\n          \"type\": \"\",\n          \"pattern\": \"\",\n          \"excludeMatchedPattern\": {{faker 'datatype.boolean'}}\n        }\n      ]\n    ],\n    \"buildType\": \"\",\n    \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f32487d3-c546-41e4-bc26-3a6c5f730ca1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4678fd18-3776-4d02-b6d7-26100c6cf4b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eef9a324-0143-4731-b3f8-aee7c4cfc39c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a6e8828-4dcc-4d8a-b243-68a757db1dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3afd1e2c-0d51-4dab-b72c-4bccf12cc897",
      "documentation": "Deletes a batch build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteBuildBatch",
      "responses": [
        {
          "uuid": "dce8e45a-25ae-4161-bce6-6f97446846d3",
          "body": "{\n  \"statusCode\": \"\",\n  \"buildsDeleted\": [\n    \"\"\n  ],\n  \"buildsNotDeleted\": [\n    {\n      \"id\": \"\",\n      \"statusCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8591bf8a-14cd-447a-8b8e-167a9530757b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "237c4506-61e1-45a6-989d-d67f486143fb",
      "documentation": " Deletes a build project. When you delete a project, its builds are not deleted. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteProject",
      "responses": [
        {
          "uuid": "bbdde875-6ef3-43dc-ba0c-a5b7759d15c5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d4c8264-c56f-458d-82ac-abe0ed2b5624",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06aa2988-a704-4d2e-8b32-fb5dea4635f6",
      "documentation": " Deletes a report. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteReport",
      "responses": [
        {
          "uuid": "3162187c-c315-49f6-85c4-8deabceac31d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b861711c-2928-4630-a4ec-98f54fd1edce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d5e9992-aee2-45c9-bbc6-4207d00bf9ba",
      "documentation": "Deletes a report group. Before you delete a report group, you must delete its reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteReportGroup",
      "responses": [
        {
          "uuid": "278e25a1-e4d4-4ef9-a70d-8f44d24903e0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27a5f57f-ba92-4cd5-9b53-c36933efdd11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad8a9607-24fc-4b1a-92df-214cfcb83dcb",
      "documentation": " Deletes a resource policy that is identified by its resource ARN. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "34bc1ff2-2282-401d-865c-64e263d7f319",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "055e3881-20f3-4062-8b2c-3935b221a22f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e739d685-23ff-43ce-8517-42ec2b0af899",
      "documentation": " Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteSourceCredentials",
      "responses": [
        {
          "uuid": "35c2a2f8-eb86-4464-86c2-769f1c26a595",
          "body": "{\n  \"arn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70949d5d-49bc-4be4-a2c5-18fe98866ae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb8a2a45-60b8-4ae9-a67f-6a9a0963466c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0d84e77-ec42-4231-8756-6e39b989fd2f",
      "documentation": "For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops CodeBuild from rebuilding the source code every time a code change is pushed to the repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteWebhook",
      "responses": [
        {
          "uuid": "cd961fdc-5477-4aea-b156-c3c8bca669ce",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e85c6105-20ff-4acc-937e-fc6fd2a2e0e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78fe51d8-9652-4b86-9beb-5dd133dd4937",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29ddc995-1e78-4a86-9631-5e07dc27eb68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40c73cd8-c031-4bdf-bd69-0c3e25011958",
      "documentation": "Retrieves one or more code coverage reports.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DescribeCodeCoverages",
      "responses": [
        {
          "uuid": "6dc76990-6db1-4eb0-ac0e-46144e3dd603",
          "body": "{\n  \"nextToken\": \"\",\n  \"codeCoverages\": [\n    {\n      \"id\": \"\",\n      \"reportARN\": \"\",\n      \"filePath\": \"\",\n      \"lineCoveragePercentage\": {{faker 'datatype.float'}},\n      \"linesCovered\": {{faker 'datatype.number'}},\n      \"linesMissed\": {{faker 'datatype.number'}},\n      \"branchCoveragePercentage\": {{faker 'datatype.float'}},\n      \"branchesCovered\": {{faker 'datatype.number'}},\n      \"branchesMissed\": {{faker 'datatype.number'}},\n      \"expired\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dfab3537-3150-4caa-ab22-e6cec565a75c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffe7e020-55b2-46b3-a638-02025f6fa1da",
      "documentation": " Returns a list of details about test cases for a report. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DescribeTestCases",
      "responses": [
        {
          "uuid": "88421501-13a5-4b7a-bec0-d643d99dcd70",
          "body": "{\n  \"nextToken\": \"\",\n  \"testCases\": [\n    {\n      \"reportArn\": \"\",\n      \"testRawDataPath\": \"\",\n      \"prefix\": \"\",\n      \"name\": \"\",\n      \"status\": \"\",\n      \"durationInNanoSeconds\": {{faker 'datatype.number'}},\n      \"message\": \"\",\n      \"expired\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36c90a36-4055-4b51-874e-8439ccf589b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe06e0f8-3f05-4390-ad4d-76fed2bd5ae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bef080de-3724-453e-aa43-3f6a814c3940",
      "documentation": "Analyzes and accumulates test report values for the specified test reports.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.GetReportGroupTrend",
      "responses": [
        {
          "uuid": "7af8372c-2fad-4403-a014-89168c3c641d",
          "body": "{\n  \"stats\": {\n    \"average\": \"\",\n    \"max\": \"\",\n    \"min\": \"\"\n  },\n  \"rawData\": [\n    {\n      \"reportArn\": \"\",\n      \"data\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1c81fa33-0b96-4db2-8141-aa67acf0ceb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f78341e0-e376-41a9-b3a2-21ba22269cdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0cf6385e-71b3-4575-afb5-13e61a7a968b",
      "documentation": " Gets a resource policy that is identified by its resource ARN. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.GetResourcePolicy",
      "responses": [
        {
          "uuid": "71525673-af01-4de9-a802-09c96d418ad7",
          "body": "{\n  \"policy\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "558785dd-3b9d-4df2-a464-8004e89e0f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "761b3a26-8fea-4163-b0a9-f15483325275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "beb475ea-092f-421c-ad41-2f7157c83385",
      "documentation": " Imports the source repository credentials for an CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ImportSourceCredentials",
      "responses": [
        {
          "uuid": "3b055c39-cf2f-45ca-abbe-2f336d6f3c8b",
          "body": "{\n  \"arn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d74cc598-2eae-4587-a0f2-c1e715ec138d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5a07caf-5bbe-4d72-b5e1-7aa10144e136",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96c9d4e9-8899-4e32-a444-acb6caac513f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c37725e-591d-4893-8adf-7644f2354358",
      "documentation": "Resets the cache for a project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.InvalidateProjectCache",
      "responses": [
        {
          "uuid": "05cf6b5d-9393-410c-8551-ccc0f142cec7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d429a928-6167-4990-bdd6-14b5d729f662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c7592f8-74c7-4f99-929b-50b41f6f6939",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af3bbfb0-b5d2-4dee-9981-a36ffb6ab735",
      "documentation": "Retrieves the identifiers of your build batches in the current region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildBatches",
      "responses": [
        {
          "uuid": "fa60c998-6843-4b80-9a31-72f4f42c6add",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b700a4a-c6cc-44ba-aa6a-ae07fcc8e3ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad59208e-0c96-4f8c-afd7-693d54bc8070",
      "documentation": "Retrieves the identifiers of the build batches for a specific project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildBatchesForProject",
      "responses": [
        {
          "uuid": "45801bd1-b280-4bfe-9100-e7495d344cda",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "becf2c37-9c81-455b-b4b4-e9ee67aebb6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0209dbe-8e14-4459-ba08-addb4a0b478e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a94fc78-958c-447d-8d12-2ee98b8e9605",
      "documentation": "Gets a list of build IDs, with each build ID representing a single build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuilds",
      "responses": [
        {
          "uuid": "2d534bfc-79bb-453f-b446-20f76a2ef2bc",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eeb1d324-36f4-4288-b774-a8929229e0b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08fcd5e8-5823-4ec2-9f87-1607f0772eb6",
      "documentation": "Gets a list of build identifiers for the specified build project, with each build identifier representing a single build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildsForProject",
      "responses": [
        {
          "uuid": "8e03eb01-a0c2-4b13-bae8-4416e3ca6ebb",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "30c0ea49-ad31-4180-96fc-270ea132d328",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3305caa9-edf5-4156-b080-c6181d993ccc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e33e7e72-c8a3-413e-876f-c45d522a6459",
      "documentation": "Gets information about Docker images that are managed by CodeBuild.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListCuratedEnvironmentImages",
      "responses": [
        {
          "uuid": "bd16ca5f-5d35-4d47-98de-797b2d8fb745",
          "body": "{\n  \"platforms\": [\n    {\n      \"platform\": \"\",\n      \"languages\": [\n        {\n          \"language\": \"\",\n          \"images\": [\n            {\n              \"name\": \"\",\n              \"description\": \"\",\n              \"versions\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee8512ce-0398-4704-8c8d-c0ba9008beea",
      "documentation": "Gets a list of build project names, with each build project name representing a single build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListProjects",
      "responses": [
        {
          "uuid": "3bee6d53-3384-4c69-99d7-77c1817b48cf",
          "body": "{\n  \"nextToken\": \"\",\n  \"projects\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4786db92-cc11-4de3-9e0a-94182a17723d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "231cba7d-07a5-4b8f-9fb0-f9e8ad8e8d03",
      "documentation": " Gets a list ARNs for the report groups in the current Amazon Web Services account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReportGroups",
      "responses": [
        {
          "uuid": "4d4ec9f3-bd90-4164-bf95-a0bbe557a1ee",
          "body": "{\n  \"nextToken\": \"\",\n  \"reportGroups\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3f7737d2-4855-472f-9aba-2b5e03996b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "057822d1-3c4e-45ca-a871-8abc41f5e3b3",
      "documentation": " Returns a list of ARNs for the reports in the current Amazon Web Services account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReports",
      "responses": [
        {
          "uuid": "5d113946-7985-43fb-966c-bfe2bc4e4e9d",
          "body": "{\n  \"nextToken\": \"\",\n  \"reports\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf8ae7e3-cc64-4741-a236-deaa1950f675",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87cdbdbd-95b6-400e-9968-91f912361ca3",
      "documentation": " Returns a list of ARNs for the reports that belong to a <code>ReportGroup</code>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReportsForReportGroup",
      "responses": [
        {
          "uuid": "b374ed7e-4f51-43df-857f-d3d672457cde",
          "body": "{\n  \"nextToken\": \"\",\n  \"reports\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29bcef2b-1d7c-439c-a00a-9d2f5d77db05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84b980e2-5bde-440d-aad3-5630a77ac12d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "095cad14-9478-4be0-8d64-b0a8d520e6d6",
      "documentation": " Gets a list of projects that are shared with other Amazon Web Services accounts or users. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSharedProjects",
      "responses": [
        {
          "uuid": "43ffb190-0eed-43f0-a506-ffd663df9996",
          "body": "{\n  \"nextToken\": \"\",\n  \"projects\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61fcb680-dd5b-4a17-a6ae-d257aaea5942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb58bcd0-b98c-4fbe-a54e-feb6f06638db",
      "documentation": " Gets a list of report groups that are shared with other Amazon Web Services accounts or users. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSharedReportGroups",
      "responses": [
        {
          "uuid": "2356e137-2193-4736-bd82-41cb376863c4",
          "body": "{\n  \"nextToken\": \"\",\n  \"reportGroups\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "204abd2a-636c-411e-b3af-c55846afa29f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea11a707-bb3a-4e0a-ac15-7e19c7a041c8",
      "documentation": " Returns a list of <code>SourceCredentialsInfo</code> objects. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSourceCredentials",
      "responses": [
        {
          "uuid": "24133349-7e95-4fc3-9336-6e45517d8753",
          "body": "{\n  \"sourceCredentialsInfos\": [\n    {\n      \"arn\": \"\",\n      \"serverType\": \"\",\n      \"authType\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5754ca0-1c0e-4dc0-a001-1886ef3f74e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6c02145-1b0c-4473-ac0b-15e03d2a478c",
      "documentation": " Stores a resource policy for the ARN of a <code>Project</code> or <code>ReportGroup</code> object. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.PutResourcePolicy",
      "responses": [
        {
          "uuid": "65d2721b-2cb7-4d3f-91dd-397dc3be88c8",
          "body": "{\n  \"resourceArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "442301d2-daa1-45a3-b6c1-b8de6e57964e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2fb53b8-3d38-433e-886b-5e10df087cac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dc35973-4cb9-4406-88ab-44abf708d64c",
      "documentation": "Restarts a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.RetryBuild",
      "responses": [
        {
          "uuid": "6c49d477-5975-4cef-be1b-30d80b092204",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"buildComplete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'datatype.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d10a2ebf-22a7-4690-aa0f-53690289ac77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d05342fa-ff5d-4241-b5a5-7c9e4dc027a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "188f57e9-7572-4981-9f27-ee115ed74ddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d692e200-1cc3-41d0-921b-94827c02b12b",
      "documentation": "Restarts a failed batch build. Only batch builds that have failed can be retried.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.RetryBuildBatch",
      "responses": [
        {
          "uuid": "826a7a2d-22db-4af1-8a3f-9fce580dfd56",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"complete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'datatype.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'datatype.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'datatype.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'datatype.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "969f69ea-6c6b-4b6b-aa76-4372f099c23f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0794c606-f0ed-4af4-b348-6f392ea0c1e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89ed649a-726a-4384-b1d5-3b17238cbcc9",
      "documentation": "Starts running a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StartBuild",
      "responses": [
        {
          "uuid": "c872cee8-307f-4d36-9350-e7650f9121a8",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"buildComplete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'datatype.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f54e23b9-aa23-423f-b3bd-9630df299da2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8a02810-ff13-46dd-81c4-418bd2998b00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7415efe1-f98f-4717-846a-0cdccbd2cbd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4447ffb0-e5bf-40f9-a090-061c8e6fc509",
      "documentation": "Starts a batch build for a project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StartBuildBatch",
      "responses": [
        {
          "uuid": "935d049b-5e9f-49ff-b690-4468678f85f2",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"complete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'datatype.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'datatype.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'datatype.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'datatype.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "161566ed-74c0-4092-a168-48d35aa1d1bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ec6b297-6e76-47c8-9d66-1fd707c2dd51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1736cc8d-6b39-463f-be9c-09a594e220c5",
      "documentation": "Attempts to stop running a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StopBuild",
      "responses": [
        {
          "uuid": "813d6a37-3f4d-4c18-80da-693eb503918b",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"buildComplete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'datatype.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc2daf57-cbf5-446d-9a42-b3a83a59aa95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8856c2f-c6ec-4516-81ac-808f80d64c5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "221a6150-82bb-4c3c-9f88-4abf6448faf0",
      "documentation": "Stops a running batch build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StopBuildBatch",
      "responses": [
        {
          "uuid": "ba7ccfb6-0218-4e04-9a88-afdcd1d47e7f",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'datatype.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"complete\": {{faker 'datatype.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'datatype.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'datatype.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'datatype.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'datatype.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "335036f7-3b95-4670-a767-97514b943d97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0428e9b7-c644-42b4-a505-a999fba83922",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23c93d94-75da-4c6c-b275-23fa141cb43d",
      "documentation": "Changes the settings of a build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateProject",
      "responses": [
        {
          "uuid": "3b90c70b-71f7-4f1f-bdfb-678059857fdf",
          "body": "{\n  \"project\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"description\": \"\",\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'datatype.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'datatype.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'datatype.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'datatype.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'datatype.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'datatype.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"sourceVersion\": \"\",\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"path\": \"\",\n      \"namespaceType\": \"\",\n      \"name\": \"\",\n      \"packaging\": \"\",\n      \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n      \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'datatype.boolean'}},\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'datatype.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"timeoutInMinutes\": {{faker 'datatype.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'datatype.number'}},\n    \"encryptionKey\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"webhook\": {\n      \"url\": \"\",\n      \"payloadUrl\": \"\",\n      \"secret\": \"\",\n      \"branchFilter\": \"\",\n      \"filterGroups\": [\n        [\n          {\n            \"type\": \"\",\n            \"pattern\": \"\",\n            \"excludeMatchedPattern\": {{faker 'datatype.boolean'}}\n          }\n        ]\n      ],\n      \"buildType\": \"\",\n      \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"badge\": {\n      \"badgeEnabled\": {{faker 'datatype.boolean'}},\n      \"badgeRequestUrl\": \"\"\n    },\n    \"logsConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'datatype.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'datatype.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'datatype.number'}}\n    },\n    \"concurrentBuildLimit\": {{faker 'datatype.number'}},\n    \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n    \"publicProjectAlias\": \"\",\n    \"resourceAccessRole\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c38a8c04-c0b0-4cc5-a6ac-addba0fd270d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0961357e-4f9d-469c-8820-1b80eba2edaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf8a7930-4a9a-468b-b447-9405be90335e",
      "documentation": "<p>Changes the public visibility for a project. The project's build results, logs, and artifacts are available to the general public. For more information, see <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/public-builds.html\">Public build projects</a> in the <i>CodeBuild User Guide</i>.</p> <important> <p>The following should be kept in mind when making your projects public:</p> <ul> <li> <p>All of a project's build results, logs, and artifacts, including builds that were run when the project was private, are available to the general public.</p> </li> <li> <p>All build logs and artifacts are available to the public. Environment variables, source code, and other sensitive information may have been output to the build logs and artifacts. You must be careful about what information is output to the build logs. Some best practice are:</p> <ul> <li> <p>Do not store sensitive values, especially Amazon Web Services access key IDs and secret access keys, in environment variables. We recommend that you use an Amazon EC2 Systems Manager Parameter Store or Secrets Manager to store sensitive values.</p> </li> <li> <p>Follow <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/webhooks.html#webhook-best-practices\">Best practices for using webhooks</a> in the <i>CodeBuild User Guide</i> to limit which entities can trigger a build, and do not store the buildspec in the project itself, to ensure that your webhooks are as secure as possible.</p> </li> </ul> </li> <li> <p>A malicious user can use public builds to distribute malicious artifacts. We recommend that you review all pull requests to verify that the pull request is a legitimate change. We also recommend that you validate any artifacts with their checksums to make sure that the correct artifacts are being downloaded.</p> </li> </ul> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateProjectVisibility",
      "responses": [
        {
          "uuid": "aa463d2f-5254-43d9-8946-5384a5b1183b",
          "body": "{\n  \"projectArn\": \"\",\n  \"publicProjectAlias\": \"\",\n  \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1313f30e-db54-4cc7-8168-ccdbe0c649f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f040d39-162a-438b-b987-5998abbeb6df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "256a8bbf-a59b-4212-ac02-d805cd96d115",
      "documentation": " Updates a report group. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateReportGroup",
      "responses": [
        {
          "uuid": "92d436f1-66bc-4b43-8714-6317cb355c9b",
          "body": "{\n  \"reportGroup\": {\n    \"arn\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"exportConfig\": {\n      \"exportConfigType\": \"\",\n      \"s3Destination\": {\n        \"bucket\": \"\",\n        \"bucketOwner\": \"\",\n        \"path\": \"\",\n        \"packaging\": \"\",\n        \"encryptionKey\": \"\",\n        \"encryptionDisabled\": {{faker 'datatype.boolean'}}\n      }\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d4923d5-78ee-4df8-80d1-346c6115dba7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b66056a8-ac01-45b6-bfa9-e336444984a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bab5c687-8ed5-4660-bcd9-e60fd113ba5d",
      "documentation": "<p> Updates the webhook associated with an CodeBuild build project. </p> <note> <p> If you use Bitbucket for your repository, <code>rotateSecret</code> is ignored. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateWebhook",
      "responses": [
        {
          "uuid": "5e6bdc6a-0085-430c-a092-531d88a09048",
          "body": "{\n  \"webhook\": {\n    \"url\": \"\",\n    \"payloadUrl\": \"\",\n    \"secret\": \"\",\n    \"branchFilter\": \"\",\n    \"filterGroups\": [\n      [\n        {\n          \"type\": \"\",\n          \"pattern\": \"\",\n          \"excludeMatchedPattern\": {{faker 'datatype.boolean'}}\n        }\n      ]\n    ],\n    \"buildType\": \"\",\n    \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4964a428-c7e9-4beb-8efc-3f7eeddaaafd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4a85eed-49c0-432e-ab4f-9c592af689f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "031823b7-a3bc-4f6b-9eaf-6c530034a9db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}