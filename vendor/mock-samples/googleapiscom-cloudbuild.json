{
  "uuid": "e834a295-a7ab-410b-8404-347dd0b9d778",
  "lastMigration": 24,
  "name": "Cloud Build API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "580182f9-1488-4c33-88f7-c3dd69f94ec3",
      "documentation": "Deletes a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "6b2b153e-ce3d-4863-a440-8dc636b6ffae",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b068962-3613-48a3-9a0c-c19b2d8c76c5",
      "documentation": "Returns details of a `WorkerPool`.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "3bbea661-94e5-4fbd-8b49-915102265548",
          "body": "{\n  \"annotations\": {},\n  \"createTime\": \"\",\n  \"deleteTime\": \"\",\n  \"displayName\": \"\",\n  \"etag\": \"\",\n  \"name\": \"\",\n  \"networkConfig\": {\n    \"peeredNetwork\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n  \"uid\": \"\",\n  \"updateTime\": \"\",\n  \"workerConfig\": {\n    \"diskSizeGb\": \"\",\n    \"machineType\": \"\",\n    \"noExternalIp\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a58fb42-66d0-41ac-861c-8ad434f30611",
      "documentation": "Updates a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "506c1df8-02ee-4938-8892-9d78725b980e",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "41715c8e-056f-4373-bbda-47d76e03e643",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "e58e4dee-9031-43b9-85ac-309ce6e707a0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82a974b7-0104-485a-ad23-07cc9322ea81",
      "documentation": "Lists `WorkerPool`s in the given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "064b74b7-b7da-4d37-b8ef-1a97d9154fb7",
          "body": "{\n  \"workerPools\": [\n    {\n      \"annotations\": {},\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"displayName\": \"\",\n      \"etag\": \"\",\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"peeredNetwork\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n      \"uid\": \"\",\n      \"updateTime\": \"\",\n      \"workerConfig\": {\n        \"diskSizeGb\": \"\",\n        \"machineType\": \"\",\n        \"noExternalIp\": {{faker 'datatype.boolean'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cdf0d33-9cf6-4938-bc36-8d4f1c4553f2",
      "documentation": "Creates a `WorkerPool` to run the builds, and returns the new worker pool. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "post",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "0995307b-fc89-4e7e-bb76-6881bf47f849",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}