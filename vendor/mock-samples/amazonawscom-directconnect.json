{
  "uuid": "362e6cce-63df-4c0f-a26e-fd2919d3ad7b",
  "lastMigration": 24,
  "name": "AWS Direct Connect",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "8008668c-e43d-4f62-af37-2a2c682aa37b",
      "documentation": "Accepts a proposal request to attach a virtual private gateway or transit gateway to a Direct Connect gateway.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal",
      "responses": [
        {
          "uuid": "36cf6e4e-861e-41b5-a882-9a03de0dc97f",
          "body": "{\n  \"directConnectGatewayAssociation\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"associationState\": \"\",\n    \"stateChangeError\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"associationId\": \"\",\n    \"allowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"virtualGatewayId\": \"\",\n    \"virtualGatewayRegion\": \"\",\n    \"virtualGatewayOwnerAccount\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3add161-a1ed-47cc-937d-313bffad2df7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4156eede-4b66-45d7-a758-ec24bd7ea8ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a5af9a9-6110-4c89-9c67-1b546eb9f1f7",
      "documentation": "<p>Deprecated. Use <a>AllocateHostedConnection</a> instead.</p> <p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the specified interconnect.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AllocateConnectionOnInterconnect",
      "responses": [
        {
          "uuid": "68286e78-5398-4312-badb-54f6623864c1",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75cd9205-7150-48a9-9062-3708c5c6fe6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0aef9e0b-ab8b-4ce1-96da-5d31c1678441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f787e093-1429-4348-8825-18b79836712b",
      "documentation": "<p>Creates a hosted connection on the specified interconnect or a link aggregation group (LAG) of interconnects.</p> <p>Allocates a VLAN number and a specified amount of capacity (bandwidth) for use by a hosted connection on the specified interconnect or LAG of interconnects. Amazon Web Services polices the hosted connection for the specified capacity and the Direct Connect Partner must also police the hosted connection for the specified capacity.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "responses": [
        {
          "uuid": "0c125875-9a44-4ddf-ba9b-134c967078cc",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d81338f-325f-47ca-a0b2-06aaa945668d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06d9cf0f-caaf-40e7-8ac1-6f43a3e53b34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9f2dd58-d77b-4598-add3-8d2bee76faac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a69ccdec-db5d-4be9-8e2d-24f1ae8ce8b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82e240d9-032b-47a8-942e-e6550778a88d",
      "documentation": "<p>Provisions a private virtual interface to be owned by the specified account.</p> <p>Virtual interfaces created using this action must be confirmed by the owner using <a>ConfirmPrivateVirtualInterface</a>. Until then, the virtual interface is in the <code>Confirming</code> state and is not available to handle traffic.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "responses": [
        {
          "uuid": "a998eae2-efef-4d21-9be6-967904dc0c97",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef7f9e7b-6216-4b14-a43b-e54418f56542",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "439a4ba1-3b2d-4597-91f7-ff56e7ad103b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b56d6a74-2f6d-469e-91e6-ba560e12e7f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b807784-5918-4691-b51a-a28e2970a7f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7452224a-c688-42b2-beff-03140a606f8c",
      "documentation": "<p>Provisions a public virtual interface to be owned by the specified account.</p> <p>The owner of a connection calls this function to provision a public virtual interface to be owned by the specified account.</p> <p>Virtual interfaces created using this function must be confirmed by the owner using <a>ConfirmPublicVirtualInterface</a>. Until this step has been completed, the virtual interface is in the <code>confirming</code> state and is not available to handle traffic.</p> <p>When creating an IPv6 public virtual interface, omit the Amazon address and customer address. IPv6 addresses are automatically assigned from the Amazon pool of IPv6 addresses; you cannot specify custom IPv6 addresses.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "responses": [
        {
          "uuid": "d1e787e0-f2d6-4608-a6b2-1ad37bf80807",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e98e38fd-a87a-4a03-a896-5966d260c1e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "488057fb-a995-4ff3-a9e4-21da342459ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d57fadc-e27d-4899-83a3-600828502245",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d70b135-fa52-4b14-82ab-a19a0af4b94f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e672d0ef-41b6-445e-ab75-923e182eca2a",
      "documentation": "<p>Provisions a transit virtual interface to be owned by the specified account. Use this type of interface to connect a transit gateway to your Direct Connect gateway.</p> <p>The owner of a connection provisions a transit virtual interface to be owned by the specified account.</p> <p>After you create a transit virtual interface, it must be confirmed by the owner using <a>ConfirmTransitVirtualInterface</a>. Until this step has been completed, the transit virtual interface is in the <code>requested</code> state and is not available to handle traffic.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "responses": [
        {
          "uuid": "a1c55038-4110-4fba-ae86-06a8445624ed",
          "body": "{\n  \"virtualInterface\": {\n    \"ownerAccount\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"location\": \"\",\n    \"connectionId\": \"\",\n    \"virtualInterfaceType\": \"\",\n    \"virtualInterfaceName\": \"\",\n    \"vlan\": {{faker 'datatype.number'}},\n    \"asn\": {{faker 'datatype.number'}},\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"authKey\": \"\",\n    \"amazonAddress\": \"\",\n    \"customerAddress\": \"\",\n    \"addressFamily\": \"\",\n    \"virtualInterfaceState\": \"\",\n    \"customerRouterConfig\": \"\",\n    \"mtu\": {{faker 'datatype.number'}},\n    \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n    \"virtualGatewayId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"routeFilterPrefixes\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"bgpPeers\": [\n      {\n        \"bgpPeerId\": \"\",\n        \"asn\": {{faker 'datatype.number'}},\n        \"authKey\": \"\",\n        \"addressFamily\": \"\",\n        \"amazonAddress\": \"\",\n        \"customerAddress\": \"\",\n        \"bgpPeerState\": \"\",\n        \"bgpStatus\": \"\",\n        \"awsDeviceV2\": \"\",\n        \"awsLogicalDeviceId\": \"\"\n      }\n    ],\n    \"region\": \"\",\n    \"awsDeviceV2\": \"\",\n    \"awsLogicalDeviceId\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f5047e1-1495-4890-8b12-2d6682e86a3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac4698d0-46e0-49fa-8a66-e46ea6590867",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2d3ad10-204a-457f-aa79-72a36fe23b92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7965bacf-19ab-40f4-8472-a3f6fb2c4d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8aa974ff-a9b5-4177-8753-fd12f51a7e01",
      "documentation": "<p>Associates an existing connection with a link aggregation group (LAG). The connection is interrupted and re-established as a member of the LAG (connectivity to Amazon Web Services is interrupted). The connection must be hosted on the same Direct Connect endpoint as the LAG, and its bandwidth must match the bandwidth for the LAG. You can re-associate a connection that's currently associated with a different LAG; however, if removing the connection would cause the original LAG to fall below its setting for minimum number of operational connections, the request fails.</p> <p>Any virtual interfaces that are directly associated with the connection are automatically re-associated with the LAG. If the connection was originally associated with a different LAG, the virtual interfaces remain associated with the original LAG.</p> <p>For interconnects, any hosted connections are automatically re-associated with the LAG. If the interconnect was originally associated with a different LAG, the hosted connections remain associated with the original LAG.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AssociateConnectionWithLag",
      "responses": [
        {
          "uuid": "4aea4df5-6a39-46cc-a073-1e8983f6dd8d",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a91c2ae5-3e13-47da-a09e-02c3aa96e5a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "812ef3c4-8f21-4d5d-b25a-d85226c71e15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f178f4ab-1fd6-4fc3-aa0e-7e1c0cf1b036",
      "documentation": "<p>Associates a hosted connection and its virtual interfaces with a link aggregation group (LAG) or interconnect. If the target interconnect or LAG has an existing hosted connection with a conflicting VLAN number or IP address, the operation fails. This action temporarily interrupts the hosted connection's connectivity to Amazon Web Services as it is being migrated.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AssociateHostedConnection",
      "responses": [
        {
          "uuid": "ce719ee8-d038-4769-a847-2b543179fefe",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "034f5b54-8966-4a7d-adf9-d73949f39c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46c2009d-4854-4584-8f82-70d64938b397",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9890f121-1e9d-4a92-bbd0-4444912ff6f2",
      "documentation": "<p>Associates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity Association Key (CAK) pair with an Direct Connect dedicated connection.</p> <p>You must supply either the <code>secretARN,</code> or the CKN/CAK (<code>ckn</code> and <code>cak</code>) pair in the request.</p> <p>For information about MAC Security (MACsec) key considerations, see <a href=\"https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-key-consideration\">MACsec pre-shared CKN/CAK key considerations </a> in the <i>Direct Connect User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AssociateMacSecKey",
      "responses": [
        {
          "uuid": "c5683976-7858-4b07-b275-e722baf3e65a",
          "body": "{\n  \"connectionId\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "49854cf6-0de3-4a83-a74a-d3ca64ab48e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06c9ecb9-3131-4961-899c-6ab02f747910",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30f560e0-3212-43fa-bca3-31a2ef597b87",
      "documentation": "<p>Associates a virtual interface with a specified link aggregation group (LAG) or connection. Connectivity to Amazon Web Services is temporarily interrupted as the virtual interface is being migrated. If the target connection or LAG has an associated virtual interface with a conflicting VLAN number or a conflicting IP address, the operation fails.</p> <p>Virtual interfaces associated with a hosted connection cannot be associated with a LAG; hosted connections must be migrated along with their virtual interfaces using <a>AssociateHostedConnection</a>.</p> <p>To reassociate a virtual interface to a new connection or LAG, the requester must own either the virtual interface itself or the connection to which the virtual interface is currently associated. Additionally, the requester must own the connection or LAG for the association.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.AssociateVirtualInterface",
      "responses": [
        {
          "uuid": "1efa22a9-9529-452e-a0ea-1f4f1496f90b",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a85cf1ca-4a8a-48cb-8e95-6bf357138f1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4efadd33-7bf4-43cc-9a22-3181a522b5c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7bbaffa3-91ea-46c5-ac26-19ae583d3aa8",
      "documentation": "<p>Confirms the creation of the specified hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the <code>Ordering</code> state, and remains in this state until the owner confirms creation of the hosted connection.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.ConfirmConnection",
      "responses": [
        {
          "uuid": "5617f928-0117-48e6-abb4-460a5a152e73",
          "body": "{\n  \"connectionState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05c6cc3f-8da5-4a23-b000-e95c44c3c26c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1f00f3e-18b7-4523-9a58-4eb76708f305",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2348c91a-5696-416e-a25a-a41e9a6439d1",
      "documentation": "<p>Accepts ownership of a private virtual interface created by another account.</p> <p>After the virtual interface owner makes this call, the virtual interface is created and attached to the specified virtual private gateway or Direct Connect gateway, and is made available to handle traffic.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.ConfirmPrivateVirtualInterface",
      "responses": [
        {
          "uuid": "05df95d6-acd0-4628-8dc8-91377247eb07",
          "body": "{\n  \"virtualInterfaceState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d50c44eb-719a-43f6-85c6-128c9c5f0f7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdf1f7ce-c812-43cc-8b82-5ed5d3b06c31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fb18bfa-9de7-4369-802c-bf40325c37e8",
      "documentation": "<p>Accepts ownership of a public virtual interface created by another account.</p> <p>After the virtual interface owner makes this call, the specified virtual interface is created and made available to handle traffic.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.ConfirmPublicVirtualInterface",
      "responses": [
        {
          "uuid": "3de7bff9-27f9-4cba-a7b6-21aaa01b5a2a",
          "body": "{\n  \"virtualInterfaceState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "52da002a-d6ed-4f96-9e32-47dc77995dc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4073d447-4975-4143-8533-1f5803515f69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7aca04fe-ba45-484d-b699-1178867f32c4",
      "documentation": "<p>Accepts ownership of a transit virtual interface created by another account.</p> <p> After the owner of the transit virtual interface makes this call, the specified transit virtual interface is created and made available to handle traffic.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.ConfirmTransitVirtualInterface",
      "responses": [
        {
          "uuid": "90e1392d-1546-4165-840f-fbfac22a0bac",
          "body": "{\n  \"virtualInterfaceState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ce463f4-a939-4254-b801-b5a8772c3625",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6530a2e1-dc3a-49f5-b7d8-6a535768de57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73a65b27-3d98-469b-ad95-3d075687ad9d",
      "documentation": "<p>Creates a BGP peer on the specified virtual interface.</p> <p>You must create a BGP peer for the corresponding address family (IPv4/IPv6) in order to access Amazon Web Services resources that also use that address family.</p> <p>If logical redundancy is not supported by the connection, interconnect, or LAG, the BGP peer cannot be in the same address family as an existing BGP peer on the virtual interface.</p> <p>When creating a IPv6 BGP peer, omit the Amazon address and customer address. IPv6 addresses are automatically assigned from the Amazon pool of IPv6 addresses; you cannot specify custom IPv6 addresses.</p> <p>For a public virtual interface, the Autonomous System Number (ASN) must be private or already on the allow list for the virtual interface.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateBGPPeer",
      "responses": [
        {
          "uuid": "4bf86bb6-91b7-4fac-a826-c6d2693584d9",
          "body": "{\n  \"virtualInterface\": {\n    \"ownerAccount\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"location\": \"\",\n    \"connectionId\": \"\",\n    \"virtualInterfaceType\": \"\",\n    \"virtualInterfaceName\": \"\",\n    \"vlan\": {{faker 'datatype.number'}},\n    \"asn\": {{faker 'datatype.number'}},\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"authKey\": \"\",\n    \"amazonAddress\": \"\",\n    \"customerAddress\": \"\",\n    \"addressFamily\": \"\",\n    \"virtualInterfaceState\": \"\",\n    \"customerRouterConfig\": \"\",\n    \"mtu\": {{faker 'datatype.number'}},\n    \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n    \"virtualGatewayId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"routeFilterPrefixes\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"bgpPeers\": [\n      {\n        \"bgpPeerId\": \"\",\n        \"asn\": {{faker 'datatype.number'}},\n        \"authKey\": \"\",\n        \"addressFamily\": \"\",\n        \"amazonAddress\": \"\",\n        \"customerAddress\": \"\",\n        \"bgpPeerState\": \"\",\n        \"bgpStatus\": \"\",\n        \"awsDeviceV2\": \"\",\n        \"awsLogicalDeviceId\": \"\"\n      }\n    ],\n    \"region\": \"\",\n    \"awsDeviceV2\": \"\",\n    \"awsLogicalDeviceId\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b5e67ab9-9117-4f9a-8d0f-6a19b4fe2e69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "136cb6a8-5969-4e74-aa1e-0755cebee4fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64b08bad-5acd-4351-8793-2e9915f45fdc",
      "documentation": "<p>Creates a connection between a customer network and a specific Direct Connect location.</p> <p>A connection links your internal network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an Direct Connect router.</p> <p>To find the locations for your Region, use <a>DescribeLocations</a>.</p> <p>You can automatically add the new connection to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new connection is allocated on the same Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no connection is created.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateConnection",
      "responses": [
        {
          "uuid": "f0b856de-e5c7-4ee6-8ad6-1731f2314a23",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1e4c35b-e9b1-4b49-a710-64788595f968",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20b7fc16-c569-4995-af88-96de59e98ffc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0836b251-a934-4aea-ba5e-25b466392883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18ec3ff4-522f-4e6e-b7dd-95fa5cad620d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cff3e8fb-6b07-4820-9e9d-0a62746744e8",
      "documentation": "Creates a Direct Connect gateway, which is an intermediate object that enables you to connect a set of virtual interfaces and virtual private gateways. A Direct Connect gateway is global and visible in any Region after it is created. The virtual interfaces and virtual private gateways that are connected through a Direct Connect gateway can be in different Regions. This enables you to connect to a VPC in any Region, regardless of the Region in which the virtual interfaces are located, and pass traffic between them.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateDirectConnectGateway",
      "responses": [
        {
          "uuid": "a6e65a10-90e8-4329-95a7-1886c100e17c",
          "body": "{\n  \"directConnectGateway\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayName\": \"\",\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"ownerAccount\": \"\",\n    \"directConnectGatewayState\": \"\",\n    \"stateChangeError\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff96aa3d-482c-4b6b-9e71-e75731e804ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77b84885-561e-42d9-aaee-266c80d59456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03826d0e-218f-44cf-868c-4239c2d2a47d",
      "documentation": "Creates an association between a Direct Connect gateway and a virtual private gateway. The virtual private gateway must be attached to a VPC and must not be associated with another Direct Connect gateway.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociation",
      "responses": [
        {
          "uuid": "5e3503dc-079f-4f6e-a736-a4818d8bf710",
          "body": "{\n  \"directConnectGatewayAssociation\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"associationState\": \"\",\n    \"stateChangeError\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"associationId\": \"\",\n    \"allowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"virtualGatewayId\": \"\",\n    \"virtualGatewayRegion\": \"\",\n    \"virtualGatewayOwnerAccount\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b125b8f5-cda0-49e3-b59f-b19c9444d8fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cad32469-0c13-4b05-b009-aabe08dd8a37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d315f82b-335d-4cc9-85ba-da3a1988e32d",
      "documentation": "<p>Creates a proposal to associate the specified virtual private gateway or transit gateway with the specified Direct Connect gateway.</p> <p>You can associate a Direct Connect gateway and virtual private gateway or transit gateway that is owned by any account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociationProposal",
      "responses": [
        {
          "uuid": "86b138d5-c2bc-4768-b7b8-c0088287cdad",
          "body": "{\n  \"directConnectGatewayAssociationProposal\": {\n    \"proposalId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"proposalState\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"existingAllowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"requestedAllowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dee7f2bf-ce03-47d3-9ac4-086674f77ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2c4610b-c120-4bc1-b892-2d07c29ecd92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4570d34d-b0d1-458e-8574-7d29eedb14fa",
      "documentation": "<p>Creates an interconnect between an Direct Connect Partner's network and a specific Direct Connect location.</p> <p>An interconnect is a connection that is capable of hosting other connections. The Direct Connect Partner can use an interconnect to provide Direct Connect hosted connections to customers through their own network services. Like a standard connection, an interconnect links the partner's network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an Direct Connect router.</p> <p>You can automatically add the new interconnect to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new interconnect is allocated on the same Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no interconnect is created.</p> <p>For each end customer, the Direct Connect Partner provisions a connection on their interconnect by calling <a>AllocateHostedConnection</a>. The end customer can then connect to Amazon Web Services resources by creating a virtual interface on their connection, using the VLAN assigned to them by the Direct Connect Partner.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateInterconnect",
      "responses": [
        {
          "uuid": "8b5bc413-82c7-4e68-8469-a7c3ba9e5130",
          "body": "{\n  \"interconnectId\": \"\",\n  \"interconnectName\": \"\",\n  \"interconnectState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "358099b9-0eab-46dc-b6c8-3fcb4e17d923",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab8cc863-1b82-408c-952e-2a9c158a4c11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb25b378-00bd-4dd8-a5a5-bc8a6aecb8ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54a30a91-1d3d-4073-9197-b156fb7c7389",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1004c293-4b57-4f20-b539-a542146b42f2",
      "documentation": "<p>Creates a link aggregation group (LAG) with the specified number of bundled physical dedicated connections between the customer network and a specific Direct Connect location. A LAG is a logical interface that uses the Link Aggregation Control Protocol (LACP) to aggregate multiple interfaces, enabling you to treat them as a single interface.</p> <p>All connections in a LAG must use the same bandwidth (either 1Gbps or 10Gbps) and must terminate at the same Direct Connect endpoint.</p> <p>You can have up to 10 dedicated connections per LAG. Regardless of this limit, if you request more connections for the LAG than Direct Connect can allocate on a single endpoint, no LAG is created.</p> <p>You can specify an existing physical dedicated connection or interconnect to include in the LAG (which counts towards the total number of connections). Doing so interrupts the current physical dedicated connection, and re-establishes them as a member of the LAG. The LAG will be created on the same Direct Connect endpoint to which the dedicated connection terminates. Any virtual interfaces associated with the dedicated connection are automatically disassociated and re-associated with the LAG. The connection ID does not change.</p> <p>If the account used to create a LAG is a registered Direct Connect Partner, the LAG is automatically enabled to host sub-connections. For a LAG owned by a partner, any associated virtual interfaces cannot be directly configured.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateLag",
      "responses": [
        {
          "uuid": "1cfa1374-82d6-474a-aaf6-a04f1376564e",
          "body": "{\n  \"connectionsBandwidth\": \"\",\n  \"numberOfConnections\": {{faker 'datatype.number'}},\n  \"lagId\": \"\",\n  \"ownerAccount\": \"\",\n  \"lagName\": \"\",\n  \"lagState\": \"\",\n  \"location\": \"\",\n  \"region\": \"\",\n  \"minimumLinks\": {{faker 'datatype.number'}},\n  \"awsDevice\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ],\n  \"allowsHostedConnections\": {{faker 'datatype.boolean'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3f35b0ec-1578-4b13-a260-d89d1e02c1fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb38dd91-ff15-4d29-81c7-2346d89d1e60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23c1d7cf-5ff6-465b-a960-c37b73f0aa2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58533e2e-25c5-46b7-8d2d-57226dc45e48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de5f3d4d-9a6c-451a-b731-f25ed7d420c9",
      "documentation": "<p>Creates a private virtual interface. A virtual interface is the VLAN that transports Direct Connect traffic. A private virtual interface can be connected to either a Direct Connect gateway or a Virtual Private Gateway (VGW). Connecting the private virtual interface to a Direct Connect gateway enables the possibility for connecting to multiple VPCs, including VPCs in different Regions. Connecting the private virtual interface to a VGW only provides access to a single VPC within the same Region.</p> <p>Setting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update to the underlying physical connection if it wasn't updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual interface supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "responses": [
        {
          "uuid": "714b7f62-f6cc-4a1c-8b96-48006bb144be",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "268e229e-5539-4479-9b71-3545741a9b4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b55aa9ae-15fb-4852-9e9d-e08de0a09527",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bdd08aad-0b74-4cf4-9ce0-73f5c829986c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "feae184d-73fa-439c-8e09-0050c2fc6f7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb9042fe-fa7d-4658-90ef-7ccfde7f1987",
      "documentation": "<p>Creates a public virtual interface. A virtual interface is the VLAN that transports Direct Connect traffic. A public virtual interface supports sending traffic to public services of Amazon Web Services such as Amazon S3.</p> <p>When creating an IPv6 public virtual interface (<code>addressFamily</code> is <code>ipv6</code>), leave the <code>customer</code> and <code>amazon</code> address fields blank to use auto-assigned IPv6 space. Custom IPv6 addresses are not supported.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "responses": [
        {
          "uuid": "02abc2fd-3ec3-47f4-bd14-7b61eae67441",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86278e75-e919-49fa-a826-96dff467727c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "550c785b-6b6d-4da0-8f57-57464e1b7f1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e24ca0ad-4f87-4994-9c09-86ff32146c1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e72f90c-7d86-4539-a54f-5fb533e99765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cec5ba1a-1f0a-4fe9-995f-662aa1e71e49",
      "documentation": "<p>Creates a transit virtual interface. A transit virtual interface should be used to access one or more transit gateways associated with Direct Connect gateways. A transit virtual interface enables the connection of multiple VPCs attached to a transit gateway to a Direct Connect gateway.</p> <important> <p>If you associate your transit gateway with one or more Direct Connect gateways, the Autonomous System Number (ASN) used by the transit gateway and the Direct Connect gateway must be different. For example, if you use the default ASN 64512 for both your the transit gateway and Direct Connect gateway, the association request fails.</p> </important> <p>Setting the MTU of a virtual interface to 8500 (jumbo frames) can cause an update to the underlying physical connection if it wasn't updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual interface supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "responses": [
        {
          "uuid": "afa04f6c-fa35-45b7-945e-1ce9a0d63f59",
          "body": "{\n  \"virtualInterface\": {\n    \"ownerAccount\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"location\": \"\",\n    \"connectionId\": \"\",\n    \"virtualInterfaceType\": \"\",\n    \"virtualInterfaceName\": \"\",\n    \"vlan\": {{faker 'datatype.number'}},\n    \"asn\": {{faker 'datatype.number'}},\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"authKey\": \"\",\n    \"amazonAddress\": \"\",\n    \"customerAddress\": \"\",\n    \"addressFamily\": \"\",\n    \"virtualInterfaceState\": \"\",\n    \"customerRouterConfig\": \"\",\n    \"mtu\": {{faker 'datatype.number'}},\n    \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n    \"virtualGatewayId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"routeFilterPrefixes\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"bgpPeers\": [\n      {\n        \"bgpPeerId\": \"\",\n        \"asn\": {{faker 'datatype.number'}},\n        \"authKey\": \"\",\n        \"addressFamily\": \"\",\n        \"amazonAddress\": \"\",\n        \"customerAddress\": \"\",\n        \"bgpPeerState\": \"\",\n        \"bgpStatus\": \"\",\n        \"awsDeviceV2\": \"\",\n        \"awsLogicalDeviceId\": \"\"\n      }\n    ],\n    \"region\": \"\",\n    \"awsDeviceV2\": \"\",\n    \"awsLogicalDeviceId\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d93b8f8-a8d0-43c9-9abd-2f199e2eb1bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b48b717-e1b6-475d-9c33-b089e0c172e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9dfcc089-b60c-4ce7-b7dc-04fa9c7fef65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e74ff13-cd75-48f2-be86-2d67dd3086a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "385ca052-52a2-4ef4-826c-1df0f3185538",
      "documentation": "<p>Deletes the specified BGP peer on the specified virtual interface with the specified customer address and ASN.</p> <p>You cannot delete the last BGP peer from a virtual interface.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteBGPPeer",
      "responses": [
        {
          "uuid": "febeb33e-d17c-409e-bd6b-0588aa4a7a05",
          "body": "{\n  \"virtualInterface\": {\n    \"ownerAccount\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"location\": \"\",\n    \"connectionId\": \"\",\n    \"virtualInterfaceType\": \"\",\n    \"virtualInterfaceName\": \"\",\n    \"vlan\": {{faker 'datatype.number'}},\n    \"asn\": {{faker 'datatype.number'}},\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"authKey\": \"\",\n    \"amazonAddress\": \"\",\n    \"customerAddress\": \"\",\n    \"addressFamily\": \"\",\n    \"virtualInterfaceState\": \"\",\n    \"customerRouterConfig\": \"\",\n    \"mtu\": {{faker 'datatype.number'}},\n    \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n    \"virtualGatewayId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"routeFilterPrefixes\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"bgpPeers\": [\n      {\n        \"bgpPeerId\": \"\",\n        \"asn\": {{faker 'datatype.number'}},\n        \"authKey\": \"\",\n        \"addressFamily\": \"\",\n        \"amazonAddress\": \"\",\n        \"customerAddress\": \"\",\n        \"bgpPeerState\": \"\",\n        \"bgpStatus\": \"\",\n        \"awsDeviceV2\": \"\",\n        \"awsLogicalDeviceId\": \"\"\n      }\n    ],\n    \"region\": \"\",\n    \"awsDeviceV2\": \"\",\n    \"awsLogicalDeviceId\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d02570f-d5bc-4501-b368-363935dfacbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1ee3a10-2a02-4de5-b3ce-0bda5f871654",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2fc2382-d945-4ae3-8e5b-bb258839dc54",
      "documentation": "<p>Deletes the specified connection.</p> <p>Deleting a connection only stops the Direct Connect port hour and data transfer charges. If you are partnering with any third parties to connect with the Direct Connect location, you must cancel your service with them separately.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteConnection",
      "responses": [
        {
          "uuid": "08a7746f-15ef-441b-acbd-7a086e5a2f4e",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5aca6d49-7c1c-489c-adb4-e92966e9edf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92e8ba96-2107-4b6d-a999-92676133a4fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1b1a962-e4b4-4b6f-9784-9b7beae909f0",
      "documentation": "Deletes the specified Direct Connect gateway. You must first delete all virtual interfaces that are attached to the Direct Connect gateway and disassociate all virtual private gateways associated with the Direct Connect gateway.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteDirectConnectGateway",
      "responses": [
        {
          "uuid": "3c6973d1-d9fe-4ee1-a75b-d94be28bdab1",
          "body": "{\n  \"directConnectGateway\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayName\": \"\",\n    \"amazonSideAsn\": {{faker 'datatype.number'}},\n    \"ownerAccount\": \"\",\n    \"directConnectGatewayState\": \"\",\n    \"stateChangeError\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e98ab657-22e7-4ada-acdd-61ffcd236fcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e49b410f-1c37-4851-befc-17584347aa5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c474b13-5029-4a5b-9054-8eea691b488b",
      "documentation": "<p>Deletes the association between the specified Direct Connect gateway and virtual private gateway.</p> <p>We recommend that you specify the <code>associationID</code> to delete the association. Alternatively, if you own virtual gateway and a Direct Connect gateway association, you can specify the <code>virtualGatewayId</code> and <code>directConnectGatewayId</code> to delete an association.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociation",
      "responses": [
        {
          "uuid": "319372e1-41c1-480a-ba38-f337e16f5a46",
          "body": "{\n  \"directConnectGatewayAssociation\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"associationState\": \"\",\n    \"stateChangeError\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"associationId\": \"\",\n    \"allowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"virtualGatewayId\": \"\",\n    \"virtualGatewayRegion\": \"\",\n    \"virtualGatewayOwnerAccount\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cef7a3bf-8012-45ee-a1da-55076e6b8159",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d958136-e21c-4aa6-9d2f-e53d07c3432d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77d875b8-7bf2-4797-8d75-820f382b2334",
      "documentation": "Deletes the association proposal request between the specified Direct Connect gateway and virtual private gateway or transit gateway.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociationProposal",
      "responses": [
        {
          "uuid": "c501ce0c-28b0-4adb-bc33-86872502b0a6",
          "body": "{\n  \"directConnectGatewayAssociationProposal\": {\n    \"proposalId\": \"\",\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"proposalState\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"existingAllowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"requestedAllowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d80f04f-0b4e-4cef-ad49-782f13df43b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f809ae8-903a-42df-9184-d0b3bed3cd80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "824190eb-e9a5-41f3-9808-5ea2538ef892",
      "documentation": "<p>Deletes the specified interconnect.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteInterconnect",
      "responses": [
        {
          "uuid": "0e1184b7-5df8-44c0-b398-8fa56588f68c",
          "body": "{\n  \"interconnectState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69c06569-44d8-42e2-afa2-23c524b21846",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd5224c5-3041-482a-acb0-60b752d27e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01735db1-5f9f-4156-bc28-78e6a5173fcb",
      "documentation": "Deletes the specified link aggregation group (LAG). You cannot delete a LAG if it has active virtual interfaces or hosted connections.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteLag",
      "responses": [
        {
          "uuid": "2a9d01ca-c8f9-4a19-a3d9-937fbc34aabb",
          "body": "{\n  \"connectionsBandwidth\": \"\",\n  \"numberOfConnections\": {{faker 'datatype.number'}},\n  \"lagId\": \"\",\n  \"ownerAccount\": \"\",\n  \"lagName\": \"\",\n  \"lagState\": \"\",\n  \"location\": \"\",\n  \"region\": \"\",\n  \"minimumLinks\": {{faker 'datatype.number'}},\n  \"awsDevice\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ],\n  \"allowsHostedConnections\": {{faker 'datatype.boolean'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70bd4b0b-c57a-46b4-844a-34ddedbca7fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd1a8855-3c4b-46a4-8575-6b72dd34b6b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afec829c-c9e3-4264-ad9c-644ac481a991",
      "documentation": "Deletes a virtual interface.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DeleteVirtualInterface",
      "responses": [
        {
          "uuid": "6bf352c3-3f24-4045-8113-f05833d34de7",
          "body": "{\n  \"virtualInterfaceState\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69c50c09-37c9-4871-820a-f1461d40827c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75985cc8-6250-4144-83cc-2719b9231021",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76413d42-525c-49a2-a442-c7b87d671765",
      "documentation": "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for a connection.</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that your APN partner or service provider uses when establishing your cross connect to Amazon Web Services at the colocation facility. For more information, see <a href=\"https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at Direct Connect Locations</a> in the <i>Direct Connect User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeConnectionLoa",
      "responses": [
        {
          "uuid": "b899aa71-6e9a-444e-b733-de44b00e0bee",
          "body": "{\n  \"loa\": {\n    \"loaContent\": \"\",\n    \"loaContentType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27ce7e84-0155-4786-8a2f-f47721068a4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fd30ebe-d90a-4b01-958a-194d7cca8c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "586be5d7-7660-4b22-b5ee-a1db9530946a",
      "documentation": "Displays the specified connection or all connections in this Region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeConnections",
      "responses": [
        {
          "uuid": "a5041314-0726-4c68-8a26-70097cc11d50",
          "body": "{\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e9d54c33-8e8b-4b88-a913-b03d470ba6ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6afb43b9-000f-4ac3-b4ae-beca4e0983f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97ecd8e0-578b-40b4-9827-7a570a9d3b99",
      "documentation": "<p>Deprecated. Use <a>DescribeHostedConnections</a> instead.</p> <p>Lists the connections that have been provisioned on the specified interconnect.</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeConnectionsOnInterconnect",
      "responses": [
        {
          "uuid": "f76c6b2b-f484-45a7-88b4-28c59875f3a6",
          "body": "{\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3575bf81-cd05-4c6a-82b6-dfc9f1bce9bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c850bbd0-5847-4de0-92e6-4011192246b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "392ff19f-cfea-4cb6-8e38-dc93a80e4b1b",
      "documentation": "Describes one or more association proposals for connection between a virtual private gateway or transit gateway and a Direct Connect gateway. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociationProposals",
      "responses": [
        {
          "uuid": "d9f802d3-8b62-402a-9deb-09b76de6f1d9",
          "body": "{\n  \"directConnectGatewayAssociationProposals\": [\n    {\n      \"proposalId\": \"\",\n      \"directConnectGatewayId\": \"\",\n      \"directConnectGatewayOwnerAccount\": \"\",\n      \"proposalState\": \"\",\n      \"associatedGateway\": {\n        \"id\": \"\",\n        \"type\": \"\",\n        \"ownerAccount\": \"\",\n        \"region\": \"\"\n      },\n      \"existingAllowedPrefixesToDirectConnectGateway\": [\n        {\n          \"cidr\": \"\"\n        }\n      ],\n      \"requestedAllowedPrefixesToDirectConnectGateway\": [\n        {\n          \"cidr\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab14c67d-af14-41ce-ae73-048435b800dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a62b3bd6-053a-4f3d-a4bd-c6207ecaec09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dac247e2-6ef3-4138-90e6-bf7b191ad4e4",
      "documentation": "<p>Lists the associations between your Direct Connect gateways and virtual private gateways and transit gateways. You must specify one of the following:</p> <ul> <li> <p>A Direct Connect gateway</p> <p>The response contains all virtual private gateways and transit gateways associated with the Direct Connect gateway.</p> </li> <li> <p>A virtual private gateway</p> <p>The response contains the Direct Connect gateway.</p> </li> <li> <p>A transit gateway</p> <p>The response contains the Direct Connect gateway.</p> </li> <li> <p>A Direct Connect gateway and a virtual private gateway</p> <p>The response contains the association between the Direct Connect gateway and virtual private gateway.</p> </li> <li> <p>A Direct Connect gateway and a transit gateway</p> <p>The response contains the association between the Direct Connect gateway and transit gateway.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociations",
      "responses": [
        {
          "uuid": "a5f3d7a3-d42d-4fbc-a0a4-c43d6cc5f226",
          "body": "{\n  \"directConnectGatewayAssociations\": [\n    {\n      \"directConnectGatewayId\": \"\",\n      \"directConnectGatewayOwnerAccount\": \"\",\n      \"associationState\": \"\",\n      \"stateChangeError\": \"\",\n      \"associatedGateway\": {\n        \"id\": \"\",\n        \"type\": \"\",\n        \"ownerAccount\": \"\",\n        \"region\": \"\"\n      },\n      \"associationId\": \"\",\n      \"allowedPrefixesToDirectConnectGateway\": [\n        {\n          \"cidr\": \"\"\n        }\n      ],\n      \"virtualGatewayId\": \"\",\n      \"virtualGatewayRegion\": \"\",\n      \"virtualGatewayOwnerAccount\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "086e4601-f686-4a26-b0bd-a812114688f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9bfa37b2-7e04-4ff5-b364-a52647519d8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e21290d3-dbc7-4b84-9104-f6f7495be4dd",
      "documentation": "Lists the attachments between your Direct Connect gateways and virtual interfaces. You must specify a Direct Connect gateway, a virtual interface, or both. If you specify a Direct Connect gateway, the response contains all virtual interfaces attached to the Direct Connect gateway. If you specify a virtual interface, the response contains all Direct Connect gateways attached to the virtual interface. If you specify both, the response contains the attachment between the Direct Connect gateway and the virtual interface.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAttachments",
      "responses": [
        {
          "uuid": "a73c96b2-6228-4d4c-820b-81e93850d9db",
          "body": "{\n  \"directConnectGatewayAttachments\": [\n    {\n      \"directConnectGatewayId\": \"\",\n      \"virtualInterfaceId\": \"\",\n      \"virtualInterfaceRegion\": \"\",\n      \"virtualInterfaceOwnerAccount\": \"\",\n      \"attachmentState\": \"\",\n      \"attachmentType\": \"\",\n      \"stateChangeError\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a42645bd-3cf7-4c23-bdf8-4ee68b305626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba4c0306-26c6-416e-af85-7253c7c010ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87eb4db2-ef4b-4518-9206-e8cb4507c25e",
      "documentation": "Lists all your Direct Connect gateways or only the specified Direct Connect gateway. Deleted Direct Connect gateways are not returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeDirectConnectGateways",
      "responses": [
        {
          "uuid": "25ccf088-2079-464d-b6e2-2deef5cf6b87",
          "body": "{\n  \"directConnectGateways\": [\n    {\n      \"directConnectGatewayId\": \"\",\n      \"directConnectGatewayName\": \"\",\n      \"amazonSideAsn\": {{faker 'datatype.number'}},\n      \"ownerAccount\": \"\",\n      \"directConnectGatewayState\": \"\",\n      \"stateChangeError\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fed026d4-508d-472c-9635-38f796bac838",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd421350-6be4-4313-b58c-be364bac84b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca27dd25-ed88-4a6f-8a50-baa74c12710a",
      "documentation": "<p>Lists the hosted connections that have been provisioned on the specified interconnect or link aggregation group (LAG).</p> <note> <p>Intended for use by Direct Connect Partners only.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeHostedConnections",
      "responses": [
        {
          "uuid": "33705f0b-02f0-4c8a-b3b6-a3eb75c06aaf",
          "body": "{\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d84868e4-f1d9-4b72-af51-a38a5b9b1b50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22a76ed0-b25d-4e80-a268-1ca505fffab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b92bcdf-29b0-4355-a1e7-c7a591d150b9",
      "documentation": "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for the specified interconnect.</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to Amazon Web Services at the colocation facility. For more information, see <a href=\"https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at Direct Connect Locations</a> in the <i>Direct Connect User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeInterconnectLoa",
      "responses": [
        {
          "uuid": "e0f60399-193b-433f-af91-d50fe5f2aac0",
          "body": "{\n  \"loa\": {\n    \"loaContent\": \"\",\n    \"loaContentType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12feb665-38f4-4413-9818-8c244ad207c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bbd845f-8ba8-4f4d-8cdf-71f738e96b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "86c7b96a-5036-4544-b31e-892bfdabbff8",
      "documentation": "Lists the interconnects owned by the account or only the specified interconnect.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeInterconnects",
      "responses": [
        {
          "uuid": "e1c72461-aec9-4b42-aa18-4f3504190cc3",
          "body": "{\n  \"interconnects\": [\n    {\n      \"interconnectId\": \"\",\n      \"interconnectName\": \"\",\n      \"interconnectState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "efcfbc14-2f0e-46b7-aa31-7639f8149fa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "beba8f10-8542-4342-8291-22abc7ecd935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "433f0c7a-8d57-425c-aea6-7ac447e5c004",
      "documentation": "Describes all your link aggregation groups (LAG) or the specified LAG.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeLags",
      "responses": [
        {
          "uuid": "b69f4c91-5eb4-4c86-819e-842dcdd927f5",
          "body": "{\n  \"lags\": [\n    {\n      \"connectionsBandwidth\": \"\",\n      \"numberOfConnections\": {{faker 'datatype.number'}},\n      \"lagId\": \"\",\n      \"ownerAccount\": \"\",\n      \"lagName\": \"\",\n      \"lagState\": \"\",\n      \"location\": \"\",\n      \"region\": \"\",\n      \"minimumLinks\": {{faker 'datatype.number'}},\n      \"awsDevice\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"connections\": [\n        {\n          \"ownerAccount\": \"\",\n          \"connectionId\": \"\",\n          \"connectionName\": \"\",\n          \"connectionState\": \"\",\n          \"region\": \"\",\n          \"location\": \"\",\n          \"bandwidth\": \"\",\n          \"vlan\": {{faker 'datatype.number'}},\n          \"partnerName\": \"\",\n          \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n          \"lagId\": \"\",\n          \"awsDevice\": \"\",\n          \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n          \"awsDeviceV2\": \"\",\n          \"awsLogicalDeviceId\": \"\",\n          \"hasLogicalRedundancy\": \"\",\n          \"tags\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"providerName\": \"\",\n          \"macSecCapable\": {{faker 'datatype.boolean'}},\n          \"portEncryptionStatus\": \"\",\n          \"encryptionMode\": \"\",\n          \"macSecKeys\": [\n            {\n              \"secretARN\": \"\",\n              \"ckn\": \"\",\n              \"state\": \"\",\n              \"startOn\": \"\"\n            }\n          ]\n        }\n      ],\n      \"allowsHostedConnections\": {{faker 'datatype.boolean'}},\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0f3a445-e40e-4efb-ba7a-40c53af7f9a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31493547-cecc-4c33-a154-7aef2129124a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f44ce23c-00c0-479e-a069-4671eaf033bc",
      "documentation": "<p>Gets the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to Amazon Web Services at the colocation facility. For more information, see <a href=\"https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at Direct Connect Locations</a> in the <i>Direct Connect User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeLoa",
      "responses": [
        {
          "uuid": "9c0a7afd-dc9a-4ca9-9b1c-146ace7919f4",
          "body": "{\n  \"loaContent\": \"\",\n  \"loaContentType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "01d82837-bb6d-4bc2-b2de-2176b26eda5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59d859c5-0904-4cb1-9ea5-97c1a6342013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7fa985ca-adfe-4f1b-9201-1b765615ddf0",
      "documentation": "Lists the Direct Connect locations in the current Region. These are the locations that can be selected when calling <a>CreateConnection</a> or <a>CreateInterconnect</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeLocations",
      "responses": [
        {
          "uuid": "a80a3467-d15e-4319-bfab-4aa72ea719d6",
          "body": "{\n  \"locations\": [\n    {\n      \"locationCode\": \"\",\n      \"locationName\": \"\",\n      \"region\": \"\",\n      \"availablePortSpeeds\": [\n        \"\"\n      ],\n      \"availableProviders\": [\n        \"\"\n      ],\n      \"availableMacSecPortSpeeds\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f54eedbd-b15e-4a73-a897-ceacb411477c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed984f81-3bdf-49d7-adce-610264978268",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be78cd24-a62a-4df2-bdef-8f27a84e6da1",
      "documentation": "Describes the tags associated with the specified Direct Connect resources.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeTags",
      "responses": [
        {
          "uuid": "fc31bc41-60e1-4b4c-8eeb-18f1c89c81fe",
          "body": "{\n  \"resourceTags\": [\n    {\n      \"resourceArn\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce4f72a9-259d-477d-acde-3c0e59f5f9a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5d61772-2afa-4a84-9f54-ac586c8f964a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8843b9bf-04a8-485f-90a0-4a80115bcaa2",
      "documentation": "<p>Lists the virtual private gateways owned by the account.</p> <p>You can create one or more Direct Connect private virtual interfaces linked to a virtual private gateway.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeVirtualGateways",
      "responses": [
        {
          "uuid": "617366c5-00e2-4477-ae43-88bfe5784182",
          "body": "{\n  \"virtualGateways\": [\n    {\n      \"virtualGatewayId\": \"\",\n      \"virtualGatewayState\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "25dc647b-7176-4551-93a7-926b598f3ca2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d04ec63e-db76-4182-b64c-06aec8dfda24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05e01088-7d4d-4214-9dae-e2de81887bca",
      "documentation": "<p>Displays all virtual interfaces for an account. Virtual interfaces deleted fewer than 15 minutes before you make the request are also returned. If you specify a connection ID, only the virtual interfaces associated with the connection are returned. If you specify a virtual interface ID, then only a single virtual interface is returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the Direct Connect location and the customer network.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DescribeVirtualInterfaces",
      "responses": [
        {
          "uuid": "0c0de67a-ae65-446b-91aa-7ba443deffaf",
          "body": "{\n  \"virtualInterfaces\": [\n    {\n      \"ownerAccount\": \"\",\n      \"virtualInterfaceId\": \"\",\n      \"location\": \"\",\n      \"connectionId\": \"\",\n      \"virtualInterfaceType\": \"\",\n      \"virtualInterfaceName\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"asn\": {{faker 'datatype.number'}},\n      \"amazonSideAsn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"addressFamily\": \"\",\n      \"virtualInterfaceState\": \"\",\n      \"customerRouterConfig\": \"\",\n      \"mtu\": {{faker 'datatype.number'}},\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"virtualGatewayId\": \"\",\n      \"directConnectGatewayId\": \"\",\n      \"routeFilterPrefixes\": [\n        {\n          \"cidr\": \"\"\n        }\n      ],\n      \"bgpPeers\": [\n        {\n          \"bgpPeerId\": \"\",\n          \"asn\": {{faker 'datatype.number'}},\n          \"authKey\": \"\",\n          \"addressFamily\": \"\",\n          \"amazonAddress\": \"\",\n          \"customerAddress\": \"\",\n          \"bgpPeerState\": \"\",\n          \"bgpStatus\": \"\",\n          \"awsDeviceV2\": \"\",\n          \"awsLogicalDeviceId\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a21b7e90-7ea6-4c75-9da1-146af5f28386",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abdd777b-52d5-4fe2-9f68-a1270f57d3c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "65cac0cf-19dc-4167-9568-cc5bd56b1499",
      "documentation": "<p>Disassociates a connection from a link aggregation group (LAG). The connection is interrupted and re-established as a standalone connection (the connection is not deleted; to delete the connection, use the <a>DeleteConnection</a> request). If the LAG has associated virtual interfaces or hosted connections, they remain associated with the LAG. A disassociated connection owned by an Direct Connect Partner is automatically converted to an interconnect.</p> <p>If disassociating the connection would cause the LAG to fall below its setting for minimum number of operational connections, the request fails, except when it's the last member of the LAG. If all connections are disassociated, the LAG continues to exist as an empty LAG with no physical connections. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DisassociateConnectionFromLag",
      "responses": [
        {
          "uuid": "894c2ee2-0453-4fef-84d4-45b4e1fbaedb",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbe6d86b-997e-4336-9b72-21b1806e8b10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d36c9b89-ec0e-484c-bbc1-c6e2a037c5d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de6a9f78-6788-49ee-83d0-be32dc052a76",
      "documentation": "Removes the association between a MAC Security (MACsec) security key and an Direct Connect dedicated connection.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.DisassociateMacSecKey",
      "responses": [
        {
          "uuid": "1bf02fbb-0303-4d82-a2eb-a2d9473552c2",
          "body": "{\n  \"connectionId\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "43709ab4-4f78-4362-880f-041e9e18fb03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "393c2e2e-7ee1-4279-812c-12ff49822e17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e502dd69-c40c-4f7f-bd25-4761a17bfc0a",
      "documentation": "Lists the virtual interface failover test history.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.ListVirtualInterfaceTestHistory",
      "responses": [
        {
          "uuid": "b99a60d7-27ed-479f-b034-ff07edc75a9d",
          "body": "{\n  \"virtualInterfaceTestHistory\": [\n    {\n      \"testId\": \"\",\n      \"virtualInterfaceId\": \"\",\n      \"bgpPeers\": [\n        \"\"\n      ],\n      \"status\": \"\",\n      \"ownerAccount\": \"\",\n      \"testDurationInMinutes\": {{faker 'datatype.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ef77c5b-3c29-4411-abfa-4d02de0cd8ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fde7301-ab19-4d7d-a7fe-c4fdf2919888",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93ec4bcd-6606-4c83-9a6f-1f3de4fd3511",
      "documentation": "<p>Starts the virtual interface failover test that verifies your configuration meets your resiliency requirements by placing the BGP peering session in the DOWN state. You can then send traffic to verify that there are no outages.</p> <p>You can run the test on public, private, transit, and hosted virtual interfaces.</p> <p>You can use <a href=\"https://docs.aws.amazon.com/directconnect/latest/APIReference/API_ListVirtualInterfaceTestHistory.html\">ListVirtualInterfaceTestHistory</a> to view the virtual interface test history.</p> <p>If you need to stop the test before the test interval completes, use <a href=\"https://docs.aws.amazon.com/directconnect/latest/APIReference/API_StopBgpFailoverTest.html\">StopBgpFailoverTest</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.StartBgpFailoverTest",
      "responses": [
        {
          "uuid": "d9660e14-759d-4d04-a8e0-29e26cbbda08",
          "body": "{\n  \"virtualInterfaceTest\": {\n    \"testId\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"bgpPeers\": [\n      \"\"\n    ],\n    \"status\": \"\",\n    \"ownerAccount\": \"\",\n    \"testDurationInMinutes\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9448fb48-770e-4789-aea7-c747144a1c1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ec7fd1b-662d-4389-ba18-91abe5399f9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63c278ad-27a5-4aef-bc43-72e182fee344",
      "documentation": "Stops the virtual interface failover test.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.StopBgpFailoverTest",
      "responses": [
        {
          "uuid": "603390e9-8dea-472d-aee7-ef99c42e5a80",
          "body": "{\n  \"virtualInterfaceTest\": {\n    \"testId\": \"\",\n    \"virtualInterfaceId\": \"\",\n    \"bgpPeers\": [\n      \"\"\n    ],\n    \"status\": \"\",\n    \"ownerAccount\": \"\",\n    \"testDurationInMinutes\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f562f8ce-f58a-4c92-a7bd-2885bf61cd3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6b47e81-a685-4088-bf8e-db5f07d69bd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab1ee279-79cc-4ec5-b40d-ec8617ca5af3",
      "documentation": "<p>Adds the specified tags to the specified Direct Connect resource. Each resource can have a maximum of 50 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.TagResource",
      "responses": [
        {
          "uuid": "e2a98e6d-ccae-4e72-afbb-6bb202110ed2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f480d389-618f-4973-a38a-b8fdae2c116a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateTagKeysException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a823e2d-1d69-41ac-9654-f0596d3c6193",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "426c4783-b191-42b0-ae29-ce057108a87a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa6bd70f-2438-4617-8623-36deee02ce60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94a27110-263c-4ba8-88eb-abdfc32b2ab1",
      "documentation": "Removes one or more tags from the specified Direct Connect resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.UntagResource",
      "responses": [
        {
          "uuid": "d6d5c478-1b24-4d6d-bfae-4e731f75fa2f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b5911cd-ef69-4458-80a8-2597f187a0c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "385b80e4-f1dc-4ecc-b242-bdf7af786287",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83db39c3-d51d-4397-97ed-e72c1ee864cb",
      "documentation": "<p>Updates the Direct Connect dedicated connection configuration.</p> <p>You can update the following parameters for a connection:</p> <ul> <li> <p>The connection name</p> </li> <li> <p>The connection's MAC Security (MACsec) encryption mode.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.UpdateConnection",
      "responses": [
        {
          "uuid": "28d734a8-0290-40ff-8c71-8514dba42f91",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"connectionId\": \"\",\n  \"connectionName\": \"\",\n  \"connectionState\": \"\",\n  \"region\": \"\",\n  \"location\": \"\",\n  \"bandwidth\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"partnerName\": \"\",\n  \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n  \"lagId\": \"\",\n  \"awsDevice\": \"\",\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"portEncryptionStatus\": \"\",\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e97a955-1e2c-40b5-9f1a-9f296f341a26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ed78096-2893-4fda-9232-20c5f985290d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "abc8eea8-8a81-488a-8705-8d353321c269",
      "documentation": "<p>Updates the specified attributes of the Direct Connect gateway association.</p> <p>Add or remove prefixes from the association.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.UpdateDirectConnectGatewayAssociation",
      "responses": [
        {
          "uuid": "f77910d3-3e3b-4b4e-8fe2-d109bae9d8a7",
          "body": "{\n  \"directConnectGatewayAssociation\": {\n    \"directConnectGatewayId\": \"\",\n    \"directConnectGatewayOwnerAccount\": \"\",\n    \"associationState\": \"\",\n    \"stateChangeError\": \"\",\n    \"associatedGateway\": {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"ownerAccount\": \"\",\n      \"region\": \"\"\n    },\n    \"associationId\": \"\",\n    \"allowedPrefixesToDirectConnectGateway\": [\n      {\n        \"cidr\": \"\"\n      }\n    ],\n    \"virtualGatewayId\": \"\",\n    \"virtualGatewayRegion\": \"\",\n    \"virtualGatewayOwnerAccount\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14c4a83b-0259-4a62-a02c-1e362e9598ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f62f3846-1952-4bd9-811c-5040613ef7a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd96e33c-1c04-4bd8-9b93-191f6e784c4d",
      "documentation": "<p>Updates the attributes of the specified link aggregation group (LAG).</p> <p>You can update the following LAG attributes:</p> <ul> <li> <p>The name of the LAG.</p> </li> <li> <p>The value for the minimum number of connections that must be operational for the LAG itself to be operational. </p> </li> <li> <p>The LAG's MACsec encryption mode.</p> <p>Amazon Web Services assigns this value to each connection which is part of the LAG.</p> </li> <li> <p>The tags</p> </li> </ul> <note> <p>If you adjust the threshold value for the minimum number of operational connections, ensure that the new value does not cause the LAG to fall below the threshold and become non-operational.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.UpdateLag",
      "responses": [
        {
          "uuid": "6e0cf36a-5f00-48d7-8172-ede32746f022",
          "body": "{\n  \"connectionsBandwidth\": \"\",\n  \"numberOfConnections\": {{faker 'datatype.number'}},\n  \"lagId\": \"\",\n  \"ownerAccount\": \"\",\n  \"lagName\": \"\",\n  \"lagState\": \"\",\n  \"location\": \"\",\n  \"region\": \"\",\n  \"minimumLinks\": {{faker 'datatype.number'}},\n  \"awsDevice\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"connections\": [\n    {\n      \"ownerAccount\": \"\",\n      \"connectionId\": \"\",\n      \"connectionName\": \"\",\n      \"connectionState\": \"\",\n      \"region\": \"\",\n      \"location\": \"\",\n      \"bandwidth\": \"\",\n      \"vlan\": {{faker 'datatype.number'}},\n      \"partnerName\": \"\",\n      \"loaIssueTime\": \"{{faker 'date.recent' 365}}\",\n      \"lagId\": \"\",\n      \"awsDevice\": \"\",\n      \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\",\n      \"hasLogicalRedundancy\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"providerName\": \"\",\n      \"macSecCapable\": {{faker 'datatype.boolean'}},\n      \"portEncryptionStatus\": \"\",\n      \"encryptionMode\": \"\",\n      \"macSecKeys\": [\n        {\n          \"secretARN\": \"\",\n          \"ckn\": \"\",\n          \"state\": \"\",\n          \"startOn\": \"\"\n        }\n      ]\n    }\n  ],\n  \"allowsHostedConnections\": {{faker 'datatype.boolean'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"hasLogicalRedundancy\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"providerName\": \"\",\n  \"macSecCapable\": {{faker 'datatype.boolean'}},\n  \"encryptionMode\": \"\",\n  \"macSecKeys\": [\n    {\n      \"secretARN\": \"\",\n      \"ckn\": \"\",\n      \"state\": \"\",\n      \"startOn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e8a57a2-b052-42a1-97cd-1edf728020cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2c52c88-f9db-493c-8770-ed69d10ac6d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b893d996-3d74-4941-8108-2ea7fb523a7c",
      "documentation": "<p>Updates the specified attributes of the specified virtual private interface.</p> <p>Setting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update to the underlying physical connection if it wasn't updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call <a>DescribeConnections</a>. To check whether your virtual q interface supports jumbo frames, call <a>DescribeVirtualInterfaces</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=OvertureService.UpdateVirtualInterfaceAttributes",
      "responses": [
        {
          "uuid": "14b17abb-8b17-4e3f-a41f-5fe8ca98968a",
          "body": "{\n  \"ownerAccount\": \"\",\n  \"virtualInterfaceId\": \"\",\n  \"location\": \"\",\n  \"connectionId\": \"\",\n  \"virtualInterfaceType\": \"\",\n  \"virtualInterfaceName\": \"\",\n  \"vlan\": {{faker 'datatype.number'}},\n  \"asn\": {{faker 'datatype.number'}},\n  \"amazonSideAsn\": {{faker 'datatype.number'}},\n  \"authKey\": \"\",\n  \"amazonAddress\": \"\",\n  \"customerAddress\": \"\",\n  \"addressFamily\": \"\",\n  \"virtualInterfaceState\": \"\",\n  \"customerRouterConfig\": \"\",\n  \"mtu\": {{faker 'datatype.number'}},\n  \"jumboFrameCapable\": {{faker 'datatype.boolean'}},\n  \"virtualGatewayId\": \"\",\n  \"directConnectGatewayId\": \"\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"\"\n    }\n  ],\n  \"bgpPeers\": [\n    {\n      \"bgpPeerId\": \"\",\n      \"asn\": {{faker 'datatype.number'}},\n      \"authKey\": \"\",\n      \"addressFamily\": \"\",\n      \"amazonAddress\": \"\",\n      \"customerAddress\": \"\",\n      \"bgpPeerState\": \"\",\n      \"bgpStatus\": \"\",\n      \"awsDeviceV2\": \"\",\n      \"awsLogicalDeviceId\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"awsDeviceV2\": \"\",\n  \"awsLogicalDeviceId\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83ba1b59-b8d7-48cc-8f1c-20f2d74ac520",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectConnectServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c46d45d4-8374-4c43-85f8-9775e69e0769",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectConnectClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}