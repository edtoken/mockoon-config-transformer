{
  "uuid": "a9f9006c-f50a-4c16-b6b6-fedcb5bc4a79",
  "lastMigration": 24,
  "name": "Amazon Lightsail",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "64b2bab7-1582-411f-b643-0373ca8dcf55",
      "documentation": "Allocates a static IP address.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AllocateStaticIp",
      "responses": [
        {
          "uuid": "4b5d54ed-098c-4f1d-96fe-70ffaf3d8332",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ebaaa8a9-fea6-4393-a7ed-ff74689b6461",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "218d3b37-81ce-4b1b-b4b7-dc6c10c614b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26dccb1d-d592-4e1f-b760-0c217e83de04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da2c1b74-62bb-44ee-83ee-e5d559086327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a8da325-8662-4181-9840-fb18d4e6f686",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f7f0ee1-79d5-4142-af34-5ca159c0beeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c65f2d43-1495-4c00-a0df-df46a0d5bd86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "682974f5-ed34-4963-9726-7a9bb2a39123",
      "documentation": "<p>Attaches an SSL/TLS certificate to your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After the certificate is attached, your distribution accepts HTTPS traffic for all of the domains that are associated with the certificate.</p> <p>Use the <code>CreateCertificate</code> action to create a certificate that you can attach to your distribution.</p> <important> <p>Only certificates created in the <code>us-east-1</code> AWS Region can be attached to Lightsail distributions. Lightsail distributions are global resources that can reference an origin in any AWS Region, and distribute its content globally. However, all distributions are located in the <code>us-east-1</code> Region.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachCertificateToDistribution",
      "responses": [
        {
          "uuid": "504f466d-5414-4f2c-af15-5e83912614b9",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bcd67d7c-1b9d-49d7-bed1-cf6caf14f84f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef8a1bdf-d735-495d-ba4e-8e80338a33ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a86118f4-d418-4192-8b77-931b4305ac52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bb1aaaf-62ee-40e7-a6f8-62af895d21ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c59287bc-4127-4640-8c28-ad6635d180e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91c5a300-705e-416b-9afc-e3a61289dce8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c724b9a-5f4f-4cb5-b610-acb65fd77ccf",
      "documentation": "<p>Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.</p> <p>The <code>attach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachDisk",
      "responses": [
        {
          "uuid": "63830d6c-9e72-491c-85d2-a95845cecaa0",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b693c328-13cf-41f8-8d73-b2414ab3a965",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fb89967-d4a4-45e8-89f0-7a14221c4fb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89867acd-d082-4981-b5d3-997f5219e1fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa8f68f7-c91f-4c03-ad7e-9a6c8dfe5e8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79dc9e66-16ed-4a7d-8dd6-bce217088676",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6195fbb0-89c5-43ea-a172-85e7e9e2dfbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e46688c-8e26-4699-9cb8-4a4e19313aa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12cdc531-ead2-4f07-8dfa-6472eb360ea9",
      "documentation": "<p>Attaches one or more Lightsail instances to a load balancer.</p> <p>After some time, the instances are attached to the load balancer and the health check status is available.</p> <p>The <code>attach instances to load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachInstancesToLoadBalancer",
      "responses": [
        {
          "uuid": "d540e1a4-4be0-4d15-a38e-c4a5867ee779",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec0173d7-cc9b-4820-b9cf-fbb7bf358e4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e511e0e-e998-4e3a-8058-a135f151ec82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f915c25-afb8-4c86-8fc8-52e39f65a918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f8b6c1e-fb1e-47e0-a8d6-2554d58d6993",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ba72b7b-cbd0-4718-8e4f-e8bfd5b85c78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2542eee-662c-4c7a-bd14-60bd2d27018d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "faef6d6e-4c5f-4e99-b606-9ca6534e9073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2556eb76-fc75-41ab-b999-5726f6ff6991",
      "documentation": "<p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> action with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p> <p>The <code>AttachLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "9347b181-ea19-4500-867a-b893faf98d8e",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbb54385-17f8-4ecc-8582-4ccd19cb31c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8e3aaf3-dd9b-4aae-8b31-b04c3d161ff5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8858c3d1-3819-4872-a447-1370a2be435f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ed9b7b3-20c9-47ea-a304-822638f4188c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb05a35b-7418-46eb-ad8c-e171c98abe13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd18497b-3b52-4992-ac70-5aead283576d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c865db45-4d86-48af-868b-665dd76c8a05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d779f93-4a13-4be8-a5ba-c2cbd11fe99a",
      "documentation": "Attaches a static IP address to a specific Amazon Lightsail instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachStaticIp",
      "responses": [
        {
          "uuid": "df8bb390-9656-4aad-a49c-884b289ebb12",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dcb0bac5-afac-4910-afa7-54b9208eb5a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e103e37-3a3d-478f-ab44-3875e5a77775",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb9ece72-9c95-4a31-ad92-a55f941cb5a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41395349-d6b5-4a5d-b8be-97f093fe1ac4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e184d1bf-a82a-4b9c-b13f-e96f7b4a4a06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c1e165d-6216-4222-bb70-473c05239a65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5217f349-015f-469c-a3d4-85c9a93a9c3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d06eaa85-b615-4c31-963a-ee8e457069a3",
      "documentation": "<p>Closes ports for a specific Amazon Lightsail instance.</p> <p>The <code>CloseInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CloseInstancePublicPorts",
      "responses": [
        {
          "uuid": "9864ed9a-2250-42a6-99b1-341c2ea328d2",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2ea7d3af-9fb0-44f1-909c-0ae73da819a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93c4e42a-0815-4647-a1df-e03d9ab93295",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c28ea45-4d22-49dd-a208-2ce9cb6b3f4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ad96ce9-0edd-4a26-ae11-f170b0f2418b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e074469-145a-4c16-af48-34d1fbd7d49b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c09556e-0762-47a9-8558-fb0a28ec3c57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ce27c35-44eb-4035-90a6-f7abf90f1ea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e06a528-21bd-4ec3-823a-eea3e411288f",
      "documentation": "<p>Copies a manual snapshot of an instance or disk as another manual snapshot, or copies an automatic snapshot of an instance or disk as a manual snapshot. This operation can also be used to copy a manual or automatic snapshot of an instance or a disk from one AWS Region to another in Amazon Lightsail.</p> <p>When copying a <i>manual snapshot</i>, be sure to define the <code>source region</code>, <code>source snapshot name</code>, and <code>target snapshot name</code> parameters.</p> <p>When copying an <i>automatic snapshot</i>, be sure to define the <code>source region</code>, <code>source resource name</code>, <code>target snapshot name</code>, and either the <code>restore date</code> or the <code>use latest restorable auto snapshot</code> parameters.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CopySnapshot",
      "responses": [
        {
          "uuid": "a35965d6-6bf0-4287-8047-ebe7350684c6",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca7685fb-13aa-43e2-8124-1dcd7957f206",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d3ba61b-df55-47dd-8897-e1969fc09465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29c6783c-fc5c-45dc-8870-50f1edcacf51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9fbed28-343b-440c-944e-cae29d8c3eba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c540299f-3d4d-4abb-a116-617345a85301",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc4007db-be1c-42e0-9f8f-17f9e16e5ce2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9852e44a-df7c-4a99-bddd-b9469120a378",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b97ad0f-689b-4501-b1f7-f10206ec7450",
      "documentation": "<p>Creates an Amazon Lightsail bucket.</p> <p>A bucket is a cloud storage resource available in the Lightsail object storage service. Use buckets to store objects such as data and its descriptive metadata. For more information about buckets, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/buckets-in-amazon-lightsail\">Buckets in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateBucket",
      "responses": [
        {
          "uuid": "5d299124-347e-4bb8-ae05-dd8bbf4f332d",
          "body": "{\n  \"bucket\": {\n    \"resourceType\": \"\",\n    \"accessRules\": {\n      \"getObject\": \"\",\n      \"allowPublicOverrides\": {{faker 'datatype.boolean'}}\n    },\n    \"arn\": \"\",\n    \"bundleId\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"name\": \"\",\n    \"supportCode\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"objectVersioning\": \"\",\n    \"ableToUpdateBundle\": {{faker 'datatype.boolean'}},\n    \"readonlyAccessAccounts\": [\n      \"\"\n    ],\n    \"resourcesReceivingAccess\": [\n      {\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      }\n    ],\n    \"state\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "db39a2ba-ff30-4713-bdff-9794260e07d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c688bbac-bd4a-464c-8c4a-e10dc7f48e6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba48a0ac-fb0b-429f-be4b-98998f66b7ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2006755d-ff6f-4c35-b5c7-bfcced17616c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6bc45fe-d444-4340-a2f9-355cbc03453a",
      "documentation": "<p>Creates a new access key for the specified Amazon Lightsail bucket. Access keys consist of an access key ID and corresponding secret access key.</p> <p>Access keys grant full programmatic access to the specified bucket and its objects. You can have a maximum of two access keys per bucket. Use the <a>GetBucketAccessKeys</a> action to get a list of current access keys for a specific bucket. For more information about access keys, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-bucket-access-keys\">Creating access keys for a bucket in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> <important> <p>The <code>secretAccessKey</code> value is returned only in response to the <code>CreateBucketAccessKey</code> action. You can get a secret access key only when you first create an access key; you cannot get the secret access key later. If you lose the secret access key, you must create a new access key.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateBucketAccessKey",
      "responses": [
        {
          "uuid": "16c879b6-93c7-45bb-a381-1c272550be34",
          "body": "{\n  \"accessKey\": {\n    \"accessKeyId\": \"\",\n    \"secretAccessKey\": \"\",\n    \"status\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"lastUsed\": {\n      \"lastUsedDate\": \"{{faker 'date.recent' 365}}\",\n      \"region\": \"\",\n      \"serviceName\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e982cfdb-04db-4851-8fe5-d8c8304b14fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7049753d-4a69-40c5-9355-ed14936e0245",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc8b3d6b-fe00-4b53-866d-fd5747ec0178",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73d06f28-7250-4a7a-bcf7-c130e4b66ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa741880-18bf-475a-8219-75e94766dbe3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db424bac-fc7c-4d8b-b748-d1877b72f043",
      "documentation": "<p>Creates an SSL/TLS certificate for an Amazon Lightsail content delivery network (CDN) distribution and a container service.</p> <p>After the certificate is valid, use the <code>AttachCertificateToDistribution</code> action to use the certificate and its domains with your distribution. Or use the <code>UpdateContainerService</code> action to use the certificate and its domains with your container service.</p> <important> <p>Only certificates created in the <code>us-east-1</code> AWS Region can be attached to Lightsail distributions. Lightsail distributions are global resources that can reference an origin in any AWS Region, and distribute its content globally. However, all distributions are located in the <code>us-east-1</code> Region.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateCertificate",
      "responses": [
        {
          "uuid": "1ebe53d9-a310-4c8c-9830-7fbaffebb4e4",
          "body": "{\n  \"certificate\": {\n    \"certificateArn\": \"\",\n    \"certificateName\": \"\",\n    \"domainName\": \"\",\n    \"certificateDetail\": {\n      \"arn\": \"\",\n      \"name\": \"\",\n      \"domainName\": \"\",\n      \"status\": \"\",\n      \"serialNumber\": \"\",\n      \"subjectAlternativeNames\": [\n        \"\"\n      ],\n      \"domainValidationRecords\": [\n        {\n          \"domainName\": \"\",\n          \"resourceRecord\": {\n            \"name\": \"\",\n            \"type\": \"\",\n            \"value\": \"\"\n          }\n        }\n      ],\n      \"requestFailureReason\": \"\",\n      \"inUseResourceCount\": {{faker 'datatype.number'}},\n      \"keyAlgorithm\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuerCA\": \"\",\n      \"notBefore\": \"{{faker 'date.recent' 365}}\",\n      \"notAfter\": \"{{faker 'date.recent' 365}}\",\n      \"eligibleToRenew\": \"\",\n      \"renewalSummary\": {\n        \"domainValidationRecords\": [\n          {\n            \"domainName\": \"\",\n            \"resourceRecord\": {\n              \"name\": \"\",\n              \"type\": \"\",\n              \"value\": \"\"\n            }\n          }\n        ],\n        \"renewalStatus\": \"\",\n        \"renewalStatusReason\": \"\",\n        \"updatedAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n      \"revocationReason\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"supportCode\": \"\"\n    },\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cce3e761-409e-4934-b3a3-e40e9f622061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26c7a445-dd9d-4ccc-81b8-1de770aa4913",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c550089-913c-40a0-a863-734fe882c1ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4b7a7ab-bf15-47f4-8e5e-33bda5f09b59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebe3e681-03a5-4d74-b55d-72dd8262dc59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06314fb6-da80-4d87-ba01-6ed45eb14dfa",
      "documentation": "<p>Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot. This operation results in a CloudFormation stack record that can be used to track the AWS CloudFormation stack created. Use the <code>get cloud formation stack records</code> operation to get a list of the CloudFormation stacks created.</p> <important> <p>Wait until after your new Amazon EC2 instance is created before running the <code>create cloud formation stack</code> operation again with the same export snapshot record.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateCloudFormationStack",
      "responses": [
        {
          "uuid": "4eb9822c-3174-44a1-991a-1b1a590fc070",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ab37ce7-ecea-4e16-a86f-1733cde5e31e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc58ed9d-2e37-4261-ab3a-5cc7b1ce85cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "788484a2-6c41-4f22-98de-163240fbb4ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c58ac06-41ac-492e-a53f-cd77d63739bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72f586a0-5fa2-406a-bfd9-c481b51251a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7de177ec-934d-4c15-9c35-e405aad20d44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40070bcc-8ce9-4927-8adc-e17342b7ec9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5611dc45-fc6b-4303-8b48-d1dc76127a2a",
      "documentation": "<p>Creates an email or SMS text message contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContactMethod",
      "responses": [
        {
          "uuid": "02c25543-7b05-46e0-b754-f17f276d666c",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1f95156-2033-4a38-bce1-2f17de9c5f89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "897d8400-f01a-48ef-8443-de53c7bc2aea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ca27d39-7d2d-438a-a85a-aa57e3ddfaeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ceb4c2c-6489-4348-a364-897b3c61ae53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70c07e77-d1a4-423b-a1e2-967fdf408953",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "780f8019-75f4-4686-a007-b1e743d926c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "128fcb87-b145-41c3-acbf-3a84880a4cfd",
      "documentation": "<p>Creates an Amazon Lightsail container service.</p> <p>A Lightsail container service is a compute resource to which you can deploy containers. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-services\">Container services in Amazon Lightsail</a> in the <i>Lightsail Dev Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerService",
      "responses": [
        {
          "uuid": "560fa6aa-3937-4f4b-9f8f-c621427a63c8",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'datatype.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'datatype.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1fc1932-3013-498e-ab4b-a385b0e045b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff74808a-6ad2-4862-a81b-534a1b9fa326",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ec45b12-3e14-4e85-8e78-40fc4fd82f00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbd00b0b-45a9-4099-bfd7-d0da27da5e5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54cbd885-6c4c-4047-94d6-dd928a8b1d0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "368d7ba6-9269-4fc3-96b4-b09fd33fb3bf",
      "documentation": "<p>Creates a deployment for your Amazon Lightsail container service.</p> <p>A deployment specifies the containers that will be launched on the container service and their settings, such as the ports to open, the environment variables to apply, and the launch command to run. It also specifies the container that will serve as the public endpoint of the deployment and its settings, such as the HTTP or HTTPS port to use, and the health check configuration.</p> <p>You can deploy containers to your container service using container images from a public registry like Docker Hub, or from your local machine. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-container-images\">Creating container images for your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerServiceDeployment",
      "responses": [
        {
          "uuid": "e71ae170-5e23-480a-8ef6-af8093267f69",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'datatype.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'datatype.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65f8253f-4eff-4a22-a00b-901facf0caae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4991ab29-cdbc-48ea-bcdc-9c7c062536ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c9740331-e7e3-43b8-a4b0-a57445712622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03b5c11d-090f-494a-bbea-22f197b987e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "075a11a2-5bbf-472d-8c96-d4fa77cd0947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9d3495d-8873-4536-96e9-aab71c0833ea",
      "documentation": "<p>Creates a temporary set of log in credentials that you can use to log in to the Docker process on your local machine. After you're logged in, you can use the native Docker commands to push your local container images to the container image registry of your Amazon Lightsail account so that you can use them with your Lightsail container service. The log in credentials expire 12 hours after they are created, at which point you will need to create a new set of log in credentials.</p> <note> <p>You can only push container images to the container service registry of your Lightsail account. You cannot pull container images or perform any other container image management actions on the container service registry.</p> </note> <p>After you push your container images to the container image registry of your Lightsail account, use the <code>RegisterContainerImage</code> action to register the pushed images to a specific Lightsail container service.</p> <note> <p>This action is not required if you install and use the Lightsail Control (lightsailctl) plugin to push container images to your Lightsail container service. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-pushing-container-images\">Pushing and managing container images on your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerServiceRegistryLogin",
      "responses": [
        {
          "uuid": "f38f5b4e-fc12-4b04-af5b-4c9de601804d",
          "body": "{\n  \"registryLogin\": {\n    \"username\": \"\",\n    \"password\": \"\",\n    \"expiresAt\": \"{{faker 'date.recent' 365}}\",\n    \"registry\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e28fd71e-b3d0-4e43-ac10-422905bc997a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d77076e-6a18-4576-95f8-68b975e93a01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfefaaae-2536-4bfb-93ed-24e1651a8fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ac9d534-39f2-4362-b446-dc371e02f933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8efc31c1-e5ef-4561-a0d2-d05856bbbefe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d28dddf7-ee78-45fb-b602-e1386f561d1e",
      "documentation": "<p>Creates a block storage disk that can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDisk",
      "responses": [
        {
          "uuid": "752093e3-55d6-4d69-8d37-3c84956ef86e",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "baa69dfb-d934-48cf-a2c3-e94d1d94a32e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60e3fb3e-cae6-4bf7-835a-fb7a67a8d77a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00f9ce17-3154-49eb-9340-30d27516d0be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "974565df-3ce8-47b4-8cf5-779250121df9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "614cca68-4e3d-429e-9c4f-4458b5a3c11c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5b1ff13-4bda-497c-a9b7-f0f499042c12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8c3f152-1be8-4742-b691-f4f71997cea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "feeb9953-b775-41b3-bd53-3882d4a756bb",
      "documentation": "<p>Creates a block storage disk from a manual or automatic snapshot of a disk. The resulting disk can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDiskFromSnapshot",
      "responses": [
        {
          "uuid": "68c7faac-be0f-4843-90ba-7da5a5b3b2a7",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "846a8783-a5c2-48a6-8d1c-fe5ba9b7f6c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03497fd8-81b0-4c3b-9552-cd141ea2d498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54fb05e3-2afa-4ffa-bda6-9c7f401d7783",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ad3a304-cf4a-40f4-90b5-e8ef819eed38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6b500c1-da0c-451c-afee-f6a7bdcb1643",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d8c48a2-25bc-4f48-b115-dadd09ad6c1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56a27f3d-ea40-46a9-9c31-f745faec30aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1394216-bcea-481b-867a-08d15e12f11a",
      "documentation": "<p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p> <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p> <p>You can also use this operation to create a snapshot of an instance's system volume. You might want to do this, for example, to recover data from the system volume of a botched instance or to create a backup of the system volume like you would for a block storage disk. To create a snapshot of a system volume, just define the <code>instance name</code> parameter when issuing the snapshot command, and a snapshot of the defined instance's system volume will be created. After the snapshot is available, you can create a block storage disk from the snapshot and attach it to a running instance to access the data on the disk.</p> <p>The <code>create disk snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDiskSnapshot",
      "responses": [
        {
          "uuid": "00c41a6d-496e-4466-af4a-d0aa9eecf79b",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8657ce0c-a90d-4edf-b5b7-1ebbcad08dbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c149be83-6a7e-4909-a702-c4e03ff729fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bacf44e-6c3f-49fa-b23c-1f99ddc66887",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48fc56e4-03d7-438e-807a-64ca81d756ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70fe7068-c5e0-4a21-9154-6d05eeb56cf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ac24144-7acd-4bf5-ba4b-d87794e9acf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c6471ae-c3b6-41d5-beef-2cbfd8efdfe2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59bf16a4-4477-4486-bb17-5da04a54a372",
      "documentation": "<p>Creates an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>A distribution is a globally distributed network of caching servers that improve the performance of your website or web application hosted on a Lightsail instance. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-content-delivery-network-distributions\">Content delivery networks in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDistribution",
      "responses": [
        {
          "uuid": "a57b0bde-07da-4c44-bc2a-bb3d16726c14",
          "body": "{\n  \"distribution\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"alternativeDomainNames\": [\n      \"\"\n    ],\n    \"status\": \"\",\n    \"isEnabled\": {{faker 'datatype.boolean'}},\n    \"domainName\": \"\",\n    \"bundleId\": \"\",\n    \"certificateName\": \"\",\n    \"origin\": {\n      \"name\": \"\",\n      \"resourceType\": \"\",\n      \"regionName\": \"\",\n      \"protocolPolicy\": \"\"\n    },\n    \"originPublicDNS\": \"\",\n    \"defaultCacheBehavior\": {\n      \"behavior\": \"\"\n    },\n    \"cacheBehaviorSettings\": {\n      \"defaultTTL\": {{faker 'datatype.number'}},\n      \"minimumTTL\": {{faker 'datatype.number'}},\n      \"maximumTTL\": {{faker 'datatype.number'}},\n      \"allowedHTTPMethods\": \"\",\n      \"cachedHTTPMethods\": \"\",\n      \"forwardedCookies\": {\n        \"option\": \"\",\n        \"cookiesAllowList\": [\n          \"\"\n        ]\n      },\n      \"forwardedHeaders\": {\n        \"option\": \"\",\n        \"headersAllowList\": [\n          \"{{oneOf (array 'Accept' 'Accept-Charset' 'Accept-Datetime' 'Accept-Encoding' 'Accept-Language' 'Authorization' 'CloudFront-Forwarded-Proto' 'CloudFront-Is-Desktop-Viewer' 'CloudFront-Is-Mobile-Viewer' 'CloudFront-Is-SmartTV-Viewer' 'CloudFront-Is-Tablet-Viewer' 'CloudFront-Viewer-Country' 'Host' 'Origin' 'Referer')}}\"\n        ]\n      },\n      \"forwardedQueryStrings\": {\n        \"option\": {{faker 'datatype.boolean'}},\n        \"queryStringsAllowList\": [\n          \"\"\n        ]\n      }\n    },\n    \"cacheBehaviors\": [\n      {\n        \"path\": \"\",\n        \"behavior\": \"\"\n      }\n    ],\n    \"ableToUpdateBundle\": {{faker 'datatype.boolean'}},\n    \"ipAddressType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e80b35ff-b607-47bf-8353-b364363fc559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78d144fc-2766-4e97-9467-9ecdcedc5988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "626cb855-9532-49d3-bd9d-8a44293404bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c23847c0-d51d-4d2f-80d0-b8eb7c322a3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81e70b97-4df6-4a20-93d1-cccf52c129b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7ef7ffa-6a48-40cf-b46c-e83facbdf9be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "913f1edc-1a81-49cf-8bcf-c0749dffbaaf",
      "documentation": "<p>Creates a domain resource for the specified domain (e.g., example.com).</p> <p>The <code>create domain</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDomain",
      "responses": [
        {
          "uuid": "3ed9cc1c-2dc1-491c-bc05-a47516e33b06",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32e43a73-d172-4398-b290-94970062cb49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "038fd622-5be6-4a48-ad3a-d2820acc1984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78988e2e-76de-459c-90f7-8e7b0e79bc39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71a93b7b-5510-44a1-97ee-34bc6e95210a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe7fccb9-ab0b-4144-b308-724fe0eb9d6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8663a504-3530-486d-bb68-c15f51d4a992",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "faf860dc-07f4-4403-ad3a-afbfe369fed8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d65a4ac-b3ff-4f21-838e-1dea6edf672c",
      "documentation": "<p>Creates one of the following domain name system (DNS) records in a domain DNS zone: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</p> <p>The <code>create domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDomainEntry",
      "responses": [
        {
          "uuid": "1cca28d7-fa66-4ace-8d02-3dd4d2f9770b",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2595b74e-e1c6-46ac-90ad-8fe9a8d61df5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53f6012b-0d20-4598-8fc8-b0174782d7b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5613cb08-17d6-4ac8-aca9-2fccd67d8731",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a417ddc-c20d-4dcf-9920-e4b17dbf276b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7af03d39-d9d3-4b12-863f-08a4474b274b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9638d35-32c2-454b-92db-12d0c4ffd857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be521cb1-d82f-4cc1-a3d7-d017fc29097c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ab8535e-fbc0-445f-9322-972de1089c61",
      "documentation": "<p>Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can use a snapshot to create a new instance that is based on that snapshot.</p> <p>The <code>create instance snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstanceSnapshot",
      "responses": [
        {
          "uuid": "01f30d13-0ddf-4562-835d-34bbf3cda5fe",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4a17d527-43de-430c-abff-da96039c5f5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5388a739-e082-41f7-bc58-f0fe647a5437",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36f0f3ff-7067-411f-9753-0251a1633f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a85b04e1-9e43-4726-8271-2620ac69a96a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df662f63-8c5a-4bd6-92af-9fa4a8914c9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1bca550-870b-4d6d-85a8-dcf23bc6a9fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd3a9592-1021-4711-af20-0878ecf4b4a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0697ed09-e99a-4484-8b06-63d8180f67ab",
      "documentation": "<p>Creates one or more Amazon Lightsail instances.</p> <p>The <code>create instances</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstances",
      "responses": [
        {
          "uuid": "bad36486-d1bc-4a5a-b9c4-db0c57208851",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a733d10-e2d7-460b-bca2-35770c29b186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81a2f227-1e35-494f-bf91-3c762b906054",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ea2c474-d50c-4149-8ecc-9bb6f4cfa3b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c46af5b-e568-4057-b944-743c9fde00a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "274cccd5-cc5e-47ec-9e5a-d70faf83ba56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80dcb862-12f2-4a31-9308-9b9cf9377dca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1e78c04-0f15-413f-a68d-367c3decea37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52586a50-8910-4f72-9444-c2e7de12a508",
      "documentation": "<p>Creates one or more new instances from a manual or automatic snapshot of an instance.</p> <p>The <code>create instances from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstancesFromSnapshot",
      "responses": [
        {
          "uuid": "cdcf3397-ad58-46b0-9556-817a4145c079",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4474350e-329b-43d0-af07-a0df21eb8224",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db1bb704-f415-4080-8d98-a3334753da8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9066e6c3-9275-4302-8f47-2068f95c8732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47f41c38-471d-42b8-b722-708149ad786a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13d54975-7b1d-4684-b35d-5f2622351dea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55215fcb-4b15-4f87-a183-e1172b5a96e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22ca9a2c-dd6b-4008-ae4c-17ea53593805",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "751dfe3d-c51a-44ca-913b-c8220ba37af0",
      "documentation": "<p>Creates an SSH key pair.</p> <p>The <code>create key pair</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateKeyPair",
      "responses": [
        {
          "uuid": "67df2a9a-8086-4a7f-8e4f-311cee29457e",
          "body": "{\n  \"keyPair\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"fingerprint\": \"\"\n  },\n  \"publicKeyBase64\": \"\",\n  \"privateKeyBase64\": \"\",\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c90b9930-9ac9-479b-aa4f-8e4bb588bdf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e1a3daf-4045-4807-8177-4eb3a113e852",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "303256b2-0d32-4530-8087-1faa6460d56e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba2f780a-e860-4bf7-8a8e-24870199bb5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c78f87ea-1165-4696-bd7e-2b25f81cc821",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce977559-8f60-45bd-8a4f-8ca223730909",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76ca5ec1-b786-4eb8-a012-08a21bec41b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22c9ab3c-ac68-4b9c-bd48-3d1a8fe9983a",
      "documentation": "<p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/configure-lightsail-instances-for-load-balancing\">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p> <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p> <p>The <code>create load balancer</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateLoadBalancer",
      "responses": [
        {
          "uuid": "fad3ca07-6eef-4c83-b8a6-c3e06eb52294",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "323691e8-e97a-4b09-9655-297fc4deef9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92663c4c-6544-4a00-b2f0-ebf070fb6f2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "939ed073-c0ed-4817-8b64-ee0069fdcc84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e47613ab-4e56-4938-96e5-527285f45e8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9460f07-491a-4ee9-a648-2f3555f8e33b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2492cd7-2157-4f28-90f5-31e8b1a38d82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1008a57d-bcde-45e8-aff5-6d3b43a92b3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "447d07ac-3014-4402-af51-10d3a3c3d523",
      "documentation": "<p>Creates an SSL/TLS certificate for an Amazon Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>The <code>CreateLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "eedcfd0a-506c-4e7b-83f3-5fb26bcf1816",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "570eb540-bae4-4753-ad0b-1cb45ff45a09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e23413d-e5e3-4d4f-9c9b-3a858eb5481f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3a5bbbd-ce61-4d18-b955-87adc5dc8bc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb7e62b6-8414-4165-93af-f48354f9f7d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4963c18a-f756-444d-bb4b-f9ab01abc89f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0edc6d34-deb4-4834-8207-51847b1bec23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77806915-7e5c-4a93-bb44-4528889966c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ca1e24a-c812-4acd-b7e4-ae2e0f74072a",
      "documentation": "<p>Creates a new database in Amazon Lightsail.</p> <p>The <code>create relational database</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabase",
      "responses": [
        {
          "uuid": "db4d982b-7733-4b14-9b7b-1429f78a6214",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c3b1659-44ec-42c3-b7ac-0babec930293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f96980b-17cf-4810-913f-571138ecae7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee2fef36-ee7b-42fe-8a5d-6b3ee67a7613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9cad8ec-4677-4787-8f06-26c0d91e0a02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68c1905f-2825-4ce9-86ec-3d97b208ce75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9885610f-2679-4c05-93f4-9e530d121425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1faade8-513f-45f6-be77-dc01aa0896d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75cbab5e-62ed-454f-84f9-461d2f60459b",
      "documentation": "<p>Creates a new database from an existing database snapshot in Amazon Lightsail.</p> <p>You can create a new database from a snapshot in if something goes wrong with your original database, or to change it to a different plan, such as a high availability or standard plan.</p> <p>The <code>create relational database from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by relationalDatabaseSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseFromSnapshot",
      "responses": [
        {
          "uuid": "7f611179-0b9a-44db-b4cc-fdac60337b58",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80904ca7-86cb-47f0-8e94-6dad19426533",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1b07a0e-07ce-4663-b35f-eb644502f6a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35bf2af2-081d-4bcf-969f-e32d4ae066eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d43ef784-b484-414a-994e-7b58b14454ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff8d5c03-e6db-411c-802d-624738a60973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91217078-3fe3-400b-8919-f10e5e810060",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af431ad5-2ff4-440c-8407-10fb691af37e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd3e60ef-639d-46fc-b104-e30f54dd6477",
      "documentation": "<p>Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for backups, to make copies of a database, and to save data before deleting a database.</p> <p>The <code>create relational database snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "edccfead-9927-4ffe-8359-7a03d6fb9d8b",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26946133-601e-4648-9c9b-cf0f4172eebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "487e3621-8484-4ccc-8e13-ebb053352f45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7919c7c6-7938-47d0-80ba-fb1db6034c2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32ccf625-ce9e-469f-b48a-07349931a0a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "252ace80-ddc0-44a1-9317-6cfd6171ab40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0dbd98a4-8555-48da-89e4-79e6da8a6d6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14c91d39-6208-4e8c-8371-19d117c53574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1f79438-a0ca-4136-b88c-68c56b30cdd8",
      "documentation": "<p>Deletes an alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteAlarm",
      "responses": [
        {
          "uuid": "ac12f8b2-2100-46aa-8700-278dc0cd4b35",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0c10000-db23-4438-b21a-fe5e85f264ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cff0d897-4267-43d2-98c9-c9b85caac331",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c084d1fb-fe50-40d0-828e-943e865fcaaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e45eb45b-24f4-4092-a2d7-98fb9c670a7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "637dbc01-c6b3-4aa9-b5b8-de28beda04ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e4facfd-5e2b-4f71-8d62-773282d5be8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25ab9448-f1a9-4508-88b2-5b1eedf09b71",
      "documentation": "Deletes an automatic snapshot of an instance or disk. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteAutoSnapshot",
      "responses": [
        {
          "uuid": "0bf99ac6-ded1-4c51-9661-f5cab58e27fe",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de6b6715-9689-4017-a4e6-72e27b16bb92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6934c886-f70f-4eed-940f-f0dc8a11cf0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64b383b6-6802-4624-a2d0-6e65cda1072c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05c36110-ba3c-40a7-9869-ea96d55f8902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c507dff-32cc-4108-9a20-f79f5e246d9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f93fc9b-305d-4246-8526-ea980de18859",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04d9f3ac-f44a-4865-8e8c-85e72236fdcd",
      "documentation": "<p>Deletes a Amazon Lightsail bucket.</p> <note> <p>When you delete your bucket, the bucket name is released and can be reused for a new bucket in your account or another AWS account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteBucket",
      "responses": [
        {
          "uuid": "0de14566-2cd5-4bdf-8635-4aedd76646a6",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39439c11-6cc6-47f9-a894-dc06e472bd30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa959b9e-b7f6-4a82-9842-3d7de06af9c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89c64a70-525b-4fd7-9628-bf561a97dd84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "519bdd8a-cab2-459a-834d-96a54e7bfe43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5615fb15-d8f8-4d02-a11b-a8fb08cd6067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b3a2429-c806-42c6-a512-7b336827b7ef",
      "documentation": "<p>Deletes an access key for the specified Amazon Lightsail bucket.</p> <p>We recommend that you delete an access key if the secret access key is compromised.</p> <p>For more information about access keys, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-bucket-access-keys\">Creating access keys for a bucket in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteBucketAccessKey",
      "responses": [
        {
          "uuid": "a7956afe-d35f-4ff2-9604-3273baff84cc",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c7811e1-3f7c-43f2-b5f0-0d75fc8bf18f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c223d34-446f-4584-9af0-ff6c322e0a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c4332c9-2b06-456d-8f66-0e84d37ea3e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "426b933a-b0ba-4bfb-b3e7-0881a72097a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "433d015a-9788-47f1-b301-252a98322c5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b878cf5-409a-4708-8cca-192e180e3981",
      "documentation": "<p>Deletes an SSL/TLS certificate for your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Certificates that are currently attached to a distribution cannot be deleted. Use the <code>DetachCertificateFromDistribution</code> action to detach a certificate from a distribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteCertificate",
      "responses": [
        {
          "uuid": "75e62d5d-aaab-4269-a69e-b1cc717fb4bb",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "abbcb885-ead1-4780-b79a-38dbb4f3ee0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a118bcfc-2008-4cb1-919f-2984a3259d0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ba2ba77-26da-4c36-811b-e393f38f6cd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5462cd5-3edf-4f71-8702-63b89085089b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76a9154f-309f-487a-8680-a424f665df7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f2a18f6-5b9b-478a-bc0f-f27ed3ec2abf",
      "documentation": "<p>Deletes a contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContactMethod",
      "responses": [
        {
          "uuid": "b64b89b7-578e-43f3-8484-74899a6d6c78",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d58d7fa-fe74-40cc-a033-68e2b310f137",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4d2d47b-82d0-4a89-a055-b7091ffcf36b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b994e606-7db6-412e-b7a9-b2938760acc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7ba8ec4-4751-4800-90b0-1317120ce0df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07831c5a-c0d6-4320-acdb-9db38b985844",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3aeebba7-a5e1-43b6-b823-a17423d448a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42517106-ebf4-4c1d-8ed1-8a8d4655bcc6",
      "documentation": "Deletes a container image that is registered to your Amazon Lightsail container service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContainerImage",
      "responses": [
        {
          "uuid": "9e16b31e-7f0c-4b58-b696-5b35f30dfa46",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21b505d1-8120-47bd-bac3-a4de5cacd8d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4da0d2bc-13f6-4dfa-9943-ae0ca90196c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d08a37b4-80ad-48ab-8b28-ade45ff2875d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfb4bd2d-6349-4729-b253-6fc4dd40997d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "623939eb-72a6-4362-90b1-9824d1dac484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce764547-e690-42d1-8cfd-9f9d90a30418",
      "documentation": "Deletes your Amazon Lightsail container service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContainerService",
      "responses": [
        {
          "uuid": "b4ff0ac5-acd5-46de-9eb6-db51eacc23f2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a70f110e-d294-4e72-986d-0f80bbf88411",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2368f58-ff14-4223-a3ab-8e27d1466013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cdbccf1-6112-4f5e-bfc1-daa031d1a341",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f42f673-ce9f-42e5-b283-73f7e3ddb0a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86d05ccb-e628-4ffe-b168-b69e8cd9d7e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9666da95-ab97-44dc-adbb-012eb1e19c65",
      "documentation": "<p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p> <note> <p>The disk may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>The <code>delete disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDisk",
      "responses": [
        {
          "uuid": "c92a2764-175e-4b90-8f48-61032ea3620e",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8368a75-e249-4025-a5a4-5519d601a303",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27c4df51-d809-49c8-af61-26d05b82b260",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71f6de53-fec0-4027-88bc-3c21a88d274f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95bf2d95-8381-4d26-bfc9-50eaa9ced940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea943857-e3e3-42c8-9886-a3fbbcb1becf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "281a404b-3305-4b09-a1c5-0f1d91eeab5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e75a349f-d37a-4c4e-9bd7-292ede85e0f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d875bd2-26d8-426d-bf72-d9324b82940e",
      "documentation": "<p>Deletes the specified disk snapshot.</p> <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p> <p>The <code>delete disk snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDiskSnapshot",
      "responses": [
        {
          "uuid": "c8ae501c-f03b-4ed6-8343-78bdbe8717d1",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ff16c1c-74a1-427e-8cd4-b4aa20c45bba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58d7d3de-25e7-40e5-b6ec-fc4a9c63b3c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f5bbecd-75ba-4175-8968-cd548d9d757a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d15df3c5-1f0d-4120-91e0-3f3dbc9789c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45debf12-8892-470d-89ff-ccd6f16045a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33b7c8d3-f189-496b-b7d6-d1e223b23aa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b669002-9c29-408d-9ab2-480fbe46461e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b61f83ac-3b3d-41d4-9191-3c815de85aa4",
      "documentation": "Deletes your Amazon Lightsail content delivery network (CDN) distribution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDistribution",
      "responses": [
        {
          "uuid": "dd8adf64-5f1f-4e11-b487-b0a9972e3524",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5dd0cb73-5047-4200-ac01-c0bf57b45a6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f55a2dea-87a4-4afc-a5dd-2cad436562f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6f841c2-1972-4231-bc69-ba1b2c06dde1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f4eaf24-9aa2-4f11-b53c-f08f7b517ec5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f411fa1-9f99-433a-b50a-073173be2c42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4e008d8-1622-4481-b53f-6a55dd994d05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a724387-8504-4638-aa6e-801e71a1aa3b",
      "documentation": "<p>Deletes the specified domain recordset and all of its domain records.</p> <p>The <code>delete domain</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDomain",
      "responses": [
        {
          "uuid": "4aabe796-e9d6-4e88-b4b2-879b1aa149f2",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62dff65e-3dba-491f-a1a7-79fe64410178",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d912c16-7bb5-49c3-98f2-1fb7f6899215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fa4880c-9787-4620-ae7d-3dc2e84f284d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62f2880b-a419-47de-902e-21dd5eb9e2a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ab06442-3d8b-4e54-93d3-ffa03b1f01a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb6e1f7a-ebcd-4803-aff8-f7ed804a41be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a183d18-ba79-48d3-9909-ffaa7ed3cf32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be319747-e406-4dcf-bedc-733fb2c238ef",
      "documentation": "<p>Deletes a specific domain entry.</p> <p>The <code>delete domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDomainEntry",
      "responses": [
        {
          "uuid": "6fcad6a3-add2-4a52-a993-b2b77cf3199a",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "31b9437f-dd1b-4b7b-8de4-dca8e48112f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "949e768b-2ce9-4607-b8bc-5ea1d86ca8e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6373bd9b-d3df-49c3-82f8-26f47b2aeb61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aad37c4c-5922-416f-9732-bb36d202b513",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74953e9b-264d-4cd4-8b1d-d5827dbb4738",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b3b23b3-ee59-4428-a193-63685b8a4f73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34194c98-f5dc-4ae1-a846-795252f331c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a268106b-b5bb-4ec3-a63e-7e8908eb61af",
      "documentation": "<p>Deletes an Amazon Lightsail instance.</p> <p>The <code>delete instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteInstance",
      "responses": [
        {
          "uuid": "3e50497d-e7f9-409c-94e3-da7683cf0edf",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ea22bea-66cb-4b37-ba5f-272fc9529923",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "263b5973-ba4d-4971-9aff-959dcbbb0376",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f0b0873-0922-4830-91d9-1dd264ee3e85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b38998e-ec08-4bea-8084-0f537ae19d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57b65b55-061f-4fa6-8e8c-6a1b32a64cf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "269af83c-7963-4167-ba3f-8f9be87fbd9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9de84b03-cf50-4cfb-8138-09ae6ecfa735",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6aa3699-ae42-4191-a75d-af45045c47fa",
      "documentation": "<p>Deletes a specific snapshot of a virtual private server (or <i>instance</i>).</p> <p>The <code>delete instance snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteInstanceSnapshot",
      "responses": [
        {
          "uuid": "594c9fc2-6e62-4f0a-ac09-4222c8596125",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "355a9bc9-c034-4d29-a928-39c711729c9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "535fb170-b504-48f2-a315-63606b57ea98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6646e4dc-8a62-408a-97c4-b8a274b0fe7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a11a610-71bb-49a9-a0a3-5814f3b20b14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c253437c-503b-43a9-b69f-fec1cb22bdef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07cf8951-e660-46dc-b692-1c218d2764f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57fd4e16-f623-4578-b533-9a69e5835832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bac4d5d7-19f7-48de-8a96-9ed8c3be9050",
      "documentation": "<p>Deletes a specific SSH key pair.</p> <p>The <code>delete key pair</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>key pair name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteKeyPair",
      "responses": [
        {
          "uuid": "d4a1019f-6bc0-4339-85c1-84eadedf2e15",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1006a031-a579-4419-9abc-147dfa5d3558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a84ba9cd-9595-45e3-942e-33c51b20e24d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "126b045e-d658-45e7-a327-ea66d857bbbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd311124-e562-4308-8f80-4d898497ab22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "314fb1d3-d9ad-4c93-8343-9669f95aff7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34c9b304-ebaf-4530-a146-8434d900d0db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "755e3261-6c8c-4003-ae38-7bb2fb222312",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9da2597-96a8-415a-bc06-99f7ecd1976d",
      "documentation": "<p>Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance. This operation enables the Lightsail browser-based SSH or RDP clients to connect to the instance after a host key mismatch.</p> <important> <p>Perform this operation only if you were expecting the host key or certificate mismatch or if you are familiar with the new host key or certificate on the instance. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection\">Troubleshooting connection issues when using the Amazon Lightsail browser-based SSH or RDP client</a>.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteKnownHostKeys",
      "responses": [
        {
          "uuid": "20cb64b9-851d-4832-83f6-2b4d18b3e5da",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "02bb121e-d546-4766-afec-876a37273448",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "440cd7d8-9c2f-422c-9c12-531868150bfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67dac181-119c-4b28-b481-08405105970d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d876dee-020a-44dc-99b3-fc9cf968bc8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b07fcee-47d9-44bd-b6c8-aaf572638421",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3eb95c4-f035-41bf-b70f-2ba865a852e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "726dee5d-e58a-4636-a417-a039d2dd1622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "900ddf85-1f21-4947-b5cb-e1d1170ec45d",
      "documentation": "<p>Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.</p> <p>The <code>delete load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancer",
      "responses": [
        {
          "uuid": "aa561b23-b8e5-4c9f-870c-9901380699d6",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a9b1777-1b06-4397-a11c-9da72072ce51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c53ba90e-0d0b-48ce-99f2-580afd5234b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5a739c1-5d52-4d35-afa5-eaba488793d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fca3e01-0138-49e3-8f47-1ea4d175d51d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fc1ec44-2acd-474e-9b0f-d73e6dcf657e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ecf8ad3b-5450-41e9-acbf-ee743b3b9f4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36647e19-32d6-4b98-9a53-fce770571524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "431f6ae4-846e-4a25-bf27-0fda81e1984e",
      "documentation": "<p>Deletes an SSL/TLS certificate associated with a Lightsail load balancer.</p> <p>The <code>DeleteLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "278b1d1b-6fed-43ea-8d21-8a5628d4f1eb",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a6e58d67-a562-4c1b-9c54-12e89eb2ed95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d89966e3-1ef2-47ef-ac4d-9684ceb2f7ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29e01d6e-a88d-42c5-be8c-ef9506358992",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d69c91d-d3b4-439f-a659-c784d2044674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa9a93fd-d085-4061-b729-b0d61565d2fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b6c1b1a-b56e-42ad-94f7-0fd272cdb418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1aac1add-16e1-4c69-8ad7-d9a4771f7c3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afca013d-cca1-49c3-a521-c9a1f726330b",
      "documentation": "<p>Deletes a database in Amazon Lightsail.</p> <p>The <code>delete relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabase",
      "responses": [
        {
          "uuid": "49727f56-67eb-4f86-825c-ebab201e5cec",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b2236cc0-45e4-419c-a353-f8e2b6226890",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11609009-ecce-426a-849f-6a0b2e83b1d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6295920-23f7-4d22-9780-9682bab3943e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "993f101e-d560-44af-958b-573e6b6c8c96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b89a5bc-3712-4c52-8571-9909eea86e3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83cbc540-1b0c-47dc-b62c-540ef681efa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0793eb46-2651-483d-8c0d-36b94c70d3ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "333888cb-e5be-4f5c-bac6-866b8c7f0fb0",
      "documentation": "<p>Deletes a database snapshot in Amazon Lightsail.</p> <p>The <code>delete relational database snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "301c7cfd-115f-471c-9274-af9043b05322",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4841e087-6f22-4992-bbe8-a8c6e0df2b82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdf616eb-22e0-462c-a336-881876b52bab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "369def47-b403-4a6f-88d3-fc423933aa46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3be9414-cd4a-49f3-b87d-a3369bd43f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "152b0f9e-fc86-49ba-829e-32d17b2973f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b69d1b92-aeb2-47af-b7f1-5fe9b15aeb94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a084fe2-a52c-4e53-9270-ec59cce53581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e99c8f49-3643-40e5-b595-cedb9b2e3b1d",
      "documentation": "<p>Detaches an SSL/TLS certificate from your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After the certificate is detached, your distribution stops accepting traffic for all of the domains that are associated with the certificate.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachCertificateFromDistribution",
      "responses": [
        {
          "uuid": "5351d750-b293-4231-a5c7-00ca15718f71",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "787a1103-7d40-4e38-99f5-6e5e019e1870",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a238045b-3506-44dc-8765-76073bbbc4d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98025e06-dcc4-47fa-adce-19fa24e47cd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6eaae421-7deb-4ed2-ab97-f02024de31e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f7cad57-ae27-48f8-86a8-31f80ee56a4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1590bee6-69a6-48a6-a85b-13ebaa5fb7cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd00d05f-2160-49d6-888b-304f2070966c",
      "documentation": "<p>Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your operating system before stopping the instance and detaching the disk.</p> <p>The <code>detach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachDisk",
      "responses": [
        {
          "uuid": "bb9b2c3e-64a5-43d0-8d71-5bfce834fa8a",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f69d8463-0935-4d49-acea-3fb2161361d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d9139d4-fff2-48fb-9083-211bf8090743",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49f79788-705a-4220-a102-66bcfbbe1e80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16b6c8da-2711-448e-9504-5a7dc91d2806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd13d515-1284-419b-9fd5-5d187b2d7cc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7dc33a0d-3ced-4e94-acec-3af275f2af21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6837d3e-50e2-4234-ba81-e13be81264b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c11ebb1-6f83-4621-a6b0-d79660b6a469",
      "documentation": "<p>Detaches the specified instances from a Lightsail load balancer.</p> <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p> <p>The <code>detach instances from load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachInstancesFromLoadBalancer",
      "responses": [
        {
          "uuid": "107a646c-76d1-4286-a4e8-4654433ff70f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f371abc-154d-4e84-b545-f6158bef8e1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa111837-1860-4c26-a695-8f56093e9089",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aff477cb-6b53-4293-b7db-00c7eae30729",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53bccf9f-1edb-4747-b3cc-1ea7529d1463",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "696b39a0-facb-4bd4-ae44-e41887aeab5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "722ccaae-cb66-4a10-aa14-bb408a35b408",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd759029-b556-4ea8-8673-fb12879fd623",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b04aaee4-541b-46da-8014-4d92c726981b",
      "documentation": "Detaches a static IP from the Amazon Lightsail instance to which it is attached.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachStaticIp",
      "responses": [
        {
          "uuid": "23f5b22f-4d61-40e6-926d-44e0d5c069e4",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fe6930a-c5df-414e-893c-9767e72368a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5d17cbc-ef2c-4c5b-a25a-41d35707f482",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fe87aad-4111-44ef-80b1-8c38983bb773",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "599c9b90-a2f3-42c7-88d5-5d14cde36545",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "235a9cab-5464-4e23-aeef-ee311c71c20a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa513696-34b0-42fc-a7f7-b12742677f99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47b3a2e9-dcb2-47fe-ba43-56f665f78c9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b79f7bff-c411-45c3-b2b7-6187f36152a1",
      "documentation": "Disables an add-on for an Amazon Lightsail resource. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DisableAddOn",
      "responses": [
        {
          "uuid": "22aeffa9-b206-4dc5-a493-30a7b4cc0c61",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f1d8e20-ded8-4755-b7c8-88cdd07cdc7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae84484c-9810-446a-9d0e-f1367391f524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ab0d859-0d9d-46fd-bf0d-33afa6b2c435",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3e22a6b-6be4-4045-bc59-1a194d659500",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b31f5ce-f0fb-430b-88ac-11af52f01eed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ae55c6d-9430-4f49-8270-56755acdf28c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bfd63ce-0805-4ea4-a14f-8c8e9d2a574f",
      "documentation": "Downloads the default SSH key pair from the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DownloadDefaultKeyPair",
      "responses": [
        {
          "uuid": "d50fa230-1e19-4190-a233-d1387c8d37dc",
          "body": "{\n  \"publicKeyBase64\": \"\",\n  \"privateKeyBase64\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "660b9212-37dd-44b3-940d-200ee5e56971",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e42f7836-36e1-4613-825a-509211ebe425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d68c58f1-7f22-4dd6-8ed7-597069fabf09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd0aa155-ad87-4713-b8cc-eb780fcb2d96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79ba0ec8-2a25-4a73-b3cd-e7d47c8879e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd75e2a8-f705-4300-b900-03cd6b5d1381",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40c08a87-33a5-4423-a690-7ebfd5012986",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1357890a-e4c6-4e8e-9a30-7a3748d7a7ca",
      "documentation": "Enables or modifies an add-on for an Amazon Lightsail resource. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.EnableAddOn",
      "responses": [
        {
          "uuid": "39a2e1bb-c29b-452c-8b1a-6519b0119d3a",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0257f46-3392-4ccd-b261-79bbe449fd1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "474e9ae5-5768-4332-84c8-b68f3ce61de6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0355f02f-61fb-400d-a01e-ed0a5cc90b7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d9c6d2c-9af9-4733-9b37-388fbbc752f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b28317c4-6553-4867-9568-a3b3885530bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03ea2e34-3989-4775-8907-e9cc9a2f77e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e8ea24b-880c-4c8b-9a08-9384e78bec93",
      "documentation": "<p>Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic Compute Cloud (Amazon EC2). This operation results in an export snapshot record that can be used with the <code>create cloud formation stack</code> operation to create new Amazon EC2 instances.</p> <p>Exported instance snapshots appear in Amazon EC2 as Amazon Machine Images (AMIs), and the instance system disk appears as an Amazon Elastic Block Store (Amazon EBS) volume. Exported disk snapshots appear in Amazon EC2 as Amazon EBS volumes. Snapshots are exported to the same Amazon Web Services Region in Amazon EC2 as the source Lightsail snapshot.</p> <p/> <p>The <code>export snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>source snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p> <note> <p>Use the <code>get instance snapshots</code> or <code>get disk snapshots</code> operations to get a list of snapshots that you can export to Amazon EC2.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ExportSnapshot",
      "responses": [
        {
          "uuid": "a79c72dc-1088-4eba-b254-501fda61bc15",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8c2dbc8c-594b-40d2-9431-c7adb363cf36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e92a0fd-f4b0-434d-9661-cf00a2e106d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83968d4e-f64c-4435-a887-1e299fb2ceef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "546a6f5c-c240-42de-a6c6-88ac22a7817e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6357ac55-c3bb-4bf9-8d1c-58e1a70f4ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed273b62-d95f-42c1-97b3-a099ec7a6c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23b7440f-cb28-4dee-8096-00edc6b89c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1844201-c0c3-4bf1-83c3-dca908969932",
      "documentation": "Returns the names of all active (not deleted) resources.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetActiveNames",
      "responses": [
        {
          "uuid": "02e2ee94-8cb0-4ef0-a5d7-d1e54d55e375",
          "body": "{\n  \"activeNames\": [\n    \"\"\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eea0dc42-16b2-4a6c-b4d1-e18ab9422c5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffb29e54-972e-49f8-81ba-8da25d9ce2e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d087010d-3021-406f-9828-1c089250be07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "788cf49a-a8c1-4a87-bb0c-8498579ccb98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2bb59649-39c7-49ea-906c-a823404e0576",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "299b6aaf-9954-4de7-b73b-b9833309364e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "172ae712-7898-48ee-b67b-ac7c28bb7d73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db73725b-df6f-4d4f-86b2-02f31116ecb7",
      "documentation": "<p>Returns information about the configured alarms. Specify an alarm name in your request to return information about a specific alarm, or specify a monitored resource name to return information about all alarms for a specific resource.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetAlarms",
      "responses": [
        {
          "uuid": "0de3c7a4-46a5-451c-a7ab-d499ad0376ec",
          "body": "{\n  \"alarms\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"supportCode\": \"\",\n      \"monitoredResourceInfo\": {\n        \"arn\": \"\",\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      },\n      \"comparisonOperator\": \"\",\n      \"evaluationPeriods\": {{faker 'datatype.number'}},\n      \"period\": {{faker 'datatype.number'}},\n      \"threshold\": {{faker 'datatype.float'}},\n      \"datapointsToAlarm\": {{faker 'datatype.number'}},\n      \"treatMissingData\": \"\",\n      \"statistic\": \"\",\n      \"metricName\": \"\",\n      \"state\": \"\",\n      \"unit\": \"\",\n      \"contactProtocols\": [\n        \"{{oneOf (array 'Email' 'SMS')}}\"\n      ],\n      \"notificationTriggers\": [\n        \"{{oneOf (array 'OK' 'ALARM' 'INSUFFICIENT_DATA')}}\"\n      ],\n      \"notificationEnabled\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4202225b-b810-4d4f-b115-0f6a742ab2df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9f54b5e-1b5a-4e20-818e-0ffe05cacef8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f245e591-4897-4c1f-b9d1-3c5dda37a01e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6012189f-e730-4aae-add4-19dcaf00c709",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9d5e484-9cb7-4e30-8e0b-81583b91920d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ba40d7b-d9c6-4e1f-a0fb-9e67f8c89ddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "320199ef-c7b8-4c36-bfb1-b40425ac5f9d",
      "documentation": "Returns the available automatic snapshots for an instance or disk. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetAutoSnapshots",
      "responses": [
        {
          "uuid": "0faba157-5063-4590-bd71-8732075411b6",
          "body": "{\n  \"resourceName\": \"\",\n  \"resourceType\": \"\",\n  \"autoSnapshots\": [\n    {\n      \"date\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"fromAttachedDisks\": [\n        {\n          \"path\": \"\",\n          \"sizeInGb\": {{faker 'datatype.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4ab0183-e0e2-4203-855a-ae37dca76d23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d3e0277-c6c7-497e-9f2e-3efb970260f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6222f705-55f5-418b-93db-74ce8f3361f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05c93425-084e-4b3f-aab8-2a40ea95ada6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f48a7c2-87a0-4d59-876a-66500938d03a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a37971db-5013-42d4-9f39-584158e37696",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f351b189-a0e3-4bf9-9fb8-d76547c3fad2",
      "documentation": "<p>Returns the list of available instance images, or <i>blueprints</i>. You can use a blueprint to create a new instance already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose.</p> <note> <p>Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBlueprints",
      "responses": [
        {
          "uuid": "24ca3f25-8af5-4dcd-a396-f95b165909ff",
          "body": "{\n  \"blueprints\": [\n    {\n      \"blueprintId\": \"\",\n      \"name\": \"\",\n      \"group\": \"\",\n      \"type\": \"\",\n      \"description\": \"\",\n      \"isActive\": {{faker 'datatype.boolean'}},\n      \"minPower\": {{faker 'datatype.number'}},\n      \"version\": \"\",\n      \"versionCode\": \"\",\n      \"productUrl\": \"\",\n      \"licenseUrl\": \"\",\n      \"platform\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15202b7d-dc53-4f60-8305-ac28324d1764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fce78cd-89ea-4464-9b6c-0c5275e96fa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1bfc488-a8cf-4968-921f-d5b4fc4d630d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a945b48-8680-44ce-9b81-03ea6b5452fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "577a2e77-c41b-4af6-94bd-bdc89d4a382f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3011671-c2d5-431e-ac42-bc96bdf802ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6dd27359-1a72-4b7f-b35a-3883299c89af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd48708a-47f0-4b5e-b167-92772e879e74",
      "documentation": "<p>Returns the existing access key IDs for the specified Amazon Lightsail bucket.</p> <important> <p>This action does not return the secret access key value of an access key. You can get a secret access key only when you create it from the response of the <a>CreateBucketAccessKey</a> action. If you lose the secret access key, you must create a new access key.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketAccessKeys",
      "responses": [
        {
          "uuid": "48da2865-423e-4ed3-9750-2208231e2af0",
          "body": "{\n  \"accessKeys\": [\n    {\n      \"accessKeyId\": \"\",\n      \"secretAccessKey\": \"\",\n      \"status\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUsed\": {\n        \"lastUsedDate\": \"{{faker 'date.recent' 365}}\",\n        \"region\": \"\",\n        \"serviceName\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "792ec0ef-2338-48df-9fbd-5ac507e882d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6266dba-fa7b-4890-9dad-fe64c9dc31dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50171346-4350-4390-9213-487a62a54741",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6244202-b4b9-4b7a-b9ef-e1d2a28e8386",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d73a4cb-7465-492f-906e-4067d199acb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddfc10f5-9b48-4e8b-907b-28d9e5c15a72",
      "documentation": "<p>Returns the bundles that you can apply to a Amazon Lightsail bucket.</p> <p>The bucket bundle specifies the monthly cost, storage quota, and data transfer quota for a bucket.</p> <p>Use the <a>UpdateBucketBundle</a> action to update the bundle for a bucket.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketBundles",
      "responses": [
        {
          "uuid": "ab462a57-1526-4a33-8fac-e441329e78ad",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'datatype.float'}},\n      \"storagePerMonthInGb\": {{faker 'datatype.number'}},\n      \"transferPerMonthInGb\": {{faker 'datatype.number'}},\n      \"isActive\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57d67a34-d79f-4e5b-91ba-a97f44dbd053",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e3d260d-3e44-43ce-84e9-0b13f9d2e4f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bcccf657-e085-4037-bbf2-1b313cedceb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "658cf27f-8ba2-4009-a4f7-ead66c01627a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97648753-e4b9-485a-81b7-be6c800a48e9",
      "documentation": "<p>Returns the data points of a specific metric for an Amazon Lightsail bucket.</p> <p>Metrics report the utilization of a bucket. View and collect metric data regularly to monitor the number of objects stored in a bucket (including object versions) and the storage space used by those objects.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketMetricData",
      "responses": [
        {
          "uuid": "34b9cd5b-d098-4163-873a-40a28e9daf52",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "79fdf55b-d6b7-43f2-a252-d732c8acba5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b5fdf47-918e-46bc-b146-bb38765962ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "331e6c7c-a66d-4583-becf-7da400d5f87c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e52045fa-2554-4e30-bf15-5db7a5ab88c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "406195ef-886c-41aa-845b-e2e6b105d566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de19a242-47f2-4ee5-b56a-234deeead501",
      "documentation": "<p>Returns information about one or more Amazon Lightsail buckets.</p> <p>For more information about buckets, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/buckets-in-amazon-lightsail\">Buckets in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>..</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBuckets",
      "responses": [
        {
          "uuid": "f5099df1-04b4-408d-883f-4baa3c813fe6",
          "body": "{\n  \"buckets\": [\n    {\n      \"resourceType\": \"\",\n      \"accessRules\": {\n        \"getObject\": \"\",\n        \"allowPublicOverrides\": {{faker 'datatype.boolean'}}\n      },\n      \"arn\": \"\",\n      \"bundleId\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"name\": \"\",\n      \"supportCode\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"objectVersioning\": \"\",\n      \"ableToUpdateBundle\": {{faker 'datatype.boolean'}},\n      \"readonlyAccessAccounts\": [\n        \"\"\n      ],\n      \"resourcesReceivingAccess\": [\n        {\n          \"name\": \"\",\n          \"resourceType\": \"\"\n        }\n      ],\n      \"state\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a922c246-5d0d-4dda-a849-8529406ad0c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a849a25e-0327-4d92-b7ed-ac551d916356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42a435f7-4aba-4d49-8d6f-bf62b73b15dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "988c63c2-eeda-4432-a24a-a1361f09c3ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87191ed7-46c7-4dac-a0a6-c71ee2f41c47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec3bafac-31e9-47d9-aa77-844b621648b4",
      "documentation": "Returns the list of bundles that are available for purchase. A bundle describes the specs for your virtual private server (or <i>instance</i>).",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBundles",
      "responses": [
        {
          "uuid": "65cc0553-d6c7-45fe-a7fb-d859c9535e89",
          "body": "{\n  \"bundles\": [\n    {\n      \"price\": {{faker 'datatype.float'}},\n      \"cpuCount\": {{faker 'datatype.number'}},\n      \"diskSizeInGb\": {{faker 'datatype.number'}},\n      \"bundleId\": \"\",\n      \"instanceType\": \"\",\n      \"isActive\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"power\": {{faker 'datatype.number'}},\n      \"ramSizeInGb\": {{faker 'datatype.float'}},\n      \"transferPerMonthInGb\": {{faker 'datatype.number'}},\n      \"supportedPlatforms\": [\n        \"{{oneOf (array 'LINUX_UNIX' 'WINDOWS')}}\"\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6eabcb07-1c76-4762-8c6a-28f619a3f768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "131338e7-dd2f-41cf-a4a5-650a2b69395e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3bdac2b8-85e1-4fd8-8178-8b102b35060f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ea5643a-83f7-43d9-b030-fb82083ea815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a9d68f6-0709-49ff-9b68-1213f2078f91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f3277bc-7695-4b32-8d81-67def5b89a30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e244c29-30d0-439b-9a5b-0e113ab65e65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d808684b-6ede-4b6a-aa4c-24f00413d515",
      "documentation": "<p>Returns information about one or more Amazon Lightsail SSL/TLS certificates.</p> <note> <p>To get a summary of a certificate, ommit <code>includeCertificateDetails</code> from your request. The response will include only the certificate Amazon Resource Name (ARN), certificate name, domain name, and tags.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetCertificates",
      "responses": [
        {
          "uuid": "615e81c3-3ad6-4bab-ab26-9b19441e77f0",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificateArn\": \"\",\n      \"certificateName\": \"\",\n      \"domainName\": \"\",\n      \"certificateDetail\": {\n        \"arn\": \"\",\n        \"name\": \"\",\n        \"domainName\": \"\",\n        \"status\": \"\",\n        \"serialNumber\": \"\",\n        \"subjectAlternativeNames\": [\n          \"\"\n        ],\n        \"domainValidationRecords\": [\n          {\n            \"domainName\": \"\",\n            \"resourceRecord\": {\n              \"name\": \"\",\n              \"type\": \"\",\n              \"value\": \"\"\n            }\n          }\n        ],\n        \"requestFailureReason\": \"\",\n        \"inUseResourceCount\": {{faker 'datatype.number'}},\n        \"keyAlgorithm\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n        \"issuerCA\": \"\",\n        \"notBefore\": \"{{faker 'date.recent' 365}}\",\n        \"notAfter\": \"{{faker 'date.recent' 365}}\",\n        \"eligibleToRenew\": \"\",\n        \"renewalSummary\": {\n          \"domainValidationRecords\": [\n            {\n              \"domainName\": \"\",\n              \"resourceRecord\": {\n                \"name\": \"\",\n                \"type\": \"\",\n                \"value\": \"\"\n              }\n            }\n          ],\n          \"renewalStatus\": \"\",\n          \"renewalStatusReason\": \"\",\n          \"updatedAt\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n        \"revocationReason\": \"\",\n        \"tags\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"supportCode\": \"\"\n      },\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f6ba1fc2-3210-4343-bc5f-927b9d6b86ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6f3167d-ff74-48a4-81c0-847bfac6b433",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bff0e718-bfc2-44a8-94ee-f0b98a1bad47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97c44984-1b34-4c20-95de-7d40f419d9eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a03d7047-c5c4-46d4-951c-80a86c1cdc68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20728682-40fa-4521-b7cf-79da1c19463e",
      "documentation": "<p>Returns the CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>An AWS CloudFormation stack is used to create a new Amazon EC2 instance from an exported Lightsail snapshot.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetCloudFormationStackRecords",
      "responses": [
        {
          "uuid": "76a6262b-8c10-40f2-96be-aa9908bd5cbe",
          "body": "{\n  \"cloudFormationStackRecords\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"state\": \"\",\n      \"sourceInfo\": [\n        {\n          \"resourceType\": \"\",\n          \"name\": \"\",\n          \"arn\": \"\"\n        }\n      ],\n      \"destinationInfo\": {\n        \"id\": \"\",\n        \"service\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c5bb71a-ed4c-4764-990c-319986de8934",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83b52c0d-20b8-4bbc-9766-74674c934627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61664c64-b579-44a6-ab5f-739adf6fa69e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48aa0657-843c-409f-a88b-af871c7e1e7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6771884e-c6fe-4035-b1ce-4915e5c097de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9755faeb-d0a2-4680-b2a8-810391aaec35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee85c10a-95cf-40a5-a03c-462135403a76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b2f10b02-198c-4e5d-bd52-efe75a6d2b43",
      "documentation": "<p>Returns information about the configured contact methods. Specify a protocol in your request to return information about a specific contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContactMethods",
      "responses": [
        {
          "uuid": "4ed62ec3-1122-49c8-8d68-3feb5c58e0fa",
          "body": "{\n  \"contactMethods\": [\n    {\n      \"contactEndpoint\": \"\",\n      \"status\": \"\",\n      \"protocol\": \"\",\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"supportCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1c71b15d-2775-4bbf-8f32-898227240bf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a066cfd-3234-4693-bcac-7018a7ce1294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "432d56dd-b11c-4077-86dd-7e7001a4f5b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d715328-65e8-44f3-807a-13064db7c356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cbcc5ba4-fec3-482d-9518-1c8773954f03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75496648-014b-4322-aabf-c7b04f94dae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7dfd507f-8c31-44ea-9411-3175cd015ee3",
      "documentation": "Returns information about Amazon Lightsail containers, such as the current version of the Lightsail Control (lightsailctl) plugin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerAPIMetadata",
      "responses": [
        {
          "uuid": "4817e8b5-276b-4da3-bacf-445be571db0e",
          "body": "{\n  \"metadata\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d404bff-85a6-471e-bd03-a61b035ed2d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c54b1b39-6649-49d2-b4e9-5610882adeeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ef64f6d-5ce1-4bf8-88b1-e80faa996eae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ad09217-39db-4b3c-ae1f-0a02f165f7ad",
      "documentation": "<p>Returns the container images that are registered to your Amazon Lightsail container service.</p> <note> <p>If you created a deployment on your Lightsail container service that uses container images from a public registry like Docker Hub, those images are not returned as part of this action. Those images are not registered to your Lightsail container service.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerImages",
      "responses": [
        {
          "uuid": "c02f8d67-5836-4849-b1bf-6ddd8108e8f3",
          "body": "{\n  \"containerImages\": [\n    {\n      \"image\": \"\",\n      \"digest\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad818a2f-ae01-415c-a946-ee10636f174b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2f3c4e5-a955-4b4a-94ee-db326a4eed77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e7b1827-7a67-41f7-af1b-21420427cc14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc803c77-02c7-48ba-b26f-6daa694c2180",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bc6b0b6-16fe-4686-9257-e8d0bb129197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbbd7521-9f04-4382-a686-51a58a5d29ae",
      "documentation": "<p>Returns the log events of a container of your Amazon Lightsail container service.</p> <p>If your container service has more than one node (i.e., a scale greater than 1), then the log events that are returned for the specified container are merged from all nodes on your container service.</p> <note> <p>Container logs are retained for a certain amount of time. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail endpoints and quotas</a> in the <i>AWS General Reference</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerLog",
      "responses": [
        {
          "uuid": "d1956a93-9c80-47e7-b485-9479e3e5f929",
          "body": "{\n  \"logEvents\": [\n    {\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86fdb7d9-0539-4db6-a513-d4db298a14e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c05fa633-4693-466c-8087-b91fc72a3ff6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3b6cbff-a1bf-4740-a068-8e145d72b85b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30194376-c6ae-440f-9614-3c2eae598eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf930494-49f3-4d4d-b1a6-c9f15d966800",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b832777-f986-4c8a-a3c4-b56f4b6fc148",
      "documentation": "<p>Returns the deployments for your Amazon Lightsail container service</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p> <p>The deployments are ordered by version in ascending order. The newest version is listed at the top of the response.</p> <note> <p>A set number of deployments are kept before the oldest one is replaced with the newest one. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail endpoints and quotas</a> in the <i>AWS General Reference</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServiceDeployments",
      "responses": [
        {
          "uuid": "08d7bc2b-00b2-4f4e-94bc-67a2873a343b",
          "body": "{\n  \"deployments\": [\n    {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "adb8ef5e-a8d9-47e6-885b-8890d68698ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a639028-d257-487b-8a04-639847099817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "490f1c2b-3248-457e-9fec-b4ce7149bde4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43aee5b3-f3c5-4864-a4dd-079f7169fdc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3e39476-263c-4942-9e31-0abbbc119e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "713d96f2-ebdf-44a5-aad2-43ff084fc5fc",
      "documentation": "<p>Returns the data points of a specific metric of your Amazon Lightsail container service.</p> <p>Metrics report the utilization of your resources. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServiceMetricData",
      "responses": [
        {
          "uuid": "0a8769fb-1847-4868-95d1-afc376e6d554",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cef8b98f-7a96-4b42-a94e-b777f47559bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc23771a-c853-4d24-9b26-55e8130ac793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c8fb6ba-930d-4732-8761-eea41f974b18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "785b9581-f1e6-453f-b952-6f8f4c929720",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1eae579-8244-42e1-8f7a-66e06a6fddec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6ef4a6b-6e7c-4718-8d24-9f637aa8b321",
      "documentation": "<p>Returns the list of powers that can be specified for your Amazon Lightsail container services.</p> <p>The power specifies the amount of memory, the number of vCPUs, and the base price of the container service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServicePowers",
      "responses": [
        {
          "uuid": "38e8ee0a-cd8c-4794-8599-b8be576dd9dc",
          "body": "{\n  \"powers\": [\n    {\n      \"powerId\": \"\",\n      \"price\": {{faker 'datatype.float'}},\n      \"cpuCount\": {{faker 'datatype.float'}},\n      \"ramSizeInGb\": {{faker 'datatype.float'}},\n      \"name\": \"\",\n      \"isActive\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b6325c5-04ea-4e85-8b36-c5f71e4e4342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3751561-a654-4cea-9f1b-1e0007d08a56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8ca03dd-1930-47f8-89bd-c89e2b32b9f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9bae39fc-bcf7-484b-bbce-cb11a4803970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d1e52c4-8f8e-49d1-8a7e-78f49085a7c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "55042e24-113a-45cb-ae91-d63e561c351b",
      "documentation": "Returns information about one or more of your Amazon Lightsail container services.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServices",
      "responses": [
        {
          "uuid": "79aad175-221a-41a1-a37e-174adf0d7e23",
          "body": "{\n  \"containerServices\": [\n    {\n      \"containerServiceName\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"power\": \"\",\n      \"powerId\": \"\",\n      \"state\": \"\",\n      \"stateDetail\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"scale\": {{faker 'datatype.number'}},\n      \"currentDeployment\": {\n        \"version\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"containers\": {},\n        \"publicEndpoint\": {\n          \"containerName\": \"\",\n          \"containerPort\": {{faker 'datatype.number'}},\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}},\n            \"timeoutSeconds\": {{faker 'datatype.number'}},\n            \"intervalSeconds\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"successCodes\": \"\"\n          }\n        },\n        \"createdAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"nextDeployment\": {\n        \"version\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"containers\": {},\n        \"publicEndpoint\": {\n          \"containerName\": \"\",\n          \"containerPort\": {{faker 'datatype.number'}},\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'datatype.number'}},\n            \"unhealthyThreshold\": {{faker 'datatype.number'}},\n            \"timeoutSeconds\": {{faker 'datatype.number'}},\n            \"intervalSeconds\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"successCodes\": \"\"\n          }\n        },\n        \"createdAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"isDisabled\": {{faker 'datatype.boolean'}},\n      \"principalArn\": \"\",\n      \"privateDomainName\": \"\",\n      \"publicDomainNames\": {},\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93f48758-0ad5-4c7a-9218-626e0fd43340",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31f57131-979a-450d-a820-c4f304d94ce1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a9d228b-89c4-4a10-a46b-1cb4c0241f74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfc62e3b-d789-407b-be9e-1f4a6b64849e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f8e373b-2d3a-4fb2-878a-87e4024194b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4d1e341-5bff-4fcc-a6ae-78ab197a727c",
      "documentation": "Returns information about a specific block storage disk.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDisk",
      "responses": [
        {
          "uuid": "c9fb71ee-3445-4a6c-b865-a673c95f3683",
          "body": "{\n  \"disk\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"addOns\": [\n      {\n        \"name\": \"\",\n        \"status\": \"\",\n        \"snapshotTimeOfDay\": \"\",\n        \"nextSnapshotTimeOfDay\": \"\"\n      }\n    ],\n    \"sizeInGb\": {{faker 'datatype.number'}},\n    \"isSystemDisk\": {{faker 'datatype.boolean'}},\n    \"iops\": {{faker 'datatype.number'}},\n    \"path\": \"\",\n    \"state\": \"\",\n    \"attachedTo\": \"\",\n    \"isAttached\": {{faker 'datatype.boolean'}},\n    \"attachmentState\": \"\",\n    \"gbInUse\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e000b71a-e554-421c-8373-a011b0c7f542",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c17b3f-5c09-4828-b884-08f928b3ada0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6600c1f-cfb7-474a-ae00-2e8880ec9f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4d6ef59-64c2-493d-9e21-a17275b69d47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94ea17b3-d131-454d-bd73-ae14d1d8f83f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "756ecae6-3a77-42ec-9922-b69b8861d30e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01d49bf2-b198-4d9a-b329-b57747bd10cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e77f3c75-aac9-4832-928d-b85caaaf9213",
      "documentation": "Returns information about a specific block storage disk snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDiskSnapshot",
      "responses": [
        {
          "uuid": "721a2bbc-b45e-4f6e-a7cb-e18ec517715d",
          "body": "{\n  \"diskSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"sizeInGb\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"progress\": \"\",\n    \"fromDiskName\": \"\",\n    \"fromDiskArn\": \"\",\n    \"fromInstanceName\": \"\",\n    \"fromInstanceArn\": \"\",\n    \"isFromAutoSnapshot\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a0341e4-fe31-4218-9d1f-adc56a36a23e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57b44b5d-fae4-415e-ad68-8d422b313e62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10262dcb-8b7a-4ea7-8201-7d978c4bdfa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "894795aa-47f9-491a-9bd4-22096bad7196",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94006925-2226-40a6-895e-c18bb35f97d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e35b1a4-604c-4fb5-a543-f53df4b5b13d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8b890cf-2802-4d14-a89a-702a5f9b5772",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a880d76-5287-4aec-b23d-c6684da41198",
      "documentation": "Returns information about all block storage disk snapshots in your AWS account and region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDiskSnapshots",
      "responses": [
        {
          "uuid": "e05c2c6e-b9ed-4e26-a907-72f0ee99342a",
          "body": "{\n  \"diskSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"sizeInGb\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"progress\": \"\",\n      \"fromDiskName\": \"\",\n      \"fromDiskArn\": \"\",\n      \"fromInstanceName\": \"\",\n      \"fromInstanceArn\": \"\",\n      \"isFromAutoSnapshot\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e3ee1cd-0db0-497f-8b5e-df6985acaeba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10619c5b-1192-454c-9548-58d60b46c6f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea12b9ca-619f-4419-bffe-409f6dbec4c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04cb690d-0ccb-4c77-82b7-e41559a48950",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c21d6d23-b77d-4f31-88e2-e29b01827e4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3758ad64-5a5c-4102-af4e-dafdd802da21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebd562b0-eabb-40ff-9976-3835d94e4207",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96487d2c-7c1e-42af-994c-47aa45ad0e75",
      "documentation": "Returns information about all block storage disks in your AWS account and region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDisks",
      "responses": [
        {
          "uuid": "7463feda-817b-4708-9731-1296ef0469dd",
          "body": "{\n  \"disks\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"addOns\": [\n        {\n          \"name\": \"\",\n          \"status\": \"\",\n          \"snapshotTimeOfDay\": \"\",\n          \"nextSnapshotTimeOfDay\": \"\"\n        }\n      ],\n      \"sizeInGb\": {{faker 'datatype.number'}},\n      \"isSystemDisk\": {{faker 'datatype.boolean'}},\n      \"iops\": {{faker 'datatype.number'}},\n      \"path\": \"\",\n      \"state\": \"\",\n      \"attachedTo\": \"\",\n      \"isAttached\": {{faker 'datatype.boolean'}},\n      \"attachmentState\": \"\",\n      \"gbInUse\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eafcc673-390e-474b-b620-ce759e3ff7eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1882bee7-5b33-43fd-998b-2c160bce3419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "026da892-f493-4c92-8367-c005f298fb0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0405db6-df54-485c-884e-8b35c3469d84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf22283e-866b-4c23-9c6a-f289e915a05e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61558c0c-6035-4af6-9d77-320caa56241f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94cbdd7d-e4b6-4e6c-8758-97efbdcf9208",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3badd40b-2b84-4361-9e8c-5a277255edb6",
      "documentation": "<p>Returns the bundles that can be applied to your Amazon Lightsail content delivery network (CDN) distributions.</p> <p>A distribution bundle specifies the monthly network transfer quota and monthly cost of your dsitribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionBundles",
      "responses": [
        {
          "uuid": "660d9fc6-e42d-4cd8-9179-f3191d86b6d1",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'datatype.float'}},\n      \"transferPerMonthInGb\": {{faker 'datatype.number'}},\n      \"isActive\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eac6222d-bbc9-4044-970c-0d810089bfcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44b76476-67c7-4433-baa3-12b1ab961c2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea671463-6311-47a3-9434-18209b761060",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80266898-bc5f-4a76-9832-8963a84da1a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c50435c-1eb7-4677-af47-0dacd2f3b5eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a7603ca-d587-4459-b1be-7edf7a47d5b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66983d23-08b1-4d6f-849c-6bcd5633734b",
      "documentation": "Returns the timestamp and status of the last cache reset of a specific Amazon Lightsail content delivery network (CDN) distribution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionLatestCacheReset",
      "responses": [
        {
          "uuid": "190a321a-1d6c-407c-9e35-b1ed25898a46",
          "body": "{\n  \"status\": \"\",\n  \"createTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3738c6f6-b8e1-4100-9208-79747ea0f8d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2ef7963-f72a-4645-acaf-5175f530f968",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c7c5ae13-d803-4f4c-8ca4-c6a4e4f2b49c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43726680-23db-46e6-a331-c88859b29beb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d6666e1-ff97-4d65-b74b-4ef115cd9fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "561b11c4-8b1d-413d-a7f4-f37642b9112e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ab4bcb4-c489-4eb8-97b6-8b106642e9fc",
      "documentation": "<p>Returns the data points of a specific metric for an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionMetricData",
      "responses": [
        {
          "uuid": "d433833e-956c-4c4c-9e75-fd368531a268",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "913c0ba9-3355-4534-9bee-02798dc45760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e8706a3-ef53-47df-af2a-70068798febd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5a8477e-7569-419f-8d25-80d38457a685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff3ac0de-c61d-472f-a1ad-7c7c12d9dd15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0586ac4a-7420-41ee-a3c1-96aba95472c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1d7d20f-6244-4b12-a51e-6bab0314de24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "383f528f-c8ef-4fe3-9446-253fa4ce5ee1",
      "documentation": "Returns information about one or more of your Amazon Lightsail content delivery network (CDN) distributions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributions",
      "responses": [
        {
          "uuid": "1bfa5278-60ad-473e-b48a-214d979e1701",
          "body": "{\n  \"distributions\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"alternativeDomainNames\": [\n        \"\"\n      ],\n      \"status\": \"\",\n      \"isEnabled\": {{faker 'datatype.boolean'}},\n      \"domainName\": \"\",\n      \"bundleId\": \"\",\n      \"certificateName\": \"\",\n      \"origin\": {\n        \"name\": \"\",\n        \"resourceType\": \"\",\n        \"regionName\": \"\",\n        \"protocolPolicy\": \"\"\n      },\n      \"originPublicDNS\": \"\",\n      \"defaultCacheBehavior\": {\n        \"behavior\": \"\"\n      },\n      \"cacheBehaviorSettings\": {\n        \"defaultTTL\": {{faker 'datatype.number'}},\n        \"minimumTTL\": {{faker 'datatype.number'}},\n        \"maximumTTL\": {{faker 'datatype.number'}},\n        \"allowedHTTPMethods\": \"\",\n        \"cachedHTTPMethods\": \"\",\n        \"forwardedCookies\": {\n          \"option\": \"\",\n          \"cookiesAllowList\": [\n            \"\"\n          ]\n        },\n        \"forwardedHeaders\": {\n          \"option\": \"\",\n          \"headersAllowList\": [\n            \"{{oneOf (array 'Accept' 'Accept-Charset' 'Accept-Datetime' 'Accept-Encoding' 'Accept-Language' 'Authorization' 'CloudFront-Forwarded-Proto' 'CloudFront-Is-Desktop-Viewer' 'CloudFront-Is-Mobile-Viewer' 'CloudFront-Is-SmartTV-Viewer' 'CloudFront-Is-Tablet-Viewer' 'CloudFront-Viewer-Country' 'Host' 'Origin' 'Referer')}}\"\n          ]\n        },\n        \"forwardedQueryStrings\": {\n          \"option\": {{faker 'datatype.boolean'}},\n          \"queryStringsAllowList\": [\n            \"\"\n          ]\n        }\n      },\n      \"cacheBehaviors\": [\n        {\n          \"path\": \"\",\n          \"behavior\": \"\"\n        }\n      ],\n      \"ableToUpdateBundle\": {{faker 'datatype.boolean'}},\n      \"ipAddressType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "388a1d17-e6b5-48fb-91ae-e28593ca210e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0de3e4af-d357-459d-8d1e-645d006ffa8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e16af8a7-1810-41d4-b8de-e5f89ce8d748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f28642d-7834-47fc-9528-3fef10561046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac7c6a80-51cc-43a9-938c-782e9ca9a2b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5bf3cd6-0ba9-4648-9665-d0020402f31a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cc226ac-5586-40c5-b2c5-506e1c6afb02",
      "documentation": "Returns information about a specific domain recordset.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDomain",
      "responses": [
        {
          "uuid": "ac37067d-c72c-4008-a5fc-3e9cc95eca63",
          "body": "{\n  \"domain\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"domainEntries\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\",\n        \"target\": \"\",\n        \"isAlias\": {{faker 'datatype.boolean'}},\n        \"type\": \"\",\n        \"options\": {}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d37f1d8-8a95-4ec6-9231-379c3a377469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4004a0fb-b9f0-4a7c-9bbd-a9d0812177d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c740e297-41e7-44d0-ac62-9a1ada1759d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdb341d9-abee-435e-9d2f-a2886a04b234",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c26a667-276a-45f5-9d96-409ca5f96966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfc76a27-2374-463c-ba00-5e7e68091253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c7a3009-3a49-4aa8-aa45-7d1dcc47d579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9a1766b-3a03-4542-9ba8-2f18cff6fdec",
      "documentation": "Returns a list of all domains in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDomains",
      "responses": [
        {
          "uuid": "03ecc297-3ec2-43b1-9ca7-b48d319a7ea2",
          "body": "{\n  \"domains\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"domainEntries\": [\n        {\n          \"id\": \"\",\n          \"name\": \"\",\n          \"target\": \"\",\n          \"isAlias\": {{faker 'datatype.boolean'}},\n          \"type\": \"\",\n          \"options\": {}\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "122bad62-ea2c-4451-9b87-85e2070c21ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19885b2b-569e-419c-889e-a976f0a82e44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5345ee9e-5c49-4bff-a82a-04919e56951c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df36a670-2700-4619-bba1-54ad799c0fcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fb668f4-5f71-4cac-93a9-259ea6ba2ee6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ff2a825-4dac-4044-bbae-fffd906c675f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3901bc55-933d-4cf9-b7ad-0ceaa1903bd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c67b79c2-f50f-46fc-b2c4-3cdd6435e974",
      "documentation": "<p>Returns all export snapshot records created as a result of the <code>export snapshot</code> operation.</p> <p>An export snapshot record can be used to create a new Amazon EC2 instance and its related resources with the <a>CreateCloudFormationStack</a> action.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetExportSnapshotRecords",
      "responses": [
        {
          "uuid": "84e56f25-6962-4c77-bd3e-e213dc327982",
          "body": "{\n  \"exportSnapshotRecords\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"state\": \"\",\n      \"sourceInfo\": {\n        \"resourceType\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"name\": \"\",\n        \"arn\": \"\",\n        \"fromResourceName\": \"\",\n        \"fromResourceArn\": \"\",\n        \"instanceSnapshotInfo\": {\n          \"fromBundleId\": \"\",\n          \"fromBlueprintId\": \"\",\n          \"fromDiskInfo\": [\n            {\n              \"name\": \"\",\n              \"path\": \"\",\n              \"sizeInGb\": {{faker 'datatype.number'}},\n              \"isSystemDisk\": {{faker 'datatype.boolean'}}\n            }\n          ]\n        },\n        \"diskSnapshotInfo\": {\n          \"sizeInGb\": {{faker 'datatype.number'}}\n        }\n      },\n      \"destinationInfo\": {\n        \"id\": \"\",\n        \"service\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f05ba6e8-3d2c-49df-978e-8b0ec16dc33d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e916a7ad-5a0d-4cc1-9040-a173efa8e6e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af768ad3-46d8-4a4e-9a20-8de05cc8ea7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f76eb5e-0fae-4d44-b709-3bf366538359",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c23c430c-8b9e-4082-b6b5-44871aaee58b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1f8ca16-3c08-48ec-98ff-dc1e77270a77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f107e628-8a83-4fd5-b814-834f56e623b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04afbb08-7191-4705-84aa-d12abc588cf0",
      "documentation": "Returns information about a specific Amazon Lightsail instance, which is a virtual private server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstance",
      "responses": [
        {
          "uuid": "a2bd2cca-2f99-4dd4-bc4c-06b45a2f7159",
          "body": "{\n  \"instance\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"blueprintId\": \"\",\n    \"blueprintName\": \"\",\n    \"bundleId\": \"\",\n    \"addOns\": [\n      {\n        \"name\": \"\",\n        \"status\": \"\",\n        \"snapshotTimeOfDay\": \"\",\n        \"nextSnapshotTimeOfDay\": \"\"\n      }\n    ],\n    \"isStaticIp\": {{faker 'datatype.boolean'}},\n    \"privateIpAddress\": \"\",\n    \"publicIpAddress\": \"\",\n    \"ipv6Addresses\": [\n      \"\"\n    ],\n    \"ipAddressType\": \"\",\n    \"hardware\": {\n      \"cpuCount\": {{faker 'datatype.number'}},\n      \"disks\": [\n        {\n          \"name\": \"\",\n          \"arn\": \"\",\n          \"supportCode\": \"\",\n          \"createdAt\": \"{{faker 'date.recent' 365}}\",\n          \"location\": {\n            \"availabilityZone\": \"\",\n            \"regionName\": \"\"\n          },\n          \"resourceType\": \"\",\n          \"tags\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"addOns\": [\n            {\n              \"name\": \"\",\n              \"status\": \"\",\n              \"snapshotTimeOfDay\": \"\",\n              \"nextSnapshotTimeOfDay\": \"\"\n            }\n          ],\n          \"sizeInGb\": {{faker 'datatype.number'}},\n          \"isSystemDisk\": {{faker 'datatype.boolean'}},\n          \"iops\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"state\": \"\",\n          \"attachedTo\": \"\",\n          \"isAttached\": {{faker 'datatype.boolean'}},\n          \"attachmentState\": \"\",\n          \"gbInUse\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"ramSizeInGb\": {{faker 'datatype.float'}}\n    },\n    \"networking\": {\n      \"monthlyTransfer\": {\n        \"gbPerMonthAllocated\": {{faker 'datatype.number'}}\n      },\n      \"ports\": [\n        {\n          \"fromPort\": {{faker 'datatype.number'}},\n          \"toPort\": {{faker 'datatype.number'}},\n          \"protocol\": \"\",\n          \"accessFrom\": \"\",\n          \"accessType\": \"\",\n          \"commonName\": \"\",\n          \"accessDirection\": \"\",\n          \"cidrs\": [\n            \"\"\n          ],\n          \"ipv6Cidrs\": [\n            \"\"\n          ],\n          \"cidrListAliases\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"state\": {\n      \"code\": {{faker 'datatype.number'}},\n      \"name\": \"\"\n    },\n    \"username\": \"\",\n    \"sshKeyName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18625a11-a2d9-48ee-b217-a83857475c82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1632c91-72e8-43c7-8c8b-82e261b64c89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "693be6b4-d508-496a-ad6d-bb2e55b7230f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d59a2758-85d7-4420-80f4-2e82b6c01674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00616462-10de-4d2a-9864-8a9809f8349e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f01f622f-a6bd-4618-bfb6-b57a81dee52b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fafba90-805a-4646-8b7e-4e0e61ee146a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d75e0a6-f3a3-4160-b856-8e3ed9e26080",
      "documentation": "<p>Returns temporary SSH keys you can use to connect to a specific virtual private server, or <i>instance</i>.</p> <p>The <code>get instance access details</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceAccessDetails",
      "responses": [
        {
          "uuid": "ad103703-452f-4594-a283-a3827bcbe020",
          "body": "{\n  \"accessDetails\": {\n    \"certKey\": \"\",\n    \"expiresAt\": \"{{faker 'date.recent' 365}}\",\n    \"ipAddress\": \"\",\n    \"password\": \"\",\n    \"passwordData\": {\n      \"ciphertext\": \"\",\n      \"keyPairName\": \"\"\n    },\n    \"privateKey\": \"\",\n    \"protocol\": \"\",\n    \"instanceName\": \"\",\n    \"username\": \"\",\n    \"hostKeys\": [\n      {\n        \"algorithm\": \"\",\n        \"publicKey\": \"\",\n        \"witnessedAt\": \"{{faker 'date.recent' 365}}\",\n        \"fingerprintSHA1\": \"\",\n        \"fingerprintSHA256\": \"\",\n        \"notValidBefore\": \"{{faker 'date.recent' 365}}\",\n        \"notValidAfter\": \"{{faker 'date.recent' 365}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57d73227-24db-4db8-bd6b-11bca0020bd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b668d6eb-c0cf-401e-95d1-6fd24689826f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17b9ac1e-7264-49cf-ad64-0c27c27efc3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b74a1a1-32a7-4738-90e0-7e6415e156a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4887483-a280-4429-8a70-3cbdd80b03f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba9853e5-ad68-406a-ac9d-4319eadaa334",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e39d3fd-4e14-4cfb-95dc-5352980ba770",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37e7eaaa-0ed9-47b9-a46c-d306b0f1e730",
      "documentation": "<p>Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceMetricData",
      "responses": [
        {
          "uuid": "5d7e04b7-237c-4561-831e-19d556fa91e9",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7adab079-3f99-407d-a38b-1e607651a808",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a87b048-728a-47ec-878f-cdd996e443fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30579ffe-3392-4517-aef5-b9319b5e5e53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f14b692-9ec6-4497-85fc-711bb8b4ecaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89235a4c-6af6-49c6-b9d8-00216d127558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f399384-5671-4b16-af57-3a0f04c31c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a78147d7-56ee-4b6c-adcb-6f7f7a69fd87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6f568b2-1790-4f5a-92a2-4889124a8aec",
      "documentation": "Returns the firewall port states for a specific Amazon Lightsail instance, the IP addresses allowed to connect to the instance through the ports, and the protocol.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstancePortStates",
      "responses": [
        {
          "uuid": "8cad390c-d201-415e-ae66-555fbe383c16",
          "body": "{\n  \"portStates\": [\n    {\n      \"fromPort\": {{faker 'datatype.number'}},\n      \"toPort\": {{faker 'datatype.number'}},\n      \"protocol\": \"\",\n      \"state\": \"\",\n      \"cidrs\": [\n        \"\"\n      ],\n      \"ipv6Cidrs\": [\n        \"\"\n      ],\n      \"cidrListAliases\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ddf7dec-4d54-499a-94ec-d5291965da0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fd2d949-1804-4413-bfa0-82c67b0eb861",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c02d3811-be96-4c3e-b56d-122b962c4f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d385c28-fde3-4ca5-9d47-a36a057852bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bcb019f-2733-48eb-9811-90233f5bc493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bcdda8e9-ccf6-4149-80a3-64077ca32de5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "543edb88-61d5-467c-904a-b389a3d4be2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5f24413-bc1a-4888-b48a-3daf56549fd5",
      "documentation": "Returns information about a specific instance snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshot",
      "responses": [
        {
          "uuid": "ac9a74d0-38a5-460e-92d0-f7bd0238aefb",
          "body": "{\n  \"instanceSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"state\": \"\",\n    \"progress\": \"\",\n    \"fromAttachedDisks\": [\n      {\n        \"name\": \"\",\n        \"arn\": \"\",\n        \"supportCode\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"location\": {\n          \"availabilityZone\": \"\",\n          \"regionName\": \"\"\n        },\n        \"resourceType\": \"\",\n        \"tags\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"addOns\": [\n          {\n            \"name\": \"\",\n            \"status\": \"\",\n            \"snapshotTimeOfDay\": \"\",\n            \"nextSnapshotTimeOfDay\": \"\"\n          }\n        ],\n        \"sizeInGb\": {{faker 'datatype.number'}},\n        \"isSystemDisk\": {{faker 'datatype.boolean'}},\n        \"iops\": {{faker 'datatype.number'}},\n        \"path\": \"\",\n        \"state\": \"\",\n        \"attachedTo\": \"\",\n        \"isAttached\": {{faker 'datatype.boolean'}},\n        \"attachmentState\": \"\",\n        \"gbInUse\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"fromInstanceName\": \"\",\n    \"fromInstanceArn\": \"\",\n    \"fromBlueprintId\": \"\",\n    \"fromBundleId\": \"\",\n    \"isFromAutoSnapshot\": {{faker 'datatype.boolean'}},\n    \"sizeInGb\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "43d301b8-8ca4-470b-9d53-5060003d4393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f25756e4-25dd-4f47-9b42-9020fd9b2bac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8568195-18b2-4725-9779-d0b74df46a3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4061e920-ea5a-4a82-ac1f-d1d0b635a99d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62354841-e70e-47c1-acda-1d6d1012bc4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1eaff8f1-b4fd-4df5-817f-ed7cce794e84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37ad53f7-8212-42eb-ac8a-bff2e2292029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12f6388d-a8a8-4472-82ec-a8f6e4e47ede",
      "documentation": "Returns all instance snapshots for the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshots",
      "responses": [
        {
          "uuid": "8b41bd61-3d56-4129-a95a-bd5ed5988648",
          "body": "{\n  \"instanceSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"state\": \"\",\n      \"progress\": \"\",\n      \"fromAttachedDisks\": [\n        {\n          \"name\": \"\",\n          \"arn\": \"\",\n          \"supportCode\": \"\",\n          \"createdAt\": \"{{faker 'date.recent' 365}}\",\n          \"location\": {\n            \"availabilityZone\": \"\",\n            \"regionName\": \"\"\n          },\n          \"resourceType\": \"\",\n          \"tags\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"addOns\": [\n            {\n              \"name\": \"\",\n              \"status\": \"\",\n              \"snapshotTimeOfDay\": \"\",\n              \"nextSnapshotTimeOfDay\": \"\"\n            }\n          ],\n          \"sizeInGb\": {{faker 'datatype.number'}},\n          \"isSystemDisk\": {{faker 'datatype.boolean'}},\n          \"iops\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"state\": \"\",\n          \"attachedTo\": \"\",\n          \"isAttached\": {{faker 'datatype.boolean'}},\n          \"attachmentState\": \"\",\n          \"gbInUse\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"fromInstanceName\": \"\",\n      \"fromInstanceArn\": \"\",\n      \"fromBlueprintId\": \"\",\n      \"fromBundleId\": \"\",\n      \"isFromAutoSnapshot\": {{faker 'datatype.boolean'}},\n      \"sizeInGb\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec5e6930-6e6d-488c-961b-827ff1a004c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b4cebbf-fba4-4473-ada5-0b24cb46a97e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75b08e23-3ed2-4534-b07a-330baec0da5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34b46985-e576-4e68-98eb-0d417715fae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85e27e03-4e82-4a9a-85ce-20102c6aeecb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50e83e1d-ebbd-4c5b-9f88-7c7b1f051dd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88cea1a6-ada1-4306-b23b-427fea224187",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4aad64cb-563a-43b0-a546-7badd1b87180",
      "documentation": "Returns the state of a specific instance. Works on one instance at a time.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceState",
      "responses": [
        {
          "uuid": "830da24a-118b-4a4e-bda7-ac1810fff381",
          "body": "{\n  \"state\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"name\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5a35e5b-008f-47ed-b44e-2587ab5922db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3ad9493-c813-44a3-9cb6-2f66107a8f33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58af6a46-4213-48f4-b6a7-82654d17ebbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9ed5d69-14e7-43e9-8ebb-e62f03c09c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7018a4d6-f925-4dd0-b72f-f51c7f83f224",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0381d1f-f163-461d-85b5-8c371f774ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1ed1422-05f7-45d6-898b-51075fbfb656",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "001e4571-5d89-4b56-b4e6-d77df0ecee05",
      "documentation": "Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstances",
      "responses": [
        {
          "uuid": "abe3d981-74a2-4479-8579-0f30a83f3335",
          "body": "{\n  \"instances\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"blueprintId\": \"\",\n      \"blueprintName\": \"\",\n      \"bundleId\": \"\",\n      \"addOns\": [\n        {\n          \"name\": \"\",\n          \"status\": \"\",\n          \"snapshotTimeOfDay\": \"\",\n          \"nextSnapshotTimeOfDay\": \"\"\n        }\n      ],\n      \"isStaticIp\": {{faker 'datatype.boolean'}},\n      \"privateIpAddress\": \"\",\n      \"publicIpAddress\": \"\",\n      \"ipv6Addresses\": [\n        \"\"\n      ],\n      \"ipAddressType\": \"\",\n      \"hardware\": {\n        \"cpuCount\": {{faker 'datatype.number'}},\n        \"disks\": [\n          {\n            \"name\": \"\",\n            \"arn\": \"\",\n            \"supportCode\": \"\",\n            \"createdAt\": \"{{faker 'date.recent' 365}}\",\n            \"location\": {\n              \"availabilityZone\": \"\",\n              \"regionName\": \"\"\n            },\n            \"resourceType\": \"\",\n            \"tags\": [\n              {\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"addOns\": [\n              {\n                \"name\": \"\",\n                \"status\": \"\",\n                \"snapshotTimeOfDay\": \"\",\n                \"nextSnapshotTimeOfDay\": \"\"\n              }\n            ],\n            \"sizeInGb\": {{faker 'datatype.number'}},\n            \"isSystemDisk\": {{faker 'datatype.boolean'}},\n            \"iops\": {{faker 'datatype.number'}},\n            \"path\": \"\",\n            \"state\": \"\",\n            \"attachedTo\": \"\",\n            \"isAttached\": {{faker 'datatype.boolean'}},\n            \"attachmentState\": \"\",\n            \"gbInUse\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"ramSizeInGb\": {{faker 'datatype.float'}}\n      },\n      \"networking\": {\n        \"monthlyTransfer\": {\n          \"gbPerMonthAllocated\": {{faker 'datatype.number'}}\n        },\n        \"ports\": [\n          {\n            \"fromPort\": {{faker 'datatype.number'}},\n            \"toPort\": {{faker 'datatype.number'}},\n            \"protocol\": \"\",\n            \"accessFrom\": \"\",\n            \"accessType\": \"\",\n            \"commonName\": \"\",\n            \"accessDirection\": \"\",\n            \"cidrs\": [\n              \"\"\n            ],\n            \"ipv6Cidrs\": [\n              \"\"\n            ],\n            \"cidrListAliases\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"state\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"name\": \"\"\n      },\n      \"username\": \"\",\n      \"sshKeyName\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e44dbca9-34ed-444d-90d1-8b7df14d730d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f03a1e6-9438-43fc-8179-a79d0b4eb2a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27e8f218-4897-4f3b-8b29-a6cd1c804adc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32b42d6f-7500-4129-be3d-15bd5f5b9cc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d7186cf-6096-4094-8656-f42bcd7542e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1defadfc-7835-4bf4-ae76-28c5f226a0c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0202e3a5-213c-430b-bea8-d249588722be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87a977d0-642d-4890-8f0e-73ca423e2791",
      "documentation": "Returns information about a specific key pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetKeyPair",
      "responses": [
        {
          "uuid": "f9e03d7a-040a-4c95-a5e4-8dbf8f675d00",
          "body": "{\n  \"keyPair\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"fingerprint\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e6cbefc-9fb3-4c83-af98-69b08b619b10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c49fda0b-19db-4ff3-bfed-507ae37f4fd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a8f1f32-4caf-480f-a146-bd346c2c3815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d490a0b-b70f-491c-a5ca-6978a6d4a294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c60e3be-e270-4b7c-b098-7edcdea95970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efc79bb7-3bb0-4ea0-b4d8-dfdbb39b9448",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44a87d25-39ad-43e2-b551-88db0f824c91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "083b7a70-e62e-489a-a161-07e9617f2ea7",
      "documentation": "Returns information about all key pairs in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetKeyPairs",
      "responses": [
        {
          "uuid": "61fbdbfe-b480-4685-af2c-2ddae4f86c43",
          "body": "{\n  \"keyPairs\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"fingerprint\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "765fe942-e8bc-406a-ae06-ae3b891b6cea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b19c4a66-7710-4780-829e-90359cd9ab7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e25198f4-a376-4de6-b7b3-233efa935917",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e0ecc23-9118-4c11-8bcf-dbaaff8452ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ecd62d8-93ae-4efb-b5ef-76fc63e39e12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "604797d4-6703-44d2-b539-8eb0ffe290a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44582840-cb98-4a35-9313-6feae497986c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b8195d7-12d2-4bff-84a6-746f6390f9f9",
      "documentation": "Returns information about the specified Lightsail load balancer.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancer",
      "responses": [
        {
          "uuid": "4072f497-484e-4f42-a66a-81572533fb74",
          "body": "{\n  \"loadBalancer\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"dnsName\": \"\",\n    \"state\": \"\",\n    \"protocol\": \"\",\n    \"publicPorts\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"healthCheckPath\": \"\",\n    \"instancePort\": {{faker 'datatype.number'}},\n    \"instanceHealthSummary\": [\n      {\n        \"instanceName\": \"\",\n        \"instanceHealth\": \"\",\n        \"instanceHealthReason\": \"\"\n      }\n    ],\n    \"tlsCertificateSummaries\": [\n      {\n        \"name\": \"\",\n        \"isAttached\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"configurationOptions\": {},\n    \"ipAddressType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32c8c49d-d7f7-42d6-b54a-472ab5deeeb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd7c5af6-dc6d-4bc3-8619-dc152dc25529",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c3536c8-dcc8-418e-9cd4-cbd92eaf782c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7be4218-6c29-41f0-a02d-7a9c4be36d3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2eb18b1e-c48b-46f5-a1ae-58d0f2e856fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ebff1b8-4d21-404c-aed0-36acfb795b39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0a28fa2-f81b-4bf2-8a1f-3022f2dabb7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e726547-be1e-42af-84c6-71f337be4ad7",
      "documentation": "<p>Returns information about health metrics for your Lightsail load balancer.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancerMetricData",
      "responses": [
        {
          "uuid": "edd15439-07ea-4ddf-82bc-389588507134",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4fdc176a-f82c-4a91-9fb0-b807748bae38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bed870b1-3b7e-42b1-847f-725ee9341aa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c656ef99-4651-4638-81d8-940cdfb22974",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b592507-eee5-4868-978e-1d643967b2a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c20081c-49e9-41b0-9afe-79bb1d363a8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16428923-0c98-4835-8e16-36e86851f6c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e83d72d-1e8e-43b4-8a33-baac64c404d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a663b5f7-7210-45b9-b675-5fdb314d6b55",
      "documentation": "<p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancerTlsCertificates",
      "responses": [
        {
          "uuid": "6b8241b2-cc1b-4993-8e98-d94c8a0ec3fd",
          "body": "{\n  \"tlsCertificates\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"loadBalancerName\": \"\",\n      \"isAttached\": {{faker 'datatype.boolean'}},\n      \"status\": \"\",\n      \"domainName\": \"\",\n      \"domainValidationRecords\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\",\n          \"value\": \"\",\n          \"validationStatus\": \"\",\n          \"domainName\": \"\"\n        }\n      ],\n      \"failureReason\": \"\",\n      \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuer\": \"\",\n      \"keyAlgorithm\": \"\",\n      \"notAfter\": \"{{faker 'date.recent' 365}}\",\n      \"notBefore\": \"{{faker 'date.recent' 365}}\",\n      \"renewalSummary\": {\n        \"renewalStatus\": \"\",\n        \"domainValidationOptions\": [\n          {\n            \"domainName\": \"\",\n            \"validationStatus\": \"\"\n          }\n        ]\n      },\n      \"revocationReason\": \"\",\n      \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n      \"serial\": \"\",\n      \"signatureAlgorithm\": \"\",\n      \"subject\": \"\",\n      \"subjectAlternativeNames\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "74ab0afd-6fdb-42e8-a493-ec840917f189",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a231398-129e-480b-a967-045ab8790cbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95e8f4d6-6aa5-4d42-b761-f36af61cf609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ddcf0ab-f5eb-42c2-b80c-200c21bbd196",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f245e3ce-89dd-4e12-b1e7-dde0e637459e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f86429f7-5249-4bd1-b014-b1494792f123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b92bb599-9dfd-4399-9be6-86840aa0c641",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "089ceb61-0608-4503-881f-d3e25d69222d",
      "documentation": "Returns information about all load balancers in an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancers",
      "responses": [
        {
          "uuid": "8e6d0867-eee9-4854-b679-460e3e37ed1c",
          "body": "{\n  \"loadBalancers\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"dnsName\": \"\",\n      \"state\": \"\",\n      \"protocol\": \"\",\n      \"publicPorts\": [\n        {{faker 'datatype.number'}}\n      ],\n      \"healthCheckPath\": \"\",\n      \"instancePort\": {{faker 'datatype.number'}},\n      \"instanceHealthSummary\": [\n        {\n          \"instanceName\": \"\",\n          \"instanceHealth\": \"\",\n          \"instanceHealthReason\": \"\"\n        }\n      ],\n      \"tlsCertificateSummaries\": [\n        {\n          \"name\": \"\",\n          \"isAttached\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"configurationOptions\": {},\n      \"ipAddressType\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8218095-28ae-4d34-aa1e-6e6ff301c988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2c31bb1-89fd-4f8c-b5e0-9c160af482f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98a490bc-3f31-45ac-8b89-19efaeb62d5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cffaf6c7-ee23-41c8-83be-b526c41a9b17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c9b113bc-7846-4fb4-b74e-abefd0add708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4af2c8d-ff11-467b-bfee-0905e5ad1648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f05a2637-337b-4dbb-b8ac-513ed4607f68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76844bc6-e0e0-4d9b-bc28-2cad87aeb647",
      "documentation": "Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperation",
      "responses": [
        {
          "uuid": "1f19732d-8912-434a-ac07-919b178f6964",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed084ad7-3ead-4c05-9943-470494e7b34e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2eb18f8-6a5f-47e1-bde2-381b73e359fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b8078a5-bdd7-43a4-ad4b-0a42b0a0aa62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5be521b9-66fc-467d-bc87-9fdeac7c8c4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6c5f546-a79b-48dd-aeef-dba7cfd6fdd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b97d7c3-890d-4c56-801b-be2fb874e26b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72c8e124-ef41-408c-9da2-8a7dd8b1df6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2925ef19-697a-4970-ac28-61962f0e4cb7",
      "documentation": "<p>Returns information about all operations.</p> <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be paged by making each subsequent call to <code>GetOperations</code> use the maximum (last) <code>statusChangedAt</code> value from the previous request.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperations",
      "responses": [
        {
          "uuid": "07203d67-bc4f-4314-967a-4cdf12058c60",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4496f5b6-658a-440c-a500-7a57687ed947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "178fcc40-9bb5-4137-a66c-5e4883249867",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ff3d816-9694-4c8b-a631-d5013afbc42f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "998c112e-73c8-4f40-9acc-0e2f989b8db5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35c2df18-e06f-46be-bb7b-d49f115f3ebe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79975da2-ee08-4901-94f4-4c1152cb5f18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da6f1bfa-61d1-4dbe-b95c-242812c6358d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "802ad92f-3a35-491f-b645-3ad07928dfd2",
      "documentation": "Gets operations for a specific resource (e.g., an instance or a static IP).",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperationsForResource",
      "responses": [
        {
          "uuid": "b0618e9b-250b-4508-813a-cd53a7e9fa7a",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ],\n  \"nextPageCount\": \"\",\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ffc34d5-45bd-4e67-91d6-7095b0b83453",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "439b66c5-18a8-42f6-8f93-86b8d52ddbbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5724a3b2-adc1-4abc-a925-23b619052f98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aaf362ff-1c17-46af-8538-b73d5376b3f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06ad505c-41ca-4fdf-8795-a4b4c7047226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e30b5bc-2a66-45fb-b6ac-06db51597f90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1870e768-9308-4c12-8c35-906f33c4da36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2041cf09-5466-4732-8b46-0e6515d1a932",
      "documentation": "Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability zones</code> parameter to also return the Availability Zones in a region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRegions",
      "responses": [
        {
          "uuid": "5ba324c8-12c3-4993-ae72-b3a43bd51797",
          "body": "{\n  \"regions\": [\n    {\n      \"continentCode\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"availabilityZones\": [\n        {\n          \"zoneName\": \"\",\n          \"state\": \"\"\n        }\n      ],\n      \"relationalDatabaseAvailabilityZones\": [\n        {\n          \"zoneName\": \"\",\n          \"state\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bda7dd52-d4f9-4cbf-aab7-40b29f8e0c2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce5b1bf1-6eda-4865-96ff-24489565cde1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d104f2f-6806-439a-94cf-6336bc94658b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8a984a9-1539-4912-8106-229e76d3ccec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de7e1240-22cf-4ff1-aa60-8e96717d81c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c61fbd67-8795-4045-81d3-4e3c82d5daa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5415a370-3ece-4ccb-8ce1-af9352721f30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54f0cc74-c7e5-4e5f-ab60-1dda11100918",
      "documentation": "Returns information about a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabase",
      "responses": [
        {
          "uuid": "d6d22926-ab05-41fc-b2cc-2a5d3a493be2",
          "body": "{\n  \"relationalDatabase\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"relationalDatabaseBlueprintId\": \"\",\n    \"relationalDatabaseBundleId\": \"\",\n    \"masterDatabaseName\": \"\",\n    \"hardware\": {\n      \"cpuCount\": {{faker 'datatype.number'}},\n      \"diskSizeInGb\": {{faker 'datatype.number'}},\n      \"ramSizeInGb\": {{faker 'datatype.float'}}\n    },\n    \"state\": \"\",\n    \"secondaryAvailabilityZone\": \"\",\n    \"backupRetentionEnabled\": {{faker 'datatype.boolean'}},\n    \"pendingModifiedValues\": {\n      \"masterUserPassword\": \"\",\n      \"engineVersion\": \"\",\n      \"backupRetentionEnabled\": {{faker 'datatype.boolean'}}\n    },\n    \"engine\": \"\",\n    \"engineVersion\": \"\",\n    \"latestRestorableTime\": \"{{faker 'date.recent' 365}}\",\n    \"masterUsername\": \"\",\n    \"parameterApplyStatus\": \"\",\n    \"preferredBackupWindow\": \"\",\n    \"preferredMaintenanceWindow\": \"\",\n    \"publiclyAccessible\": {{faker 'datatype.boolean'}},\n    \"masterEndpoint\": {\n      \"port\": {{faker 'datatype.number'}},\n      \"address\": \"\"\n    },\n    \"pendingMaintenanceActions\": [\n      {\n        \"action\": \"\",\n        \"description\": \"\",\n        \"currentApplyDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"caCertificateIdentifier\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a1bc0d6a-c1bc-4f34-9ada-c364f90c76b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ecf35df-5aea-4180-8fb1-196c74e03eb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bfc456b-3219-448b-8627-e59bf361e44d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33643b4d-8d13-4b7b-94a4-334e99235361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6b4cf12-b590-4d62-b4dd-384bc7e9df37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f515f3e5-74f6-4eec-a774-38d1d01f683e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e19abbbf-a651-4b32-95bb-f7d50bbb893e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "353a93f3-870e-4c44-8532-1e336772d43b",
      "documentation": "<p>Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes the major engine version of a database.</p> <p>You can use a blueprint ID to create a new database that runs a specific database engine.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBlueprints",
      "responses": [
        {
          "uuid": "c4d84092-df3a-44ce-878a-a8211dda5451",
          "body": "{\n  \"blueprints\": [\n    {\n      \"blueprintId\": \"\",\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"engineDescription\": \"\",\n      \"engineVersionDescription\": \"\",\n      \"isEngineDefault\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "797ebc70-44f9-4567-a7cf-19b68cd4e409",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "937b6fdb-940e-4779-bf14-a03204cb5415",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1d399f9-440d-4887-8131-d5bb3794846f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0600efaf-4e67-497b-bd50-c2fe46dbe18c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d46390b-179d-4cbb-8299-302d3b384b11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "446a41b6-363a-4f0e-9787-f2f68aead0f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c81dd74-e69b-429d-a94e-ad7273f8eed6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cffb696a-e31d-4e5f-a52c-595ac8e2bd08",
      "documentation": "<p>Returns the list of bundles that are available in Amazon Lightsail. A bundle describes the performance specifications for a database.</p> <p>You can use a bundle ID to create a new database with explicit performance specifications.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBundles",
      "responses": [
        {
          "uuid": "2abf4c5d-d383-4c44-b2fd-cea03e01d054",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'datatype.float'}},\n      \"ramSizeInGb\": {{faker 'datatype.float'}},\n      \"diskSizeInGb\": {{faker 'datatype.number'}},\n      \"transferPerMonthInGb\": {{faker 'datatype.number'}},\n      \"cpuCount\": {{faker 'datatype.number'}},\n      \"isEncrypted\": {{faker 'datatype.boolean'}},\n      \"isActive\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3963d2d-a49f-45dc-8ff7-47375aaede5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33bc0758-f5ad-4402-84e3-d6ed9dfaa628",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1c01d3a-0ebb-4a6b-b4d5-9a73cc280b17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "969e59b4-341f-4953-9fa6-3493eaac289f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c2a6720-e831-435c-a825-a5bb42214b7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5246f41-c45a-4f9e-adc8-b2bffb71db19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e917872-4b45-40a6-b6f6-40d9ab5c8280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6acd37d0-418e-4546-9b1d-d739984f9fa8",
      "documentation": "Returns a list of events for a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseEvents",
      "responses": [
        {
          "uuid": "b4159ec0-f297-4c53-a9ea-639c60dd915c",
          "body": "{\n  \"relationalDatabaseEvents\": [\n    {\n      \"resource\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\",\n      \"eventCategories\": [\n        \"\"\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "becf5603-60c5-4ff9-8b47-9390f48bd7e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfe9b8d9-35f5-42f9-be21-ce0d16a7cd41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dedc943f-77a1-40a5-99d7-140afe24cab2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57e5d0cb-72dc-46d2-bd78-c73a28e3f79a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9bec8282-bad0-4111-9c40-bb13b3a3868a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51df0582-a50f-4d41-bae9-07ad004382b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9ac70b6-25a6-4ee2-a136-4dee158d3508",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c397b888-e959-4d57-8727-6bd4f4a253de",
      "documentation": "Returns a list of log events for a database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogEvents",
      "responses": [
        {
          "uuid": "08fd99ed-3d97-47fa-b33c-83ddba5b175f",
          "body": "{\n  \"resourceLogEvents\": [\n    {\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"nextBackwardToken\": \"\",\n  \"nextForwardToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "124bb911-2d6c-4f67-9a23-188d582faf85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18c1ac13-90bb-43d4-b614-9ff2170d65ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "599d4b54-21f3-4732-b583-ec4b014b8df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12d39f78-87a7-4ea7-81e0-afb3036978f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39081fd9-a7e3-466b-be1d-3d13eaea0e3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fd1dba8-701d-4048-9fae-f563d995b79c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e893470-990e-4d40-9f53-fcf74e04fd1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c12fd191-b5a3-4b77-a27a-c00e14ab00a7",
      "documentation": "Returns a list of available log streams for a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogStreams",
      "responses": [
        {
          "uuid": "f8b167bc-5f55-4f5e-9177-c51c1598a6ea",
          "body": "{\n  \"logStreams\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5dbae053-3015-467d-b541-7edaa6fa4879",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c626e82-d3a6-4fdb-84ee-bed136964b5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d05333bf-42d6-4ae7-86c4-d7e2caf38b9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b166ca42-dcf0-45b7-b396-a6184f3126f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9edc7a19-a82e-45d4-b488-afa35d30e3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70dcefaa-b323-4886-beea-2adaf0f14f7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d03e71f9-ebdc-4631-b651-28f7bcff7925",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "467f3496-84f8-4ec3-ace1-4dd447b84cbe",
      "documentation": "<p>Returns the current, previous, or pending versions of the master user password for a Lightsail database.</p> <p>The <code>GetRelationalDatabaseMasterUserPassword</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMasterUserPassword",
      "responses": [
        {
          "uuid": "3263dac8-f095-4d68-9b54-9cdd32b651a8",
          "body": "{\n  \"masterUserPassword\": \"\",\n  \"createdAt\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45f7cd1d-f0c3-418b-98fc-35a992606013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27ca1cd1-2bfc-43a6-899d-848c226b10f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3cab266-290b-4130-b25f-530b4b17de2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6a40b08-bcb4-4f35-80ef-0d989413a36f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed0d1456-2ad5-497f-a0aa-d0e9c98bf116",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac47bca9-162b-47c8-a1d4-3c353fe62829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c35b447-e11b-4c13-baf6-c7f98315dfa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec29cd4f-fbbe-475b-a5c2-0167cf92c0fc",
      "documentation": "<p>Returns the data points of the specified metric for a database in Amazon Lightsail.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMetricData",
      "responses": [
        {
          "uuid": "8d19a544-3026-478d-b87b-af17fda1197c",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'datatype.float'}},\n      \"maximum\": {{faker 'datatype.float'}},\n      \"minimum\": {{faker 'datatype.float'}},\n      \"sampleCount\": {{faker 'datatype.float'}},\n      \"sum\": {{faker 'datatype.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80881d4d-dcd3-4f8d-afc0-63e292967d9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc725845-a4d9-4a58-bd2e-ebc100ab0117",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e089f7a1-7cf8-481d-8fa7-7058b348bb68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8d7a3dd-0038-482c-819a-a2cbafd4a43d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c26d7277-9502-42a7-aeda-61bb46e53cc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ce8c278-101d-4980-872e-e9fe1eea941b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed69d7db-70f1-402e-874c-56cf44ea7215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d689d80-2667-4617-8e80-d9424a5dcc34",
      "documentation": "<p>Returns all of the runtime parameters offered by the underlying database software, or engine, for a specific database in Amazon Lightsail.</p> <p>In addition to the parameter names and values, this operation returns other information about each parameter. This information includes whether changes require a reboot, whether the parameter is modifiable, the allowed values, and the data types.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseParameters",
      "responses": [
        {
          "uuid": "52198d1d-9fa5-41fe-8a52-0265bda9151f",
          "body": "{\n  \"parameters\": [\n    {\n      \"allowedValues\": \"\",\n      \"applyMethod\": \"\",\n      \"applyType\": \"\",\n      \"dataType\": \"\",\n      \"description\": \"\",\n      \"isModifiable\": {{faker 'datatype.boolean'}},\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9da5ff1-fde4-4a5f-81a5-b696caae0bb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ad3fa8d-9156-49a7-8885-9a23a682b304",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fb5ec01-3d44-4cb4-bbc3-2ce910b4dc59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25416bd1-eb71-4892-9433-2df3050e17de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6a71bac-2282-4da0-a6f5-954fcc82bbb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0efb9417-51f6-4bba-af75-5904d963d468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "909f5f49-4fb9-4073-bf13-50d4220af0bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e99171f-85aa-4eeb-ad62-dd6ecf45dba0",
      "documentation": "Returns information about a specific database snapshot in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "83c3d810-5318-456c-8b8b-ed49770d5780",
          "body": "{\n  \"relationalDatabaseSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"engine\": \"\",\n    \"engineVersion\": \"\",\n    \"sizeInGb\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"fromRelationalDatabaseName\": \"\",\n    \"fromRelationalDatabaseArn\": \"\",\n    \"fromRelationalDatabaseBundleId\": \"\",\n    \"fromRelationalDatabaseBlueprintId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7aa01e23-dc3f-4c7b-8cf1-cfa9ab367c2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "258b6bb0-234d-4afd-a6b2-b7b1c46280f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "762cf299-f9da-453c-b3e1-b12a38980bbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e92afff0-4a80-4445-84b4-e857af680a46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9e4ab4f-8dbc-412e-9bdb-1d2baddacb7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8614134-a37c-4f48-bd36-d28cef75a0bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f0fefc8-348d-4a18-90ef-0be072ab40b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7765055-364f-419a-8836-717fdaf6c24e",
      "documentation": "Returns information about all of your database snapshots in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshots",
      "responses": [
        {
          "uuid": "b6c7d546-ccf9-45cb-89b2-e66ba9c408fe",
          "body": "{\n  \"relationalDatabaseSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"sizeInGb\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"fromRelationalDatabaseName\": \"\",\n      \"fromRelationalDatabaseArn\": \"\",\n      \"fromRelationalDatabaseBundleId\": \"\",\n      \"fromRelationalDatabaseBlueprintId\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "173f50aa-8cf7-4f80-855e-2f7c5fa60a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af5ed974-b90e-498c-b951-b4a95a330b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b09f7364-1807-42b6-ab49-445c9452afbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41b36518-9b44-4d5b-a150-793bdfb55a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5603afaa-4e5b-4fa7-9c8a-d195d5a1a210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12d8e74f-8822-4504-8685-b5cf2b1c3775",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b425eb66-e8cd-4a96-97b3-0bbf5cb684d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "933c4c73-17fa-42cd-9392-c09e46a76e27",
      "documentation": "Returns information about all of your databases in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabases",
      "responses": [
        {
          "uuid": "aff295a1-d386-4a3f-b85c-845ae9f77a05",
          "body": "{\n  \"relationalDatabases\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"relationalDatabaseBlueprintId\": \"\",\n      \"relationalDatabaseBundleId\": \"\",\n      \"masterDatabaseName\": \"\",\n      \"hardware\": {\n        \"cpuCount\": {{faker 'datatype.number'}},\n        \"diskSizeInGb\": {{faker 'datatype.number'}},\n        \"ramSizeInGb\": {{faker 'datatype.float'}}\n      },\n      \"state\": \"\",\n      \"secondaryAvailabilityZone\": \"\",\n      \"backupRetentionEnabled\": {{faker 'datatype.boolean'}},\n      \"pendingModifiedValues\": {\n        \"masterUserPassword\": \"\",\n        \"engineVersion\": \"\",\n        \"backupRetentionEnabled\": {{faker 'datatype.boolean'}}\n      },\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"latestRestorableTime\": \"{{faker 'date.recent' 365}}\",\n      \"masterUsername\": \"\",\n      \"parameterApplyStatus\": \"\",\n      \"preferredBackupWindow\": \"\",\n      \"preferredMaintenanceWindow\": \"\",\n      \"publiclyAccessible\": {{faker 'datatype.boolean'}},\n      \"masterEndpoint\": {\n        \"port\": {{faker 'datatype.number'}},\n        \"address\": \"\"\n      },\n      \"pendingMaintenanceActions\": [\n        {\n          \"action\": \"\",\n          \"description\": \"\",\n          \"currentApplyDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"caCertificateIdentifier\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bff826eb-a28f-4676-ae24-2bb5582582e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58e4d068-304d-472f-ae8f-8eb1d5f542b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "034b6ba3-fd6a-4909-ae6d-6592b85113b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee1b7d7d-9f67-44de-8bad-f95bd4a64206",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d231f5e-2dc1-4ee4-baf1-8e135db54b48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5746256-cf0e-417a-8962-2f398cf6a929",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11707d8e-18f8-4fee-a5d5-6d6c6ce0a966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f905ddbd-f743-4fd7-b564-30215926a5da",
      "documentation": "Returns information about an Amazon Lightsail static IP.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetStaticIp",
      "responses": [
        {
          "uuid": "c0166cf9-1cd6-43c0-9234-1847e8236799",
          "body": "{\n  \"staticIp\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"ipAddress\": \"\",\n    \"attachedTo\": \"\",\n    \"isAttached\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72069a6c-59eb-47cc-84e2-0e5e2518b755",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1694a948-5569-4e02-add4-804b1c897a96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e885502-570d-4851-951a-329699efd285",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae6eedc2-dcfd-47c6-ab2e-0a78789a82cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c92e990-60db-4cf0-b933-e27e0d3d59cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f59975f-ed36-4a7d-853e-a15752b97335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a6ea939-9b83-45ba-bba0-6cdc5bb91c7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "33118303-186d-4854-871b-010602e070cc",
      "documentation": "Returns information about all static IPs in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetStaticIps",
      "responses": [
        {
          "uuid": "073b9a25-2e4f-4d3f-952a-21f6cee11b39",
          "body": "{\n  \"staticIps\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"ipAddress\": \"\",\n      \"attachedTo\": \"\",\n      \"isAttached\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "feab2d5e-1da6-4d95-b2ec-785b238e01aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f49e4e22-8b45-4d75-a82c-fe20505bfd35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f2e619d-511e-4c94-b09f-4343133caca6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7b7c96b-50a5-49bd-9159-ccdb803844ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "559038d3-ffa5-4dda-8d1e-f28b48377477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fff1873-fbf1-4832-8652-6da290d6a511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b2cb8be-0fdf-4d71-8685-c1177c7b7c8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "591f66fa-9cfb-4fad-9837-730b42dca4e7",
      "documentation": "Imports a public SSH key from a specific key pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ImportKeyPair",
      "responses": [
        {
          "uuid": "728361a4-0108-4cf5-a086-23be1040f4aa",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d763519-b1c4-4f98-ba5b-fdadeef6012c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51730902-668a-49b6-99fa-27917eb9e37d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3051d12-6884-4c60-a241-9082903eab08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fe6f650-514a-42ab-983c-99dc3a6f9be3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d66a3d4-0772-4ff7-9d5d-b856c4ff998f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71acf735-6c85-4a1f-8aaf-09c9540b60d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17271823-5b0a-4bf9-a5f6-9a9f0cbca930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b67a257-78a5-4287-849d-0083a84e951c",
      "documentation": "Returns a Boolean value indicating whether your Lightsail VPC is peered.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.IsVpcPeered",
      "responses": [
        {
          "uuid": "e5243587-5e95-4d06-ab6f-b9f9bf2e3dd2",
          "body": "{\n  \"isPeered\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "97aa96a9-83ce-4035-ab81-29c0f93475d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40f76992-e631-409b-b8f9-301b41cf1895",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d05a9126-0209-42a0-addf-765d09c08f8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "932d6b4a-505b-4d91-ab7f-702cb03b8dbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70205818-bfdd-48e6-a8dc-9afb01d8b127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7623d4c6-e460-4b4e-8075-a152ce110243",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10887da2-70ae-40b0-b89a-26e642701f57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c470eb3-349e-4ed3-afbf-9462420ff9b5",
      "documentation": "<p>Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol.</p> <p>The <code>OpenInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.OpenInstancePublicPorts",
      "responses": [
        {
          "uuid": "ed1f7aaa-a391-4797-924c-cfeed1de15d3",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc40e69a-3bef-4ba9-bcd9-8a5b4f068265",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2a6f679-14c9-4864-ba72-49fc1ca9e87b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e90ec2c7-c724-4176-bfca-c9a4cb8ff975",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9606fc28-3292-48bb-8831-e20376269cc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "910285cd-36d3-4eb0-9066-4ee70c99f5eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "984f2067-7399-4215-8e3b-2f7039eb9a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04f6e89b-27a1-4cb1-8a54-79311c4cdfc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0622faa9-07cd-46d8-882a-482efc57ba61",
      "documentation": "Peers the Lightsail VPC with the user's default VPC.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PeerVpc",
      "responses": [
        {
          "uuid": "6db2b8e9-232b-43dc-b8f3-a8905022a544",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "477559cb-5ee3-444d-915b-6179a8a40f9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e72a2df0-720f-4aba-9a9c-4e22b5f776e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bcfbc7d1-3c3f-4c49-8778-7c9fa74fa657",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc38c9a9-fa3c-47f1-985b-e54317329e82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77e01ea9-6ab6-49ac-9af7-54b3349daf99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e020995-45cd-4eab-b505-8c26a8aeff48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "beef255c-5761-49a7-98e8-f7474094985d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85401c01-4a4f-4580-b0b4-3f87ad3233d9",
      "documentation": "<p>Creates or updates an alarm, and associates it with the specified metric.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p> <p>When this action creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm. The alarm is then evaluated with the updated configuration.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PutAlarm",
      "responses": [
        {
          "uuid": "be984bf8-8f32-404c-8d0c-29a0d1643a77",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d18624a4-6d56-43f0-ad00-93216e0ab635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75396e92-6a64-42fc-ae4a-f7a977a6d0e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54f198cf-5202-4fcc-b0ff-346ca0bc5caa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19ce3876-4f7a-439b-ab3c-8f9031734adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eda67579-eb8c-40fd-9089-f4987cfc438c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf459c8c-9b7c-4296-ac83-4247267ee734",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bac1ac3f-d845-418f-9b99-f8b8d9d43220",
      "documentation": "<p>Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol. This action also closes all currently open ports that are not included in the request. Include all of the ports and the protocols you want to open in your <code>PutInstancePublicPorts</code>request. Or use the <code>OpenInstancePublicPorts</code> action to open ports without closing currently open ports.</p> <p>The <code>PutInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PutInstancePublicPorts",
      "responses": [
        {
          "uuid": "0252bd9c-44fc-429c-84ee-64f6f72352c7",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91a2f55c-38aa-4637-ac1d-a0ea6a677692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "967b493d-681e-4d24-a1ef-279bb6d3424d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbeea6cb-b1b6-495b-84fc-31fc7f8f4b6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "717cce5b-3da9-4f00-b6e7-162be911ea15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b01ddef-f53c-4555-b08a-66049c4428d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2d9adfe-188e-47e9-b964-4dcab764cd20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3089191d-bdc5-4931-b1f7-ef80e51c5784",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a27f55a-a13b-4b04-add3-c4bf0e7af16c",
      "documentation": "<p>Restarts a specific instance.</p> <p>The <code>reboot instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RebootInstance",
      "responses": [
        {
          "uuid": "3fa09ce7-51da-43d3-bbc0-95cf2b546cac",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "74ff4b0e-8374-477e-b148-6ac2f39253b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "097510df-b287-4e1a-9a3d-d1fd2e874ff0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7741d279-dbbb-4c34-ace9-7b63d7244c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe78816d-e316-43da-9604-8fa87a3c45f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7232974c-b752-441b-a450-d95a5f5bcc8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44bef4e1-235e-4308-9287-1c0aefcd4327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31a0177e-6d88-4861-9aa9-971863da3903",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27f93874-4dbe-472d-9d27-169465e47b27",
      "documentation": "<p>Restarts a specific database in Amazon Lightsail.</p> <p>The <code>reboot relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RebootRelationalDatabase",
      "responses": [
        {
          "uuid": "7d83beff-62d6-4c24-86b8-f58dd6774ad6",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12bfbdef-fdb6-44e5-bee3-b6f683c55caa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9926d295-3419-4c19-b96a-432a35e94495",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8807dd0-3296-41b8-a0b6-d89686965b42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "371089fd-3989-4a04-8589-2003597b7d76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b31a1f9e-519d-4d1c-a18e-da97f140306a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a630a652-d8d9-4bfa-8675-e937d07d0684",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0c371be-e78f-4ffb-9da7-9d559f4a00a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea40a698-28b1-4e8a-9572-46c377557e5c",
      "documentation": "<p>Registers a container image to your Amazon Lightsail container service.</p> <note> <p>This action is not required if you install and use the Lightsail Control (lightsailctl) plugin to push container images to your Lightsail container service. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-pushing-container-images\">Pushing and managing container images on your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RegisterContainerImage",
      "responses": [
        {
          "uuid": "371116dc-e6c6-4db8-a435-c53cbcf9716e",
          "body": "{\n  \"containerImage\": {\n    \"image\": \"\",\n    \"digest\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef8645c6-7fe0-4b77-81be-83e5801c7fac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1940b83-e9f5-49fc-8716-43e633c1d161",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33eae890-4ab0-4cf6-bdba-c389b58265e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66bc73d3-188e-4231-bf0e-a5eb604936a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2a1c6c2-1d10-4bfd-a760-49500dd8fcd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30984aff-baa0-4f09-97c0-82e486c57949",
      "documentation": "Deletes a specific static IP from your account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ReleaseStaticIp",
      "responses": [
        {
          "uuid": "bf5eb752-cc74-4497-a750-1148ca8a6158",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "db33f096-b259-4f55-b56d-5233a7b9d81a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0f57b1a-fb2e-4e74-ba89-bd302b5d7cf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a8792bf-4690-4e9b-a058-45ee7e428db9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41b30094-48eb-4ca3-9dbf-af23a1021896",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "346d078e-587d-499e-94db-9428078f6242",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e63376fb-e692-4ca7-a6bd-58cf52489417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adc8b1cf-961f-40b7-ab69-9af841441c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54287fb1-3cd8-4e08-8a12-ae60b3e36e5e",
      "documentation": "<p>Deletes currently cached content from your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After resetting the cache, the next time a content request is made, your distribution pulls, serves, and caches it from the origin.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ResetDistributionCache",
      "responses": [
        {
          "uuid": "4c5e2b3d-1c44-4d24-8a45-bcf4b51686a7",
          "body": "{\n  \"status\": \"\",\n  \"createTime\": \"{{faker 'date.recent' 365}}\",\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21403b07-10f9-4201-aa8a-aed275837911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "146ee425-2008-48d2-8bb4-c39ff3c8279e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51703d02-94de-4167-8cbf-669202276619",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20383657-0230-4963-8332-0a60d6dee9a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c171d0d-72d8-41da-9639-6ebf615dc164",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ae20642-f8b5-48d1-97f0-05ba38a366ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b66c02f9-0b25-4ee6-b776-7f1cd4365819",
      "documentation": "<p>Sends a verification request to an email contact method to ensure it's owned by the requester. SMS contact methods don't need to be verified.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p> <p>A verification request is sent to the contact method when you initially create it. Use this action to send another verification request if a previous verification request was deleted, or has expired.</p> <important> <p>Notifications are not sent to an email contact method until after it is verified, and confirmed as valid.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SendContactMethodVerification",
      "responses": [
        {
          "uuid": "fc209a4b-5c69-4cd2-a7ce-c5410917130a",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10db55c8-9b27-4d95-94f8-df21af43b636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7269b5e7-62d6-4314-83a6-c3ad92cc25fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2025b2d9-93b0-4e13-a7de-d017c7e1d546",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cef0a950-f2a5-45af-8c8d-a8a3f3180e0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc8b9a6a-d513-4e06-a9f5-19b6858b0b07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0762a8f-6884-40d1-9dc5-372153b0a7e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db8958de-b386-4399-92bc-96466b4e5a20",
      "documentation": "<p>Sets the IP address type for an Amazon Lightsail resource.</p> <p>Use this action to enable dual-stack for a resource, which enables IPv4 and IPv6 for the specified resource. Alternately, you can use this action to disable dual-stack, and enable IPv4 only.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SetIpAddressType",
      "responses": [
        {
          "uuid": "90bcfa26-833f-48c8-aab8-9d76afa6e1b1",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d291aae7-d114-4964-83d2-e473987b9dbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a281686-272d-4359-a0a8-04e7d4c42c89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f684bc3-e533-4554-8d21-cfacc8c4b697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10f6b7ba-705e-44c6-9848-38892734bce5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4df0f9f-870f-4d73-86ed-5a11305ab99f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ae2ff78-1623-4e84-96d1-e2780385a652",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd3031a7-e4af-4379-b865-7361dec3e50d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ce02f5b-1eab-4013-bf37-ca7ca5eb1c29",
      "documentation": "<p>Sets the Amazon Lightsail resources that can access the specified Lightsail bucket.</p> <p>Lightsail buckets currently support setting access for Lightsail instances in the same AWS Region.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SetResourceAccessForBucket",
      "responses": [
        {
          "uuid": "8419853a-2105-4bf7-9670-a8d9a7e5cd34",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d473366-7d44-4391-91fa-24d91d9f171a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a1438b9-c518-4990-ab77-37ad28c25043",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b214a96c-4daf-4ac0-b49c-bd9d1c9a0eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "389c036e-a7c7-4b19-9b84-409d341e0829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45eaec34-793c-49a4-bc90-de0431973be1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4669234-b404-4462-a5f6-9387764200aa",
      "documentation": "<p>Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the <code>reboot instance</code> operation.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-create-static-ip\">Amazon Lightsail Developer Guide</a>.</p> </note> <p>The <code>start instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StartInstance",
      "responses": [
        {
          "uuid": "1d7d99f1-53f9-48d7-8b87-040644a98bd6",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7bab27b-4d70-4e50-a079-3d595fbc6722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "567c8464-40b4-49bf-b0df-fb29a5608fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6990e03-efa6-4df4-a363-dc431421e989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f90f3fb-f205-435d-9c9f-b7dcfe2428b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "573c8347-a4c6-4f7a-a11e-ae9a834a2951",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d4b7feb-5478-405a-921c-09f3400c0621",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffd3905d-fb83-4562-8882-78da56d3c22d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e50c6932-a320-426e-993f-3392ab15e972",
      "documentation": "<p>Starts a specific database from a stopped state in Amazon Lightsail. To restart a database, use the <code>reboot relational database</code> operation.</p> <p>The <code>start relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StartRelationalDatabase",
      "responses": [
        {
          "uuid": "7ee7d262-4bef-4fe3-922b-5bc6df86e33c",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b332dae1-d2d0-4e94-815a-6dc720347367",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f1f6162-60fa-4f32-ad5b-56e6a2a15776",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de4267b9-346e-47ec-b7d8-d72b6fffcf4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0e9fb67-b27b-447e-b004-e104dfc46fb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c0577e5-7223-461b-8198-ce5fd3d4b3a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3be5620-50eb-4a49-8148-e83d3b86676a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9dee7eca-c4c7-4af8-9d0a-79e63e954e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "baf5d78e-ad69-4cdf-a019-1c7d8b6ce73d",
      "documentation": "<p>Stops a specific Amazon Lightsail instance that is currently running.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-create-static-ip\">Amazon Lightsail Developer Guide</a>.</p> </note> <p>The <code>stop instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StopInstance",
      "responses": [
        {
          "uuid": "ffaca1d5-13c7-4e14-ad36-9b3c59cef4ee",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "34c2a804-8966-4f44-9da5-d38b5182a226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c16b2618-f0c7-4eb9-8da8-97e7c6b704d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "799516fd-6411-4677-a67a-e6343e675d9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba905914-370e-435c-a8f4-c5bf17ff7ab3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8691b88f-12c9-4de6-b4de-b15694a96f71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2da07dc5-ff81-4708-af6a-5b8210d57552",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d0953df-d6ab-4b1d-a671-25894d0c756c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7dcfc78-9fb4-4341-b67c-27c0553249cf",
      "documentation": "<p>Stops a specific database that is currently running in Amazon Lightsail.</p> <p>The <code>stop relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StopRelationalDatabase",
      "responses": [
        {
          "uuid": "dd7671e2-9b1f-4c91-b53d-f177fd20577e",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5259359f-81a0-418b-aa52-ef0b9ce2ba72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48af4987-63ca-4e18-b985-f8d3c92eef27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0efb5b29-2718-493e-9d95-f16f80d00c28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b7d82bb-767b-499b-ac6f-4d6be572778b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ead26ce-784c-4152-aa8d-ed889ce2a793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "584e5029-10a0-40a5-8b6e-4ff76e8d3084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef69a083-36e9-45b4-b38e-3b66448ae209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62a81088-7cca-4aed-86c2-913cc0d35f33",
      "documentation": "<p>Adds one or more tags to the specified Amazon Lightsail resource. Each resource can have a maximum of 50 tags. Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags\">Amazon Lightsail Developer Guide</a>.</p> <p>The <code>tag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.TagResource",
      "responses": [
        {
          "uuid": "abf02a93-4179-45ee-b2b1-e2dd3b64f7b8",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70a28219-61d9-4614-99da-7e11354260ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffdf417a-8240-443b-8f5b-105a9eff60e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e0a00ec-6b92-4eec-a670-d6a53be65308",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46f5335d-d6e9-4f91-b729-d7b0c908be0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3eb61d75-bca4-41fd-83bd-55e13d42495a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3b00fc6-35ba-4318-ab37-4ca3c556332f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fca6d0a-6117-49c2-b2a9-1f7a5574a9c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7bfbbd5-f959-4324-8891-747cf87849f8",
      "documentation": "<p>Tests an alarm by displaying a banner on the Amazon Lightsail console. If a notification trigger is configured for the specified alarm, the test also sends a notification to the notification protocol (<code>Email</code> and/or <code>SMS</code>) configured for the alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.TestAlarm",
      "responses": [
        {
          "uuid": "58e2c024-42f1-4d82-b9f3-a6cc9aa064d1",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f1def5da-ccf8-471a-8742-fad86287eb3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92920994-c95d-423c-848f-bd6ba08ef53b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49a366de-1d59-4ee2-9541-5bfaca90ddd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bda6fbb1-0909-47b3-9ab5-c4edd7beb647",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dd2d9f3-fa62-452a-b915-fcb2a6b5b61a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b13c42f9-2227-493d-8dd1-8bd51a2c33e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80c588ba-e90a-4f27-a12e-49b23bc631a0",
      "documentation": "Unpeers the Lightsail VPC from the user's default VPC.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UnpeerVpc",
      "responses": [
        {
          "uuid": "14759b09-64d3-469b-a6af-cb3123094995",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6b17027-3a89-46b6-9c68-586e4e447962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f2d3e82-6d28-4660-8ded-3cd05034a8c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "333e6f8a-922e-4705-b582-5fdf603c7f25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bb60fae-e505-4181-ac6f-6b18fa4a82fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e316bc6-9a56-4124-b3d8-1bcd0f01f6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a44e95bf-ddf2-441c-96ae-04bb88b44590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65758812-b94d-4d69-89e7-84273dd6f2e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18d96b00-ca90-400a-aa59-f9e01815c65e",
      "documentation": "<p>Deletes the specified set of tag keys and their values from the specified Amazon Lightsail resource.</p> <p>The <code>untag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UntagResource",
      "responses": [
        {
          "uuid": "df956342-f4ed-4002-90ae-87e66ac514fe",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15a5e318-ba9b-40fe-94ae-7b705185f1e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5817fca0-62e7-4333-b8d7-640547d3e11f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fa43fd5-d4fa-455f-b8ea-3681bf075f4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52559140-cdeb-478b-a81b-b2f52df76899",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f03563fb-eb41-4e5c-b296-5d6b9fda9679",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ea35d75-7d34-4203-9319-ce13a2d05520",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8caf037-2e1a-437a-befc-84d617d5934b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1920d5b-49ec-4cdc-b659-885a760f5f20",
      "documentation": "<p>Updates an existing Amazon Lightsail bucket.</p> <p>Use this action to update the configuration of an existing bucket, such as versioning, public accessibility, and the AWS accounts that can access the bucket.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateBucket",
      "responses": [
        {
          "uuid": "0fd0f307-15f7-4832-a153-93e29eba0d8c",
          "body": "{\n  \"bucket\": {\n    \"resourceType\": \"\",\n    \"accessRules\": {\n      \"getObject\": \"\",\n      \"allowPublicOverrides\": {{faker 'datatype.boolean'}}\n    },\n    \"arn\": \"\",\n    \"bundleId\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"name\": \"\",\n    \"supportCode\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"objectVersioning\": \"\",\n    \"ableToUpdateBundle\": {{faker 'datatype.boolean'}},\n    \"readonlyAccessAccounts\": [\n      \"\"\n    ],\n    \"resourcesReceivingAccess\": [\n      {\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      }\n    ],\n    \"state\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "17345dde-91f7-4af5-a8f5-ba6d6368c977",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa73ab52-eb17-4a28-9be4-27f6cb8ffe88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c61e8c1-3bdf-4826-870f-35ae34a8d7bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7021c34-d71b-41e4-93a8-e4035d580340",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36bc9d68-d84d-4003-842f-15ea86ab9857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6de27788-4c54-4245-8dc0-798019c28d89",
      "documentation": "<p>Updates the bundle, or storage plan, of an existing Amazon Lightsail bucket.</p> <p>A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a bucket. You can update a bucket's bundle only one time within a monthly AWS billing cycle. To determine if you can update a bucket's bundle, use the <a>GetBuckets</a> action. The <code>ableToUpdateBundle</code> parameter in the response will indicate whether you can currently update a bucket's bundle.</p> <p>Update a bucket's bundle if it's consistently going over its storage space or data transfer quota, or if a bucket's usage is consistently in the lower range of its storage space or data transfer quota. Due to the unpredictable usage fluctuations that a bucket might experience, we strongly recommend that you update a bucket's bundle only as a long-term strategy, instead of as a short-term, monthly cost-cutting measure. Choose a bucket bundle that will provide the bucket with ample storage space and data transfer for a long time to come.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateBucketBundle",
      "responses": [
        {
          "uuid": "18bd4494-c6ab-4bf2-9224-1547b8839387",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1adf233d-fee0-493f-b45d-1b4a61905712",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6828226c-adc7-4b9c-94bb-f5fb52e513f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e08cebec-07c3-4219-8266-d6ef52b8a6af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ecb7770c-2f95-46a8-a619-c62feebb0536",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a851458-d9c9-4307-8832-2adffeb5287c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1197e27a-9060-425d-b1d0-afd7de232b15",
      "documentation": "Updates the configuration of your Amazon Lightsail container service, such as its power, scale, and public domain names.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateContainerService",
      "responses": [
        {
          "uuid": "597200c3-5824-456c-91d2-e3464d5eb43c",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'datatype.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'datatype.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'datatype.number'}},\n          \"unhealthyThreshold\": {{faker 'datatype.number'}},\n          \"timeoutSeconds\": {{faker 'datatype.number'}},\n          \"intervalSeconds\": {{faker 'datatype.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'datatype.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0d071d44-934e-43ce-87eb-a45431777768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5853db9-404e-454b-82e8-34c6cf70f3d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e772c8a-ef51-4f23-856c-2202441374e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "569c18c0-f5d3-4bca-bd0b-535ec3b26d5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf16e78a-1d0f-4b4a-a6d7-8955efe6b812",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d303dd76-ffe2-46d2-98a0-19b09ad7af8c",
      "documentation": "<p>Updates an existing Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Use this action to update the configuration of your existing distribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDistribution",
      "responses": [
        {
          "uuid": "7cf79f83-fbaf-45e9-a97f-98373ea63e67",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1cd81096-df95-4173-a747-89a118a85ec6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e07dbbe2-c0b7-4e50-9c87-35495ae68af4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d627a670-af4e-4f99-86ac-39b38de75099",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a16049d-3b83-4e30-86f7-c57477a0ca48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5dd24af1-7df3-4167-9047-9d17fb09ac42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a98139c-65b8-4bdd-9bbe-bb7191ea1d95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e94f5144-d839-4730-b1a3-067c4e2fe1b6",
      "documentation": "<p>Updates the bundle of your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>A distribution bundle specifies the monthly network transfer quota and monthly cost of your dsitribution.</p> <p>Update your distribution's bundle if your distribution is going over its monthly network transfer quota and is incurring an overage fee.</p> <p>You can update your distribution's bundle only one time within your monthly AWS billing cycle. To determine if you can update your distribution's bundle, use the <code>GetDistributions</code> action. The <code>ableToUpdateBundle</code> parameter in the result will indicate whether you can currently update your distribution's bundle.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDistributionBundle",
      "responses": [
        {
          "uuid": "6f299bc4-0230-45c9-b0b1-5ca6d0fa50aa",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'datatype.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf58476f-42ba-4e05-8442-8bb1e2c597fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "222b8496-a534-41fa-b74c-e4f0ea0c9c66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "335f5588-db86-489c-ba14-347d18c9bcca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "825466b8-e3c8-4008-bad4-eab85f29d4b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6cb4db79-fa7f-4efb-b058-f859f31cb4bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8de13642-6d90-4557-b8b3-525dd6925762",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d77961e7-92c6-419c-b81c-25f939f4b260",
      "documentation": "<p>Updates a domain recordset after it is created.</p> <p>The <code>update domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDomainEntry",
      "responses": [
        {
          "uuid": "c81823fd-d388-492d-8c86-cc6a90c4083d",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3a1808ae-018c-425f-bbda-241cbee37cd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09f98b37-b359-4435-8d9e-da65ef9045c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07ce189b-2bc3-488f-a3a4-47d988b80f30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50cd52f4-30ed-4427-b473-4668516193f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "548324d6-9657-4ce0-81ac-3ab673cb2117",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "861d8844-8017-414e-ab90-9c3d77d4a9c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b89c2bd-c23b-4a15-a0d1-0e22599e5c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc30deec-2f8d-460a-9558-c1ae912fbb6d",
      "documentation": "<p>Updates the specified attribute for a load balancer. You can only update one attribute at a time.</p> <p>The <code>update load balancer attribute</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateLoadBalancerAttribute",
      "responses": [
        {
          "uuid": "8f111e51-6762-43ef-bf3a-22d29797e86f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7dd000d0-f1d7-4411-8003-79b3eb513f93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22055681-e4bc-4b8f-ab87-18bf50720f1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b559867a-f9d7-4cb6-800f-7be842d330b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bc31b7b-2811-44c5-a645-3d9db2de9f12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8116699a-b487-4c87-8ad8-5052f0efdc1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81ef5638-6f79-4857-8970-b034b22d3500",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b095a6a6-d826-44f8-89f2-ba27b4acc7cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "489af4b5-665d-4718-8fc2-0d78a2cfe318",
      "documentation": "<p>Allows the update of one or more attributes of a database in Amazon Lightsail.</p> <p>Updates are applied immediately, or in cases where the updates could result in an outage, are applied during the database's predefined maintenance window.</p> <p>The <code>update relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabase",
      "responses": [
        {
          "uuid": "6ddef923-dc8d-491b-8d07-569be7a692c4",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aaa13ab3-d46b-42ed-bf81-30d96f4dcf22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9d8220c-490c-4583-ab56-c848d4934bd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1feb587-5511-40fc-83df-c314989a2fc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72891c39-84ac-4b04-a281-6824057ae8e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60715c94-2afb-48db-8737-cb0451466f03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba719bd2-bcbe-421d-a0f9-709c4def301a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ef339dd-03bf-49c3-bf78-9c944a01def7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89fa70fc-280e-4639-9ecd-358057790917",
      "documentation": "<p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p> <p>Parameter updates don't cause outages; therefore, their application is not subject to the preferred maintenance window. However, there are two ways in which parameter updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a <code>dynamic</code> apply type are applied immediately. Parameters marked with a <code>pending-reboot</code> apply type are applied only after the database is rebooted using the <code>reboot relational database</code> operation.</p> <p>The <code>update relational database parameters</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters",
      "responses": [
        {
          "uuid": "4a83f40f-6538-4b38-ae8c-426409b80795",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'datatype.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2684351-88ab-468b-928c-51c08e540fad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d01ef520-3724-4b54-adcf-00d4c6d131fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12d12e05-bfe1-40fe-b9be-ad5e60a50730",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "415002eb-b635-45d1-a1e1-ecd131d394f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0e92d36-d18a-4acb-b41e-947df93cb703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf6817e5-d159-45ec-a1a4-2ed21d76c684",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad88c092-60c2-4859-817c-18416625bf7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}