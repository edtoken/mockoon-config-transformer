{
  "uuid": "c008c7e3-a474-4a7e-bd3d-5d58900d25ff",
  "lastMigration": 24,
  "name": "Zoom API",
  "endpointPrefix": "v2",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "53b246e5-1ede-4878-b6c2-443c141b194b",
      "documentation": "List sub accounts",
      "method": "get",
      "endpoint": "accounts",
      "responses": [
        {
          "uuid": "6ff12ad2-4320-40be-a1b0-5b310364ac9c",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Account list returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9f3fc3e-34fb-4c28-8dcc-1bd361994483",
      "documentation": "Create a sub account",
      "method": "post",
      "endpoint": "accounts",
      "responses": [
        {
          "uuid": "fbd4e485-0f1f-46c1-bf3c-57ceb7f4ce81",
          "body": "{\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"owner_email\": \"\",\n  \"owner_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Account created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09d86812-b26f-47b9-ad87-718467628559",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}\n**Error Code:** `1107`<br>\nEmail domain is blocked.<br>\n**Error Code:** `1111`<br>\nPassword should not contain repeated characters such as 'aaaaaa'. <br>\nPassword should not contain consecutive characters such as 'abc','123'.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f2bb5e8-c135-444c-9124-b6cd1061203f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409`<br>\n**Error Code:** `1005`<br>\nEmail $email has already been used.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "494675b7-2603-4248-8008-f99dd5eec46b",
      "documentation": "Disassociate a sub account",
      "method": "delete",
      "endpoint": "accounts/:accountId",
      "responses": [
        {
          "uuid": "333cf508-a1d5-46bd-b0be-e71aa3de2c65",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code**: `204`<br>Account deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e8a0ef4-5563-456f-b0ec-e254495e26d6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code**: `404` <br> \n**Error Code:** `2000`<br> You cannot disassociate a paid account. <br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c54c40ed-7e47-40d0-91c4-5e0c7ba6dc16",
      "documentation": "Get sub account details",
      "method": "get",
      "endpoint": "accounts/:accountId",
      "responses": [
        {
          "uuid": "60ec217e-040f-4a30-91de-ad432da4bd69",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"options\": {\n    \"billing_auto_renew\": {{faker 'datatype.boolean'}},\n    \"meeting_connector_list\": [\n      \"\"\n    ],\n    \"pay_mode\": \"{{oneOf (array 'master' 'sub')}}\",\n    \"room_connector_list\": [\n      \"\"\n    ],\n    \"share_mc\": {{faker 'datatype.boolean'}},\n    \"share_rc\": {{faker 'datatype.boolean'}}\n  },\n  \"owner_email\": \"\",\n  \"owner_id\": \"\",\n  \"vanity_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code**: `200`<br>\nAccount object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f37fc462-3704-4a54-9c30-f70021f7bfaf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code**: `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "721e9c18-a2be-4169-8779-3f8e887e4015",
      "documentation": "Get billing information",
      "method": "get",
      "endpoint": "accounts/:accountId/billing",
      "responses": [
        {
          "uuid": "cc0cfd03-23b3-47e4-81bf-07c8f09138f6",
          "body": "{\n  \"address\": \"\",\n  \"apt\": \"\",\n  \"city\": \"\",\n  \"country\": \"\",\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"phone_number\": \"\",\n  \"state\": \"\",\n  \"zip\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount billing contact information returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2ed035e-13ce-458e-b2c7-5cfa821c1ab7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03b50426-2999-43b8-8870-37e5f2ae6e14",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a28695e5-12b2-4caf-8635-7e2e62bff67a",
      "documentation": "Update billing information",
      "method": "patch",
      "endpoint": "accounts/:accountId/billing",
      "responses": [
        {
          "uuid": "23e5fd8f-2198-4c86-9b51-bd7ad21399dd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nPlease subscribe a plan for this sub account first.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d39fb04b-d181-43b3-927c-8e598224e44b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nAccount billing contact information updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0562636-eb6b-4bd6-870e-63754785d865",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nInvalid country parameter: {country}.<br>\nInvalid state parameter: {state}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e23d2f0-9688-47ea-bcc8-3d3659da703f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f0d6da0-6844-4b37-9ec8-29c688406be2",
      "documentation": "List billing invoices",
      "method": "get",
      "endpoint": "accounts/:accountId/billing/invoices",
      "responses": [
        {
          "uuid": "1a8a119b-f1b6-4127-bca4-fa5e26adc53a",
          "body": "{\n  \"currency\": \"\",\n  \"invoices\": [\n    {\n      \"balance\": {{faker 'datatype.float'}},\n      \"due_date\": \"\",\n      \"id\": \"\",\n      \"invoice_date\": \"\",\n      \"invoice_number\": \"\",\n      \"status\": \"\\\"Draft\\\"\",\n      \"target_date\": \"\",\n      \"tax_amount\": {{faker 'datatype.float'}},\n      \"total_amount\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fee1f57c-185c-4245-baf9-9a9ac4238820",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for Paid account: {subAccountId}.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18341286-913b-4f24-ad4c-f83b7d0690ea",
      "documentation": "Get invoice details",
      "method": "get",
      "endpoint": "accounts/:accountId/billing/invoices/:invoiceId",
      "responses": [
        {
          "uuid": "e1f72421-9314-46f9-b4ff-b7b42167534b",
          "body": "{\n  \"balance\": {{faker 'datatype.float'}},\n  \"currency\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"invoice_date\": \"\",\n  \"invoice_items\": [\n    {\n      \"charge_name\": \"\",\n      \"charge_number\": \"\",\n      \"charge_type\": \"\",\n      \"end_date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"quantity\": {{faker 'datatype.number'}},\n      \"start_date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"tax_amount\": {{faker 'datatype.float'}},\n      \"total_amount\": {{faker 'datatype.float'}}\n    }\n  ],\n  \"invoice_number\": \"\",\n  \"status\": \"\\\"Draft\\\"\",\n  \"target_date\": \"\",\n  \"tax_amount\": {{faker 'datatype.float'}},\n  \"total_amount\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "691d8357-fa59-4166-8555-1a13eb38bb15",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\nInvoiceId does not exist: {invoiceId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab73dd4b-d8ba-4fde-97c7-bf05beaf9af1",
      "documentation": "Get locked settings",
      "method": "get",
      "endpoint": "accounts/:accountId/lock_settings",
      "responses": [
        {
          "uuid": "4f43dc88-4194-445a-aaa9-e8b160d4bd62",
          "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'datatype.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'datatype.boolean'}},\n    \"jbh_reminder\": {{faker 'datatype.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'datatype.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'datatype.boolean'}},\n    \"annotation\": {{faker 'datatype.boolean'}},\n    \"anonymous_question_answer\": {{faker 'datatype.boolean'}},\n    \"attendee_on_hold\": {{faker 'datatype.boolean'}},\n    \"auto_answer\": {{faker 'datatype.boolean'}},\n    \"auto_saving_chat\": {{faker 'datatype.boolean'}},\n    \"breakout_room\": {{faker 'datatype.boolean'}},\n    \"chat\": {{faker 'datatype.boolean'}},\n    \"closed_caption\": {{faker 'datatype.boolean'}},\n    \"co_host\": {{faker 'datatype.boolean'}},\n    \"custom_data_center_regions\": {{faker 'datatype.boolean'}},\n    \"dscp_marking\": {{faker 'datatype.boolean'}},\n    \"e2e_encryption\": {{faker 'datatype.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'datatype.boolean'}},\n    \"feedback\": {{faker 'datatype.boolean'}},\n    \"file_transfer\": {{faker 'datatype.boolean'}},\n    \"group_hd\": {{faker 'datatype.boolean'}},\n    \"original_audio\": {{faker 'datatype.boolean'}},\n    \"polling\": {{faker 'datatype.boolean'}},\n    \"post_meeting_feedback\": {{faker 'datatype.boolean'}},\n    \"private_chat\": {{faker 'datatype.boolean'}},\n    \"remote_control\": {{faker 'datatype.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'datatype.boolean'}},\n    \"screen_sharing\": {{faker 'datatype.boolean'}},\n    \"sending_default_email_invites\": {{faker 'datatype.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'datatype.boolean'}},\n    \"stereo_audio\": {{faker 'datatype.boolean'}},\n    \"use_html_format_email\": {{faker 'datatype.boolean'}},\n    \"virtual_background\": {{faker 'datatype.boolean'}},\n    \"webinar_question_answer\": {{faker 'datatype.boolean'}},\n    \"whiteboard\": {{faker 'datatype.boolean'}}\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'datatype.boolean'}},\n    \"auto_delete_cmr\": {{faker 'datatype.boolean'}},\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download\": {{faker 'datatype.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'datatype.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'datatype.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'datatype.boolean'}},\n    \"recording_authentication\": \"\"\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": {{faker 'datatype.boolean'}},\n    \"embed_password_in_join_link\": {{faker 'datatype.boolean'}},\n    \"enforce_login\": {{faker 'datatype.boolean'}},\n    \"enforce_login_domains\": \"\",\n    \"enforce_login_with_domains\": {{faker 'datatype.boolean'}},\n    \"host_video\": {{faker 'datatype.boolean'}},\n    \"join_before_host\": {{faker 'datatype.boolean'}},\n    \"meeting_authentication\": {{faker 'datatype.boolean'}},\n    \"not_store_meeting_topic\": {{faker 'datatype.boolean'}},\n    \"participant_video\": {{faker 'datatype.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_pmi_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"telephony\": {\n    \"telephony_regions\": {{faker 'datatype.boolean'}},\n    \"third_party_audio\": {{faker 'datatype.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'datatype.boolean'}},\n    \"show_international_numbers_link\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOnly available for paid account:$accountId.\n\n**HTTP Status Code:** `200`<br>\nLocked settings for the Account returned.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23110f57-9b3e-4aa3-b462-14e5cf0a2e9d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7df2cabc-3e06-4fd7-a916-4cd524c1eb80",
      "documentation": "Update locked settings",
      "method": "patch",
      "endpoint": "accounts/:accountId/lock_settings",
      "responses": [
        {
          "uuid": "a63c752a-ca0c-488a-a1af-1b30127555a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOnly available for Paid account: $accountId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d19724f3-4ab8-4af5-8f9a-0b65a5286eda",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nAccount lock settings updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c050cb-e3d0-4564-873b-1f666ddbcc77",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nTAccount does not exist: $subAccountId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "026cb2d5-59fb-45e6-82c2-2cfdb34cb097",
      "documentation": "Get managed domains",
      "method": "get",
      "endpoint": "accounts/:accountId/managed_domains",
      "responses": [
        {
          "uuid": "758c86e5-20e3-4f83-a289-9e1affce06a7",
          "body": "{\n  \"domains\": [\n    {\n      \"domain\": \"\",\n      \"status\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount managed domains returned.\n**Error Code:** `200`<br>\nOnly available for paid account.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee77b9ae-c7a2-49db-af12-b39907053fe2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `2001`<br>\nAccount does not exist: $subAccountId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e470e9c-d6ec-4b34-9fc4-553e14a86279",
      "documentation": "Update options",
      "method": "patch",
      "endpoint": "accounts/:accountId/options",
      "responses": [
        {
          "uuid": "b339c9cc-130e-4dff-81d3-a882da331a46",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nThe pay mode cannot be updated for a sub account which already has an existing plan.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf0ab404-fc77-4b2e-9ef4-1a69c329daf8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nAccount options updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9982627-9e62-43b8-901e-e59b8a79d057",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e3ce789-b1a1-45f1-8484-243c66204c39",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47555acb-f0f1-4316-91b2-fe65d52b25e5",
      "documentation": "Update the account owner",
      "method": "put",
      "endpoint": "accounts/:accountId/owner",
      "responses": [
        {
          "uuid": "9265fb34-8e6b-4df4-a474-ed978064e32a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nAccount owner updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9fdffdd-5188-488a-9ee3-d6c576ac36c8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `200`<br>\nUser is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>\nCannot make a user outside of your account an owner.<br>\nCannot update the role of an account owner.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4fdf3c4a-1222-4487-9703-ee04cf2092d3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.<br>\n**Error Code:** `3201`<br>\nCannot find a billing account for this: $accountId.<br>\n**Error Code:** `3211`<br>\nCannot find a billing contact for this: $accountId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85e7cf49-d227-425d-a66f-fc6d0718dd94",
      "documentation": "Update BYOC settings",
      "method": "patch",
      "endpoint": "accounts/:accountId/phone/settings",
      "responses": [
        {
          "uuid": "83059238-2a03-4b70-b077-1eda44555fb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**Response HTTP code**: `204` **No Content.**<br>\nUpdated successfully.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "259915fb-87d4-4d63-9b9c-556425f8bf65",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ab9421c-961b-48a1-8dab-9688c7631ce0",
      "documentation": "Set up a Zoom Phone account",
      "method": "post",
      "endpoint": "accounts/:accountId/phone/setup",
      "responses": [
        {
          "uuid": "5e967c0f-0e47-436b-a825-8e90d4d76058",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Codes** `201`<br>\nCreated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d47f443-e2cd-419e-8f1f-3b3f1bbd3e37",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\n\n**Error Codes:** `300`<br>\nThe extension number {0} that you entered is a reserved number and can not be used. Provide a different number and try again.<br>\nThis account is not enrolled in a Zoom Phone plan. Subscribe to a Zoom Phone plan and try again.<br>\nThe billing information could not be retrieved at this time. Retry the request again after a few seconds.<br>\nThe country code you entered is invalid. Provide a valid country code and try again.<br>\nThe state code you entered is invalid. Provide a valid state code and try again.<br>\nThe city information you entered is invalid. Provide a valid city name and try again.<br>\nState code is required for this country.<br>\nCity is required for this country.<br>\nZip is required for this country.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23840a4b-7cc5-48e0-9d74-e4dd47e84516",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\nUnauthorized.<br>\n\n**Error Code:** <br>\n`124` Account does not exist: {accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2533174c-e7ec-466b-9809-0fd689fbadd5",
      "documentation": "Assign SIP trunks",
      "method": "post",
      "endpoint": "accounts/:accountId/phone/sip_trunk/trunks",
      "responses": [
        {
          "uuid": "e2a0b410-aba5-4a6a-a950-bac57ef7a3ed",
          "body": "{\n  \"sip_trunks\": [\n    {\n      \"carrier_account\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8591be82-5318-4fb0-a56f-e34a3b809de0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nSIP Trunk does not exist: {sipTruniId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07a13a96-6696-4073-9b29-ffea02456e0e",
      "documentation": "Update SIP trunk details",
      "method": "patch",
      "endpoint": "accounts/:accountId/phone/sip_trunk/trunks/:sipTrunkId",
      "responses": [
        {
          "uuid": "dcf8c255-3e21-41d0-b684-8b558d7866d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Response Code**: `204` **No Content**<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4881161-fc26-4e55-aaae-9e1cf5f2b1a7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nSip trunk does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "425164b1-15a8-4471-adbd-9a4e1b221546",
      "documentation": "Get plan Information",
      "method": "get",
      "endpoint": "accounts/:accountId/plans",
      "responses": [
        {
          "uuid": "58ef0efe-bae1-46a7-9f52-189da9ce26b8",
          "body": "{\n  \"plan_audio\": {\n    \"callout_countries\": \"\",\n    \"ddi_numbers\": {{faker 'datatype.number'}},\n    \"next_invoice_date\": \"\",\n    \"premium_countries\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"tollfree_countries\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_base\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  },\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    }\n  ],\n  \"plan_phone\": {\n    \"plan_base\": {\n      \"callout_countries\": \"\",\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    },\n    \"plan_calling\": [\n      {\n        \"hosts\": {{faker 'datatype.number'}},\n        \"next_invoice_date\": \"\",\n        \"service_effective_date\": \"\",\n        \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n        \"type\": \"\"\n      }\n    ],\n    \"plan_number\": [\n      {\n        \"hosts\": {{faker 'datatype.number'}},\n        \"next_invoice_date\": \"\",\n        \"service_effective_date\": \"\",\n        \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n        \"type\": \"\"\n      }\n    ]\n  },\n  \"plan_recording\": \"\",\n  \"plan_recording_next_invoice_date\": \"\",\n  \"plan_recording_service_effective_date\": \"\",\n  \"plan_recording_status\": \"{{oneOf (array 'Active' 'Cancelled')}}\",\n  \"plan_room_connector\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    }\n  ],\n  \"plan_zoom_rooms\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:**`200`<br>\nAccount's plans returned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b9607a7a-1f29-49e5-ac96-8b205976a6b3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea3f1b3d-23f9-44ca-aa80-36cf80b70f15",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:**`404`<br>\nAccount does not exist: {subAccountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df5efd8e-964b-4567-87f7-078f7b3f0a8a",
      "documentation": "Subscribe plans",
      "method": "post",
      "endpoint": "accounts/:accountId/plans",
      "responses": [
        {
          "uuid": "1b28a17c-a365-4e34-8b66-8864d696cfdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOne zuora account only can have one active billing subscription.<br>\nCan’t subscribe 25-participants pro plan for this sub-account.<br>\nCan’t subscribe 50-participants pro plan for this sub-account.<br>\nIn order to take advantage of your account’s special pricing, please add Pro host licenses instead and they will be assigned to your Zoom Rooms automatically.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e83a41cd-fb85-4262-a95a-c07a63fe5179",
          "body": "{\n  \"plan_audio\": {\n    \"callout_countries\": \"\",\n    \"ddi_numbers\": {{faker 'datatype.number'}},\n    \"premium_countries\": \"\",\n    \"tollfree_countries\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_base\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"type\": \"\"\n  },\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"plan_phone\": {\n    \"plan_base\": {\n      \"callout_countries\": \"\",\n      \"type\": \"\"\n    },\n    \"plan_calling\": [\n      {\n        \"hosts\": {{faker 'datatype.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"plan_number\": [\n      {\n        \"hosts\": {{faker 'datatype.number'}},\n        \"type\": \"\"\n      }\n    ]\n  },\n  \"plan_recording\": \"\",\n  \"plan_room_connector\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"type\": \"\"\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"plan_zoom_rooms\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:**`201`<br>\nAccount plans updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d92de91b-de2a-4dc4-b1a4-e0b52119793a",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than buy hosts.<br>\nBuy hosts/active hosts must be equal or larger than {MinActiveHost}.<br>\nThis bundle plan doesn’t support active host.<br>\nInvalid free trial end date time.<br>\nInvalid free trial start/end time.<br>\nToo long trial duration.\n\t",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d8e3af6-b611-4ec1-8105-bc86ade3e4c2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> Invalid parameter: first_name<br>\nInvalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address\nInvalid parameter: city<br>Invalid parameter: phone_number<br>Invalid parameter: state<br>Invalid parameter: zip<br>Invalid country parameter: {country}<br>Invalid state parameter: {state}<br>Invalid field: plan_bundle<br>Can’t subscribe to base plan and bundle plan at the same time.<br>Cannot add plan for a sub account which is paid by self.<br>Cannot enable free trial again for sub account.<br>You cannot add a sub account because your master account owner prevented you from adding one.<br>\nCannot add plan for Sub account which is not free plan.<br>Error getting bundle.<br>Cannot process account.<br>Invalid host number.<br>Account doesn’t have the permission to purchase this plan.<br>There was a conflict in processing this request. Zoom Room plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Room Connector plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Large meeting plan {planCode} is already included in bundle plan.<br>There was a conflict in processing this request. Webinar plan {planCode} is already included in the bundle plan.<br>Recording plan {planCode} conflict with bundle plan.<br>Invalid Cloud Recording Plan: {plan_recording}\nAudio conferencing plan {planCode} conflict with bundle plan.<br>Invalid Audio Conferencing Plan: {planCode}<br>At least one option from among the Toll-free, Premium and Call-out must be provided.<br>Failed to add zuora plans<br>Invalid Base Plan: {subAccountId}<br>Master accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01fe8498-f0ff-4f01-8b29-bb8b315e1861",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User does not exist.<br> \n**Error Code:** `2001`<br> Account does not exist: {subAccountId}.<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e465a6e-ae2c-4296-ba1c-0af162dfbb3c",
      "documentation": "Subscribe additional plan",
      "method": "post",
      "endpoint": "accounts/:accountId/plans/addons",
      "responses": [
        {
          "uuid": "81aee3e2-86e1-4018-8239-470c2594b685",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Account plans updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e0536394-d986-4220-9978-b189a2e97a12",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot update Additional plan for a sub account under free plan.<br>\nAdditional Zoom Rooms plan cannot be added to a sub account that already has a Zoom Rooms base plan.<br>\nThis sub account already has the additional plan: {planCode}.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46bf247d-f706-4879-9bd7-d2432cb05edc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> \nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1e78e0c-f010-4569-af56-8d8cb4883fdb",
      "documentation": "Update an additional plan",
      "method": "put",
      "endpoint": "accounts/:accountId/plans/addons",
      "responses": [
        {
          "uuid": "d2d68306-c917-413a-a288-40ba394df44c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nFree trial and VIP accounts can't update sub plans.<br>\nYou don’t have subscription for ({oldPlanCode}) yet.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1b66120a-1748-4b35-bee5-ab8289d05cf8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nAdditional plan updated for the account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c8d2e7e-331b-45a1-b838-bea1516957d5",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d51c0c3-e20f-46de-9448-1b55ef459192",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`\n<br>This sub account is on self pay mode.\n<br>Invalid Additional Plan Type: {newPlanCode}.\n<br>Cannot update Additional plan for a sub account under free plan.\n<br>Invalid plan type.\n<br>Account can’t buy this product.\n<br>Can not subscribe/update additional Audio Conferencing Pay As You Go Plan for a sub account whose base plan is not Business/Education plan.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.<br>\n**Error Code:** `3261`<br>\nFailed to change sub plan of account:{accountId}.<br>\nMust subscribe to a major plan first.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa1a25fd-0b70-47c2-963b-dcaf0dc05eee",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\n**Error Code:** `3200`<br>\nCannot find Zuora subscription for account:{subAccountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1599e4d4-31d3-4bc7-b071-798061c625cf",
      "documentation": "Cancel additional plans",
      "method": "patch",
      "endpoint": "accounts/:accountId/plans/addons/status",
      "responses": [
        {
          "uuid": "6c3cdca9-eace-4311-9c8b-0463789fb084",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nYou cannot cancel plan for a sub account that is under a free plan.<br>\nYou cannot perform this action because you do not have a Zoom Phone subscription for this account.<br>\nFree trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>\nYou don't have a plan subscription for ({planCode}) yet..",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4916c6b8-b9d5-43c6-839b-814205b60b6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6826669a-928c-4590-b626-311c1a5224b2",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nPlan type is required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d24f326b-e479-428b-9dac-66b4b53cb93b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> \n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8641fa60-5071-4051-a194-b11fac007fbf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b09e765-ffbe-46e3-bccb-5b80cacd5d90",
      "documentation": "Update a base plan",
      "method": "put",
      "endpoint": "accounts/:accountId/plans/base",
      "responses": [
        {
          "uuid": "e63aff0d-5af0-4b91-9fde-b496b122429a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`\nFree trial and VIP account can't update sub plan.<br>\nYou do not have a subscription yet.<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1080a74-c3bd-4c7b-b075-99ea0faf8bc6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTPS Status Code:** `204`<br>\nBase plan updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1002eeee-9bc2-42a3-961b-b4f858c1a2c6",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nInsufficient number of hosts for business plan type.<br>\nInsufficient number of hosts for education plan type.<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "414ead25-2f5a-46a2-8a91-5fc2fdd3499e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot makes updates when account is subscribed to a bundle plan.<br>\nThis account is not under a free trial plan.<br>\nThe account currently has {0} paid users, you should change the user type to basic and reduce the number of paid users before performing this action.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a3794ca-f0a1-4e6e-bd41-bee5f60aeb1e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f7be53c-1c24-49a2-8b72-a27889a1698e",
      "documentation": "Cancel a base plan",
      "method": "patch",
      "endpoint": "accounts/:accountId/plans/base/status",
      "responses": [
        {
          "uuid": "ed564238-8644-4e04-a7a8-54aa9de42489",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nCannot cancel plan for a sub account which is under free plan.<br>\nYou don’t have a major subscription yet.<br>\nYou should first cancel all additional subscriptions.<br>\nFree trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>\nYou don't have a plan subscription for ({planCode}) yet.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b64c1771-be27-4333-9711-a663f0f93e47",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ec03891-d0b9-42b0-897c-71ccfee9cb34",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87891bb1-3e01-4d6c-b75e-f1f7d7af4ef7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>User does not exist. <br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to this master account.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d5dee64-3e66-4629-8a32-1838e4f68d9b",
      "documentation": "Get plan usage",
      "method": "get",
      "endpoint": "accounts/:accountId/plans/usage",
      "responses": [
        {
          "uuid": "9c2eaf32-6faf-4d10-93a1-08426e45a614",
          "body": "{\n  \"plan_base\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"plan_recording\": {\n    \"free_storage\": \"\",\n    \"free_storage_usage\": \"\",\n    \"plan_storage\": \"\",\n    \"plan_storage_exceed\": \"\",\n    \"plan_storage_usage\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_united\": {\n    \"hosts\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"type\": \"\",\n    \"usage\": {{faker 'datatype.number'}}\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"plan_zoom_rooms\": [\n    {\n      \"hosts\": {{faker 'datatype.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nPlan Usage returned.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23ed2754-8658-49c6-b1dd-be8b859fcade",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `200` <br>\nOnly available for paid account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "109a9c18-6fc3-4813-9916-22547b14c9b1",
      "documentation": "List recordings of an account",
      "method": "get",
      "endpoint": "accounts/:accountId/recordings",
      "responses": [
        {
          "uuid": "46dc6cb2-87ef-4c05-bf7e-ec2b7e7cff66",
          "body": "{\n  \"from\": \"{{faker 'date.recent' 365}}\",\n  \"meetings\": [\n    {\n      \"duration\": {{faker 'datatype.number'}},\n      \"host_id\": \"\",\n      \"id\": \"\",\n      \"recording_count\": {{faker 'datatype.number'}},\n      \"recording_files\": [\n        {\n          \"download_url\": \"\",\n          \"file_size\": {{faker 'datatype.number'}},\n          \"file_type\": \"{{oneOf (array 'MP4' 'M4A' 'CHAT' 'TRANSCRIPT' 'CC' 'CSV' 'TB')}}\",\n          \"id\": \"\",\n          \"meeting_id\": \"\",\n          \"play_url\": \"\",\n          \"recording_end\": \"\",\n          \"recording_start\": \"\",\n          \"recording_type\": \"{{oneOf (array 'shared_screen_with_speaker_view(CC)' 'shared_screen_with_speaker_view' 'shared_screen_with_gallery_view' 'active_speaker' 'gallery_view' 'shared_screen' 'audio_only' 'audio_transcript' 'chat_file' 'poll' 'host_video' 'closed_caption' 'timeline' 'thumbnail')}}\",\n          \"status\": \"{{oneOf (array 'completed' 'processing')}}\"\n        }\n      ],\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"topic\": \"\",\n      \"total_size\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"{{faker 'date.recent' 365}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Response Error Code:** `200` <br>\nOnly available for Paid account.\n\n**HTTP Status Code:** `200` <br>\nRecording(s) listed successfully.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2c74c69-b0b9-428c-aa12-e5f9539b771a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `400` <br>\nAccount not found.\n\n**Response Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4183e7ec-3ba7-447c-a4e9-481d44145253",
      "documentation": "Get settings",
      "method": "get",
      "endpoint": "accounts/:accountId/settings",
      "responses": [
        {
          "uuid": "7f3656b2-94d2-424c-913d-86cc130f9efc",
          "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'datatype.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_avaliable_reminder\": {{faker 'datatype.boolean'}},\n    \"jbh_reminder\": {{faker 'datatype.boolean'}},\n    \"low_host_count_reminder\": {{faker 'datatype.boolean'}},\n    \"schedule_for_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"feature\": {\n    \"meeting_capacity\": {{faker 'datatype.number'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'datatype.boolean'}},\n    \"allow_live_streaming\": {{faker 'datatype.boolean'}},\n    \"allow_participants_to_rename\": {{faker 'datatype.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'datatype.boolean'}},\n    \"annotation\": {{faker 'datatype.boolean'}},\n    \"anonymous_question_answer\": {{faker 'datatype.boolean'}},\n    \"attendee_on_hold\": {{faker 'datatype.boolean'}},\n    \"auto_answer\": {{faker 'datatype.boolean'}},\n    \"auto_saving_chat\": {{faker 'datatype.boolean'}},\n    \"breakout_room\": {{faker 'datatype.boolean'}},\n    \"chat\": {{faker 'datatype.boolean'}},\n    \"closed_caption\": {{faker 'datatype.boolean'}},\n    \"co_host\": {{faker 'datatype.boolean'}},\n    \"custom_data_center_regions\": {{faker 'datatype.boolean'}},\n    \"custom_live_streaming_service\": {{faker 'datatype.boolean'}},\n    \"custom_service_instructions\": \"\",\n    \"data_center_regions\": \"{{oneOf (array 'EU' 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA')}}\",\n    \"dscp_audio\": {{faker 'datatype.number'}},\n    \"dscp_marking\": {{faker 'datatype.boolean'}},\n    \"dscp_video\": {{faker 'datatype.number'}},\n    \"e2e_encryption\": {{faker 'datatype.boolean'}},\n    \"entry_exit_chime\": \"{{oneOf (array 'host' 'all' 'none')}}\",\n    \"far_end_camera_control\": {{faker 'datatype.boolean'}},\n    \"feedback\": {{faker 'datatype.boolean'}},\n    \"file_transfer\": {{faker 'datatype.boolean'}},\n    \"group_hd\": {{faker 'datatype.boolean'}},\n    \"meeting_reactions\": {{faker 'datatype.boolean'}},\n    \"original_audio\": {{faker 'datatype.boolean'}},\n    \"p2p_connetion\": {{faker 'datatype.boolean'}},\n    \"p2p_ports\": {{faker 'datatype.boolean'}},\n    \"polling\": {{faker 'datatype.boolean'}},\n    \"ports_range\": \"\",\n    \"post_meeting_feedback\": {{faker 'datatype.boolean'}},\n    \"private_chat\": {{faker 'datatype.boolean'}},\n    \"record_play_own_voice\": {{faker 'datatype.boolean'}},\n    \"remote_control\": {{faker 'datatype.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'datatype.boolean'}},\n    \"screen_sharing\": {{faker 'datatype.boolean'}},\n    \"sending_default_email_invites\": {{faker 'datatype.boolean'}},\n    \"show_a_join_from_your_browser_link\": {{faker 'datatype.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'datatype.boolean'}},\n    \"stereo_audio\": {{faker 'datatype.boolean'}},\n    \"use_html_format_email\": {{faker 'datatype.boolean'}},\n    \"virtual_background\": {{faker 'datatype.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'datatype.boolean'}},\n      \"allow_videos\": {{faker 'datatype.boolean'}},\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'datatype.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"watermark\": {{faker 'datatype.boolean'}},\n    \"webinar_question_answer\": {{faker 'datatype.boolean'}},\n    \"whiteboard\": {{faker 'datatype.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\",\n    \"workplace_by_facebook\": {{faker 'datatype.boolean'}}\n  },\n  \"integration\": {\n    \"box\": {{faker 'datatype.boolean'}},\n    \"dropbox\": {{faker 'datatype.boolean'}},\n    \"google_calendar\": {{faker 'datatype.boolean'}},\n    \"google_drive\": {{faker 'datatype.boolean'}},\n    \"kubi\": {{faker 'datatype.boolean'}},\n    \"microsoft_one_drive\": {{faker 'datatype.boolean'}}\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'datatype.boolean'}},\n    \"allow_recovery_deleted_cloud_recordings\": {{faker 'datatype.boolean'}},\n    \"archive\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"settings\": {\n        \"audio_file\": {{faker 'datatype.boolean'}},\n        \"cc_transcript_file\": {{faker 'datatype.boolean'}},\n        \"chat_file\": {{faker 'datatype.boolean'}},\n        \"chat_with_sender_email\": {{faker 'datatype.boolean'}},\n        \"video_file\": {{faker 'datatype.boolean'}}\n      },\n      \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n    },\n    \"auto_delete_cmr\": {{faker 'datatype.boolean'}},\n    \"auto_delete_cmr_days\": {{faker 'datatype.number'}},\n    \"auto_recording\": \"{{oneOf (array 'local' 'cloud' 'none')}}\",\n    \"cloud_recording\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download_host\": {{faker 'datatype.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'datatype.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'datatype.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'datatype.boolean'}},\n    \"record_audio_file\": {{faker 'datatype.boolean'}},\n    \"record_gallery_view\": {{faker 'datatype.boolean'}},\n    \"record_speaker_view\": {{faker 'datatype.boolean'}},\n    \"recording_audio_transcript\": {{faker 'datatype.boolean'}},\n    \"recording_disclaimer\": {{faker 'datatype.boolean'}},\n    \"recording_password_requirement\": {\n      \"have_letter\": {{faker 'datatype.boolean'}},\n      \"have_number\": {{faker 'datatype.boolean'}},\n      \"have_special_character\": {{faker 'datatype.boolean'}},\n      \"length\": {{faker 'datatype.number'}},\n      \"only_allow_numeric\": {{faker 'datatype.boolean'}}\n    },\n    \"required_password_for_existing_cloud_recordings\": {{faker 'datatype.boolean'}},\n    \"save_chat_text\": {{faker 'datatype.boolean'}},\n    \"show_timestamp\": {{faker 'datatype.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"{{oneOf (array 'both' 'telephony' 'voip' 'thirdParty')}}\",\n    \"enforce_login\": {{faker 'datatype.boolean'}},\n    \"enforce_login_domains\": \"\",\n    \"enforce_login_with_domains\": {{faker 'datatype.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'datatype.boolean'}},\n    \"host_video\": {{faker 'datatype.boolean'}},\n    \"join_before_host\": {{faker 'datatype.boolean'}},\n    \"meeting_password_requirement\": {\n      \"consecutive_characters_length\": \"{{oneOf (array '0' '4' '5' '6' '7' '8')}}\",\n      \"have_letter\": {{faker 'datatype.boolean'}},\n      \"have_number\": {{faker 'datatype.boolean'}},\n      \"have_special_character\": {{faker 'datatype.boolean'}},\n      \"have_upper_and_lower_characters\": {{faker 'datatype.boolean'}},\n      \"length\": {{faker 'datatype.number'}},\n      \"only_allow_numeric\": {{faker 'datatype.boolean'}},\n      \"weak_enhance_detection\": {{faker 'datatype.boolean'}}\n    },\n    \"not_store_meeting_topic\": {{faker 'datatype.boolean'}},\n    \"participant_video\": {{faker 'datatype.boolean'}},\n    \"personal_meeting\": {{faker 'datatype.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'jbh_only' 'all' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_scheduled_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"security\": {\n    \"admin_change_name_pic\": {{faker 'datatype.boolean'}},\n    \"hide_billing_info\": {{faker 'datatype.boolean'}},\n    \"import_photos_from_devices\": {{faker 'datatype.boolean'}},\n    \"password_requirement\": {\n      \"consecutive_characters_length\": {{faker 'datatype.number'}},\n      \"have_special_character\": {{faker 'datatype.boolean'}},\n      \"minimum_password_length\": {{faker 'datatype.number'}},\n      \"weak_enhance_detection\": {{faker 'datatype.boolean'}}\n    },\n    \"sign_again_period_for_inactivity_on_client\": {{faker 'datatype.number'}},\n    \"sign_again_period_for_inactivity_on_web\": {{faker 'datatype.number'}},\n    \"sign_in_with_two_factor_auth\": \"{{oneOf (array 'all' 'group' 'role' 'none')}}\",\n    \"sign_in_with_two_factor_auth_groups\": [\n      \"\"\n    ],\n    \"sign_in_with_two_factor_auth_roles\": [\n      \"\"\n    ]\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"telephony_regions\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'datatype.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'datatype.boolean'}},\n    \"call_out_countries\": [\n      \"\"\n    ],\n    \"display_toll_free_numbers\": {{faker 'datatype.boolean'}},\n    \"show_international_numbers_link\": {{faker 'datatype.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"auto_start_stop_scheduled_meetings\": {{faker 'datatype.boolean'}},\n    \"cmr_for_instant_meeting\": {{faker 'datatype.boolean'}},\n    \"force_private_meeting\": {{faker 'datatype.boolean'}},\n    \"hide_host_information\": {{faker 'datatype.boolean'}},\n    \"list_meetings_with_calendar\": {{faker 'datatype.boolean'}},\n    \"start_airplay_manually\": {{faker 'datatype.boolean'}},\n    \"ultrasonic\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'datatype.boolean'}},\n    \"weekly_system_restart\": {{faker 'datatype.boolean'}},\n    \"zr_post_meeting_feedback\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br> Account settings returned. \n**Error Code:** `200`<br>\nOnly available for Paid account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "77320ac8-c4fb-4130-9075-5cb482975ea7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd63db74-cd38-432d-94ba-c626c2283824",
      "documentation": "Update settings",
      "method": "patch",
      "endpoint": "accounts/:accountId/settings",
      "responses": [
        {
          "uuid": "540e9b94-2431-480e-9188-6bd47ddadf85",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br> Only available for Paid account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f4a2a6b0-b78c-4a87-bb87-80e1cbadc39b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>Account settings updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3d5ab7c-7641-472e-abd1-ff8e2badaf37",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>The domains provided are invalid. If you are providing multiple domains, separate each domain with a comma.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb79afa3-0d3f-4b30-a671-c4c1e84c8889",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>Account does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "327d93f3-684c-4d0d-839d-57d98d3d9cc6",
      "documentation": "Delete virtual background files",
      "method": "delete",
      "endpoint": "accounts/:accountId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "3e21a60d-993b-4024-bcc2-784b23f72930",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cff80bb0-8f7d-49b7-9e85-d5d56f820f32",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26ed8058-6648-4856-b7d8-38cf8d0607d5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9a2c486-2c5e-4707-bf32-648ff293af4d",
      "documentation": "Upload virtual background files",
      "method": "post",
      "endpoint": "accounts/:accountId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "6989cfad-ce13-4eb2-b063-ad913807de0d",
          "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15f06220-bcbe-4448-830d-49a032a27d14",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file can be uploaded.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ac62299-8d17-49f0-ad44-a9b94f1e3260",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1bb58c2-89d1-4e96-876e-d76937db620c",
      "documentation": "List internal call-out countries",
      "method": "get",
      "endpoint": "accounts/:accountId/sip_trunk/callout_countries",
      "responses": [
        {
          "uuid": "26be2553-d4e4-4212-836c-7d7de8a90ef6",
          "body": "{\n  \"callout_countries\": [\n    {\n      \"code\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>\nList of Internal Callout Countries returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6f0b82dc-02d7-4dae-be1c-6f75471dd088",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d73bb13-1162-442c-8659-4ee433551705",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82d8e923-3360-4d53-8ded-745dafe1e462",
      "documentation": "Add internal call-out countries",
      "method": "post",
      "endpoint": "accounts/:accountId/sip_trunk/callout_countries",
      "responses": [
        {
          "uuid": "ff6c532c-86a9-4873-9b4c-3ffa62b224ad",
          "body": "{\n  \"callout_countries\": [\n    {\n      \"code\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\nCall-out countries created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "66615aac-9a06-4e8d-8cb5-6f40b24799b5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n*  Invalid parameter: callout_countries.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc3eaf51-55c2-46d4-8ccd-7d120017cc9f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "366b4ee4-16c4-4e4c-8a85-3e860adb002d",
      "documentation": "Delete internal call-out country",
      "method": "delete",
      "endpoint": "accounts/:accountId/sip_trunk/callout_countries/:countryId",
      "responses": [
        {
          "uuid": "37d1e05f-c88c-4795-b771-ecec1aa900d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nCountry deleted. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba6ee0bb-72bf-4717-a121-095cba0e17a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce3187f0-8dff-4f50-844a-683e48d443bd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d905a25b-51dd-44dd-9812-b1fe166d2c3a",
      "documentation": "List internal numbers",
      "method": "get",
      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers",
      "responses": [
        {
          "uuid": "215b917c-57b5-49f0-b95c-0f148946ffb3",
          "body": "{\n  \"internal_numbers\": [\n    {\n      \"allow_for_external_meetings\": {{faker 'datatype.boolean'}},\n      \"allow_join\": {{faker 'datatype.boolean'}},\n      \"country\": \"\",\n      \"display_number\": \"\",\n      \"labels\": \"\",\n      \"languages\": \"{{oneOf (array 'en-GB' 'en-US' 'de-DE')}}\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array '0' '1')}}\",\n      \"visible\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nList of internal numbers returned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca0f0822-8a1c-469c-bf14-c2027a9abadb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "522d2ff3-c200-43ab-a505-31fad7e2a3a4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "21daaaaf-653b-402c-a390-f2662c8b36fa",
      "documentation": "Add internal numbers",
      "method": "post",
      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers",
      "responses": [
        {
          "uuid": "8ca3dbfa-0159-4134-8978-b0528141ed9a",
          "body": "{\n  \"internal_numbers\": [\n    {\n      \"allow_for_external_meetings\": {{faker 'datatype.boolean'}},\n      \"allow_join\": {{faker 'datatype.boolean'}},\n      \"country\": \"\",\n      \"display_number\": \"\",\n      \"id\": \"\",\n      \"labels\": \"\",\n      \"languages\": \"{{oneOf (array 'en-GB' 'en-US' 'de-DE')}}\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array '0' '1')}}\",\n      \"visible\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\nInternal numbers added successfully. \n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "734d9eae-bf77-4d98-8368-6cfdba68211d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n* You can only assign a maximum of {0} phone numbers to this account.\n* The value you provided for the ‘number’ field has already been used. Please provide a unique value for this field.\n* Invalid parameter: internal_numbers.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f25e3565-9fd9-4553-9fb6-923d844b20aa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd6f1ef9-3a3b-453a-80db-05965d4b75cb",
      "documentation": "Delete an internal number",
      "method": "delete",
      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers/:numberId",
      "responses": [
        {
          "uuid": "e41525c9-a910-41fd-98da-6f0065d5c371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nNumber deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f95f3e7d-1b7c-47ad-8d94-c6caf9f8e1ff",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d32b2772-8b29-4efc-8a08-7ee110f498a1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22eb2b55-0eb5-4af8-883a-bc9955bd93cd",
      "documentation": "Delete all numbers",
      "method": "delete",
      "endpoint": "accounts/:accountId/sip_trunk/numbers",
      "responses": [
        {
          "uuid": "b51320ce-76c0-417d-a829-b6a7b4e07e5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nNumbers deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdbbee61-0d43-4981-af71-e119e9a07c99",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b262cedb-b827-430f-ae98-192312549a84",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.<br><br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4af20537-6d2c-4647-84f3-d68857a9a08e",
      "documentation": "Assign numbers",
      "method": "post",
      "endpoint": "accounts/:accountId/sip_trunk/numbers",
      "responses": [
        {
          "uuid": "322a4216-e3ff-44e2-8e78-c3849b339671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nNumbers assigned successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "078ae2c8-8319-41e2-9275-aa26540855d2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.<br><br>\n**Error Code:** `400`<br>\nThis number does not belong to master account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d69950f-4d15-4f7a-ace1-e03d498666c5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa63b1d6-e900-4563-a556-297d5d3c792e",
      "documentation": "Assign SIP trunk configuration",
      "method": "patch",
      "endpoint": "accounts/:accountId/sip_trunk/settings",
      "responses": [
        {
          "uuid": "266dae5d-c4c0-4dcb-b468-21e54aeb05e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nConfiguration assigned successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1e36cac-ae08-4d45-9991-401217c0b855",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc5f02dc-cc6f-4328-9463-9d7563934d8a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cb1eae6-97a0-417c-922e-a76122f845e7",
      "documentation": "List SIP trunks",
      "method": "get",
      "endpoint": "accounts/:accountId/sip_trunk/trunks",
      "responses": [
        {
          "uuid": "7af24089-b7f5-4556-953b-dc0ca11d67b5",
          "body": "{\n  \"sip_trunks\": [\n    {\n      \"dnis\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"number_prefix\": \"\",\n      \"outbound_caller_id\": \"\",\n      \"sip_server_address\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nList of SIP Trunks returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cf3f418-0e01-4232-84a4-fd411957a5c3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> Request failed because this account is not enrolled in SIP Connected Audio plan.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "884ac32f-e2cb-4032-b413-ab26d4321b98",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62232cb1-9113-4c54-86ba-72d035061b58",
      "documentation": "Assign SIP trunks",
      "method": "post",
      "endpoint": "accounts/:accountId/sip_trunk/trunks",
      "responses": [
        {
          "uuid": "3b384798-2353-4735-833e-5445cb35e8fd",
          "body": "{\n  \"sip_trunks\": [\n    {\n      \"dnis\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"number_prefix\": \"\",\n      \"sip_server_address\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk assigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6a9a6880-1622-4088-9975-3a6c42306887",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* The master account has no sip trunk configs.<br>\n* Invalid parameter: sip_trunks.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8f467fb-7d1c-4f62-b299-1054ecd37d5b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8943112-0e1b-4d62-8c6f-9ec26e53c95d",
      "documentation": "Delete a SIP trunk",
      "method": "delete",
      "endpoint": "accounts/:accountId/sip_trunk/trunks/:trunkId",
      "responses": [
        {
          "uuid": "03703234-f1b1-4502-b162-944ecffffc37",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "245c9e5b-a1ce-49ed-a7f3-15ee1f8f2dc8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0482b0d-d891-4d8f-a601-d1c38a9d9180",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f21a5181-f2c5-430a-8224-53458478ecde",
      "documentation": "Get trusted domains",
      "method": "get",
      "endpoint": "accounts/:accountId/trusted_domains",
      "responses": [
        {
          "uuid": "5f9d81da-fa28-4de4-a88a-4f07b6f43f39",
          "body": "{\n  \"trusted_domains\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount trusted domains returned<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0dd68ae7-7276-44b2-93b1-4679bdaa3591",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f185ee1-26a5-4d24-8a8a-9773aba2ae40",
      "documentation": "Switch a user's account",
      "method": "put",
      "endpoint": "accounts/:accountId/users/:userId/account",
      "responses": [
        {
          "uuid": "ffe657d4-78ab-42d9-bcca-3d7cf7f6c4b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code**: `204`<br>\nUser's account switched successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad7ee38a-762c-4c00-bb13-1d0d1815e573",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code**: `400` **Bad Request**<br>\n**Error Code:** `1117`<br> Can not disassociate Admin user",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f6ee6ac-9ec6-4616-82c3-aa10d25ec723",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist\n\t\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4ea508d-0b50-4fbf-898f-d29a8fab4321",
      "documentation": "Download an invoice file",
      "method": "get",
      "endpoint": "api/download/billing/invoices/:invoiceId",
      "responses": [
        {
          "uuid": "4b22411e-4657-45a2-af8c-140d2eafb4af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice PDF returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "326a75a7-77e2-440d-9fc9-f166975e512a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d187f246-f9f8-479b-97e7-1daedab7f8fb",
      "documentation": "List archived files",
      "method": "get",
      "endpoint": "archive_files",
      "responses": [
        {
          "uuid": "1bed99c4-27f0-4023-9900-c4c70784dc84",
          "body": "{\n  \"from\": \"\",\n  \"meetings\": [\n    {\n      \"archive_files\": [\n        {\n          \"download_url\": \"\",\n          \"file_extension\": \"\",\n          \"file_size\": {{faker 'datatype.number'}},\n          \"file_type\": \"\",\n          \"id\": \"\",\n          \"recording_type\": \"\",\n          \"status\": \"\"\n        }\n      ],\n      \"duration\": {{faker 'datatype.number'}},\n      \"host_id\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"recording_count\": {{faker 'datatype.number'}},\n      \"start_time\": \"\",\n      \"timezone\": \"\",\n      \"topic\": \"\",\n      \"total_size\": {{faker 'datatype.number'}},\n      \"type\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**\nArchived files returned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4f906bc9-2b01-41ae-ad80-26c85e7b55f9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request**<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1be3e5b-fcc2-4a30-a17e-be3d8b57ec99",
      "documentation": "Delete a channel",
      "method": "delete",
      "endpoint": "chat/channels/:channelId",
      "responses": [
        {
          "uuid": "b82e1baf-e653-45c3-ac28-f30ad638d434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nChannel deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a287ecce-bf4f-45ba-a0cd-0efda9c066d0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to delete this user's channel.<br>\n**Error Code:** `5301`<br> Request to delete a channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f80fd2c2-49e7-4771-b611-e330199b1c8c",
      "documentation": "Get a channel",
      "method": "get",
      "endpoint": "chat/channels/:channelId",
      "responses": [
        {
          "uuid": "84615f17-c5b5-41de-ba9f-927320d84511",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nChannel returned.<br>\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae6687c2-01ad-4752-bea5-0800f7ba05af",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to access this user's channel information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "432d9be3-0286-4780-82ff-f7bc8f2e74a8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nChannel does not exist: $channelId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aea371c4-d3a6-4f07-aea5-b0b2e6328fe6",
      "documentation": "Update a channel",
      "method": "patch",
      "endpoint": "chat/channels/:channelId",
      "responses": [
        {
          "uuid": "9e81bf56-2b2b-4137-b9c1-bcc4c922b4d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204`\nChannel updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23fd8e40-b2b0-40c5-949e-7885d3b33bd7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to update a channel for this user.<br>\n**Error Code:** `5301`<br>\nRequest to update a channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b1a00ec-dbb8-4cf0-a664-8a38de66642a",
      "documentation": "Leave a channel",
      "method": "delete",
      "endpoint": "chat/channels/:channelId/members/me",
      "responses": [
        {
          "uuid": "70c8d4be-2c1b-49f1-a5b7-1f7d70f2915b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nLeft channel successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0d94f26-161e-494f-9e1b-6ed35c5b2599",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad Request.<br>\n**Error Code:** `5301`<br> Request to leave the channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22387576-5c65-4c05-ba2b-40b7e3fae962",
      "documentation": "Join a channel",
      "method": "post",
      "endpoint": "chat/channels/:channelId/members/me",
      "responses": [
        {
          "uuid": "9f536a60-156a-4dd9-882b-940ecb0926f1",
          "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`\nSuccessfully joined the channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72237ff1-7ccb-4e2d-91c1-f3d1c846ac0a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `5301`<br> Request to join the channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6a95a63-d46c-4e7d-ae48-5bb518676e0c",
      "documentation": "Remove a member",
      "method": "delete",
      "endpoint": "chat/channels/:channelId/members/:memberId",
      "responses": [
        {
          "uuid": "4c193f49-edc5-4a0d-a6a5-657abb475a09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember removed.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "089ffd93-f7f7-4726-bd6d-9f5c2efc96de",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to remove channel members on this user's behalf.<br>\n**Error Code:** `5301`<br>\nUnable to remove channel member.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd5a2bf6-0fff-4cb9-bfdd-990b019f3d1b",
      "documentation": "List user's contacts",
      "method": "get",
      "endpoint": "chat/users/me/contacts",
      "responses": [
        {
          "uuid": "3a685e20-ca74-42e3-98ba-a967236e4f98",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>List of user's contacts returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ea2fe3b-9cc5-424f-83f4-261773118ba6",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nThe next page token is invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c40c7c9-963e-4233-b50f-1180ce0bf096",
      "documentation": "Get user's contact details",
      "method": "get",
      "endpoint": "chat/users/me/contacts/:contactId",
      "responses": [
        {
          "uuid": "ca183be3-4ea4-41b3-abb2-0014a32157e3",
          "body": "{\n  \"direct_numbers\": [\n    \"\"\n  ],\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"extension_number\": \"\",\n  \"first_name\": \"\",\n  \"id\": \"\",\n  \"last_name\": \"\",\n  \"phone_number\": \"\",\n  \"presence_status\": \"{{oneOf (array 'Do_Not_Disturb' 'Away' 'Available' 'Offline')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nContact information returned.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c82e5f29-b6be-4712-931d-6b17e54fbfdd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `5301`<br>\nRequest to get the presence status of the chat contact failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff0a5759-73c2-4521-aaeb-a5acf5ef2857",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $contactId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9736f6fc-8bd1-4b99-9954-4f0bdcb9faa2",
      "documentation": "List user's channels",
      "method": "get",
      "endpoint": "chat/users/:userId/channels",
      "responses": [
        {
          "uuid": "d7c34612-62b0-477a-845c-5dd5e0830637",
          "body": "{\n  \"channels\": [\n    {\n      \"channels_settings\": {\n        \"allow_to_add_external_users\": {{faker 'datatype.number'}},\n        \"new_members_can_see_previous_messages_files\": {{faker 'datatype.boolean'}},\n        \"posting_permissions\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Status Code**: `200` <br>\nUser's channels returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f98ea7f7-71f3-4fec-8cdf-22e6ec1a2abb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\nBad request.<br>\n**Error Code**: `300`<br>\nThe next page token is either invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e782e919-efc3-4c76-a77d-376f037a12fd",
      "documentation": "Create a channel",
      "method": "post",
      "endpoint": "chat/users/:userId/channels",
      "responses": [
        {
          "uuid": "12ab109d-3964-4f68-9471-0759bf9f8036",
          "body": "{\n  \"id\": \"\",\n  \"jid\": \"\",\n  \"name\": \"\",\n  \"type\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**Status Code**: `201` <br>\nChannel created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "308d39fe-7cc4-4b7c-ae04-743de5ebceb7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nNot found.<br>\n**Error Code**: `5301`<br>\nRequest to create a channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20ff71e2-9bfe-4cb1-9a9f-de184b299408",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $userId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15ca2900-92bb-41e0-bb18-fa8dd12bfddd",
      "documentation": "Delete a channel",
      "method": "delete",
      "endpoint": "chat/users/:userId/channels/:channelId",
      "responses": [
        {
          "uuid": "8d968af6-1174-4536-b35e-8d44af45321e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nChannel deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20d157c2-a96c-4227-bed0-2ada936e1d72",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to delete this user's channel.<br>\n**Error Code:** `5301`<br> Request to delete a channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc35b6bc-7a66-4fd1-a614-c368cefd1920",
      "documentation": "Get a channel",
      "method": "get",
      "endpoint": "chat/users/:userId/channels/:channelId",
      "responses": [
        {
          "uuid": "39a06604-b632-429d-a1a2-c3f5cb5aaffa",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nChannel returned.<br>\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64c7cdf3-2e72-492f-b199-c2ece3808cb6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to access this user's channel information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8dd7ab92-956d-4e60-a348-d63014146f21",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nChannel does not exist: $channelId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eea8002e-c45f-4af6-a957-096d9240cba6",
      "documentation": "Update a channel",
      "method": "patch",
      "endpoint": "chat/users/:userId/channels/:channelId",
      "responses": [
        {
          "uuid": "e9530668-d766-43c4-913c-856493b798f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204`\nChannel updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a4ce9f5-a50a-4377-a227-eaad36306662",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to update a channel for this user.<br>\n**Error Code:** `5301`<br>\nRequest to update a channel failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59f0eda4-0bdb-4e24-a074-dc552f6bf897",
      "documentation": "List channel members",
      "method": "get",
      "endpoint": "chat/users/:userId/channels/:channelId/members",
      "responses": [
        {
          "uuid": "49a58d67-65ce-46ee-8381-de9550053154",
          "body": "{\n  \"members\": [\n    {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"role\": \"{{oneOf (array 'admin' 'owner' 'member')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of channel members returned.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "854b5ec4-0b60-405c-9942-acef472dac6d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to view channel members on this user's behalf..<br>\n**Error Code:** `300`<br>\nThe next page token is either invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43bcaca3-7db0-4db6-942c-7b44c9afe13c",
      "documentation": "Invite channel members",
      "method": "post",
      "endpoint": "chat/users/:userId/channels/:channelId/members",
      "responses": [
        {
          "uuid": "12dfd96f-e464-4b2f-93f1-d4ae49335766",
          "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nMembers invited to the channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "30f7f6fb-9824-44d7-a14f-c44c28afc2b6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`<br>\nRequest to invite channel members failed.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to invite channel members on this user's behalf.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6fa42c85-eb30-4ae1-9a45-18923fb579c9",
      "documentation": "Remove a member",
      "method": "delete",
      "endpoint": "chat/users/:userId/channels/:channelId/members/:memberId",
      "responses": [
        {
          "uuid": "3b66f61f-1453-47d9-89be-a276e119917f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember removed.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "16b0464a-f42c-407e-8af0-4fb04891636b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to remove channel members on this user's behalf.<br>\n**Error Code:** `5301`<br>\nUnable to remove channel member.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8de590a5-90bb-4548-add0-04ad839bbcdf",
      "documentation": "List user's chat messages",
      "method": "get",
      "endpoint": "chat/users/:userId/messages",
      "responses": [
        {
          "uuid": "2b400d0f-1cb7-4fad-949d-e419e2221605",
          "body": "{\n  \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"messages\": [\n    {\n      \"date_time\": \"\",\n      \"id\": \"\",\n      \"message\": \"\",\n      \"reply_main_message_id\": \"\",\n      \"reply_main_message_timestamp\": {{faker 'datatype.number'}},\n      \"sender\": \"\",\n      \"status\": \"{{oneOf (array 'Deleted' 'Edited' 'Normal')}}\",\n      \"timestamp\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 10\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:**`200`<br>\nList of chat messages returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d31bb293-dedf-4f68-a87f-f528d332f0f0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>Unauthorized request. You do not have permission to access this user's chat messages.<br>\n**Error Code:** `300` <br>The next page token is invalid or expired.<br>\n**Error Code:** `300` <br>Must provide either contact or channel parameter.<br>\n**Error Code:** `300` <br>Only provide past chat messages in recent 6 months.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a52e8f4-f12b-480b-be0e-9031921b5ca6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c328113-ba20-4182-8c67-f4b5f3176ae1",
      "documentation": "Send a chat message",
      "method": "post",
      "endpoint": "chat/users/:userId/messages",
      "responses": [
        {
          "uuid": "9c1d3742-c775-4633-ad7c-65055a1fe31c",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**Status Code:** `201`<br>\nMessage sent.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7bd95c3-c587-434a-b026-bf207be96102",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`<br>\nMessage sending failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "789bd6c2-e78f-4e60-ba87-91b04244f836",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f35689d9-5b96-4818-9336-740e9295451f",
      "documentation": "Delete a message",
      "method": "delete",
      "endpoint": "chat/users/:userId/messages/:messageId",
      "responses": [
        {
          "uuid": "74d7dda4-f4f6-4a18-94c5-a3d7e9918c9c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMessage deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ea74b24-e76a-458d-897c-34996344ce46",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br>\nThe contact or the channel parameter provided is invalid.<br>\nOnly the sender of this message can make updates.<br>\n**Error Code:** `300`<br>Channel does not exist: $messageId<br>Must provide either contact or channel parameter.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f19b02e2-868a-4930-b4b2-75e97bb69d17",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cf3129d-d2d5-40b1-9606-90c1fe7381c8",
      "documentation": "Update a message",
      "method": "put",
      "endpoint": "chat/users/:userId/messages/:messageId",
      "responses": [
        {
          "uuid": "feeb83ab-d815-4d1b-a0f6-5bc6b7429f4a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMessage updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "657c3f88-a1f8-467d-b92f-b8103b397e0f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBar request<br>\n**Error Code:** `200`<br>\nOnly the sender of this message can make updates.<br>\n**Error Code:** `300`<br>\nMessage does not exist: $messageId <br> Must provide either contact or channel parameter.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cab11dac-a83b-4ad5-87b0-31d27cbb80f9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e17f6e1f-9532-4334-8180-a5313424b058",
      "documentation": "Search company contacts",
      "method": "get",
      "endpoint": "contacts",
      "responses": [
        {
          "uuid": "74211d0c-42a3-4758-ae24-74a58f63cd63",
          "body": "{\n  \"contacts\": [\n    {\n      \"dept\": \"\",\n      \"direct_numbers\": [\n        \"\"\n      ],\n      \"email\": \"\",\n      \"extension_number\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"im_group_id\": \"\",\n      \"im_group_name\": \"\",\n      \"job_title\": \"\",\n      \"last_name\": \"\",\n      \"location\": \"\",\n      \"phone_number\": \"\",\n      \"presence_status\": \"{{oneOf (array 'Do_Not_Disturb' 'Away' 'Available' 'Offline')}}\",\n      \"sip_phone_number\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nContact returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "49ee39c0-f0a2-488e-bc8f-3d6076341f14",
      "documentation": "List groups",
      "method": "get",
      "endpoint": "groups",
      "responses": [
        {
          "uuid": "1a773944-4282-480d-937d-4ae56daa39cd",
          "body": "{\n  \"groups\": [\n    {\n      \"id\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of groups returned.<br>\n**Error Code:** `200`\nOnly available for paid accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c28db8c-371e-4f79-8d85-054bf032b025",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2abdb8cf-bbf1-4d3f-bd00-c180dedb8082",
      "documentation": "Create a group",
      "method": "post",
      "endpoint": "groups",
      "responses": [
        {
          "uuid": "6f233d89-7ed5-452b-9e4f-3bebff2957ae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d449d8d-3bed-4aec-a404-eba2ded229e3",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"total_members\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nGroup created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2823560d-c1ae-4dda-9996-ddd1592d6ebc",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nMissing field: name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9612e74e-f5a7-4671-a9df-8d246d9af311",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>**Error Code:** `4130`<br>A group with this {groupId} does not exist.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1df54368-a58d-4ac4-b6ea-692eaee446da",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409`<br> **Error Code:** `4132`<br> Group name {groupName} is already in use.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f72ae03-8c22-40d0-bfe7-0db619e014ec",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "**HTTP Status Code:** `429`<br>\nYou have exceeded the daily rate limit ({0}) of Create a Group API request for this account. This limit resets at GMT 00:00:00.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8dafd993-0a62-4849-b2ae-5fc8956d38c0",
      "documentation": "Delete a group",
      "method": "delete",
      "endpoint": "groups/:groupId",
      "responses": [
        {
          "uuid": "f902df73-37f2-4281-87bd-525f8c234a24",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5369af5d-b789-44c8-802d-3905db39e640",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nGroup deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65c821ff-8cbb-45e2-8643-469b1433f937",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nGroup member not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1230c89d-c745-44e4-a037-86fbf25b2dcf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "afa010d8-3816-4e42-82b3-cd7083714eff",
      "documentation": "Get a group",
      "method": "get",
      "endpoint": "groups/:groupId",
      "responses": [
        {
          "uuid": "1c735569-a219-4e74-8f42-caab3abdde12",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"total_members\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br> Group returned.<br>\n**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4bb0771-f9fb-4cac-b10e-97cc0bd75d1d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nGroup does not belong to your account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5ea8f04-af30-4c0d-9394-b3a35b563669",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f367b4b9-c5b8-4c6c-ba35-581b0b097c21",
      "documentation": "Update a group",
      "method": "patch",
      "endpoint": "groups/:groupId",
      "responses": [
        {
          "uuid": "6c9ca854-44fa-45db-ade0-018d329ca4ac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The group does not belong to this account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05e2815f-d1c6-45d5-acaa-84321d084999",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Group updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2656ca8-ff62-4732-9da2-56a2e728596b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bce98754-5e68-45d6-a877-756a1090031b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**Status Code:** `409`<br>\nConflict<br>\n**Error Code:** `4132`<br>\nGroup name {groupName} is already in use.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47e54093-f093-4eb3-9310-03306379efc0",
      "documentation": "Get locked settings",
      "method": "get",
      "endpoint": "groups/:groupId/lock_settings",
      "responses": [
        {
          "uuid": "53c52f4f-c422-4e58-be95-f2cdea7f5366",
          "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'datatype.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'datatype.boolean'}},\n    \"jbh_reminder\": {{faker 'datatype.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'datatype.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'datatype.boolean'}},\n    \"annotation\": {{faker 'datatype.boolean'}},\n    \"attendee_on_hold\": {{faker 'datatype.boolean'}},\n    \"auto_answer\": {{faker 'datatype.boolean'}},\n    \"auto_saving_chat\": {{faker 'datatype.boolean'}},\n    \"breakout_room\": {{faker 'datatype.boolean'}},\n    \"chat\": {{faker 'datatype.boolean'}},\n    \"closed_caption\": {{faker 'datatype.boolean'}},\n    \"co_host\": {{faker 'datatype.boolean'}},\n    \"custom_data_center_regions\": {{faker 'datatype.boolean'}},\n    \"e2e_encryption\": {{faker 'datatype.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'datatype.boolean'}},\n    \"feedback\": {{faker 'datatype.boolean'}},\n    \"file_transfer\": {{faker 'datatype.boolean'}},\n    \"group_hd\": {{faker 'datatype.boolean'}},\n    \"non_verbal_feedback\": {{faker 'datatype.boolean'}},\n    \"original_audio\": {{faker 'datatype.boolean'}},\n    \"polling\": {{faker 'datatype.boolean'}},\n    \"post_meeting_feedback\": {{faker 'datatype.boolean'}},\n    \"private_chat\": {{faker 'datatype.boolean'}},\n    \"remote_control\": {{faker 'datatype.boolean'}},\n    \"remote_support\": {{faker 'datatype.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'datatype.boolean'}},\n    \"screen_sharing\": {{faker 'datatype.boolean'}},\n    \"sending_default_email_invites\": {{faker 'datatype.boolean'}},\n    \"show_browser_join_link\": {{faker 'datatype.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'datatype.boolean'}},\n    \"stereo_audio\": {{faker 'datatype.boolean'}},\n    \"use_html_format_email\": {{faker 'datatype.boolean'}},\n    \"virtual_background\": {{faker 'datatype.boolean'}},\n    \"waiting_room\": {{faker 'datatype.boolean'}},\n    \"whiteboard\": {{faker 'datatype.boolean'}}\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'datatype.boolean'}},\n    \"auto_delete_cmr\": {{faker 'datatype.boolean'}},\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download\": {{faker 'datatype.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'datatype.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'datatype.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'datatype.boolean'}},\n    \"recording_authentication\": {{faker 'datatype.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": {{faker 'datatype.boolean'}},\n    \"embed_password_in_join_link\": {{faker 'datatype.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'datatype.boolean'}},\n    \"host_video\": {{faker 'datatype.boolean'}},\n    \"join_before_host\": {{faker 'datatype.boolean'}},\n    \"meeting_authentication\": {{faker 'datatype.boolean'}},\n    \"mute_upon_entry\": {{faker 'datatype.boolean'}},\n    \"participant_video\": {{faker 'datatype.boolean'}},\n    \"pstn_password_protected\": {{faker 'datatype.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_pmi_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"telephony\": {\n    \"telephony_regions\": {{faker 'datatype.boolean'}},\n    \"third_party_audio\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nOnly available for paid account.\n\n**Status Code:** `200`<br>\nLocked settings of group returned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a3a7f05-2cb5-48a5-a984-14327248cdcf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "721210d4-3981-45de-b58a-3379ac889e08",
      "documentation": "Update locked settings",
      "method": "patch",
      "endpoint": "groups/:groupId/lock_settings",
      "responses": [
        {
          "uuid": "127fa84a-9b9a-4058-b1d6-4a006064656a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204`<br>\nGroup's locked settings updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19740eaa-b501-42a9-903f-ac5e4ed34d67",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nOnly available for paid account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52b10d23-82a7-4b7e-a0dd-1104cf7df260",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nThis group does not exist.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cbbbc05-a064-4db3-a8eb-f8cee1774f25",
      "documentation": "List group members ",
      "method": "get",
      "endpoint": "groups/:groupId/members",
      "responses": [
        {
          "uuid": "85a2b0ea-9f3b-4341-afb2-f473b4a2ac43",
          "body": "{\n  \"members\": [\n    {\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br> Only available for paid account,{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d67adad7-9879-488d-9338-13d1b9479d7f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a52053d-464c-4045-9d9e-899b40e5096e",
      "documentation": "Add group members",
      "method": "post",
      "endpoint": "groups/:groupId/members",
      "responses": [
        {
          "uuid": "070a4b30-3c92-4929-8a7a-47e02c8b0b93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Only available for paid account,{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61772d71-eaea-4839-a644-bd7a082cda5d",
          "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Member added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0ca0027-1268-4605-83bd-b2bbe6e26b73",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c96d852e-796a-41cd-8552-3a4ce74c2a91",
      "documentation": "Delete a group member",
      "method": "delete",
      "endpoint": "groups/:groupId/members/:memberId",
      "responses": [
        {
          "uuid": "9ee02649-84c8-433e-bfed-3f87a4acc90d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Only available for paid account,{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef895871-d17e-4952-99d5-ad1833434dd6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Group member deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b895fff8-68f4-430b-9851-2a43a7a9da4e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `1010`<br>\nGroup does not belong to this account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54858c15-0c5e-45ca-8d29-3ebde67e2eee",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffc021a6-5ebf-43f2-b338-d92727272bf4",
      "documentation": "Update a group member",
      "method": "patch",
      "endpoint": "groups/:groupId/members/:memberId",
      "responses": [
        {
          "uuid": "c05fc80e-7577-41f6-a60c-700685652835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nGroup member updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb19de5c-ef83-44ee-9f92-af64c78fc914",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\n Only available for Paid account, {accountId}.<br><br>\n **Error Code:** `300`<br>\n The target_group_id can not be empty.<br><br>\n **Error Code:** `1010`<br>\n Group does not belong to this account:{accountId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8059ed09-7695-40ec-8efc-f3aa3bf73f9a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7de0a74-e235-42b6-a92a-573b2986c486",
      "documentation": "Get a group's settings",
      "method": "get",
      "endpoint": "groups/:groupId/settings",
      "responses": [
        {
          "uuid": "c6e600aa-faea-48a9-83b3-29d37ee1c91b",
          "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'datatype.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'datatype.boolean'}},\n    \"jbh_reminder\": {{faker 'datatype.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'datatype.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'datatype.boolean'}},\n    \"annotation\": {{faker 'datatype.boolean'}},\n    \"attendee_on_hold\": {{faker 'datatype.boolean'}},\n    \"auto_answer\": {{faker 'datatype.boolean'}},\n    \"auto_saving_chat\": {{faker 'datatype.boolean'}},\n    \"breakout_room\": {{faker 'datatype.boolean'}},\n    \"chat\": {{faker 'datatype.boolean'}},\n    \"closed_caption\": {{faker 'datatype.boolean'}},\n    \"co_host\": {{faker 'datatype.boolean'}},\n    \"custom_data_center_regions\": {{faker 'datatype.boolean'}},\n    \"data_center_regions\": \"{{oneOf (array 'EU' 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA')}}\",\n    \"e2e_encryption\": {{faker 'datatype.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'datatype.boolean'}},\n    \"feedback\": {{faker 'datatype.boolean'}},\n    \"file_transfer\": {{faker 'datatype.boolean'}},\n    \"group_hd\": {{faker 'datatype.boolean'}},\n    \"non_verbal_feedback\": {{faker 'datatype.boolean'}},\n    \"only_host_view_device_list\": {{faker 'datatype.boolean'}},\n    \"original_audio\": {{faker 'datatype.boolean'}},\n    \"polling\": {{faker 'datatype.boolean'}},\n    \"post_meeting_feedback\": {{faker 'datatype.boolean'}},\n    \"private_chat\": {{faker 'datatype.boolean'}},\n    \"record_play_own_voice\": {{faker 'datatype.boolean'}},\n    \"remote_control\": {{faker 'datatype.boolean'}},\n    \"remote_support\": {{faker 'datatype.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'datatype.boolean'}},\n    \"screen_sharing\": {{faker 'datatype.boolean'}},\n    \"sending_default_email_invites\": {{faker 'datatype.boolean'}},\n    \"show_browser_join_link\": {{faker 'datatype.boolean'}},\n    \"show_device_list\": {{faker 'datatype.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'datatype.boolean'}},\n    \"stereo_audio\": {{faker 'datatype.boolean'}},\n    \"use_html_format_email\": {{faker 'datatype.boolean'}},\n    \"virtual_background\": {{faker 'datatype.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'datatype.boolean'}},\n      \"allow_videos\": {{faker 'datatype.boolean'}},\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'datatype.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"waiting_room\": {{faker 'datatype.boolean'}},\n    \"whiteboard\": {{faker 'datatype.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\"\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'datatype.boolean'}},\n    \"archive\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"settings\": {\n        \"audio_file\": {{faker 'datatype.boolean'}},\n        \"cc_transcript_file\": {{faker 'datatype.boolean'}},\n        \"chat_file\": {{faker 'datatype.boolean'}},\n        \"chat_with_sender_email\": {{faker 'datatype.boolean'}},\n        \"video_file\": {{faker 'datatype.boolean'}}\n      },\n      \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n    },\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download\": {{faker 'datatype.boolean'}},\n    \"cloud_recording_download_host\": {{faker 'datatype.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'datatype.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'datatype.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'datatype.boolean'}},\n    \"record_audio_file\": {{faker 'datatype.boolean'}},\n    \"record_gallery_view\": {{faker 'datatype.boolean'}},\n    \"record_speaker_view\": {{faker 'datatype.boolean'}},\n    \"recording_audio_transcript\": {{faker 'datatype.boolean'}},\n    \"save_chat_text\": {{faker 'datatype.boolean'}},\n    \"show_timestamp\": {{faker 'datatype.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"\",\n    \"embed_password_in_join_link\": {{faker 'datatype.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'datatype.boolean'}},\n    \"host_video\": {{faker 'datatype.boolean'}},\n    \"join_before_host\": {{faker 'datatype.boolean'}},\n    \"mute_upon_entry\": {{faker 'datatype.boolean'}},\n    \"participant_video\": {{faker 'datatype.boolean'}},\n    \"personal_meeting\": {{faker 'datatype.boolean'}},\n    \"pstn_password_protected\": {{faker 'datatype.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'all' 'jbh_only' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_schedule_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"telephony_regions\": {\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code**: `200` <br>\nOnly available for paid account.\n\n**HTTP Status Code**: `200` <br>\nGroup Settings Returned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f574da1-a1f5-4e6a-adfc-d66581c166e2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist: {groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d88d7aad-91c4-4199-bae5-6e894760d560",
      "documentation": "Update a group's settings",
      "method": "patch",
      "endpoint": "groups/:groupId/settings",
      "responses": [
        {
          "uuid": "f1308613-adf9-4c6b-8822-6f86841ab52d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error code:** `200`<br>\nOnly available for Paid account, {accountId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2d3af5b-4805-458c-97ce-63ceff9e2e3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nSettings updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f939708-43f0-4efd-9a87-d5a401bc3b09",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40701517-e3b4-4a4f-8d10-e3e28d085649",
      "documentation": "Delete virtual background files",
      "method": "delete",
      "endpoint": "groups/:groupId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "1f9df93b-704a-4361-80a0-ea454263a33d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63536b88-8e78-4df9-9f9d-8325f7265e0d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\nGroup member not found.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c11c5e0-0626-46f2-9276-3a9488556a94",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4802ae10-5f84-4fb2-a79e-4d64131a8532",
      "documentation": "Upload virtual background files",
      "method": "post",
      "endpoint": "groups/:groupId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "8edf34d1-cc18-414f-839c-188764038d3f",
          "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de0791ea-f5c6-4e76-a53e-25d45a90ce39",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg or png image file can be uploaded.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "757a66ac-96e3-4227-9985-ff3dc3dcde92",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {email} not exist or not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc2ebc85-e0f6-4bfc-acbd-a16853100ac1",
      "documentation": "List H.323/SIP devices",
      "method": "get",
      "endpoint": "h323/devices",
      "responses": [
        {
          "uuid": "17689c26-9735-4cab-b3f1-0d10ce9af56d",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of H.323/SIP devices returned.<br>\n**Error Code:** `200`<br>\nNo permission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "468c5145-a37f-4671-83db-d8f7f62d94a2",
      "documentation": "Create a H.323/SIP device",
      "method": "post",
      "endpoint": "h323/devices",
      "responses": [
        {
          "uuid": "fe1544b9-6d46-40fd-8c85-afd597e0ad57",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nNo permission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f472e6f9-2954-4b66-b519-2579aee4151f",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nH.323/SIP device created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfa1f723-dc09-4b7d-8e9f-d164967e4162",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "725f2d99-016e-427d-98f1-0731a5c25813",
      "documentation": "Delete a H.323/SIP device",
      "method": "delete",
      "endpoint": "h323/devices/:deviceId",
      "responses": [
        {
          "uuid": "da88d522-345f-4d07-9b8d-b2d96b13bcb7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "You do not have the permission to delete this device.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ad4d0bc-0445-4e5c-9bf0-6e029d95bb03",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "H.323/SIP device deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85519b24-b535-471c-be15-f1d421276837",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "H.323 device does not exist: {deviceId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90407c69-a4c6-4932-919c-e9e1b64ef8f4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "H.323/SIP device not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ec9b246-68ae-408d-afa2-ca76e3f38cde",
      "documentation": "Update a H.323/SIP device",
      "method": "patch",
      "endpoint": "h323/devices/:deviceId",
      "responses": [
        {
          "uuid": "6f69536d-f71b-49d5-b626-b3988a726faf",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nH.323/SIP device updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "903c24e2-afe1-4396-9f3f-01dadffdc1cf",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nH.323 Device does not exist: {deviceId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd467154-f026-4b40-bba6-79e988a30413",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd9c1828-750b-4fe2-a6ce-6d554b804292",
      "documentation": "Send chatbot messages",
      "method": "post",
      "endpoint": "im/chat/messages",
      "responses": [
        {
          "uuid": "d0874a0d-ffca-4435-989a-a27c97decdeb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage Sent.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c654f5f0-62e4-44eb-8689-6922947d9def",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `7001`<br>\nLink does not support markdown format.<br>\nEdit message does not support markdown format.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2a05722d-48e2-4c55-9274-a73073dccd3b",
      "documentation": "Delete a chatbot message",
      "method": "delete",
      "endpoint": "im/chat/messages/:message_id",
      "responses": [
        {
          "uuid": "32209980-c6a2-4e94-aeea-8096e278a3c5",
          "body": "{\n  \"message_id\": \"\",\n  \"robot_jid\": \"\",\n  \"sent_time\": \"\",\n  \"to_jid\": \"\",\n  \"user_jid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47b8f8e2-7c77-4411-9f92-3cae09dbb688",
      "documentation": "Edit a chatbot message",
      "method": "put",
      "endpoint": "im/chat/messages/:message_id",
      "responses": [
        {
          "uuid": "29d7f2d6-836d-4cf7-885b-7d6fa6898822",
          "body": "{\n  \"message_id\": \"\",\n  \"robot_jid\": \"\",\n  \"sent_time\": \"{{faker 'date.recent' 365}}\",\n  \"to_jid\": \"\",\n  \"user_jid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d122d66f-deb3-463b-8eea-3ce15de6b5a4",
      "documentation": "Get IM chat sessions",
      "method": "get",
      "endpoint": "im/chat/sessions",
      "responses": [
        {
          "uuid": "9498ab48-21ca-4f6d-8d55-0601c87af42d",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nArchived IM chat sessions returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0309840f-0e54-4026-abfc-eb92b7b3517e",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nThe next page token is invalid or expired. <br>\nReport requested exceeds 6 month limit.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed50d446-858e-49d3-9e94-93278a0d1e77",
      "documentation": "Get IM chat messages",
      "method": "get",
      "endpoint": "im/chat/sessions/:sessionId",
      "responses": [
        {
          "uuid": "4fbc2e68-0bf9-4eb4-a6fc-d2cb61a7f164",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"session_id\": \"\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nArchived IM chat messages returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b6798344-4453-439f-85fa-a084bf6c7edd",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:**`300` <br>\nThe next page token is either invalid or has expired.<br>\nReport requested exceeds 6 month limit.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1817336-79ec-44b1-b0ac-f87eb271e2a9",
      "documentation": "List IM directory groups",
      "method": "get",
      "endpoint": "im/groups",
      "responses": [
        {
          "uuid": "b6352e6b-b4e5-4bb7-8ffc-2725eacd956a",
          "body": "{\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nList of groups returned.\n**Error Code:** `200` <br>\nList of IM groups returned.<br>\nOnly available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11b8ac3c-04a4-4e66-9e3e-b4819e36d797",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99a93828-3f19-4d93-a01d-c09159d2a6a2",
      "documentation": "Create an IM directory group",
      "method": "post",
      "endpoint": "im/groups",
      "responses": [
        {
          "uuid": "d0d7b558-72dd-4741-bfc4-778beee05c55",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec322930-61e9-424a-85e2-54b23163c54d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"search_by_account\": {{faker 'datatype.boolean'}},\n  \"search_by_domain\": {{faker 'datatype.boolean'}},\n  \"search_by_ma_account\": {{faker 'datatype.boolean'}},\n  \"total_members\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nIM Group created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4617275-2820-4925-98d7-dac47f8144d6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5002e2a4-2038-4289-8d3f-1725c04f0aca",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409` <br>\n**Error Code:** `4132` <br>\nGroup name {groupName} is already in use.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6d1abdbf-aa5e-4f56-9289-4b86fa3d3daa",
      "documentation": "Delete an IM directory group",
      "method": "delete",
      "endpoint": "im/groups/:groupId",
      "responses": [
        {
          "uuid": "6c809c82-4686-44ef-aaa0-15444f5213a4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nIM group deleted.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ab18307-3c03-43f8-8b14-ae96de33cad7",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8192cce6-b746-4796-af76-db20da9257de",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "79901c94-fee4-478d-b7d2-0acea03e6b41",
      "documentation": "Retrieve an IM directory group",
      "method": "get",
      "endpoint": "im/groups/:groupId",
      "responses": [
        {
          "uuid": "50a6092b-e1c7-4313-aa8e-3bb4ee8ea0dd",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nIM group object returned.<br>\n**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e2cc7251-6646-44cd-8896-402c413a10da",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3b217dc-7835-4a6e-9b9d-7782bd284cec",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** <br>\nIM Group not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f0481f7-bc16-4ad7-baa2-8dedfbfbf413",
      "documentation": "Update an IM directory group",
      "method": "patch",
      "endpoint": "im/groups/:groupId",
      "responses": [
        {
          "uuid": "44235d6b-5084-44f8-8acc-fee9af05c6b6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nIM group updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c55285d-17b0-4e8c-8128-373676d05aea",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa2ec917-96e3-424f-b2ec-361b9e670b25",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130`<br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "993dab4f-6272-443d-b603-c827bbe2df2f",
      "documentation": "List IM directory group members",
      "method": "get",
      "endpoint": "im/groups/:groupId/members",
      "responses": [
        {
          "uuid": "8c6e2b18-fa48-429f-bc12-537194842f81",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nIM group member list returned.<br>\n**Error Code:** `200` <br> \nOnly available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c5b61e9-87be-4256-895c-eab6d0a39886",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5cee7a5-a0d7-4c62-9763-162c23936d42",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60cf55fb-461c-4cbf-a05e-17cc8f1f5015",
      "documentation": "Add IM directory group members",
      "method": "post",
      "endpoint": "im/groups/:groupId/members",
      "responses": [
        {
          "uuid": "ceaf103e-aacf-4b19-90ea-d173274bb6a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "60af9aaf-e1d4-48e3-a440-01d63658ebb6",
          "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` <br>\nMember added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b80c3eb9-4169-44a4-a29d-0b52b560e8ec",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "411e6e1e-5fa8-4267-a0b7-76415a028818",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nIM Group not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78170e83-23b0-4ca9-b402-066c91d71b10",
      "documentation": "Delete an IM directory group member",
      "method": "delete",
      "endpoint": "im/groups/:groupId/members/:memberId",
      "responses": [
        {
          "uuid": "e027131d-d165-4937-a558-ecfe40b6cd14",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200` <br>\nOnly available for paid account, {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d7d3de33-2523-4125-8bbd-fd3e5a6d4551",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nIM group member deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7139ac01-9302-4315-85e5-2b3108ee8853",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing field: name.<br>\nCan not delete account from default group:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d087846f-69a4-418e-87d7-6c9499a0a6a0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nIM Group or IM Group member not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a48c264-48f2-4e0b-acba-74242517ae42",
      "documentation": "Send IM messages",
      "method": "post",
      "endpoint": "im/users/me/chat/messages",
      "responses": [
        {
          "uuid": "405d6017-0d9c-4bf0-9b0c-e370f9c2f336",
          "body": "{\n  \"id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nMessage Sent.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b54674bd-7d08-4f46-995f-7ccb5724b1d8",
      "documentation": "Get user’s IM messages",
      "method": "get",
      "endpoint": "im/users/:userId/chat/messages",
      "responses": [
        {
          "uuid": "5a577af5-42be-4be9-bb20-89fc01ce168e",
          "body": "{\n  \"date\": \"{{faker 'date.recent' 365}}\",\n  \"messages\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'datatype.uuid'}}\",\n      \"message\": \"\",\n      \"sender\": \"\",\n      \"timstamp\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser's IM messages returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62ec9b6c-d6f7-4f4a-b649-cbbfed58a876",
      "documentation": "Use in-Meeting recording controls",
      "method": "patch",
      "endpoint": "live_meetings/:meetingId/events",
      "responses": [
        {
          "uuid": "1dfacfb0-dc07-4692-a2d8-b50e1414bcbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e66c81e-e89f-40d4-a9ff-db38e9a4fc3f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br>\n* Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n* Meeting does not exist.<br>\n* No permission.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "673e8ba8-7b0e-49fc-86a6-44fce8bdb54c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001` <br> Meeting {meetingId} is not found or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "19147fd4-12a5-43fc-986a-3a1dfc4d3d8b",
      "documentation": "Delete a meeting",
      "method": "delete",
      "endpoint": "meetings/:meetingId",
      "responses": [
        {
          "uuid": "2c72cc3b-c756-495c-b3bd-3a86e082f977",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code**: `204` <br>\nMeeting deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5dee3f6-786f-4c3f-823c-2e6d8a26f992",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot delete this meeting since it is in progress.<br>**Error Code**: `3003` <br>You are not the meeting host.<br>\n**Error Code**: `3007` <br>Sorry, you cannot delete this meeting since it has ended.<br>**Error Code**: `3018` <br>\nNot allowed to delete PMI.<br>**Error Code**: `3037` <br>Not allowed to delete PAC.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8026292c-1c7b-4806-8d91-0b12f65829d3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8f1e38c-ddef-4042-a228-b5540b54f1e1",
      "documentation": "Get a meeting",
      "method": "get",
      "endpoint": "meetings/:meetingId",
      "responses": [
        {
          "uuid": "4041f792-62e5-4e9f-b808-382c73cfbb89",
          "body": "{\n  \"assistant_id\": \"\",\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a362f993-003c-4914-a18d-b9e7db4b47c0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8af711b8-a9ca-4c81-9425-d69bdf70cf47",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "984c8b38-a90c-4ff1-bbd1-b72e3b398a5e",
      "documentation": "Update a meeting",
      "method": "patch",
      "endpoint": "meetings/:meetingId",
      "responses": [
        {
          "uuid": "3fef1171-c2c1-46dc-acb2-1205167963a6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2be0535e-9a86-4b83-876b-99d027c4b618",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0cba812-4376-402f-aea9-2de9fbe2920f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "664550c3-8695-435a-9cdd-84f67cf81c40",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf1b2aaf-6d19-44c2-8d0b-df58eb419ffa",
      "documentation": "Perform batch poll creation",
      "method": "post",
      "endpoint": "meetings/:meetingId/batch_polls",
      "responses": [
        {
          "uuid": "e2dc8d61-9e6b-48bd-bb47-8fa6d1a28ccd",
          "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"questions\": [\n        {\n          \"answers\": [\n            \"\"\n          ],\n          \"name\": \"\",\n          \"type\": \"{{oneOf (array 'single' 'multiple')}}\"\n        }\n      ],\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff07e25a-894a-4fdf-b5ae-3c8d1e82401c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n**Error Code:** `300` <br>\nMeeting id does not exist.\n**Error Code:** `3000` <br>\nCannot access meeting information.\n**Error Code:** `3001`<br>\nMeeting does not exist: {meetingId}.<br>\n**Error Code:** `4400`<br>\nPolling has not been enabled for this meeting: {meetingId}.\n**Error Code:** `4400`<br>\nYou can add a maximum of 25 polls.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30c42e0a-0142-41b0-a34c-5bf7fa325e4a",
      "documentation": "Get meeting invitation",
      "method": "get",
      "endpoint": "meetings/:meetingId/invitation",
      "responses": [
        {
          "uuid": "f12ab14a-4225-43a8-8eca-1e78c9ef1cd2",
          "body": "{\n  \"invitation\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting invitation returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b00b45d-c66d-4af5-8db8-0821bf1b6068",
      "documentation": "Get live stream details",
      "method": "get",
      "endpoint": "meetings/:meetingId/livestream",
      "responses": [
        {
          "uuid": "8d267fa5-d17c-43f1-aa18-804fbfe88ff4",
          "body": "{\n  \"page_url\": \"\",\n  \"stream_key\": \"\",\n  \"stream_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nLive Stream details returned.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f1abb526-9704-4004-b094-af6e1d0c410b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nMissing meetingId<br>\nInvalid meetingId<br><br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1be684b-520d-43fa-b21c-83edf782aa0f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bac8a3e2-7dfb-4a5e-9ac0-5fd2cea7fc78",
      "documentation": "Update a live stream",
      "method": "patch",
      "endpoint": "meetings/:meetingId/livestream",
      "responses": [
        {
          "uuid": "1e99f998-e147-4012-b0d5-69620b205001",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMeeting live stream updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6cb355a2-0442-433b-8cb2-b1467654613d",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>Missing meetingId <br> Invalid meetingId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56c844aa-f28b-4a4b-a999-d66044549515",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>**Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br>\n **Error Code:** `3000` Cannot access webinar info.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd63b44a-f2e2-41e6-b540-ee5ce928e360",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>**Error Code:** `1001` <br>User {userId} does not exist.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be8a9ac6-1708-4ec3-ad0f-51b650c6887a",
      "documentation": "Update Live Stream Status",
      "method": "patch",
      "endpoint": "meetings/:meetingId/livestream/status",
      "responses": [
        {
          "uuid": "750817c0-f66a-404e-a255-f57947aa3f49",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting live stream updated.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20240f04-7c8f-4fe0-89b5-3a2f01bdd90d",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nMissing meetingId.<br>\nInvalid meetingId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0769819-2f04-431b-80fc-b53dbbb35cb6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n**Error Code:**`3000`<br>\nCannot access webinar info.<br>\n**Error Code:**`1010`<br>User does not belong to this account: {accountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2d8bfb8-aeed-4e61-bdf1-2974ea698adc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:**`1001`<br>\nUser {userId} does not exist.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "961a6d71-e069-4e1f-864d-0b7cd21f0349",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "**HTTP Status Code:** `429`<br>Too many requests submitted to start the live stream of this meeting: {meetingId}. If the live stream has not already started, retry making a new request after 30 seconds.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "662eb4d5-e0e2-4e50-b040-85eb9532784b",
      "documentation": "List meeting polls",
      "method": "get",
      "endpoint": "meetings/:meetingId/polls",
      "responses": [
        {
          "uuid": "b87c34b4-453e-4b3c-86b2-377b011d27f9",
          "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** <br>\nList polls of a Meeting  returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "47503987-d632-4ed5-ad92-5521e1703cb8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Error Code:** `404`\nMeeting Poll not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "850c1255-882e-40b7-98d4-82a30e42c98e",
      "documentation": "Create a meeting poll",
      "method": "post",
      "endpoint": "meetings/:meetingId/polls",
      "responses": [
        {
          "uuid": "5ac9a87c-8ae4-4899-ae91-66c19f22c740",
          "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc2f9cbf-c871-4a4f-854f-1ba45e05d625",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Error Code:** `404` <br>\nMeeting not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1678058-1481-41fe-9e8b-352e453cc6ef",
      "documentation": "Delete a meeting poll",
      "method": "delete",
      "endpoint": "meetings/:meetingId/polls/:pollId",
      "responses": [
        {
          "uuid": "0a7f42c7-ba7f-4834-9b10-13fffa14a29f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting Poll deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ced75d5d-c494-413a-8f12-f42483b6b91d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Error Code:** `404`\nMeeting Poll not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ae03f39-0469-41c5-89c4-f8d2beb94334",
      "documentation": "Get a meeting poll",
      "method": "get",
      "endpoint": "meetings/:meetingId/polls/:pollId",
      "responses": [
        {
          "uuid": "3927ea6d-9de1-480a-9874-364747535673",
          "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nMeeting Poll object returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fb1f9e1-834d-4dda-9725-6578b4924c70",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Error Code:** `404` <br>\nMeeting Poll not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73c947a2-45bd-4411-ad8a-1286f45bb5b0",
      "documentation": "Update a meeting poll",
      "method": "put",
      "endpoint": "meetings/:meetingId/polls/:pollId",
      "responses": [
        {
          "uuid": "8ba8b971-d565-456b-be9a-8c88bcc554e3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting Poll Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3db2e309-123a-4f81-986e-052dd81ebbbc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**Error Code:** `404` <br>\nMeeting Poll not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "083b3c16-02f3-4d93-a8a7-ae8e89b0837c",
      "documentation": "Delete meeting recordings",
      "method": "delete",
      "endpoint": "meetings/:meetingId/recordings",
      "responses": [
        {
          "uuid": "bc309be4-a44e-464b-b398-59af182167f2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200` <br>\nYou do not have the right permission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d17831dd-40a5-431f-9c51-8ba0ee922b20",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting recording deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48005df2-f044-4ddc-9291-96e913e58d11",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e862c220-966c-4123-bbbf-9ab75412dc01",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08aae0db-2451-421f-9998-6ca276a7c89b",
      "documentation": "Get meeting recordings",
      "method": "get",
      "endpoint": "meetings/:meetingId/recordings",
      "responses": [
        {
          "uuid": "10eee2da-b11f-414c-9ce8-83463f226395",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200` <br>\nYou do not have the right permissions.\n**HTTP Status Code:** `200`<br>\nRecording object returned.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b7b64ae5-4f21-4d5f-964d-1a23923ce571",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "247bf254-ebd1-4094-aa1d-6aac19848d30",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting recording not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>\nThere is no recording for this meeting.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0374e0c-930b-4f85-a384-31712751768d",
      "documentation": "List recording registrants",
      "method": "get",
      "endpoint": "meetings/:meetingId/recordings/registrants",
      "responses": [
        {
          "uuid": "b16ed36c-6639-42fe-aa0b-7749760ef354",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nRegistrants returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d789d620-fbe7-4616-a56f-00578f3b4034",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting recording not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b7d1656-b5ba-471c-bc3a-daa19d92ccbd",
      "documentation": "Create a recording registrant",
      "method": "post",
      "endpoint": "meetings/:meetingId/recordings/registrants",
      "responses": [
        {
          "uuid": "88d8f6e5-5e9a-48db-b388-14312c1bba28",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"registrant_id\": \"\",\n  \"share_url\": \"\",\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` <br>\nRegistration submitted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00071319-b5ee-47ea-be20-b53c2e69ab3c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9169723a-0cb8-4c90-9011-5f3bfdb1eb5c",
      "documentation": "Get registration questions",
      "method": "get",
      "endpoint": "meetings/:meetingId/recordings/registrants/questions",
      "responses": [
        {
          "uuid": "68d83c54-4fae-47d1-98e9-3b27620bc298",
          "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'datatype.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single' 'multiple')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'last_name' 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nRecording Registrant Question object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3638a12c-5d1c-478c-9dcb-b91537b86867",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or registrant not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7b81080-56b2-41c4-9264-b1ba1ce1e77e",
      "documentation": "Update registration questions",
      "method": "patch",
      "endpoint": "meetings/:meetingId/recordings/registrants/questions",
      "responses": [
        {
          "uuid": "fb3edebc-c4d6-4f9f-97ad-db316e357a07",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `200`<br>\nRecording Registrant Questions Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6cc6237e-06bc-46f7-889b-48319140101b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "627bc9f8-531e-4aff-800a-661e30bf3925",
      "documentation": "Update registrant's status",
      "method": "put",
      "endpoint": "meetings/:meetingId/recordings/registrants/status",
      "responses": [
        {
          "uuid": "0ce7720a-3997-44b7-af11-93c1923dae0f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nRegistrant status updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "804a11db-9e81-4307-9c4b-df608d66ac2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "86dbd8b9-59f7-4163-8dcb-7deb2305b21a",
      "documentation": "Get meeting recording settings",
      "method": "get",
      "endpoint": "meetings/:meetingId/recordings/settings",
      "responses": [
        {
          "uuid": "016ebbb2-d669-428a-a810-b0d3ea30ea6a",
          "body": "{\n  \"approval_type\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"authentication_domains\": \"\",\n  \"authentication_option\": \"\",\n  \"on_demand\": {{faker 'datatype.boolean'}},\n  \"password\": \"\",\n  \"recording_authentication\": {{faker 'datatype.boolean'}},\n  \"send_email_to_host\": {{faker 'datatype.boolean'}},\n  \"share_recording\": \"{{oneOf (array 'publicly' 'internally' 'none')}}\",\n  \"show_social_share_buttons\": {{faker 'datatype.boolean'}},\n  \"topic\": \"\",\n  \"viewer_download\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nMeeting recording settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2c96b7c-9591-4b92-ae6e-5069650a4279",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c8adb0b-ee7c-452c-bd99-baec5bfa7584",
      "documentation": "Update meeting recording settings",
      "method": "patch",
      "endpoint": "meetings/:meetingId/recordings/settings",
      "responses": [
        {
          "uuid": "e24ff7d1-a2ec-46b2-a37f-a871b3bdcc3e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting recording setting's updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1b2a713a-fea0-4849-94f1-a23d266269b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "deac174d-112f-42e7-9926-76dca12996a3",
      "documentation": "Recover meeting recordings",
      "method": "put",
      "endpoint": "meetings/:meetingId/recordings/status",
      "responses": [
        {
          "uuid": "f8b7870b-3076-4773-b6ec-3eb51004faba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nYou do not have the right permissions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89f0b6ef-e9ac-41f2-9ae2-4263d80cae46",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nDeleted recordings of the meeting recovered.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c83cefae-7d75-40fa-b145-6ac058969e59",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6609821a-234e-4d33-944e-25a2fc0fa043",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12b8ce3b-c9ea-4468-8f12-18dcc7e4b93d",
      "documentation": "Delete a meeting recording file",
      "method": "delete",
      "endpoint": "meetings/:meetingId/recordings/:recordingId",
      "responses": [
        {
          "uuid": "308ebd9b-12ba-4eaf-8c8a-db2e9a4e37a1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nYou do not have the right permissions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18a35d0c-ed0a-468c-ae6a-f0d7ead4615f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nMeeting recording file deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb526e4e-5092-4171-8a87-c200504b17e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br> \n**Error Code:** `3303` <br>\nYou can not delete an uncompleted meeting.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37977c0e-eb46-4264-97cf-5a5dad579945",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nMeeting recording file not found<br>\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301` <br> There is no recording for this meeting.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3bf8f14a-cfd7-4f94-a5da-392120e74720",
      "documentation": "Recover a single recording",
      "method": "put",
      "endpoint": "meetings/:meetingId/recordings/:recordingId/status",
      "responses": [
        {
          "uuid": "ec52ef77-94f5-4784-9879-78a3bec74aa6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br> Meeting recording recovered.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4680fe66-03af-4fa7-a911-631cee6fc117",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7940e9ca-c0f4-46f4-b6af-f7f541f57a62",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>Meeting recording not found.<br>\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`There is no recording for this meeting.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a0be907-51d3-423e-bcbf-40c81aafe5d6",
      "documentation": "List meeting registrants",
      "method": "get",
      "endpoint": "meetings/:meetingId/registrants",
      "responses": [
        {
          "uuid": "ee72822c-75a3-410c-a788-fdb1f1666797",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccessfully listedd meeting registrants.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c6ba3b2-8c3b-46c6-82f4-097390815bfa",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6677d0b3-f0bb-4f9f-9901-a13098a0adb4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66909251-b605-410c-bcfd-681c20492667",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02150fdc-bd3e-493e-9b5e-35232d0445ad",
      "documentation": "Add meeting registrant",
      "method": "post",
      "endpoint": "meetings/:meetingId/registrants",
      "responses": [
        {
          "uuid": "0d1a580a-680e-453c-a274-471c613a40bd",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"join_url\": \"\",\n  \"registrant_id\": \"\",\n  \"start_time\": \"\",\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nRegistration created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "515c6531-4acc-4d79-8e52-8f2d81cb2831",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13b1a161-41da-4fcb-9fde-de5c5f1f936e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3043`<br>\nMeeting has reached maximum attendee capacity.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7193781c-0b1f-47b5-8535-f8579c702b40",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "514882ac-0025-4509-bfa5-bd5f2449379b",
      "documentation": "List registration questions ",
      "method": "get",
      "endpoint": "meetings/:meetingId/registrants/questions",
      "responses": [
        {
          "uuid": "f1bb94ff-26fe-4616-b015-3c4d5ff274ec",
          "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'datatype.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "758a2a4f-7cd5-4508-b905-5a95083efdd5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f60d32c-43f3-417f-9b37-806f09d907fa",
      "documentation": "Update registration questions",
      "method": "patch",
      "endpoint": "meetings/:meetingId/registrants/questions",
      "responses": [
        {
          "uuid": "a29e593f-f3ec-4aa4-a5ea-29df25db13dc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a547243-3b1b-4d57-aa56-5cf284cbda76",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b419229-9e74-4953-b4bc-1f3f8808ac24",
      "documentation": "Update registrant's status",
      "method": "put",
      "endpoint": "meetings/:meetingId/registrants/status",
      "responses": [
        {
          "uuid": "22cda161-a7ef-4026-abc2-2dbb820d1ec6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nRegistrant status updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d15de8e9-d978-4dfa-902d-e838039af00d",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5458c619-ad5d-41ea-b5b1-90cf721a6d4c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bab66024-b24a-493f-9153-7a66d7232612",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10995503-183a-47bd-acbd-e15d7fdd75df",
      "documentation": "Delete a meeting registrant",
      "method": "delete",
      "endpoint": "meetings/:meetingId/registrants/:registrantId",
      "responses": [
        {
          "uuid": "8d729e8e-92b5-40d5-9eb3-97aecb66f6b7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP status code:** `204` <br>\nOK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6a98740e-2d55-4491-b697-e83128acbbe1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nOnly available for paid users: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this meeting: {0}.<br>\n\n**Error code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error code:** `3000` <br>\nCannot access webinar info. ***Note:** Zoom throws this error when the meetingId is a webinarId.*<br>\nRegistrant {0} was not found.\n\n**Error code:** `3001` <br>\nMeeting does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e987efd-4a51-432a-a8ec-8802f319625a",
      "documentation": "Update meeting status",
      "method": "put",
      "endpoint": "meetings/:meetingId/status",
      "responses": [
        {
          "uuid": "2466de7b-10fe-4963-a74e-f5ddf016c837",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "992625b6-145f-4d9f-83ff-2da4e90b330e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting: {meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c08eac34-5fbf-4bbf-8a76-13239bf1dd55",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "177e31cc-dd45-491a-b0c4-9c5f4546ec74",
      "documentation": "List Zoom meetings client feedback",
      "method": "get",
      "endpoint": "metrics/client/feedback",
      "responses": [
        {
          "uuid": "bd99709c-738f-4d57-ae3b-00e00391607d",
          "body": "{\n  \"client_feedbacks\": [\n    {\n      \"feedback_id\": \"\",\n      \"feedback_name\": \"\",\n      \"participants_count\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1626ece4-ea3d-4c66-b7d8-e5c19ea4a819",
      "documentation": "Get zoom meetings client feedback",
      "method": "get",
      "endpoint": "metrics/client/feedback/:feedbackId",
      "responses": [
        {
          "uuid": "aad19ae0-6117-4cca-830c-40887d70354e",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f72fb8b0-e68e-4b34-a58a-333315a57ac6",
      "documentation": "List client meeting satisfaction",
      "method": "get",
      "endpoint": "metrics/client/satisfaction",
      "responses": [
        {
          "uuid": "62ebd230-7b3b-4e34-b07e-8e046fbbbbb8",
          "body": "{\n  \"client_satisfaction\": [\n    {\n      \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"good_count\": {{faker 'datatype.number'}},\n      \"none_count\": {{faker 'datatype.number'}},\n      \"not_good_count\": {{faker 'datatype.number'}},\n      \"satisfaction_percent\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "519ffcf1-74fa-476c-adde-01c5bc77bc89",
      "documentation": "Get CRC port usage",
      "method": "get",
      "endpoint": "metrics/crc",
      "responses": [
        {
          "uuid": "776098d7-c712-44a3-95e8-90dd2b25284c",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nCRC usage returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "da32275a-244f-4751-82fd-a9d1c3500d8a",
      "documentation": "Get IM metrics",
      "method": "get",
      "endpoint": "metrics/im",
      "responses": [
        {
          "uuid": "64002037-3ce0-41e1-b098-61ade8e3e278",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nIM details returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e3c5374-c305-4432-9a5d-70132e5d17d2",
      "documentation": "Get top 25 Zoom Rooms with issues",
      "method": "get",
      "endpoint": "metrics/issues/zoomrooms",
      "responses": [
        {
          "uuid": "aeaeadad-c83f-4608-88fd-f2df2b17e013",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b3a8dab-5968-446d-a106-94be801e7ced",
      "documentation": "Get issues of Zoom Rooms",
      "method": "get",
      "endpoint": "metrics/issues/zoomrooms/:zoomroomId",
      "responses": [
        {
          "uuid": "3e881983-dc7c-45dd-96c6-af95ae0a7eee",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7a4dfcb-4de0-436a-88c9-247938fb9d19",
      "documentation": "List meetings",
      "method": "get",
      "endpoint": "metrics/meetings",
      "responses": [
        {
          "uuid": "1c340af6-a12d-4d19-9fe9-7cd261c03a26",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5053662-2683-4f26-a628-e292d8d58c3b",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nThe next page token is invalid or expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a928786-2f15-4ae2-83b1-caa0620bff11",
      "documentation": "Get meeting details",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId",
      "responses": [
        {
          "uuid": "55911697-717a-4d94-a265-2edaf4fd75d0",
          "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": \"\",\n  \"email\": \"\",\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"has_3rd_party_audio\": {{faker 'datatype.boolean'}},\n  \"has_pstn\": {{faker 'datatype.boolean'}},\n  \"has_recording\": {{faker 'datatype.boolean'}},\n  \"has_screen_share\": {{faker 'datatype.boolean'}},\n  \"has_sip\": {{faker 'datatype.boolean'}},\n  \"has_video\": {{faker 'datatype.boolean'}},\n  \"has_voip\": {{faker 'datatype.boolean'}},\n  \"host\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"in_room_participants\": {{faker 'datatype.number'}},\n  \"participants\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"user_type\": \"\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eb49e5f0-8b26-4ef0-9e52-1b29f2364a06",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3282171-18e8-461d-a6ce-18f9dfe2fc40",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "564805a6-64ab-4d27-9bc6-37471128b529",
      "documentation": "List meeting participants",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId/participants",
      "responses": [
        {
          "uuid": "94d66f62-1730-4c3b-886d-a5ffb85d3af3",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2fc49751-165c-491e-8d2e-7401db6f3ccc",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b57b35b0-ec12-4a58-98f7-1beb8546b8d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd79e236-164c-4538-aaac-d84389ae42ac",
      "documentation": "List meeting participants QoS",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId/participants/qos",
      "responses": [
        {
          "uuid": "9c8fbed3-2227-4a15-bb6b-3551d8cf6467",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 1,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5325142-7992-4d20-ad1e-1b628aeff8f5",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60343e88-9163-4b54-8dbf-29b28bc2013f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d668995-e8f6-48a5-a425-434ad9254018",
      "documentation": "Get post meeting feedback",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId/participants/satisfaction",
      "responses": [
        {
          "uuid": "f88cc171-1e17-4b97-881b-b0c365ed353d",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"participants\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"quality\": \"{{oneOf (array 'GOOD' 'NOT GOOD')}}\",\n      \"user_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ed0df42-23c0-4419-b581-f8a1acf75143",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c11d9c30-64f8-47aa-969a-dd82d3e31cb8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09816d23-5adc-44f4-9e51-922e3656de1f",
      "documentation": "Get sharing/recording details",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId/participants/sharing",
      "responses": [
        {
          "uuid": "31ef86ce-d2a6-417e-9c21-72dc76301db8",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10f44de1-718f-4645-aefd-24aca569b31e",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "635b050b-1c76-4e5c-9123-0854e52d7408",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14d865be-5910-4427-a8d1-68c40c8c7e86",
      "documentation": "Get meeting participant QoS",
      "method": "get",
      "endpoint": "metrics/meetings/:meetingId/participants/:participantId/qos",
      "responses": [
        {
          "uuid": "87d85008-ff37-4932-abe3-34f6e01ddeb3",
          "body": "{\n  \"device\": \"\",\n  \"domain\": \"\",\n  \"harddisk_id\": \"\",\n  \"ip_address\": \"\",\n  \"join_time\": \"{{faker 'date.recent' 365}}\",\n  \"leave_time\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"mac_addr\": \"\",\n  \"pc_name\": \"\",\n  \"user_id\": \"{{faker 'datatype.uuid'}}\",\n  \"user_name\": \"\",\n  \"user_qos\": [\n    {\n      \"as_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"cpu_usage\": {\n        \"system_max_cpu_usage\": \"\",\n        \"zoom_avg_cpu_usage\": \"\",\n        \"zoom_max_cpu_usage\": \"\",\n        \"zoom_min_cpu_usage\": \"\"\n      },\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"video_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      }\n    }\n  ],\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a27efc21-45bc-429c-bf1e-bee5d2896f63",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6678ba29-d50b-4621-b348-061de9f10492",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26a8b937-07cf-401c-b63b-fc50d55e1298",
      "documentation": "List webinars",
      "method": "get",
      "endpoint": "metrics/webinars",
      "responses": [
        {
          "uuid": "dc07d0e0-13ab-4f74-aa91-1a7de4f3a82e",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75411a43-7b4e-4c9d-a0b3-cd1aed81c9e8",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `200`<br>\nThe next page token is invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc350a14-787d-45d1-8040-8f03f35679a6",
      "documentation": "Get webinar details",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId",
      "responses": [
        {
          "uuid": "c7052da7-2aaf-4dd6-b1c2-e6aea250809b",
          "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": \"\",\n  \"email\": \"\",\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"has_3rd_party_audio\": {{faker 'datatype.boolean'}},\n  \"has_pstn\": {{faker 'datatype.boolean'}},\n  \"has_recording\": {{faker 'datatype.boolean'}},\n  \"has_screen_share\": {{faker 'datatype.boolean'}},\n  \"has_sip\": {{faker 'datatype.boolean'}},\n  \"has_video\": {{faker 'datatype.boolean'}},\n  \"has_voip\": {{faker 'datatype.boolean'}},\n  \"host\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"participants\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"user_type\": \"\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22831d66-5ebb-483c-bb40-117acc60fbd6",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "970fa0d2-aef4-475c-b932-fdc50ba4a3d2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9de9c74b-df3b-4d33-b71b-9a444a27b347",
      "documentation": "Get webinar participants",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId/participants",
      "responses": [
        {
          "uuid": "86298901-f021-48c5-8e48-a4aecd2ca92e",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72aff584-6c8c-4daa-9722-7c25e479cca3",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "424170c9-4849-4482-974c-9fa3f31831f4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05bd5cef-0b8f-4563-8312-1000f1a692e6",
      "documentation": "List webinar participant QoS",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId/participants/qos",
      "responses": [
        {
          "uuid": "f976bad0-0ee8-45c0-ac77-2d58eadb8d76",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 1,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2152d14e-983d-481d-8117-e432cb29dd62",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d21e68f-7559-4711-8dce-5cd68b689404",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d194ab41-109f-4cba-82b7-2e653ea45ab0",
      "documentation": "Get post webinar feedback",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId/participants/satisfaction",
      "responses": [
        {
          "uuid": "1b410057-3e35-49e6-91e5-b483cb62c46d",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"participants\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"quality\": \"{{oneOf (array 'GOOD' 'NOT GOOD')}}\",\n      \"user_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61395837-35b9-472c-87df-0d4f1114fe28",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49eeeaca-3a82-48e6-a206-f019c184e7af",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "53afbb47-56ea-4a74-ad9a-6b7632ca0cec",
      "documentation": "Get sharing/recording details",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId/participants/sharing",
      "responses": [
        {
          "uuid": "3b560349-1fdd-418f-bb5a-af2bde9ec828",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32d6e2ca-f14a-44bd-9cf7-78ff52260c31",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "575b761c-5dfd-42ee-8dda-a3469a55fc39",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c30b6539-b89f-4695-8571-b951bebd2e50",
      "documentation": "Get webinar participant QoS",
      "method": "get",
      "endpoint": "metrics/webinars/:webinarId/participants/:participantId/qos",
      "responses": [
        {
          "uuid": "dc67bef6-c8ec-4f13-bcd9-02e0795b52b5",
          "body": "{\n  \"device\": \"\",\n  \"domain\": \"\",\n  \"harddisk_id\": \"\",\n  \"ip_address\": \"\",\n  \"join_time\": \"{{faker 'date.recent' 365}}\",\n  \"leave_time\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"mac_addr\": \"\",\n  \"pc_name\": \"\",\n  \"user_id\": \"{{faker 'datatype.uuid'}}\",\n  \"user_name\": \"\",\n  \"user_qos\": [\n    {\n      \"as_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"cpu_usage\": {\n        \"system_max_cpu_usage\": \"\",\n        \"zoom_avg_cpu_usage\": \"\",\n        \"zoom_max_cpu_usage\": \"\",\n        \"zoom_min_cpu_usage\": \"\"\n      },\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"video_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      }\n    }\n  ],\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "faa52369-c17e-44d0-8184-39253ab09f71",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed052d52-886f-4f6e-9532-2f66f5810b7b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a77cb6d-5b31-493b-a753-2b0886fb8788",
      "documentation": "List Zoom Rooms",
      "method": "get",
      "endpoint": "metrics/zoomrooms",
      "responses": [
        {
          "uuid": "2c3a5013-4891-4788-96b8-a5d6694798e4",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of Zoom rooms returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3aa21c36-3704-40cb-93a1-b7f3f2afb325",
      "documentation": "Get top 25 issues of Zoom Rooms",
      "method": "get",
      "endpoint": "metrics/zoomrooms/issues",
      "responses": [
        {
          "uuid": "147fed5f-d032-43f1-a5df-b55f29b6c9cd",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nZoom Room Issue details returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "abeabbd3-b3cb-4c84-aa1a-7e41408b7896",
      "documentation": "Get Zoom Rooms details",
      "method": "get",
      "endpoint": "metrics/zoomrooms/:zoomroomId",
      "responses": [
        {
          "uuid": "e67ea4fa-59da-4180-adb1-05114b6c77b2",
          "body": "{\n  \"account_type\": \"\",\n  \"calender_name\": \"\",\n  \"camera\": \"\",\n  \"device_ip\": \"\",\n  \"email\": \"\",\n  \"health\": \"\",\n  \"id\": \"\",\n  \"issues\": [\n    \"\"\n  ],\n  \"last_start_time\": \"\",\n  \"location\": \"\",\n  \"microphone\": \"\",\n  \"room_name\": \"\",\n  \"speaker\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nZoom room returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "831e9049-d4a7-4f78-b11b-ee51e29c183f",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nThe next page token is either invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ed13c48-977d-4f2d-8844-441e09ca3b5c",
      "documentation": "List past meeting's files",
      "method": "get",
      "endpoint": "past_meetings/:meetingId/files",
      "responses": [
        {
          "uuid": "5283a20d-8bf9-418f-acb0-2f5a7e055bf4",
          "body": "{\n  \"in_meeting_files\": [\n    {\n      \"download_url\": \"\",\n      \"file_name\": \"\",\n      \"file_size\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e347203-8fe0-4884-b984-b8a4a7541b31",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5183f440-1bab-4fe1-8c10-719ba9cb4d17",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ea664e2-d6be-4d4a-948f-223f3c010535",
      "documentation": "List ended meeting instances",
      "method": "get",
      "endpoint": "past_meetings/:meetingId/instances",
      "responses": [
        {
          "uuid": "0ce5f82b-9acc-41ac-b35f-7ca623a05909",
          "body": "{\n  \"meetings\": [\n    {\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"uuid\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of ended meeting instances returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b58744e-ab9d-4b9f-bbea-c02c8c6a6a0b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25fe32fb-082d-41b1-91bb-c54d23f3208c",
      "documentation": "List past meeting's poll results",
      "method": "get",
      "endpoint": "past_meetings/:meetingId/polls",
      "responses": [
        {
          "uuid": "f8aa28b7-b2ca-4b7f-9504-14ae04707228",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50a95225-a982-4084-9559-02f04ae0eeda",
      "documentation": "Get past meeting details",
      "method": "get",
      "endpoint": "past_meetings/:meetingUUID",
      "responses": [
        {
          "uuid": "a0282dca-067b-4a45-94b5-06b291b89524",
          "body": "{\n  \"duration\": {{faker 'datatype.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"participants_count\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'datatype.number'}},\n  \"type\": {{faker 'datatype.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting details returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b9f64218-9817-4f63-8548-082d7f557f66",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nMeeting not found<br><br>\n**Error Code:** `1010`<br>\nUser not exist: {userId}<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting info.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c282580a-f5a4-441e-b994-9fdef946d714",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97f4288c-5970-4893-a57f-127bd97181d1",
      "documentation": "Get past meeting participants",
      "method": "get",
      "endpoint": "past_meetings/:meetingUUID/participants",
      "responses": [
        {
          "uuid": "6e9faf1b-9b99-4a28-b932-7891f0f922b3",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65f7fe8e-6ef3-41d4-b1d8-e2528e5f1724",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94b49cd4-c314-479f-b552-43ebc5f1b9c0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ebe078bc-5cf8-460a-aff5-fc176418529b",
      "documentation": "Get webinar absentees",
      "method": "get",
      "endpoint": "past_webinars/:WebinarUUID/absentees",
      "responses": [
        {
          "uuid": "9654f097-b3a7-40b4-9061-8dcd7d7df3c8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0622f27-4468-480f-a38f-3fc8dfd1723f",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>Invalid webinar UUID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d30e4e1b-e364-4332-89a8-a7d1b83ad781",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe request could not be completed because you have provided an invalid occurence ID: {occurenceId}<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis Webinar has not registration required: {webinarUUID}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b511add-b459-4ae7-8479-b6cc4363f0bf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de694764-e7ab-4e15-9873-8e19e769d1e5",
      "documentation": "List past webinar files",
      "method": "get",
      "endpoint": "past_webinars/:webinarId/files",
      "responses": [
        {
          "uuid": "50ce23f3-2928-46a7-9d27-eba6ee22c5ff",
          "body": "{\n  \"in_meeting_files\": [\n    {\n      \"download_url\": \"\",\n      \"file_name\": \"\",\n      \"file_size\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46573028-4ddb-4c0f-b6a4-13563f908193",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42bc4081-1875-474b-9331-16d51a7cae2e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fe5c2db6-ad6d-4e77-92b3-69e08e40e7af",
      "documentation": "List past webinar instances",
      "method": "get",
      "endpoint": "past_webinars/:webinarId/instances",
      "responses": [
        {
          "uuid": "12923bc8-2842-4597-8090-3a9f698a3512",
          "body": "{\n  \"webinars\": [\n    {\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"uuid\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ddc1645-0c98-4e18-9c1a-76dd660c7fee",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nInvalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e42d9034-8c83-4996-b97b-a961a8ae01fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "912d3cb1-6c3d-444f-909c-773d4ca6044a",
      "documentation": "List webinar participants",
      "method": "get",
      "endpoint": "past_webinars/:webinarId/participants",
      "responses": [
        {
          "uuid": "a238648e-4049-4164-b9dc-f3ac6427def1",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"participants\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"user_email\": \"{{faker 'internet.email'}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nParticipants list returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3048f23e-c300-48d8-9aad-2c4a7d4642e7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request**<br>\n\n**Error Code:** `200`<br>\nNo permission.<br>\nOnly available for paid account: {accountId}.<br><br>\n**Error Code:**  `300`<br>\nThe next page token is invalid or expired.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6ec8e8b-018f-4e7c-b715-72dc9283207f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`\n**Error Code:**`3001`<br>\nWebinar does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ee1b853-b0af-43cc-b8b4-27742f88bd0d",
      "documentation": "List past webinar poll results",
      "method": "get",
      "endpoint": "past_webinars/:webinarId/polls",
      "responses": [
        {
          "uuid": "55a25dcd-625b-469d-a9ed-155420ed24cb",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04c52f18-ac4c-4b5a-9901-f068f5fe5876",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56f7d929-2122-4248-9af6-0e210cc733f3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02748b9f-22e5-42e2-9642-84d347f4ad53",
      "documentation": "List Q&A of past webinar",
      "method": "get",
      "endpoint": "past_webinars/:webinarId/qa",
      "responses": [
        {
          "uuid": "47a9187e-3b2f-4b2b-be7a-2951092e4cdd",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "979aecc0-04a0-42b1-b564-a3533cfb5a3e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bddb240c-9f5e-483a-ab4a-c7943776bbfe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8fef9d6c-c75e-4850-91b0-5bfe00374c78",
      "documentation": "Add an auto receptionist",
      "method": "post",
      "endpoint": "phone/auto_receptionists",
      "responses": [
        {
          "uuid": "8970d77f-8e2b-4b01-b33c-0cd46d228a63",
          "body": "{\n  \"extension_number\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**\n\nAuto receptionist added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29af6b82-3a31-4078-839d-493381f638b9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation failed.**<br>\n* Multiple Site is disabled.<br>\n* Site does not exist.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d457efb6-fa40-4ca4-bb12-0751f6f660e5",
      "documentation": "Update auto receptionist details",
      "method": "patch",
      "endpoint": "phone/auto_receptionists/:autoReceptionistId",
      "responses": [
        {
          "uuid": "6be0070d-4a14-4969-83dc-4a38c04b097f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br> **No Content**<br>\nAuto Receptionist details updated sucessfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "871b7dab-2698-4e13-b09f-bc00990a153b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nExtension Number must be {min} to {max} digits<br>\nValidation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}<br><br>\n**Error Code:** `400`<br>\nInvalid short number length.<br>\nInvalid full extension number length.<br><br>\n**Error Code:** `10001`<br>\nNumber {extensionNumber} is a reserved extension number.<br>\nExtension number {extensionNumber} is already used.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cee50937-ae08-478e-a693-761f5726e8c0",
      "documentation": "Unassign all phone numbers",
      "method": "delete",
      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers",
      "responses": [
        {
          "uuid": "3ba1401c-2039-434d-ac60-65ef8e7f7a5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "000e46e2-5666-4729-a5d8-e36411050d5f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b456c3e8-f165-4e7e-a459-8a72b84a55af",
      "documentation": "Assign phone numbers",
      "method": "post",
      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers",
      "responses": [
        {
          "uuid": "8e7dea70-6ecc-4f20-8a6f-63552675a773",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers assigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12323c23-177a-4c87-8892-04d7d24816c6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "\n**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point.<br>\nPhone number does not exist, phonenumberId:{phonenumberId}<br>\nphoneNumber is used, phonenumberId:{phonenumberId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf40cdbd-00ba-4424-b355-5f036e85a26b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56838aaf-60d3-4c6f-ac51-b19fe3a38875",
      "documentation": "Unassign a phone number",
      "method": "delete",
      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers/:phoneNumberId",
      "responses": [
        {
          "uuid": "67388717-b9d7-4d2b-8d31-8a3ff3ab379a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone number unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de488ee3-1d7d-4592-82b9-02cb4ffed542",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not belong to auto receptionist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb360b2d-e04c-4151-8235-24224cdc89e4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Bad Request**<br>\n**Error Code:** `404`<br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61f37445-ac54-4288-9159-68372a8dd722",
      "documentation": "List blocked lists",
      "method": "get",
      "endpoint": "phone/blocked_list",
      "responses": [
        {
          "uuid": "74daa5ec-cf20-447f-9339-bb46165b4aaa",
          "body": "{\n  \"blocked_list\": [\n    {\n      \"block_type\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n      \"comment\": \"\",\n      \"id\": \"\",\n      \"match_type\": \"{{oneOf (array 'phoneNumber' 'prefix')}}\",\n      \"phone_number\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f709253f-c0d6-4ff7-999f-9efcf9336bed",
      "documentation": "Create a blocked list",
      "method": "post",
      "endpoint": "phone/blocked_list",
      "responses": [
        {
          "uuid": "27e0bed2-2327-46ef-bf17-90176f083ad1",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nNumber added to the blocked list successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2932fa11-f995-4dbb-8469-5d418e5cd56b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73348704-7327-4d7d-b393-4dd94aebd3e8",
      "documentation": "Delete a blocked list",
      "method": "delete",
      "endpoint": "phone/blocked_list/:blockedListId",
      "responses": [
        {
          "uuid": "7e813ea8-4e22-4a4e-99da-3eadce9dbb4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e08918a0-bf73-483c-8864-d8ddf2d7ce7f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. Blocked number (Id: {blockedListId}) does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "545caee5-bbdd-4345-9a4f-af59d966dafd",
      "documentation": "Get blocked list details",
      "method": "get",
      "endpoint": "phone/blocked_list/:blockedListId",
      "responses": [
        {
          "uuid": "f09b200f-a1d7-4fab-a46f-3c70f3466dee",
          "body": "{\n  \"block_type\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n  \"comment\": \"\",\n  \"id\": \"\",\n  \"match_type\": \"{{oneOf (array 'phoneNumber' 'prefix')}}\",\n  \"phone_number\": \"\",\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ddb68f9f-3c2b-41fd-98e8-27fd43f0fccd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nBlocked number (Id: {blockedListId}) does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4daeb1b2-bcd8-41f6-b1d1-3f2779f049fc",
      "documentation": "Update a blocked list",
      "method": "patch",
      "endpoint": "phone/blocked_list/:blockedListId",
      "responses": [
        {
          "uuid": "90971259-bf37-472a-a649-ad0426010a4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list updated successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e93d66b-d002-4fa9-9c7d-c31f41ba200a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\nBlocked number (Id: {blockedListId}) does not exist.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6e9ef8a-4628-40c1-bcd1-5c078793db3b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d2a5c5bb-c526-4b32-8f49-5783458edb4d",
      "documentation": "Add BYOC phone numbers",
      "method": "post",
      "endpoint": "phone/byoc_numbers",
      "responses": [
        {
          "uuid": "65bf029c-e15c-4c40-a84e-0f8cf7e83ece",
          "body": "{\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bdfc4249-a96f-4564-9a07-9eb84fcffc0d",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`\n\nValidation failed. Adding batch phone numbers are limited to 50 per request.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5a7d5c4-caf1-4c74-a88b-11eae18f861f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request**\n\nBYOC phone numbers are not enabled for this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af134a90-e305-4d82-92ea-73474c6757d3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124` Account does not exist: {accountId}. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3184cb9d-99c2-41d2-a965-e8e2b212b988",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**\n\nThe following account carrier does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8cde5808-e735-4068-9f9a-5c02ae4e6a67",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "**HTTP Status Code:** `429` **Too Many Requests**\n\n You have reached the maximum number of concurrent requests for this account’s BYOC phone numbers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b6ffdca-d2f7-4746-9ff1-5ab54e1cd813",
      "documentation": "Get account's call logs",
      "method": "get",
      "endpoint": "phone/call_logs",
      "responses": [
        {
          "uuid": "6f444e50-ed4f-4bab-b1dd-9ff4eef95f5d",
          "body": "{\n  \"call_logs\": [\n    {\n      \"answer_start_time\": \"{{faker 'date.recent' 365}}\",\n      \"call_id\": \"\",\n      \"call_type\": \"{{oneOf (array 'voip' 'pstn' 'tollfree' 'international' 'contactCenter')}}\",\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"charge\": \"\",\n      \"client_code\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"owner\": {\n        \"extension_number\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone' 'sharedLineGroup')}}\"\n      },\n      \"path\": \"\",\n      \"rate\": \"\",\n      \"recording_id\": \"\",\n      \"recording_type\": \"{{oneOf (array '1' '2')}}\",\n      \"result\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"user_id\": \"\",\n      \"waiting_time\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nAccount's call logs returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a433f5de-ee3a-4570-b2d1-4d18fa9702d9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nError retrieving call logs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e3fed58-40f8-48e6-a20a-af8903122e97",
      "documentation": "List call queues",
      "method": "get",
      "endpoint": "phone/call_queues",
      "responses": [
        {
          "uuid": "93b14da3-a164-4aea-81a6-660ac2e36221",
          "body": "{\n  \"call_queues\": [\n    {\n      \"extension_number\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nCall Queues listed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d505d555-de98-4c9d-844c-c7c5e0780bd7",
      "documentation": "Create a call queue",
      "method": "post",
      "endpoint": "phone/call_queues",
      "responses": [
        {
          "uuid": "a1f5250c-cc84-4c92-a0c2-f67d69b9e7f8",
          "body": "{\n  \"extension_number\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"name\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nCall Queue created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b5c9a61-c08b-4373-8b81-57325286f0f0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed.<br>\nMultiple Site is disabled.<br>\nSite does not exist.<br> {extensionNumber} is out of range<br> Exceeded the maximum number to add members per time<br><br>\n**Error Code:** `400`<br> Invalid short number length.<br> Extension number {extensionNumber} is already used.<br>\n**Error Code:** `412` The maximum number of Call Queue members is up to {maxSize}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aeece17e-ed08-4edd-b888-24717cb4a492",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\n User not found: {userId}\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "751f1eb9-d46f-49bc-a1c8-73cffbeb4a52",
      "documentation": "Delete a call queue",
      "method": "delete",
      "endpoint": "phone/call_queues/:callQueueId",
      "responses": [
        {
          "uuid": "64465ee1-4446-4343-b04b-0985bcaa6982",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue deleted successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ef5e20f-9e44-4459-ac5f-1f61e2e9ecdd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nThe group does not exist, groupId:{callQueueId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3097c20-b4ae-40ef-a539-5e3cf1b589e7",
      "documentation": "Get call queue details",
      "method": "get",
      "endpoint": "phone/call_queues/:callQueueId",
      "responses": [
        {
          "uuid": "d472bd64-5f3f-449f-98d8-032f7c5723b2",
          "body": "{\n  \"extension_number\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"members\": {\n    \"common_area_phones\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"\",\n        \"level\": \"{{oneOf (array 'manager' 'user')}}\",\n        \"name\": \"\",\n        \"receive_call\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  },\n  \"name\": \"\",\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\",\n      \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n    }\n  ],\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nCall Queue details retrieved successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aaad7167-600b-4fbb-9fde-8e83a689c91b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\n The group does not exist, groupId:{callQueueId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2003c7e9-d15f-46db-b1fe-5e5ee3cd41ee",
      "documentation": "Update call queue details",
      "method": "patch",
      "endpoint": "phone/call_queues/:callQueueId",
      "responses": [
        {
          "uuid": "5dbb2a37-4f3c-47ca-862a-73a3f5363130",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue details updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42b910d8-007c-4bc7-b58b-83e617cc6265",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{groupId}<br>\nTimezone not found in the system.<br><br>\n**Error Code:** `400`<br>\nUnable to update this call queue as it is used for internal safety response team.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04607fdf-ca6a-4141-af88-5c350588dc1d",
      "documentation": "Change call queue manager",
      "method": "put",
      "endpoint": "phone/call_queues/:callQueueId/manager",
      "responses": [
        {
          "uuid": "0635d41d-98ce-4945-b935-c8005f62f795",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall queue manager changed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05e69b22-248f-4683-b0b9-226ca88b643e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21a49e93-2123-424e-b773-a440476e3ef6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6d27a7fb-ef69-48af-9bb9-ed1c751a61c3",
      "documentation": "Unassign all members",
      "method": "delete",
      "endpoint": "phone/call_queues/:callQueueId/members",
      "responses": [
        {
          "uuid": "eac000cd-99f7-404b-8004-f7daf6d9e91d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8c30280-c660-40e3-989d-16cda90268ab",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7892614c-74bc-41d2-a1e0-ad984e3a2d92",
      "documentation": "Add members to a call queue",
      "method": "post",
      "endpoint": "phone/call_queues/:callQueueId/members",
      "responses": [
        {
          "uuid": "d970ea97-4332-4dba-bcc0-1bd8c2d399c3",
          "body": "{}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nMembers added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb765635-78eb-4a73-95ac-7834c9986eb8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.<br>\nExceeded the maximum number to add members per time.<br><br>\n**Error Code:** `412`<br>\nThe maximum number of Call Queue members is up to {maxSize}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd224285-70f7-43eb-bdb2-417d07b49615",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4f48dde-d805-427c-918d-991df91d565b",
      "documentation": "Unassign a member",
      "method": "delete",
      "endpoint": "phone/call_queues/:callQueueId/members/:memberId",
      "responses": [
        {
          "uuid": "9d1f5417-0bda-4f4c-84c9-0d7903cce880",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2dea2e8-d9b3-4011-b27e-b41337af71c7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n**Error Code:** `400`<br>Unable to delete manager<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12c61284-3d9e-437b-9319-92baa384c70b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\nUnable to find group member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3edbe3f5-a8ab-4037-a728-08ede589ce88",
      "documentation": "Unassign all phone numbers",
      "method": "delete",
      "endpoint": "phone/call_queues/:callQueueId/phone_numbers",
      "responses": [
        {
          "uuid": "39e4c0a0-10b1-475e-bb4e-ef72daa3fb58",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7757048-17c7-417c-b74e-f63e5d4129f8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "820976e3-284b-4362-af08-a1391a11eba1",
      "documentation": "Assign numbers to a call queue",
      "method": "post",
      "endpoint": "phone/call_queues/:callQueueId/phone_numbers",
      "responses": [
        {
          "uuid": "fa3847ad-ba2f-45ed-8b9a-bc98cf2805a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ce9ea00-5568-4d77-af80-1c810a3851db",
      "documentation": "Unassign a phone number",
      "method": "delete",
      "endpoint": "phone/call_queues/:callQueueId/phone_numbers/:phoneNumberId",
      "responses": [
        {
          "uuid": "ef2af60d-2066-4043-85f2-10e5c6d03ad7",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone Number unassigned successfuly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8eb5add8-cfaa-4a41-9feb-f370f4cf6293",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation failed. The group does not exist, groupId:{callQueueId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cfcc054-8374-42e6-9f20-0bc14099b7a1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nPhone number not belong to call queue.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3802ea00-68a9-43a0-a77a-dc06f3b1877a",
      "documentation": "Get call queue recordings",
      "method": "get",
      "endpoint": "phone/call_queues/:callQueueId/recordings",
      "responses": [
        {
          "uuid": "f3b6d8d9-0adf-4272-970e-de5522f92f46",
          "body": "{\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"direction\": \"\",\n      \"download_url\": \"\",\n      \"duration\": {{faker 'datatype.number'}},\n      \"id\": \"\"\n    }\n  ],\n  \"to\": \"\",\n  \"total_records\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad247f62-5752-41ea-96a1-bd9a0379e7b4",
      "documentation": "List calling plans",
      "method": "get",
      "endpoint": "phone/calling_plans",
      "responses": [
        {
          "uuid": "5ce24b66-bb4e-4547-a2bd-c8f8028cee02",
          "body": "{\n  \"calling_plans\": [\n    {\n      \"assigned\": {{faker 'datatype.number'}},\n      \"available\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"subscribed\": {{faker 'datatype.number'}},\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nCalling plans listed successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0067a527-a98e-4829-a1ea-bd2b05f10a1a",
      "documentation": "List common area phones",
      "method": "get",
      "endpoint": "phone/common_area_phones",
      "responses": [
        {
          "uuid": "e82a6072-4d42-4472-9c18-1f568ffaae19",
          "body": "{\n  \"common_area_phones\": [\n    {\n      \"calling_plans\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"device_type\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"mac_address\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"total_records\": 30\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nList of Common Area Phones retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40cf622d-79cf-4fef-8d24-269798a1f3cb",
      "documentation": "Add a common area phone",
      "method": "post",
      "endpoint": "phone/common_area_phones",
      "responses": [
        {
          "uuid": "99be5261-8aa9-4e10-a5f2-70536c048ffd",
          "body": "{\n  \"display_name\": \"\",\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\n\nCommon area phone added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11e14840-0886-4442-83e8-5d44d437eb1f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation failed.<br>\n* Phone manufacturer does not exist.\n* Phone model does not exist.\n* Phone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e609df87-c6b7-41c4-b9fb-d322df68e64c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409`<br>\n**Error Code:** `409`<br>\nThe MAC Address already exists in the system.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "743f60e4-3e02-44ca-88bb-2e1f8f14a567",
      "documentation": "Delete a common area phone",
      "method": "delete",
      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
      "responses": [
        {
          "uuid": "bac710b9-cb04-4a85-adea-a7f308abc30f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4dda2df-edf6-46d5-8664-ba7c1e4636d3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed<br>\nDevice does not exist in the system.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d8d00b33-d914-47d0-8036-345b88f0921d",
      "documentation": "Get common area phone details",
      "method": "get",
      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
      "responses": [
        {
          "uuid": "301ee5fd-809f-46f9-8a3e-5b7e63d08f17",
          "body": "{\n  \"device_type\": \"\",\n  \"id\": \"\",\n  \"mac_address\": \"\",\n  \"name\": \"\",\n  \"provision\": {\n    \"sip_accounts\": [\n      {\n        \"authorization_id\": \"\",\n        \"outbound_proxy\": \"\",\n        \"password\": \"\",\n        \"sip_domain\": \"\",\n        \"user_name\": \"\"\n      }\n    ],\n    \"type\": \"{{oneOf (array 'assisted' 'ztp' 'manual')}}\",\n    \"url\": \"\"\n  },\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nCommon Area Phone details returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c805082a-4f00-41d3-bc82-79c80ff42803",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8733b09-04a1-44e4-9367-460887439ae6",
      "documentation": "Update common area phone",
      "method": "patch",
      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
      "responses": [
        {
          "uuid": "954449ba-d3ad-403a-a6f0-435aaf68b601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone information updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7857ed50-2153-4671-8071-097a06978555",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Device does not exist in the system.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b7a90180-4628-424d-ad2e-e76f9687b2f1",
      "documentation": "Change main company number",
      "method": "put",
      "endpoint": "phone/company_number",
      "responses": [
        {
          "uuid": "7b9d7c6d-4ac9-4efc-8d6b-5b0eac53d7f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nMain company number updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "60f67d08-c391-4232-9d72-0cc7d86ba798",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br><br>\nTarget phone number can not be set as main company number.<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a1d0eb7-39c7-48fd-a76d-9bdbe4b33aed",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`\nphoneNumber does not exist, phonenumberId:{phonenumberId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cbdbe22d-7ed4-434b-9f46-63bee95f8cf9",
      "documentation": "List devices",
      "method": "get",
      "endpoint": "phone/devices",
      "responses": [
        {
          "uuid": "d8b9cbf8-b083-4d83-8226-e2cfb8f77861",
          "body": "{\n  \"devices\": [\n    {\n      \"assignee\": {\n        \"extension_number\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"device_type\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"mac_address\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"total_records\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nDevices listed successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83da62c6-a46a-4250-98e9-976a66f87ded",
      "documentation": "Add a device",
      "method": "post",
      "endpoint": "phone/devices",
      "responses": [
        {
          "uuid": "c066ec16-1274-4d00-9fa3-5ccb94cd5ba3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nDevice added successfully.  ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c53b34f-35b5-49da-b830-62845592ad9d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation failed.**<br>\nPhone manufacturer does not exist.<br>\nPhone model does not exist.<br>\nPhone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.<br>\nThe MAC Address already exists in the system.<br>\nEach user can be assigned up to three desk phones.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28b71a9b-8be1-4ab3-92fd-1785fd01821e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b9ce7c2-3320-41cb-bc2f-166bb861244e",
      "documentation": "Delete a device",
      "method": "delete",
      "endpoint": "phone/devices/:deviceId",
      "responses": [
        {
          "uuid": "9882e2d4-0860-4dbf-b4dc-072d75878b66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nDevice deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e81ee0ce-dca0-466d-9e60-ef1fe879630d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Vaidation Failed.**<br>\nDevice does not exist in the system.\nOnly unassigned device can be deleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b7d87c24-cba6-43b9-b47f-eeebfe5e14d9",
      "documentation": "Get device details",
      "method": "get",
      "endpoint": "phone/devices/:deviceId",
      "responses": [
        {
          "uuid": "0f637f6f-af1a-4241-bd09-5158548586d2",
          "body": "{\n  \"assignee\": {\n    \"extension_number\": {{faker 'datatype.number'}},\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"device_type\": \"\",\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"mac_address\": \"\",\n  \"provision\": {\n    \"sip_accounts\": [\n      {\n        \"authorization_id\": \"\",\n        \"outbound_proxy\": \"\",\n        \"password\": \"\",\n        \"shared_line\": {\n          \"alias\": \"\",\n          \"line_subscription\": {\n            \"display_name\": \"\",\n            \"extension_number\": {{faker 'datatype.number'}},\n            \"phone_number\": \"\"\n          },\n          \"outbound_caller_id\": \"\"\n        },\n        \"sip_domain\": \"\",\n        \"user_name\": \"\"\n      }\n    ],\n    \"type\": \"{{oneOf (array 'assisted' 'ztp' 'manual')}}\",\n    \"url\": \"\"\n  },\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nDevice information retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bd630aa4-5755-499f-81b0-2679d9807722",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "206f842b-b900-47c0-a356-7331d5932a69",
      "documentation": "Update a device",
      "method": "patch",
      "endpoint": "phone/devices/:deviceId",
      "responses": [
        {
          "uuid": "780c882f-1639-4ce7-965b-58d188e3f4c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nDevice updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73dab5b7-f17e-4f71-be0c-ca95db7ae197",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\nValidation failed. Device does not exist in the system.<br>\nInvalid userId.<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e710df82-d31e-4d76-85c9-835fa69083eb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}<br>\nThe user extension does not exist, extensionId: {extensionId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "628945f6-99f6-4928-8e81-0bdefc77effd",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "**HTTP Status Code:** `429` **Too Many Requests**<br>\n**Error Code:** `429`<br>\nEach user can be assigned up to three desk phones.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "58115d1b-77a0-4a16-85e1-2734b6ccc1f3",
      "documentation": "List call logs",
      "method": "get",
      "endpoint": "phone/metrics/call_logs",
      "responses": [
        {
          "uuid": "310db379-bb10-44e7-abd0-d9b3b0a6066a",
          "body": "{\n  \"call_logs\": [\n    {\n      \"call_id\": \"\",\n      \"callee\": {\n        \"codec\": \"\",\n        \"device_type\": \"\",\n        \"extension_number\": \"\",\n        \"headset\": \"\",\n        \"isp\": \"\",\n        \"microphone\": \"\",\n        \"phone_number\": \"\",\n        \"site_id\": \"\"\n      },\n      \"caller\": {\n        \"codec\": \"\",\n        \"device_type\": \"\",\n        \"extension_number\": \"\",\n        \"headset\": \"\",\n        \"isp\": \"\",\n        \"microphone\": \"\",\n        \"phone_number\": \"\",\n        \"site_id\": \"\"\n      },\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'datatype.number'}},\n      \"mos\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f8971d2-0d05-4dca-b2df-602524ac2cd2",
      "documentation": "Get call QoS",
      "method": "get",
      "endpoint": "phone/metrics/call_logs/:callId/qos",
      "responses": [
        {
          "uuid": "96e3f548-ed2b-41c8-b6df-112eb5bcfb7c",
          "body": "{\n  \"call_id\": \"\",\n  \"callee_qos\": {\n    \"receiving\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ],\n    \"sending\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ]\n  },\n  \"caller_qos\": {\n    \"receiving\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ],\n    \"sending\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa526aee-ac41-4b8d-9d2a-cec177cd3434",
      "documentation": "Get call details from call log",
      "method": "get",
      "endpoint": "phone/metrics/call_logs/:call_id",
      "responses": [
        {
          "uuid": "94b3f8dc-4325-42ff-bfe4-88f47b62dbd0",
          "body": "{\n  \"call_id\": \"\",\n  \"callee\": {\n    \"codec\": \"\",\n    \"device_type\": \"\",\n    \"extension_number\": \"\",\n    \"headset\": \"\",\n    \"isp\": \"\",\n    \"microphone\": \"\",\n    \"phone_number\": \"\",\n    \"site_id\": \"\"\n  },\n  \"caller\": {\n    \"codec\": \"\",\n    \"device_type\": \"\",\n    \"extension_number\": \"\",\n    \"headset\": \"\",\n    \"isp\": \"\",\n    \"microphone\": \"\",\n    \"phone_number\": \"\",\n    \"site_id\": \"\"\n  },\n  \"date_time\": \"\",\n  \"direction\": \"\",\n  \"duration\": {{faker 'datatype.number'}},\n  \"mos\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc992d26-82f8-4d3e-9ec5-53eca28b5e5a",
      "documentation": "List phone numbers",
      "method": "get",
      "endpoint": "phone/numbers",
      "responses": [
        {
          "uuid": "67fe1b93-051f-4424-93d9-2587e83e818f",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"phone_numbers\": [\n    {\n      \"assignee\": {\n        \"extension_number\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone')}}\"\n      },\n      \"capability\": [\n        \"\"\n      ],\n      \"carrier\": {\n        \"code\": \"\",\n        \"name\": \"\"\n      },\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"number\": \"\",\n      \"number_type\": \"{{oneOf (array 'toll' 'tollfree')}}\",\n      \"sip_group\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"source\": \"{{oneOf (array 'internal' 'external')}}\",\n      \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone numbers listed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e2d8d32-8f0f-4db3-a0d0-0e7210279805",
      "documentation": "Get phone number details",
      "method": "get",
      "endpoint": "phone/numbers/:numberId",
      "responses": [
        {
          "uuid": "99cf01ee-8609-4e11-b413-b039f67da548",
          "body": "{\n  \"assignee\": {\n    \"extension_number\": {{faker 'datatype.number'}},\n    \"id\": \"\",\n    \"name\": \"\",\n    \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone')}}\"\n  },\n  \"capability\": [\n    \"\"\n  ],\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"number\": \"\",\n  \"number_type\": \"{{oneOf (array 'toll' 'tollfree')}}\",\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"source\": \"{{oneOf (array 'internal' 'external')}}\",\n  \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone number details retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "feca9d25-5272-4d23-9ba7-6621861506ff",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist, phonenumberId:{phoneNumberId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60d164c4-bbe3-4c70-a024-f6061fad5080",
      "documentation": "Update phone number details",
      "method": "patch",
      "endpoint": "phone/numbers/:numberId",
      "responses": [
        {
          "uuid": "32091630-18a8-4430-af75-b979e5dea2f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nNo Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3349e4c-5d44-4ca9-b1e0-78066aaa9697",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\n\n**Error Code:** `300`<br>\nThe value of capability is invalid. Provide a valid capability and try again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7559d779-5bf9-4ed5-908a-198c61be0aae",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nPhone number does not exist: {numberId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dddc6b3-8d49-43cd-8204-ca4bbbbd9b35",
      "documentation": "Get call recordings",
      "method": "get",
      "endpoint": "phone/recordings",
      "responses": [
        {
          "uuid": "bae88377-e1fc-41f5-81ad-b6448880cf86",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"{{oneOf (array '1' '2')}}\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"{{oneOf (array '1' '2')}}\",\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"direction\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n      \"download_url\": \"\",\n      \"duration\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"owner\": {\n        \"extension_number\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'call queue')}}\"\n      },\n      \"recording_type\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code** `200`<br>\nOK.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9cd8f6f3-05d3-4026-a052-fde637a4bf8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\nThe template name you entered already exists. Provide a new name for the template and try again.<br>\n\n**Error Code:** `300`<br>\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf687027-e380-4caa-bea1-72bfbdc8b818",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "76f9f50f-e7af-4396-8a9f-b2983548e8c7",
      "documentation": "Get operation logs report",
      "method": "get",
      "endpoint": "phone/reports/operationlogs",
      "responses": [
        {
          "uuid": "8d91d6a8-4ec8-495b-99ec-5bf2c06fc6d5",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nReport returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4b4073f8-0954-4e29-a6df-932c85e39aeb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `124`<br> Account does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f376b5cf-acb8-44a0-991e-9f8538550cd4",
      "documentation": "List setting templates",
      "method": "get",
      "endpoint": "phone/setting_templates",
      "responses": [
        {
          "uuid": "70a9f797-663f-4390-80a2-4a2ce3d72242",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"templates\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'user' 'group' 'autReceptionist' 'commonArea' 'zr' 'interop')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nOK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7bca105a-95df-48d1-8968-adb0fc339f14",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\n\n**Error Code:** `300`<br>\nMultiple Sites option has been disabled. Enable it and try again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c00a9b9a-e949-422a-b832-c9f8ef877427",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4154686-1d34-40a1-b902-526815b04539",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nSite does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5dfdcfe4-05c6-4362-82aa-7464307b51fc",
      "documentation": "Add a setting template",
      "method": "post",
      "endpoint": "phone/setting_templates",
      "responses": [
        {
          "uuid": "64209198-93b3-470a-a1a1-6e9c5a027baa",
          "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nCreated Successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5f4b6e8-ecae-49f5-9988-757feb8b9cbe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\nThe template name you entered already exists. Provide a new name for the template and try again.<br>\n\n**Error Code:** `300`<br>\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d05e7f3d-51c6-4236-bdbb-95e0c13ee078",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c93616c-5b70-41b8-b32b-dcc4ebe346b1",
      "documentation": "Get setting template details",
      "method": "get",
      "endpoint": "phone/setting_templates/:templateId",
      "responses": [
        {
          "uuid": "0e0a1199-e17e-4158-afaf-1c7665d0a29c",
          "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"policy\": {\n    \"ad_hoc_call_recording\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"recording_start_prompt\": {{faker 'datatype.boolean'}},\n      \"recording_transcription\": {{faker 'datatype.boolean'}}\n    },\n    \"auto_call_recording\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"recording_calls\": \"\",\n      \"recording_start_prompt\": {{faker 'datatype.boolean'}},\n      \"recording_transcription\": {{faker 'datatype.boolean'}}\n    },\n    \"sms\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"international_sms\": {{faker 'datatype.boolean'}}\n    },\n    \"voicemail\": {\n      \"allow_transcription\": {{faker 'datatype.boolean'}},\n      \"enable\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"profile\": {\n    \"area_code\": \"\",\n    \"country\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'user' 'group' 'autoReceptionist' 'commonArea' 'zr' 'interop')}}\",\n  \"user_settings\": {\n    \"audio_prompt_language\": \"\",\n    \"block_calls_without_caller_id\": {{faker 'datatype.boolean'}},\n    \"call_handling\": {\n      \"business_hours\": {\n        \"business_hour_action\": \"{{oneOf (array '0' '1' '9' '26' '50')}}\",\n        \"connect_to_operator\": {\n          \"enable\": {{faker 'datatype.boolean'}},\n          \"id\": \"\",\n          \"type\": \"{{oneOf (array 'user' 'zoomRoom' 'commonAreaPhone' 'autoReceptionist' 'callQueue' 'sharedLineGroup')}}\"\n        },\n        \"custom_hours\": [\n          {\n            \"from\": \"\",\n            \"to\": \"\",\n            \"type\": \"{{oneOf (array '1' '2')}}\",\n            \"weekday\": \"{{oneOf (array '1' '2' '3' '4' '5' '6' '7')}}\"\n          }\n        ],\n        \"ring_type\": \"{{oneOf (array '0' '1')}}\",\n        \"ringing_duration\": \"{{oneOf (array '15' '20' '25' '30' '35' '40' '45' '50' '55' '60')}}\",\n        \"type\": \"{{oneOf (array '1' '2')}}\"\n      },\n      \"close_hours\": {\n        \"close_hour_action\": \"{{oneOf (array '0' '1' '9' '26' '50')}}\",\n        \"connect_to_operator\": {\n          \"enable\": {{faker 'datatype.boolean'}},\n          \"id\": \"\",\n          \"type\": \"{{oneOf (array 'user' 'zoomRoom' 'commonAreaPhone' 'autoReceptionist' 'callQueue' 'sharedLineGroup')}}\"\n        },\n        \"max_wait_time\": \"{{oneOf (array '15' '20' '25' '30' '35' '40' '45' '50' '55' '60')}}\"\n      }\n    },\n    \"desk_phone\": {\n      \"pin_code\": \"\"\n    },\n    \"hold_music\": \"{{oneOf (array 'default' 'disable')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nOK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0fcb8a71-b0e2-40ba-80bd-65bf185f188e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d0ac93b-9eca-494b-a892-0fb88c5c1b6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nSite does not exist. Settings template does not exist: {templateId}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "433a196f-ba8a-4e90-9348-bbee6b73b654",
      "documentation": "Update a setting template",
      "method": "patch",
      "endpoint": "phone/setting_templates/:templateId",
      "responses": [
        {
          "uuid": "492dd0a4-bfaa-4bc9-821c-24993a2980fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nNo Content. Request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "812cfd55-c49c-477d-9b31-ce253a7d8d8a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe country code you entered is invalid. Provide a valid country code and try again.<br>\nThe area code you entered is invalid. Provide a valid area code with a length between 0 to 6 digits and try again.<br>\nThe value you entered for the audio prompt language code is invalid.\nPIN code could only include numbers.<br>\nInvalid PIN code. PIN code must be {0} digits long.<br>\nInvalid PIN code. PIN code must be {0} to {1} digits long.<br>\nInvalid PIN code. Your PIN code must not be the same as the extension number.<br>\nInvalid PIN code. The PIN code must not contain a group of repeated digits.<br>\nPIN code cannot be an ascending or descending group of digits.\nConnect to operator type error.<br>\nYou provided an invalid value for call handling ring type. The value of this field must either be “simultaneous” or “sequential”.<br>\nYou provided an invalid value for business hours type field. The value of this field must either be 1 or 2.<br>\nYou provided an invalid value for the business hours action field.<br>\nYou provided an invalid value for the close hours action field.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9e062cb-9900-4636-809e-862309824eee",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0697b968-03fb-4a16-a60c-6879644c9746",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nSite does not exist. Settings template does not exist: {templateId}.\nOperator was not found for the following id: {0}.\nExternal contact was not found for the following id: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a13c04c-3a25-4c00-b339-b4418dd4a321",
      "documentation": "List shared line groups",
      "method": "get",
      "endpoint": "phone/shared_line_groups",
      "responses": [
        {
          "uuid": "0aca7b56-5756-40e3-b987-96ea8349948d",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"shared_line_groups\": [\n    {\n      \"display_name\": \"\",\n      \"extension_number\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>\nShared Line Groups returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5562f96c-254e-4a2f-9082-f0bbd33233b2",
      "documentation": "Create a shared line group",
      "method": "post",
      "endpoint": "phone/shared_line_groups",
      "responses": [
        {
          "uuid": "bb5bf3bd-3b56-486f-b5c5-f9a904165bc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>\nShared Line Group created successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da45ef13-6778-4951-a208-4f26329b4a7b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed** <br>\n* Multiple Site has not been enabled for this account.<br>\n* Site does not exist. <br><br>\n**Error Code:** `400` <br>\nExtension number {extensionNumber} is already used.<br><br>\n**Error Code:** `409` <br>\nInvalid short number length. <br>\nNumber {extensionNumber} is a reserved extension number.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "713c63ba-afdd-4a9e-b6ff-94a6289f1840",
      "documentation": "Delete a shared line group",
      "method": "delete",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
      "responses": [
        {
          "uuid": "3bca94f8-0735-45c0-a439-d106ff8e0bde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nShared Line Group Deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "077201d1-255d-4de7-aa9a-b5e67c1b9c26",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed.**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f98c74ba-20f3-4569-a10b-7544039de15b",
      "documentation": "Get a shared line group",
      "method": "get",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
      "responses": [
        {
          "uuid": "1b13ff85-6a48-477f-b07d-33facbffb5c7",
          "body": "{\n  \"display_name\": \"\",\n  \"extension_number\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"members\": {\n    \"common_area_phones\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"primary_number\": \"\",\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\",\n  \"timezone\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5bfac252-f21c-460b-8e61-6c3e7b99e0c7",
      "documentation": "Update a shared line group",
      "method": "patch",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
      "responses": [
        {
          "uuid": "84870f02-1036-4d3d-9100-381dbf7232df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** \n\nShared Line Group Updated Successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19fc05f6-1260-431f-ad11-1dc7abfd3285",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed** <br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.<br>\n* Timezone not found in the system.<br><br>\n**Error Code:** `409` <br>\n* Invalid short number length.<br>\n* Number {extensionNumber} is a reserved extension number.<br><br>\n**Error Code:** `400` <br>\nExtension number {extensionNumber} is already used.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d90946a-7a0c-4687-bf43-d73a5814eec3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n* No phone numbers have been assigned to this Shared Line Group.<br>\n* Primary phone number was not found in the list of numbers assigned to this Shared Line Group.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a462f04-f56b-400a-8822-5e92887eb321",
      "documentation": "Unassign members of a shared line group",
      "method": "delete",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members",
      "responses": [
        {
          "uuid": "9688d4db-0a34-4aa0-9ea0-f5d5fa7d7ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\n\nMembers unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea50229e-c67e-4ec6-ba02-5fb261558595",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "038b4ea8-f986-4693-ae1e-e59d926a065e",
      "documentation": "Add members to a shared line group",
      "method": "post",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members",
      "responses": [
        {
          "uuid": "7520b203-89d6-4232-ad59-f52097ead47d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** \nMembers added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2ecdd11c-8396-4f24-9da4-66c27b9c7caf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\nMembers of a shared line group should come from same site.<br>\nA shared line group can only contain {0} members at most.<br><br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f58b280-6f33-47d6-91ab-e4fca3e2b19e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\nDevice does not exist in the system.\n\n**Error Code:** `1001`<br>\nUser not found: {userId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f8b71f1-caec-4e77-ac3d-535b3b04f67f",
      "documentation": "Unassign a member from a shared line group",
      "method": "delete",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members/:memberId",
      "responses": [
        {
          "uuid": "62df973c-e7f3-4283-aa06-b2f9efe53a7e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\n\nMembers unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94dfc36e-197c-4077-9b1a-70f080c07ca2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "684f04a0-aeed-4933-80a6-64f1835087ba",
      "documentation": "Assign phone numbers",
      "method": "post",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/phone_numbers",
      "responses": [
        {
          "uuid": "c24c8db8-b7f6-4031-a957-c438e547388b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nPhone number(s) assigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ddd7fc90-38c0-4c97-b4be-c153cdbce5ae",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist<br><br>\n**Error Code:** `300` **Validation Failed.**<br>\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0a39c3c-c649-4148-a5f3-96827eca7772",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`\nPhone number does not belong to this account",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb7aba79-5930-4fcc-af73-55d56f054373",
      "documentation": "Unassign a phone number",
      "method": "delete",
      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/phone_numbers/:phoneNumberId",
      "responses": [
        {
          "uuid": "35cdf797-2875-4ab8-9729-56af854f56ad",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone Numbers unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "afbdc8b8-80e7-4a6f-a805-4cc1ec4f0381",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist<br><br>\n**Error Code:** `300` **Validation Failed.**<br>\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a61c2db1-fb21-4408-ac43-ca86560ec468",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`\nPhone number does not belong to this account",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5704d8d-802a-4af6-b62c-f48a82cfcf3b",
      "documentation": "List BYOC SIP trunks",
      "method": "get",
      "endpoint": "phone/sip_trunk/trunks",
      "responses": [
        {
          "uuid": "497de593-e097-4ebd-b3ed-8887491e8b6e",
          "body": "{\n  \"byoc_sip_trunk\": [\n    {\n      \"carrier\": \"\",\n      \"carrier_account\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"region\": \"\",\n      \"sbc_label\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Codes**: `200`<br>\nOK.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5c4b680-9179-4777-82e3-fc1e77d5e85c",
      "documentation": "List phone sites",
      "method": "get",
      "endpoint": "phone/sites",
      "responses": [
        {
          "uuid": "9a870e3d-0fbd-49a2-a777-483be7d591f9",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": \"\",\n  \"sites\": [\n    {\n      \"country\": {\n        \"code\": \"\",\n        \"name\": \"\"\n      },\n      \"id\": \"\",\n      \"main_auto_receptionist\": {\n        \"extension_id\": \"\",\n        \"extension_number\": \"\",\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"name\": \"\",\n      \"site_code\": \"\"\n    }\n  ],\n  \"total_records\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22b35863-83c7-4fb7-862c-74d7f6562db1",
      "documentation": "Create a phone site",
      "method": "post",
      "endpoint": "phone/sites",
      "responses": [
        {
          "uuid": "66ef4857-c056-4d04-94ba-454db7149f9f",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSite created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9dff9e9d-ba79-454f-9a81-d167655005d4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nInvalid site code length.<br>\nCountry information is invalid.<br>\nThis address could not be validated / geocoded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31201a8e-baa6-46a9-9145-80e65266a007",
      "documentation": "Delete a phone site",
      "method": "delete",
      "endpoint": "phone/sites/:siteId",
      "responses": [
        {
          "uuid": "df892f75-0474-4fcd-8df7-98f574809edc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nPhone Site deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86445507-958c-47b0-91e7-167c8d7b81e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nUnable to transfer to the same site.<br>\nMain company number can not change {phoneNumber}.<br>\nSite does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8ede0e1-7a61-4770-9e34-6b432b52a8ff",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\n**Error Code:** `409`<br>\nConflict target extension number, try later.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa79e55e-b452-4578-8206-5c36b8d72fa3",
      "documentation": "Get phone site details",
      "method": "get",
      "endpoint": "phone/sites/:siteId",
      "responses": [
        {
          "uuid": "44aa53e4-92b8-4dbd-a39b-8d2e68287b6b",
          "body": "{\n  \"country\": {\n    \"code\": \"\",\n    \"name\": \"\"\n  },\n  \"id\": \"\",\n  \"main_auto_receptionist\": {\n    \"extension_id\": \"\",\n    \"extension_number\": {{faker 'datatype.number'}},\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"name\": \"\",\n  \"short_extension\": {\n    \"length\": 3\n  },\n  \"site_code\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSite information retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51384b9f-d1c4-4467-93f0-ee571356ab54",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**Error Code:** `400`<br>\nSite does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c66abef-d33d-48a0-8fc9-a68538a5cd35",
      "documentation": "Update phone site details",
      "method": "patch",
      "endpoint": "phone/sites/:siteId",
      "responses": [
        {
          "uuid": "40e29199-1bf6-4305-a1b7-e3288088157f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSite details updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b43eb7ec-757a-4c86-a07c-b21bfee8784c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Site does not exist.<br><br>\n**Error Code:** `400`<br>\nSite Code is disabled.<br>\nInvalid site code length.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7dea7cdb-25a3-413f-abcd-7fb9f5477d30",
      "documentation": "List phone users",
      "method": "get",
      "endpoint": "phone/users",
      "responses": [
        {
          "uuid": "3f9e04a6-cfe4-4f2f-8483-4a2e856079c8",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}},\n  \"users\": [\n    {\n      \"calling_plans\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"extension_number\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"phone_user_id\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone users retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d15dc98-c954-4811-9671-50b479daec49",
      "documentation": "Get user's profile",
      "method": "get",
      "endpoint": "phone/users/:userId",
      "responses": [
        {
          "uuid": "5ee17b3e-60e2-47ac-8fc1-ddc537508c4f",
          "body": "{\n  \"calling_plan\": [\n    {\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"email\": \"\",\n  \"extension_number\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"phone_user_id\": \"\",\n  \"site_admin\": {{faker 'datatype.boolean'}},\n  \"site_id\": \"\",\n  \"status\": \"{{oneOf (array 'activate' 'deactivate')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>User profile object returned. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9cf59d38-8d89-4fcf-a7e2-7d0ada433551",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error code:** `300` <br> User does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c85e228-b125-4558-9ef0-01d6b8a8b3fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error code**: `1001` <br>User does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f7cbc02-3fd5-491a-8a70-c20a5a1d235e",
      "documentation": "Update user's profile",
      "method": "patch",
      "endpoint": "phone/users/:userId",
      "responses": [
        {
          "uuid": "5b8e0ecf-ce91-405b-8daa-65d85a25c58f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nProfile updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37d42a60-43cf-4699-9ff5-8ce9961951e7",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code**: `300`<br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c3420a5-ae21-4d3b-b2b4-aee368bf5a30",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nExtension number {extensionNumber} is already in use.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44e55da4-447f-4723-a069-0679c34504f1",
      "documentation": "Get user's call logs",
      "method": "get",
      "endpoint": "phone/users/:userId/call_logs",
      "responses": [
        {
          "uuid": "8e3c5d3b-ec74-4eb3-a10d-cfcbc2976699",
          "body": "{\n  \"call_logs\": [\n    {\n      \"accepted_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"call_id\": \"\",\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"charge\": \"\",\n      \"client_code\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'datatype.number'}},\n      \"forwarded_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"forwarded_to\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"has_recording\": {{faker 'datatype.boolean'}},\n      \"has_voicemail\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"outgoing_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"path\": \"\",\n      \"rate\": \"\",\n      \"recording_type\": \"\",\n      \"result\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"user_id\": \"\",\n      \"waiting_time\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status code:** `200`\nUser's call logs returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "853ad95f-9874-4886-8ef8-5730df630315",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f804fff7-86b7-47af-9ac1-5d86b50828d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status code:** `404`\n**Error Code:** `300`<br>\nUser does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "239a88ec-e2c9-4ee5-88d4-887028a3659a",
      "documentation": "Delete a user's call log",
      "method": "delete",
      "endpoint": "phone/users/:userId/call_logs/:callLogId",
      "responses": [
        {
          "uuid": "7e722c97-d770-431c-96e5-1a0eae0a308e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code**: `204` <br>\nLog deleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a6b0cc3-7f99-4614-9373-36df0198ccae",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code**: `404` <br>\n**Error Code**: `124` <br>\nAccount does not exist: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "606a6492-7981-42a1-bb8a-cbcc3c048148",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code**: `404` <br>\nCall log information was not found for the following callLogId: {callLogId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "157b8b85-32c0-4f00-8ea6-98f157edc8f3",
      "documentation": "Assign calling plan to a user",
      "method": "post",
      "endpoint": "phone/users/:userId/calling_plans",
      "responses": [
        {
          "uuid": "7d47eb3e-fcaf-4944-9bfb-4965e6712c6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status code:** `200`<br>\nCalling plan assigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7d48e5a-a360-4c11-b1ce-7c3e01fe0363",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d91e27e7-d0dc-4aa4-8349-0260396fd02b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status code:** `404`<br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d4bf188-bc24-424b-9b19-d19cd28399f9",
      "documentation": "Unassign user's calling plan",
      "method": "delete",
      "endpoint": "phone/users/:userId/calling_plans/:type",
      "responses": [
        {
          "uuid": "5b63366e-890d-42ec-b6ea-1d1dd5505d30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br>\nCalling plan unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a29bb4db-ab13-458f-a540-d7b38d83fd29",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300` <br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b4bcdb3-b094-4dd2-8a3a-bd21bedd5c83",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56868f19-4176-4e01-97db-e030f1dd482e",
      "documentation": "Assign phone number to user",
      "method": "post",
      "endpoint": "phone/users/:userId/phone_numbers",
      "responses": [
        {
          "uuid": "4adcd45f-31dd-4403-ba12-71a122c10973",
          "body": "{\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` <br>\nPhone number assigned successfully. \n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3defbea-cd47-4d8e-a7d3-2613b4df6ec1",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nUser does not belong to this account.<br>\nValidation Failed. Phone number has already been assigned.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e57dbc50-6bdb-4199-9587-ab332e6d31a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nUser does not have a calling plan.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ce460df-9eef-4aa5-b201-ff36a6a119df",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>This user does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb6aadcb-89a0-437f-ba58-8b19834783af",
      "documentation": "Unassign phone number",
      "method": "delete",
      "endpoint": "phone/users/:userId/phone_numbers/:phoneNumberId",
      "responses": [
        {
          "uuid": "24999832-8b78-46eb-9f35-37b87035aebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12b4fa53-a038-4f86-8918-d3734d82373e",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "938d35a3-c29f-437d-a873-4735cb084e19",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "358e72d5-3d2b-4877-a72a-e4571ccff334",
      "documentation": "Get user's recordings",
      "method": "get",
      "endpoint": "phone/users/:userId/recordings",
      "responses": [
        {
          "uuid": "6f9ff1b3-caa7-4373-b6be-2fa504e37d5d",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"download_url\": \"\",\n      \"duration\": \"\",\n      \"id\": \"\"\n    }\n  ],\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d1ed95e-64dc-4496-8986-34d49b9af9f4",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error code:** `300`\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49f0cd0c-a754-41cd-98a1-9a7b68c77537",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error code:** `1001`<br>\nUser does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9dfc455-aa68-4a07-9585-c3f6588c476f",
      "documentation": "Get user's settings",
      "method": "get",
      "endpoint": "phone/users/:userId/settings",
      "responses": [
        {
          "uuid": "e80b0786-b8e8-41a2-ae3e-ffeeeedaf4a7",
          "body": "{\n  \"area_code\": \"\",\n  \"company_number\": \"\",\n  \"desk_phone\": {\n    \"keys_positions\": {\n      \"primary_number\": \"\"\n    }\n  },\n  \"outbound_caller\": {\n    \"number\": \"\"\n  },\n  \"outbound_caller_ids\": {\n    \"is_default\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"number\": \"\"\n  },\n  \"voice_mail\": {\n    \"access_user_id\": \"\",\n    \"delete\": {{faker 'datatype.boolean'}},\n    \"download\": {{faker 'datatype.boolean'}},\n    \"shared_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser Setting object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20d2ae8d-7f47-40a8-9578-f9528284fe3e",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a184f45c-bb46-4343-8874-97df71fb0552",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5027ae4a-c7d3-4104-865e-37db880f70ed",
      "documentation": "Remove shared access",
      "method": "delete",
      "endpoint": "phone/users/:userId/settings/:settingType",
      "responses": [
        {
          "uuid": "e67ec2e6-f254-4c99-8321-b224622363b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nNo Content<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a25f426b-2c30-47a2-b312-da24a664596a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Codes** `404`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user sub setting type.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fe179f9-dda9-4e04-b4db-e1f830a31d9b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Codes** `404`<br>\nShared voicemail does not exist:{shared_id}<br>\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a5e4265-ce29-4c98-a515-650de133b1af",
      "documentation": "Update shared access",
      "method": "patch",
      "endpoint": "phone/users/:userId/settings/:settingType",
      "responses": [
        {
          "uuid": "f31081ed-4cd9-4eb6-ab9d-98676ecac5ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nNo Content<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38a8ad7c-91f6-4bef-921a-234737b8ed69",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user setting Type: {settingType}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25aa9ab8-8b0c-4023-8e86-81060b116225",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\nShared voicemail does not exist: {shared_id}.\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd72e567-eb6b-4188-ae48-1f53081cbcf1",
      "documentation": "Set up shared access",
      "method": "post",
      "endpoint": "phone/users/:userId/settings/:settingType",
      "responses": [
        {
          "uuid": "ddb4787e-4cf5-4264-87f1-b6cac492e317",
          "body": "{\n  \"voice_mail\": {\n    \"access_user_id\": \"\",\n    \"delete\": {{faker 'datatype.boolean'}},\n    \"download\": {{faker 'datatype.boolean'}},\n    \"shared_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code** `201` <br>\nCreated Successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "43c14aa0-3b53-4cb2-84e3-c7b4f554a642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Response Code:** `400`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user sub setting type.<br>\nVoicemail has already been shared to the user.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad2b669d-c00a-4196-84fe-657cda0a0d35",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e8d02f4-db31-4c4d-b322-1d856987e38c",
      "documentation": "Get user's voicemails",
      "method": "get",
      "endpoint": "phone/users/:userId/voice_mails",
      "responses": [
        {
          "uuid": "7b220458-720f-40ec-a634-72b0916acc5c",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}},\n  \"voice_mails\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"\",\n      \"download_url\": \"\",\n      \"duration\": \"\",\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'read' 'unread')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c78312e-4979-4e39-937c-a863a140b847",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** 300<br>\nUser does not belong to account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61a86d7d-3a38-44bf-a7e9-e8d16755918d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** 1001<br>\nUser does not exist: {userId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3f501074-2c65-44d1-b764-0ed59543f964",
      "documentation": "Delete a voicemail",
      "method": "delete",
      "endpoint": "phone/voice_mails/:voicemailId",
      "responses": [
        {
          "uuid": "7a460095-879a-4184-bc8b-589be3c2638b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**\n\nVoicemail deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6327f404-2046-4667-a95a-17c721d3d030",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b696406b-d93c-4b52-8b6f-69981d22096c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**\n\nVoice mail does not exist: {voicemailId}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1de6e388-7f90-46ce-af1a-c6053a5f7ae2",
      "documentation": "Get sign In / sign out activity report",
      "method": "get",
      "endpoint": "report/activities",
      "responses": [
        {
          "uuid": "3fa2e0bb-7bcd-448d-bebe-46144c622f16",
          "body": "{\n  \"activity_logs\": [\n    {\n      \"client_type\": \"\",\n      \"email\": \"\",\n      \"ip_address\": \"\",\n      \"time\": \"{{faker 'date.recent' 365}}\",\n      \"type\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": \"\",\n  \"to\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "348f4294-d69d-49eb-a51b-6603dbcbd03b",
      "documentation": "Get cloud recording usage report",
      "method": "get",
      "endpoint": "report/cloud_recording",
      "responses": [
        {
          "uuid": "98f5533e-3e8b-4b92-b2ea-6f8104d8ac7c",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b6d7d5b-cd0e-4d84-aa69-2b8f5f666168",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52a8be95-867a-43b6-a725-c54060e1ed70",
      "documentation": "Get daily usage report",
      "method": "get",
      "endpoint": "report/daily",
      "responses": [
        {
          "uuid": "43691e0b-2344-496c-afb9-6aac9e185e20",
          "body": "{\n  \"dates\": [\n    {\n      \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"meeting_minutes\": {{faker 'datatype.number'}},\n      \"meetings\": {{faker 'datatype.number'}},\n      \"new_users\": {{faker 'datatype.number'}},\n      \"participants\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"month\": {{faker 'datatype.number'}},\n  \"year\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9acd114c-ea91-420e-a622-876dc0014990",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided for a month that falls within the recent 6 months.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3ff9673-1e57-4647-afc3-1d2d6f30e17f",
      "documentation": "Get meeting detail reports",
      "method": "get",
      "endpoint": "report/meetings/:meetingId",
      "responses": [
        {
          "uuid": "fa3303ed-29e0-4675-92f9-19bf36c7df15",
          "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": {{faker 'datatype.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"participants_count\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'datatype.number'}},\n  \"tracking_fields\": [\n    {\n      \"field\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"type\": {{faker 'datatype.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61f66d10-78d0-4eba-8486-0a9034421331",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "709e39fd-a868-43ff-a614-81f62cf8ef7c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a11540e4-a686-4ac9-a938-768643675210",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dda4e4e1-d7fe-4a4e-aebe-0b9231fa30e8",
      "documentation": "Get meeting participant reports",
      "method": "get",
      "endpoint": "report/meetings/:meetingId/participants",
      "responses": [
        {
          "uuid": "8da44d70-8c10-4c32-9d56-0f6d2f19fcd5",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27719603-580e-40c0-8bc6-0a050f3f8d13",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb5a0b59-c80c-413e-9467-95b087e54391",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1246bf66-9b37-4d4f-ab6a-9e0645cbcb6f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06931170-a1e9-4c92-a0c7-cc8c7150a7a6",
      "documentation": "Get meeting poll reports",
      "method": "get",
      "endpoint": "report/meetings/:meetingId/polls",
      "responses": [
        {
          "uuid": "86ac706f-026d-4e4b-9721-4e0cd6d41b7e",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting polls report returned.<br>\nThis is only available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a604a79-2852-4793-a767-816e71fb3da5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5402242e-d21f-421e-978c-1fa5915cdf72",
      "documentation": "Get operation logs report",
      "method": "get",
      "endpoint": "report/operationlogs",
      "responses": [
        {
          "uuid": "1a4e90ba-2d0f-47a3-9296-c8c37f18d6ce",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51af29e8-658f-48c9-8a30-ebc4d5dbc483",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb46c3d2-a9dc-4a07-990f-b2ff8f74f362",
      "documentation": "Get telephone reports",
      "method": "get",
      "endpoint": "report/telephone",
      "responses": [
        {
          "uuid": "bd6e92d6-34b9-4095-a8df-04f42cadfe20",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": 1,\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<br>\nToll Report feature must be enabled to perform this action. Contact the Zoom Support team for help.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed0ac672-e89a-42c3-a1ea-8dc020a2dda3",
      "documentation": "Get active/inactive host reports",
      "method": "get",
      "endpoint": "report/users",
      "responses": [
        {
          "uuid": "259e1c37-b567-4a0f-bcc0-f8e160021329",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f443f14c-eefe-497c-819f-4afed7c20b9d",
      "documentation": "Get meeting reports",
      "method": "get",
      "endpoint": "report/users/:userId/meetings",
      "responses": [
        {
          "uuid": "9df6f6e0-f225-498b-a77d-9adffc89b14c",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ee16df5-b888-4b60-9876-ce53f98812a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16352c40-85de-4704-8251-a9e29130ad2e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b1f7d671-a725-44b0-b511-f810c33add51",
      "documentation": "Get webinar detail reports",
      "method": "get",
      "endpoint": "report/webinars/:webinarId",
      "responses": [
        {
          "uuid": "5f373534-f8c5-4644-abb3-520cf5686269",
          "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": {{faker 'datatype.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"participants_count\": {{faker 'datatype.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'datatype.number'}},\n  \"tracking_fields\": [\n    {\n      \"field\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"type\": {{faker 'datatype.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80d61d31-f096-48df-a350-c5e50c84b282",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf6a4df7-d424-436f-900e-20a5aa252d38",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "973b89f8-c8f9-48a9-9a23-6f17f62ad6c4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6fd894b1-be60-48a4-ae62-aedc1549c37a",
      "documentation": "Get webinar participant reports",
      "method": "get",
      "endpoint": "report/webinars/:webinarId/participants",
      "responses": [
        {
          "uuid": "33babd5b-0161-4718-ab58-fcb15503b1b0",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account: {accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89f85107-da58-423d-8e2a-0c88ed372837",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nThe next page token is invalid or has expired.<br>\nCan not access the webinar information, {webinarId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f10f31ec-e379-4923-a3f6-ed48ca8c2ef0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64b1e923-afbb-48b1-9ea2-35347a3f6b03",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4eceb1e9-5b25-47e6-acd5-6e81ae6e06e2",
      "documentation": "Get webinar poll reports",
      "method": "get",
      "endpoint": "report/webinars/:webinarId/polls",
      "responses": [
        {
          "uuid": "d5a637db-6240-4166-8009-528704a4aec9",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d131b07a-329e-4dd9-830b-b053ef114a5d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a85fa87b-cee9-4f00-8656-31c8a825a2e8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61ecf219-3c19-4bb7-b481-d756f0c89b31",
      "documentation": "Get webinar Q&A report",
      "method": "get",
      "endpoint": "report/webinars/:webinarId/qa",
      "responses": [
        {
          "uuid": "c4b2a08c-675b-4945-bce7-c6f6d15f2282",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nA report cannot be generated for this account because this account has not subscribed to a webinar plan.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2232470-279a-4299-b21f-7233e2b3c262",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3d3b815-5676-4f5c-b86f-3fbf058185b9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23324ff6-e5c9-473e-af66-c9b3b795173a",
      "documentation": "List roles",
      "method": "get",
      "endpoint": "roles",
      "responses": [
        {
          "uuid": "c7244c18-376f-4278-85c0-c38899c241d0",
          "body": "{\n  \"roles\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"total_members\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of roles returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9ed34b78-bd33-4b1b-875e-6238641c2d3e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>**Error Code:** `4700`<br>Invalid access token, does not contain role:read:admin scope.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fec8a727-8c2d-44d7-a541-c43dfd92bb33",
      "documentation": "Create a role",
      "method": "post",
      "endpoint": "roles",
      "responses": [
        {
          "uuid": "a18a1335-39d3-46dc-8034-b445d3680824",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**Status Code:** `200`<br>\nYou do not have the permission to create a role.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac429f1e-3a4d-4d03-878c-bb687328cb7e",
          "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"privileges\": [\n    \"\"\n  ],\n  \"total_members\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**Status Code:** `201`<br>\nRole created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "082919ba-80bf-4d8a-bcfd-3e2a9252755b",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nThe name field cannot be empty.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ecb1a9a-f07d-4875-973a-6c2577b296bb",
      "documentation": "Delete a role",
      "method": "delete",
      "endpoint": "roles/:roleId",
      "responses": [
        {
          "uuid": "7621e67a-6956-49bb-ae68-4681f14a3bff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nRole not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19738a43-453e-462b-8d57-b71aacc1da0a",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204`<br>\nRole deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cddea651-db7d-411f-8d74-e6c70c181f24",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nRole not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f85159d4-42f1-4585-8ce6-32091eb4cb4b",
      "documentation": "Get role information",
      "method": "get",
      "endpoint": "roles/:roleId",
      "responses": [
        {
          "uuid": "c84bbff6-3671-4679-8b65-bcb0304f836f",
          "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"privileges\": [\n    \"\"\n  ],\n  \"sub_account_privileges\": {\n    \"second_level\": {{faker 'datatype.number'}}\n  },\n  \"total_members\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**Status Code:** `200`<br>\nInformation about a specific role returned.\n\n**Error Code:** `200`<br>\nYou do not have the permission to retrieve role information.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f60c348-9985-4498-8811-5bfe4321c473",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\nRole not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b93f8e4-3697-4d3d-a1f0-419930419a05",
      "documentation": "Update role information",
      "method": "patch",
      "endpoint": "roles/:roleId",
      "responses": [
        {
          "uuid": "219157c9-d3f1-47e5-ad00-567c39cc82d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nThe account must be a paid account to update the role.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36033e2e-0467-4fd5-8204-47f146157d4a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `400`<br>\nRole updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9be944b8-2fe5-4d45-a3a2-3bee787230dd",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`\nThis role cannot be updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "861885a1-bd7b-48c5-aa6a-85196339eddb",
      "documentation": "List members in a role",
      "method": "get",
      "endpoint": "roles/:roleId/members",
      "responses": [
        {
          "uuid": "30ab051c-449f-48ca-af35-a6911987f977",
          "body": "{\n  \"members\": [\n    {\n      \"department\": \"\",\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9723a5f7-545c-4205-beca-75a0cf36ad7f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>Role not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99d9880a-951a-4715-a846-e3e3f8f804b2",
      "documentation": "Assign a role",
      "method": "post",
      "endpoint": "roles/:roleId/members",
      "responses": [
        {
          "uuid": "3ac33801-93d5-421f-a6c9-3fef23100cf8",
          "body": "{\n  \"add_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>Members Added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c14a3519-a621-4a1c-9d94-0c11e84bb4c6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `1034`\nRole does not exist.<br><br>\n**Error Code:** `300`<br>\nRoleId required.<br>\nCan’t delete or add members for Normal/Owner roles.<br><br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94983c1c-bb39-41bc-9454-21893b33319c",
      "documentation": "Unassign a role",
      "method": "delete",
      "endpoint": "roles/:roleId/members/:memberId",
      "responses": [
        {
          "uuid": "579faaf2-116e-40f2-8ba8-98298e1b8b89",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nRole withdrawn from user.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a27f6192-094f-4ff0-9157-ad04b8ea6c08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>Role or Member not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee140ac2-82b7-4852-acfc-9df35b63bb7c",
      "documentation": "List Zoom Rooms",
      "method": "get",
      "endpoint": "rooms",
      "responses": [
        {
          "uuid": "77c7016a-4cd2-4903-8e12-f037f99cc9f6",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}},\n  \"rooms\": [\n    {\n      \"activation_code\": \"\",\n      \"id\": \"\",\n      \"location_id\": \"\",\n      \"name\": \"\",\n      \"room_id\": \"\",\n      \"status\": \"{{oneOf (array 'Offline' 'Available' 'InMeeting' 'UnderConstruction')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nA list of Zoom Rooms returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f20e8786-d465-48af-a289-8ff8081b14f2",
      "documentation": "Add a Zoom Room",
      "method": "post",
      "endpoint": "rooms",
      "responses": [
        {
          "uuid": "75cbe7f4-d28e-4546-b0ed-b98e9e1801dd",
          "body": "{\n  \"id\": \"\",\n  \"location_id\": \"\",\n  \"name\": \"\",\n  \"room_id\": \"\",\n  \"type\": \"{{oneOf (array 'ZoomRoom' 'SchedulingDisplayOnly' 'DigitalSignageOnly')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created**<br>\nZoom Room added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51e595bd-8b02-4f27-97bf-27aae5ec590a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAt least one normal Zoom Rooms required.<br><br>\n**Error Code:** `300`<br>\nInvalid parent location id {location_id}.<br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8157d66c-2b6c-4305-bae7-2caa64c2a008",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n\n**Error Code:** `4801`<br>\nLocation not found:{location_id}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a105eb77-cb7f-42f1-9d35-2eece77e8130",
      "documentation": "Get Zoom Room account profile",
      "method": "get",
      "endpoint": "rooms/account_profile",
      "responses": [
        {
          "uuid": "1454caaf-e6b6-41d0-a4b0-6f7af76ef78d",
          "body": "{\n  \"basic\": {\n    \"required_code_to_ext\": {{faker 'datatype.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nZoom Room Account Profile returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9ce10f2-8181-461a-b880-01867af24ba8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "90ee0358-91b9-401c-b19f-317723bb178f",
      "documentation": "Update Zoom Room account profile",
      "method": "patch",
      "endpoint": "rooms/account_profile",
      "responses": [
        {
          "uuid": "eff17715-65eb-4fad-8b41-fe48be119d1b",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nProfile updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d41236e2-eda2-415d-834f-bf2636406788",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ebe19f5c-f8c5-4646-84a2-ff3c7a336d9a",
      "documentation": "Get Zoom Room account settings",
      "method": "get",
      "endpoint": "rooms/account_settings",
      "responses": [
        {
          "uuid": "54eef78b-28e6-4732-8947-e4327dc5b671",
          "body": "{\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'datatype.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'datatype.boolean'}},\n    \"auto_direct_sharing\": {{faker 'datatype.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'datatype.boolean'}},\n    \"display_feedback_survey\": {{faker 'datatype.boolean'}},\n    \"display_meeting_list\": {{faker 'datatype.boolean'}},\n    \"display_top_banner\": {{faker 'datatype.boolean'}},\n    \"email_address_prompt_before_recording\": {{faker 'datatype.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'datatype.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'datatype.boolean'}},\n    \"make_room_alternative_host\": {{faker 'datatype.boolean'}},\n    \"secure_connection_channel\": {{faker 'datatype.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'datatype.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'datatype.boolean'}},\n    \"show_call_history_in_room\": {{faker 'datatype.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'datatype.boolean'}},\n    \"show_non_video_participants\": {{faker 'datatype.boolean'}},\n    \"start_airplay_manually\": {{faker 'datatype.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'datatype.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'datatype.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'datatype.boolean'}},\n    \"weekly_system_restart\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZR Account Settings returned successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7adc22cb-dcd2-4b62-a89d-40bdb9c13502",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7547b225-9d46-41c8-9d82-66157ade5ea5",
      "documentation": "Update Zoom Room account settings",
      "method": "patch",
      "endpoint": "rooms/account_settings",
      "responses": [
        {
          "uuid": "34b6b60c-2f33-4b02-971e-f32d733e4f4c",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3cf1fb9-7d11-4f16-9615-26c8c2f9a950",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c741d975-d85d-4c1f-b99b-1f07001e6369",
      "documentation": "List digital signage contents",
      "method": "get",
      "endpoint": "rooms/digital_signage",
      "responses": [
        {
          "uuid": "2a3fabd8-6c2b-4613-9237-00376ed107a4",
          "body": "{\n  \"contents\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nList returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9fb0ec8f-8a09-4417-9a93-d265e5fe9b53",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n* Zoom Room subscription was not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5052621-252d-4f49-8d8d-8b8aed3047e9",
      "documentation": "Update E911 digital signage",
      "method": "patch",
      "endpoint": "rooms/events",
      "responses": [
        {
          "uuid": "4f837efe-8754-488a-860a-d766594b22a0",
          "body": "{\n  \"event_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "**HTTP Status Code:** `202` <br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38f0e492-cb88-4292-9fe3-ce0b56af5d6d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` <br>\n\n**Error Code:** `200` <br> Access restricted. <br><br>\n**Error Code:** `300`\nEvent id is required.<br>\nInvalid value submitted for Target Ids. Provide a valid Target Id associated with the Target type.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18e7bcba-c6be-44f7-a172-5a21cabbfbde",
      "documentation": "List Zoom Room locations",
      "method": "get",
      "endpoint": "rooms/locations",
      "responses": [
        {
          "uuid": "40cfcb55-f318-4fb5-bbde-4b7f6621e7ba",
          "body": "{\n  \"locations\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"parent_location_id\": \"\",\n      \"type\": \"{{oneOf (array 'country' 'states' 'city' 'campus' 'building' 'floor')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room locations listed successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92d7dfa6-75c3-40e9-948d-5578464873ac",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br>\nLocation type not exist.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a77e3e71-512f-4a18-9781-85d4363fafe1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\n Location not found:{parent_location_id}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dada256a-dc35-4813-90b5-1abbd2512267",
      "documentation": "Add a location",
      "method": "post",
      "endpoint": "rooms/locations",
      "responses": [
        {
          "uuid": "00cbfed9-32be-4996-82c5-7eae4f79329b",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"parent_location_id\": \"\",\n  \"type\": \"{{oneOf (array 'country' 'states' 'city' 'campus' 'building' 'floor')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nLocation added successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "58126c21-a512-4caf-8f46-84bcc4c7abf2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br><br>\n**Error Code:** `300`<br>\nLocation name already exists. Try a different location name.<br>\nInvalid parent location id {parent_location_id}\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da3e722f-8c83-4eec-b355-8147e7bf9140",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not exist {parent_location_id}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8cd15dd1-6035-4497-aa17-4c2f487ce216",
      "documentation": "Get Zoom Room location structure",
      "method": "get",
      "endpoint": "rooms/locations/structure",
      "responses": [
        {
          "uuid": "186616a8-699a-46ec-ab3c-8c788da3f72d",
          "body": "{\n  \"structures\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms location structure returned successfully.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d8a94131-3244-4ffb-a8bd-7bed3d63bf30",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30c1d61e-4e34-464d-aa24-21282e721e5d",
      "documentation": "Update Zoom Rooms location structure",
      "method": "patch",
      "endpoint": "rooms/locations/structure",
      "responses": [
        {
          "uuid": "6dfd32f2-d4b0-456a-9d35-9c882de4cc3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation Structure updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1627acb0-cccc-494d-8bb7-afa3268faab3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11515bec-f5a7-4540-b6cc-5b172e131d5f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001` This account does not exist or does not belong to this master account.<br>This account does not exist or does not belong to you.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8705db60-8436-4906-ab3e-913298a376f8",
      "documentation": "Get Zoom Room location profile",
      "method": "get",
      "endpoint": "rooms/locations/:locationId",
      "responses": [
        {
          "uuid": "d6a99e18-6792-4dd4-8f9f-3410c42cec22",
          "body": "{\n  \"basic\": {\n    \"address\": \"\",\n    \"description \": \"\",\n    \"name\": \"\",\n    \"required_code_to_ext\": {{faker 'datatype.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\",\n    \"timezone\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms Location Profile returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff5f75dd-476e-4ab4-bf17-af57caff822d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "daf32cf2-9abc-4f59-a0d9-742dd4ffadc9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "985ab58e-6bb9-454a-8cc8-cfab3ba9e2b6",
      "documentation": "Update Zoom Room location profile",
      "method": "patch",
      "endpoint": "rooms/locations/:locationId",
      "responses": [
        {
          "uuid": "0a374f6d-4a0e-4bde-a0aa-b4e667fb1135",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f931de9-67ff-4dcf-afbe-28c18f0ead56",
      "documentation": "Change the assigned parent location",
      "method": "put",
      "endpoint": "rooms/locations/:locationId/location",
      "responses": [
        {
          "uuid": "e6d94cca-18c9-4fa2-9187-f0b01b81e1c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation assigned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8fa67e3-51b2-4849-b29b-e3c2bd069f60",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br> Invalid parent location id {parent_location_id}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6465640-aa83-4998-a616-ef6263b31fb5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br> Location not found:{parent_location_id}.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "450e2418-2e94-4dd6-b420-0dd771840806",
      "documentation": "Get location settings",
      "method": "get",
      "endpoint": "rooms/locations/:locationId/settings",
      "responses": [
        {
          "uuid": "a308e9ae-2175-48d8-8bf8-749a99e6ce32",
          "body": "{\n  \"meeting_security\": {\n    \"encryption_type\": \"{{oneOf (array 'enhanced_encryption' 'e2ee')}}\",\n    \"end_to_end_encrypted_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'datatype.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'datatype.boolean'}},\n    \"auto_accept_incoming_call_and_fecc\": {{faker 'datatype.boolean'}},\n    \"auto_direct_sharing\": {{faker 'datatype.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'datatype.boolean'}},\n    \"display_feedback_survey\": {{faker 'datatype.boolean'}},\n    \"display_meeting_list\": {{faker 'datatype.boolean'}},\n    \"display_top_banner\": {{faker 'datatype.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'datatype.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'datatype.boolean'}},\n    \"hide_self_view\": {{faker 'datatype.boolean'}},\n    \"lock_speaker_volume_control\": {{faker 'datatype.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'datatype.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'datatype.boolean'}},\n    \"show_call_history_in_room\": {{faker 'datatype.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'datatype.boolean'}},\n    \"show_non_video_participants\": {{faker 'datatype.boolean'}},\n    \"start_airplay_manually\": {{faker 'datatype.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'datatype.boolean'}},\n    \"start_hdmi_content_share_manualy\": {{faker 'datatype.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'datatype.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'datatype.boolean'}},\n    \"voice_commands\": {{faker 'datatype.boolean'}},\n    \"weekly_system_restart\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room location settings returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e919cffb-68aa-49de-a4c2-7b4b045428ca",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess Restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfea79ff-f935-450b-b37d-b5685ebe9f4f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\nLocation not found: {locationId}\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93d79272-8ccb-46e8-b624-598824387af0",
      "documentation": "Update location settings",
      "method": "patch",
      "endpoint": "rooms/locations/:locationId/settings",
      "responses": [
        {
          "uuid": "5e1cb313-ae42-43bf-88b7-e03bac66c7a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation settings updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93bf3d22-3f2e-46ea-8350-f7a576c5129f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8419dfa-617d-4a37-bed6-0c92a90fd23e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3ba55f0-a816-485a-8300-3090a7f938d4",
      "documentation": "Check-in or check-out of a Zoom Room",
      "method": "patch",
      "endpoint": "rooms/:id/events",
      "responses": [
        {
          "uuid": "4f204de4-b51b-4838-a098-4793f34bf764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "**HTTP Status Code:** `202` **Accepted**<br>\nRequest processed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe1655b8-6c72-4ab5-87fd-7f7fb25e3293",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\n* Zoom Room is offline. Please ensure that the Zoom Room is online before checking in or checking out.\n* Invalid parameters.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e64241f2-7c26-4633-bbcb-5d4c7c2478ff",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1012` <br>\nRoom does not exist: {roomId}.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6692a676-c8f2-41ce-afe6-76d4786cf300",
      "documentation": "Delete a Zoom Room",
      "method": "delete",
      "endpoint": "rooms/:roomId",
      "responses": [
        {
          "uuid": "eb60429e-ca02-4bfa-9156-c76e691808d8",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nZoom Room deleted successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "010d7922-32d5-4618-8802-c0449e448f12",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d45412f-5039-46de-82ed-8f9553e10af6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de6004ff-176e-45c0-b7e9-1d0530ce183b",
      "documentation": "Get Zoom Room profile",
      "method": "get",
      "endpoint": "rooms/:roomId",
      "responses": [
        {
          "uuid": "2243128f-acbf-4df0-9f37-768354189238",
          "body": "{\n  \"basic\": {\n    \"activation_code\": \"\",\n    \"hide_room_in_contacts\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"required_code_to_ext\": {{faker 'datatype.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room profile returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0d7b1df7-d3ae-4769-a1d8-2b8df3f2b04d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\n* Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b14da4e-cb63-49c6-a920-113bc1ddd84b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc466ce2-271a-4293-abe4-c44bee9e9e0d",
      "documentation": "Update a Zoom Room profile",
      "method": "patch",
      "endpoint": "rooms/:roomId",
      "responses": [
        {
          "uuid": "34b06f2b-9e82-4185-9947-f227a56d8dda",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nRoom Profile information updated successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b515fc2-2f44-4cd6-85f5-42154d53e264",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br><br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a986da4-c33f-40cf-8343-2030a8d2ed23",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8843f835-371b-44a6-bf03-4d580e3da1af",
      "documentation": "List Zoom Room devices",
      "method": "get",
      "endpoint": "rooms/:roomId/devices",
      "responses": [
        {
          "uuid": "9a2694ce-050a-4431-86a7-ec9d409be802",
          "body": "{\n  \"devices\": [\n    {\n      \"app_version\": \"\",\n      \"device_system\": \"\",\n      \"device_type\": \"{{oneOf (array 'Zoom Rooms Computer' 'Controller' 'Scheduling Display' 'Zoom Rooms Control System' 'Companion Whiteboard')}}\",\n      \"id\": \"\",\n      \"room_name\": \"\",\n      \"status\": \"{{oneOf (array 'Online' 'Offline')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**\nDevices listed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90029a93-237e-452e-8bd6-963203354e46",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec1aac8c-9370-4b4e-bfb3-1ecdba9488f1",
      "documentation": "Change Zoom Rooms' app version",
      "method": "put",
      "endpoint": "rooms/:roomId/devices/:deviceId/app_version",
      "responses": [
        {
          "uuid": "d9e2e412-b869-4f09-bde8-448b3aed3811",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nRequest processed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65cc2542-f705-4b73-af1b-674479d9ab5d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `8001` <br> Cannot process this upgrade request. The Zoom Rooms Software in this device is either already up to date or is currently being updated.  <br>  <br> \n**Error Code:** `8002` <br> Cannot process the downgrade request. The target version for downgrading is not available or the downgrade process has already been initiated. <br>  <br> \n**Error Code:** `8003` <br>  The cancel request could not be processed because the Zoom Rooms Software in this device is not being downgraded or upgraded at the moment. The cancel action should only be used to cancel an ongoing upgrade or downgrade process. <br>  <br> \n**Error Code:** `8004` <br> A device with the provided Device ID: {deviceId} does not belong to the current room: {roomId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e135cb7-1b13-4501-b0a5-ac8f13e39dc1",
      "documentation": "Change a Zoom Room's location",
      "method": "put",
      "endpoint": "rooms/:roomId/location",
      "responses": [
        {
          "uuid": "180bb9f9-4f16-4314-8ab5-db14bf6aba1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation of the Zoom Room changed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "326b6836-c7d4-455a-902f-d75a8a58135b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bf18aec-0f8e-4e57-8c66-8371ce4e0828",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found:{location_id}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f547d45e-fd85-4cef-a02f-8479ce1c3ac6",
      "documentation": "Get Zoom Room settings",
      "method": "get",
      "endpoint": "rooms/:roomId/settings",
      "responses": [
        {
          "uuid": "4c9ef863-f7db-47b2-9725-2247b8d4310b",
          "body": "{\n  \"meeting_security\": {\n    \"encryption_type\": \"{{oneOf (array 'enhanced_encryption' 'e2ee')}}\",\n    \"end_to_end_encrypted_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'datatype.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'datatype.boolean'}},\n    \"auto_direct_sharing\": {{faker 'datatype.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'datatype.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'datatype.boolean'}},\n    \"display_feedback_survey\": {{faker 'datatype.boolean'}},\n    \"display_meeting_list\": {{faker 'datatype.boolean'}},\n    \"display_top_banner\": {{faker 'datatype.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'datatype.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'datatype.boolean'}},\n    \"hide_share_instruction\": {{faker 'datatype.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'datatype.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'datatype.boolean'}},\n    \"show_call_history_in_room\": {{faker 'datatype.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'datatype.boolean'}},\n    \"show_non_video_participants\": {{faker 'datatype.boolean'}},\n    \"start_airplay_manually\": {{faker 'datatype.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'datatype.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'datatype.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'datatype.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'datatype.boolean'}},\n    \"weekly_system_restart\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room settings returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0d86454-5c68-40e2-b568-4d54922cd79c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e971a1ff-3553-4180-bc05-c15c67d503cc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2973bf2-7a6a-4078-8bec-24cbbfd8415d",
      "documentation": "Update Zoom Room settings",
      "method": "patch",
      "endpoint": "rooms/:roomId/settings",
      "responses": [
        {
          "uuid": "63ce4fb6-4527-4ef4-9fd7-572a29ef7747",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully. ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b08b638e-66d3-4dd8-b5e0-435991d1f6e3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b489a7ee-4d31-48ac-8033-cb19fe7218a9",
      "documentation": "List SIP phones",
      "method": "get",
      "endpoint": "sip_phones",
      "responses": [
        {
          "uuid": "253652f8-16e5-4bb7-8794-6b8e34336d9e",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": {{faker 'datatype.number'}},\n  \"page_size\": {{faker 'datatype.number'}},\n  \"phones\": [\n    {\n      \"authorization_name\": \"\",\n      \"domain\": \"\",\n      \"id\": \"\",\n      \"password\": \"\",\n      \"proxy_server\": \"\",\n      \"proxy_server2\": \"\",\n      \"proxy_server3\": \"\",\n      \"register_server\": \"\",\n      \"register_server2\": \"\",\n      \"register_server3\": \"\",\n      \"registration_expire_time\": {{faker 'datatype.number'}},\n      \"transport_protocol\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"transport_protocol2\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"transport_protocol3\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"user_email\": \"{{faker 'internet.email'}}\",\n      \"user_name\": \"\",\n      \"voice_mail\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSIP Phones listed successfully.\n\n**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b04fd993-46fc-4e18-bea8-1e674e316ad3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br> Bad Request\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6bff9153-cab8-4ec1-b2f2-a04fe46fa2ff",
      "documentation": "Enable SIP phone",
      "method": "post",
      "endpoint": "sip_phones",
      "responses": [
        {
          "uuid": "a08ccf95-782f-4c88-8fc5-ae5c635e0bf8",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nSIP Phone Created.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a987c76-4054-44ea-aea1-bd30f1c5b3af",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br> Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>\n**Error Code:** `300`<br>SIP Phone with the same email already exists.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1d32eb6-16a2-4d47-be38-e91900907f62",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8793440-5be2-41f1-a535-fc116d693414",
      "documentation": "Delete SIP phone",
      "method": "delete",
      "endpoint": "sip_phones/:phoneId",
      "responses": [
        {
          "uuid": "65f462c8-b3e0-4ef5-b535-0acc78021835",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe3bdcdf-528e-4e24-b1f2-14773182065d",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nSIP Phone deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c59094-1903-45f3-9474-0ebf38eaa1f3",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`The SIP phone with this phoneId was not found on this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13917d9b-5316-4a2f-9f24-e24aad594749",
      "documentation": "Update SIP phone",
      "method": "patch",
      "endpoint": "sip_phones/:phoneId",
      "responses": [
        {
          "uuid": "fbb9e9f2-4225-44d8-b52a-1ec886fef1f9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a88af52-aa94-455f-ad9e-474355d7baeb",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nSIP Phone information updated successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0da24e9f-e9ae-4739-ada6-46746b44584f",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**Error Code:** `300`<br>\n SIP phone not found: phoneId.<br>\n The SIP phone with this phoneId was not found on this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "172a6c98-1218-4041-a7dd-448ef5e02184",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0215d834-986a-42b7-8b63-8644d643b88d",
      "documentation": "List SIP trunk numbers",
      "method": "get",
      "endpoint": "sip_trunk/numbers",
      "responses": [
        {
          "uuid": "d3e2cbd2-1d82-456c-94ac-2819f2f25602",
          "body": "{\n  \"phone_numbers\": [\n    {\n      \"country\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "* **HTTP Status Code:** `200` **OK**<br>\nList of numbers returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "06e4c351-020d-4671-8075-af8fc8b1ca73",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.\nThis account does not exist or does not belong to you.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "74f3ffac-1c9a-4195-83c6-85d3314b4208",
      "documentation": "List tracking fields",
      "method": "get",
      "endpoint": "tracking_fields",
      "responses": [
        {
          "uuid": "a2d3f530-3606-4434-8390-5f1f32401d6f",
          "body": "{\n  \"total_records\": {{faker 'datatype.number'}},\n  \"tracking_fields\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c1c9068-1ca9-48a6-a187-642ae5a638ef",
      "documentation": "Create a tracking field",
      "method": "post",
      "endpoint": "tracking_fields",
      "responses": [
        {
          "uuid": "1f1e618e-b709-4d4e-aabb-9f18bdc0552f",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nTracking Field created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5de78d8-5d8e-4343-ba3f-dde0bf1b3db5",
      "documentation": "Delete a tracking field",
      "method": "delete",
      "endpoint": "tracking_fields/:fieldId",
      "responses": [
        {
          "uuid": "a4c0f30e-74e3-423a-9ab0-d84821910e7f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nTracking Field deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e4ead5f-0403-45d5-ae3e-b41cc2e4c738",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a009d53c-3d14-42e5-82c5-30c44e7ad2b1",
      "documentation": "Get a tracking field",
      "method": "get",
      "endpoint": "tracking_fields/:fieldId",
      "responses": [
        {
          "uuid": "81a8ccf6-0367-4545-aed9-378b10aec4b7",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nTracking Field object returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6db0d0d-0fb3-46e0-9d8f-ddfc48611a30",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a7b7255-a4d8-4414-a62f-7c39ef8a884f",
      "documentation": "Update a tracking field",
      "method": "patch",
      "endpoint": "tracking_fields/:fieldId",
      "responses": [
        {
          "uuid": "89988ccd-77c9-448f-8710-46dc7461e410",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nTracking Field updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0a217d72-e69d-45ed-98ac-c8cd5d6f7dde",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97b55af5-59f8-4092-a8e4-91e17552db68",
      "documentation": "Get account's TSP information",
      "method": "get",
      "endpoint": "tsp",
      "responses": [
        {
          "uuid": "27e51bfc-6c80-44c5-9dba-ac5e4fc12797",
          "body": "{\n  \"dial_in_number_unrestricted\": {{faker 'datatype.boolean'}},\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"number\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"enable\": {{faker 'datatype.boolean'}},\n  \"master_account_setting_extended\": {{faker 'datatype.boolean'}},\n  \"modify_credential_forbidden\": {{faker 'datatype.boolean'}},\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\",\n  \"tsp_enabled\": {{faker 'datatype.boolean'}},\n  \"tsp_provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nTSP account detail returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8195ad4e-29a4-4792-85ea-d0e2f7f0ff4b",
      "documentation": "Update account's TSP information",
      "method": "patch",
      "endpoint": "tsp",
      "responses": [
        {
          "uuid": "4be7dd33-2088-4703-a389-128d12b34c20",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nTSP Account updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5a77b88-1a78-4a6f-baa6-5f37fa6fe920",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n\n**Error Code:** `300`<br>\nInvalid parameter: tsp_bridge.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9095583-46ca-400a-8a30-5cd3c0684cda",
      "documentation": "List users",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "abe075d1-3107-4784-9304-939224fff2fe",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}},\n  \"users\": [\n    {\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"custom_attributes\": [\n        {\n          \"key\": \"\",\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"dept\": \"\",\n      \"email\": \"john.doe@gmail.com\",\n      \"first_name\": \"\",\n      \"group_ids\": [\n        \"\"\n      ],\n      \"host_key\": \"\",\n      \"id\": \"\",\n      \"im_group_ids\": [\n        \"\"\n      ],\n      \"last_client_version\": \"\",\n      \"last_login_time\": \"{{faker 'date.recent' 365}}\",\n      \"last_name\": \"\",\n      \"plan_united_type\": \"\",\n      \"pmi\": {{faker 'datatype.number'}},\n      \"role_id\": \"\",\n      \"status\": \"active\",\n      \"timezone\": \"\",\n      \"type\": 1,\n      \"verified\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser list returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d9e4c0f-935d-46f7-b10b-a16224a5954f",
      "documentation": "Create users",
      "method": "post",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "63250082-082a-467e-aa3c-158fb300c3ce",
          "body": "{\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"id\": \"\",\n  \"last_name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3' '99')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nUser created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5f78a80-faaa-4c2d-807d-758ba3258a08",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>\nInvalid parameter: password<br><br>\n**Error Code:** `200`<br>No privilege. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>\n**Error Code:** `1009`<br>The user $email already holds an active account.<br><br>**Error Code:** `1107`<br>Email domain is blocked<br>**Error Code:** `2034` <br>Your request to add a new {0} user could not be approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>**Error Code:** `2033`<br>\nYour request to add a basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>\n**Error Code:** `3412`<br>Your request to add a basic user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to add another user.\n<br>Your request to add a new $userType user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>\n**Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>\n**Error Code:** `1116`<br>Email address $email doesn't match limited domains: $domains<br><br>\n**Error Code:** `2002`<br>SSO has not been enabled for this account. Contact the Zoom support team to enable this option.<br><br>\n**Error Code:** `2032`<br>The ssoCreate option is only available for SSO Partners that have enabled the pre-provision option. Contact the Zoom Support team to learn more.<br><br>\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b559e6f4-11ee-4be0-907b-302ee7c90c12",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4130`<br>\nGroup does not exist: $groupId<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab219123-c769-48f4-828b-9221a8e1995c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "**HTTP Status Code:** `409`<br>User with that email already exists<br>\n**Error Code:** `1005`<br>Email $email has already been used.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb30fac0-c32d-49ad-a99c-9b42a448b7b5",
      "documentation": "Check a user email",
      "method": "get",
      "endpoint": "users/email",
      "responses": [
        {
          "uuid": "1e320535-b64f-46e3-bc02-b225d08a3031",
          "body": "{\n  \"existed_email\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7288ee8e-043d-48b0-8ce5-985182dfff2f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39dcadf5-585c-4c35-ba82-63f99bbdfcdc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2d724d2-96f7-4574-9b70-8b96d6dfdd4f",
      "documentation": "Get user's ZAK",
      "method": "get",
      "endpoint": "users/me/zak",
      "responses": [
        {
          "uuid": "5a2f432f-09d1-45f3-9d89-e178b2463395",
          "body": "{\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a447bc6-ec8e-41c2-bbdb-ca916b20f581",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0eefc8a1-7b50-4a60-aee7-ec8d80adfca4",
      "documentation": "Check a user's PM room",
      "method": "get",
      "endpoint": "users/vanity_name",
      "responses": [
        {
          "uuid": "9cb22f23-2996-4b8b-800e-065c6b78c444",
          "body": "{\n  \"existed\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9a55279-223b-4a09-aeb2-50c5484c2d7b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3515d65-df0d-401f-a366-41a0b4718059",
      "documentation": "Delete a user",
      "method": "delete",
      "endpoint": "users/:userId",
      "responses": [
        {
          "uuid": "83eccca5-5569-4e9e-ab82-711db813a09e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nUser deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e0e96618-0437-40fb-be4c-d127a5b26cb8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.<br> Unable to unlink API user(s).<br><br>\n**Error Code:** `200`<br>Cannot delete a user out of your account. <br>Cannot delete a Zoom Rooms user. <br>Unable to delete this deactivated user. Please contact Zoom support team for more information. <br><br>\n**Error Code:** `1000`<br>\nThe user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:** `1107`<br>You can not disassociate a user with managed domain.<br><br>\n**Error Code:** `1117`<br>You can not disassociate an Admin user.<br><br>\n**Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "840692df-1299-4661-877d-0a36f28bd36b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "926f6c1c-55c7-4d7b-8443-5b45fe0c3671",
      "documentation": "Get a user",
      "method": "get",
      "endpoint": "users/:userId",
      "responses": [
        {
          "uuid": "26fd642a-9fda-47ed-b2e9-bed34821dea1",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nUser object returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca4f42d5-f385-41ca-8990-6b43ee1e2244",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8f6f831-d1b4-4579-9cff-d730e945dc14",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "543664de-23b2-463c-8c40-670ba4ec2104",
      "documentation": "Update a user",
      "method": "patch",
      "endpoint": "users/:userId",
      "responses": [
        {
          "uuid": "d24dea72-0b33-4475-8f74-21ba67fee849",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` <br> \nUser updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a9b729d-e223-4304-9e4e-4a859e47877c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>A Zoom Room user cannot be updated to a free user type: $userId<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>Invalid parameter: password<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>\n**Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>\n**Error Code:** `1109`<br>Host is not a paid user.\n**Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br>**Error Code:** `2034`<br>Your request to convert the plan type of this user to {0} was not approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.\n<br><br>**Error Code:** `2033`<br>Your request to convert the user type to basic was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>\n**Error Code:** `3412`<br>Your request to convert the user type of this $userType user to a basic user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to convert a paying user to a basic user.\n<br>Your request to convert the user type of this basic user to a $userType user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or remove existing paying user(s) from your Users list or the Pending Users list before attempting to convert a basic user to a paying user.<br><br>\n**Error Code:** `4100`<br>\nUser is already taken by a user from your account. Choose another Personal Link Name and try again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb8f0617-6810-431d-bea8-44ad9448a2fb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0570ddd8-d4ff-47cc-ba38-0128f676d7bb",
      "documentation": "Delete user assistants",
      "method": "delete",
      "endpoint": "users/:userId/assistants",
      "responses": [
        {
          "uuid": "a81af231-89a2-418d-8bad-49699530e168",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c0b4287-cf7a-4d6c-9a13-d3c7fe06a959",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1434e3a-ed5c-4aec-8220-e1dc1322647a",
      "documentation": "List user assistants",
      "method": "get",
      "endpoint": "users/:userId/assistants",
      "responses": [
        {
          "uuid": "4f1317bb-9238-4316-8c31-2a23b192c7cd",
          "body": "{\n  \"assistants\": [\n    {\n      \"email\": \"\",\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1239f1a2-bb71-44b5-8854-465a11476c34",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ee7c0a4-5b01-46e7-a822-1790f3f17dc6",
      "documentation": "Add assistants",
      "method": "post",
      "endpoint": "users/:userId/assistants",
      "responses": [
        {
          "uuid": "d7c4517e-caab-477a-abc9-4ce812ddd68a",
          "body": "{\n  \"add_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nAssistant added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85ebc6f9-b397-4a27-9ebd-52d4589022c6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: $userId <br>\nThe user must either be a Licensed user or an On-prem user : $userId. <br>\nCan't assign scheduling privilege to yourself.<br>\nCan't find user $email.<br>\nUser $email has already granted scheduling privilege.<br>\nThe user must either be a Licensed user or an On-prem user : $email.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c90fbb1-17b2-4f57-8e17-75e98f266bdc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51a9acba-0ee6-4e38-a48b-43d1f8d9b3d2",
      "documentation": "Delete a user assistant",
      "method": "delete",
      "endpoint": "users/:userId/assistants/:assistantId",
      "responses": [
        {
          "uuid": "f642a464-5a91-41f5-9456-31fffd9f2070",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fecc1c4a-ac98-44c5-8c32-4b44591d26b5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3048c70c-9e03-40f4-a23c-e7eb420f9ee6",
      "documentation": "Update a user's email",
      "method": "put",
      "endpoint": "users/:userId/email",
      "responses": [
        {
          "uuid": "40edd6f3-d4b6-40dd-9ac8-c837a9146bef",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45e312f4-befb-4699-9263-fb56b89a02de",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser does not exist: $email.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6989208c-e108-43e3-9470-d9b1c4ae7d54",
      "documentation": "List meeting templates",
      "method": "get",
      "endpoint": "users/:userId/meeting_templates",
      "responses": [
        {
          "uuid": "122115e3-fa78-4e3f-a312-83314714a66b",
          "body": "{\n  \"templates\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e19964e-7fbd-4f73-9ff5-4c071f5216fd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br> User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce72d86d-c8fa-4f46-9474-4703f6355c7d",
      "documentation": "List meetings",
      "method": "get",
      "endpoint": "users/:userId/meetings",
      "responses": [
        {
          "uuid": "f640ce05-b204-4beb-9d5d-75ead2a83d06",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of meeting objects returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c3139fe-8051-4195-8855-369c2b36e51a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3cc6904-6ef2-461f-a39f-b304e9d3a765",
      "documentation": "Create a meeting",
      "method": "post",
      "endpoint": "users/:userId/meetings",
      "responses": [
        {
          "uuid": "902bc269-688a-4425-95bc-623786e55946",
          "body": "{\n  \"assistant_id\": \"\",\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"registration_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nMeeting created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "970668f0-9b83-4eaa-8686-e566012970c9",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ccb7bbff-6983-40e3-9b8c-d36a6c65959c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "278ad48d-c86e-437c-be4c-e0a7e3a289ca",
      "documentation": "List a user's PAC accounts",
      "method": "get",
      "endpoint": "users/:userId/pac",
      "responses": [
        {
          "uuid": "8869bbfe-ec43-44f7-af0a-7160252b78cc",
          "body": "{\n  \"pac_accounts\": [\n    {\n      \"conference_id\": {{faker 'datatype.number'}},\n      \"dedicated_dial_in_number\": [\n        {\n          \"country\": \"\",\n          \"number\": \"\"\n        }\n      ],\n      \"global_dial_in_numbers\": [\n        {\n          \"country\": \"\",\n          \"number\": \"\"\n        }\n      ],\n      \"listen_only_password\": \"\",\n      \"participant_password\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nPAC account list returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95f29391-a742-40be-bbd5-c7e1d7499686",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2024`<br>\nUser does not have PAC enabled.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "082f7cc2-8d8c-42ac-a558-7a94d0d08f95",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc1cb971-2bdc-41f0-984b-f56285e59792",
      "documentation": "Update a user's password",
      "method": "put",
      "endpoint": "users/:userId/password",
      "responses": [
        {
          "uuid": "ef78fa05-2b50-41a3-a865-de832f6437be",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **OK**<br>\nPassword updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c129fe29-e567-41ae-8cff-c6dfd6d90476",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br><br> **Error Code:** `1117` <br>Can not update Admin’s password<br><br> **Error Code:** `1123`<br>Can only update password of Zoom work email account<br><br> **Error Code:** `1124` <br>Minimum of 6 characters.<br> Have at least {lengthRule} characters<br><br> **Error Code:** `1125` <br>Have at least 1 letter (a, b, c…)<br><br> **Error Code:** `1126` <br>Have at least 1 number (1, 2, 3…)<br><br> **Error Code:** `1127` <br>Have at least 1 special character (!, @, #…)<br><br>\n**Error Code:** `1128` <br>Include both Upper case and Lower case characters<br><br>**Error Code:** `1129` Users cannot reuse any of the last $formerPwdCount passwords created.<br><br> **Error Code:** `1130`<br>Password can’t use the same character.<br><br>\n**Error Code:** `1131`<br>Password can’t use continuation character.Such as 'abcdef’,’123456’.<br><br>\n**Error Code:** `1136`<br>\nYour password is too easy to guess. Try another one.\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c44a5cf7-b0c8-40e9-937f-00164f1ed01b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "710b645b-6f15-4861-8ade-e70fe79b067a",
      "documentation": "Get user permissions",
      "method": "get",
      "endpoint": "users/:userId/permissions",
      "responses": [
        {
          "uuid": "d90e4ff5-25ed-450a-8f80-0e2aab8533ce",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser permissions returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "abc83150-ff5a-483b-ab9f-1ae6ed0a207e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1725b94-2e88-4a76-8329-b5acff951e7f",
      "documentation": "Upload a user's profile picture",
      "method": "post",
      "endpoint": "users/:userId/picture",
      "responses": [
        {
          "uuid": "b7ae5f1c-5ae8-407a-9622-c96d71abae15",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>Picture uploaded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85336eaa-80ff-4b14-9081-5d9663b565fc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `300`<br>\nYour request was not accepted because the profile picture contains invalid or explicit content.<br>\n**Error Code:** `120`<br>\nFile is empty.<br>\nFile size cannot exceed 2M.<br>\nOnly jpg/jpeg or png image file can be uploaded.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b13e346-31fd-4769-9f70-1881ef00e5d5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "916e4be4-668d-4832-8564-ec407f6ee85d",
      "documentation": "Update a user's presence status",
      "method": "put",
      "endpoint": "users/:userId/presence_status",
      "responses": [
        {
          "uuid": "ef85654b-334f-4f39-9877-26f7d5b71046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\n\nStatus updated succesfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d52ffa9-168c-48ca-9b35-224d3536ccf5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `5301`<br>\nRequest to update the presence status of this user failed.<br>\n**Error Code:** `5411`<br>\nUnauthorized request. You do not have permission to update the presence status of this user.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b4bcb0a-dbfb-4ca9-95c9-7bdb1995fd99",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4132bc71-79a9-43d1-995d-6fdea6b6307e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "**HTTP Status Code:** `429` **Too Many Requests**<br>\nToo many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a30486fc-fcda-43aa-89f5-f912abb3189f",
      "documentation": "List all recordings",
      "method": "get",
      "endpoint": "users/:userId/recordings",
      "responses": [
        {
          "uuid": "163cff13-259f-41f2-a4ce-5b5967dfc229",
          "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of recording objects returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "222befba-6c20-466c-a3d3-8faf181e1e94",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "881f8c52-434e-46c0-b10f-b13654b77395",
      "documentation": "Delete user schedulers",
      "method": "delete",
      "endpoint": "users/:userId/schedulers",
      "responses": [
        {
          "uuid": "3e6febe0-6239-4482-afe9-5868b3862b9e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br> All schedulers deleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a4aa2bf4-3f50-4a8b-9ccd-c627f60754ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32087dcc-64a6-461d-80ac-603c05ad8a6c",
      "documentation": "List user schedulers",
      "method": "get",
      "endpoint": "users/:userId/schedulers",
      "responses": [
        {
          "uuid": "b9a4fb37-68c7-4de1-b4c1-1b358957cd43",
          "body": "{\n  \"schedulers\": [\n    {\n      \"email\": \"\",\n      \"id\": \"\",\n      \"pmi\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9d4c5b2f-ae78-4e90-a818-bd927e12affb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "544fc9e6-093f-472b-bb6e-5c6fcc7005a7",
      "documentation": "Delete a scheduler",
      "method": "delete",
      "endpoint": "users/:userId/schedulers/:schedulerId",
      "responses": [
        {
          "uuid": "b40d9573-1a7e-4c6f-9151-0ca27d9483ed",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nScheduler deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6c64b848-f66d-4c64-8fa6-da67b6d064b6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c804ccd-e887-4e20-bbd9-dd72a0b8d879",
      "documentation": "Get user settings",
      "method": "get",
      "endpoint": "users/:userId/settings",
      "responses": [
        {
          "uuid": "78196e2e-8f35-4f9e-8a25-b693799a9fce",
          "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'datatype.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'datatype.boolean'}},\n    \"jbh_reminder\": {{faker 'datatype.boolean'}},\n    \"schedule_for_reminder\": {{faker 'datatype.boolean'}}\n  },\n  \"feature\": {\n    \"cn_meeting\": {{faker 'datatype.boolean'}},\n    \"in_meeting\": {{faker 'datatype.boolean'}},\n    \"large_meeting\": {{faker 'datatype.boolean'}},\n    \"large_meeting_capacity\": {{faker 'datatype.number'}},\n    \"meeting_capacity\": {{faker 'datatype.number'}},\n    \"webinar\": {{faker 'datatype.boolean'}},\n    \"webinar_capacity\": {{faker 'datatype.number'}},\n    \"zoom_phone\": {{faker 'datatype.boolean'}}\n  },\n  \"in_meeting\": {\n    \"allow_live_streaming\": {{faker 'datatype.boolean'}},\n    \"annotation\": {{faker 'datatype.boolean'}},\n    \"attendee_on_hold\": {{faker 'datatype.boolean'}},\n    \"auto_saving_chat\": {{faker 'datatype.boolean'}},\n    \"breakout_room\": {{faker 'datatype.boolean'}},\n    \"chat\": {{faker 'datatype.boolean'}},\n    \"closed_caption\": {{faker 'datatype.boolean'}},\n    \"co_host\": {{faker 'datatype.boolean'}},\n    \"custom_data_center_regions\": {{faker 'datatype.boolean'}},\n    \"custom_live_streaming_service\": {{faker 'datatype.boolean'}},\n    \"custom_service_instructions\": \"\",\n    \"data_center_regions\": \"{{oneOf (array 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA' 'DE' 'NL' 'LA')}}\",\n    \"e2e_encryption\": {{faker 'datatype.boolean'}},\n    \"entry_exit_chime\": \"{{oneOf (array 'host' 'all' 'none')}}\",\n    \"far_end_camera_control\": {{faker 'datatype.boolean'}},\n    \"feedback\": {{faker 'datatype.boolean'}},\n    \"file_transfer\": {{faker 'datatype.boolean'}},\n    \"group_hd\": {{faker 'datatype.boolean'}},\n    \"non_verbal_feedback\": {{faker 'datatype.boolean'}},\n    \"polling\": {{faker 'datatype.boolean'}},\n    \"private_chat\": {{faker 'datatype.boolean'}},\n    \"record_play_voice\": {{faker 'datatype.boolean'}},\n    \"remote_control\": {{faker 'datatype.boolean'}},\n    \"remote_support\": {{faker 'datatype.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'datatype.boolean'}},\n    \"screen_sharing\": {{faker 'datatype.boolean'}},\n    \"share_dual_camera\": {{faker 'datatype.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'datatype.boolean'}},\n    \"virtual_background\": {{faker 'datatype.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'datatype.boolean'}},\n      \"allow_videos\": {{faker 'datatype.boolean'}},\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'datatype.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"waiting_room\": {{faker 'datatype.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\",\n    \"workplace_by_facebook\": {{faker 'datatype.boolean'}}\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"ask_host_to_confirm_disclaimer\": {{faker 'datatype.boolean'}},\n    \"ask_participants_to_consent_disclaimer\": {{faker 'datatype.boolean'}},\n    \"auto_delete_cmr\": {{faker 'datatype.boolean'}},\n    \"auto_delete_cmr_days\": {{faker 'datatype.number'}},\n    \"auto_recording\": \"{{oneOf (array 'local' 'cloud' 'none')}}\",\n    \"cloud_recording\": {{faker 'datatype.boolean'}},\n    \"host_pause_stop_recording\": {{faker 'datatype.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'datatype.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'datatype.boolean'}},\n    \"record_audio_file\": {{faker 'datatype.boolean'}},\n    \"record_gallery_view\": {{faker 'datatype.boolean'}},\n    \"record_speaker_view\": {{faker 'datatype.boolean'}},\n    \"recording_audio_transcript\": {{faker 'datatype.boolean'}},\n    \"recording_disclaimer\": {{faker 'datatype.boolean'}},\n    \"recording_password_requirement\": {\n      \"have_letter\": {{faker 'datatype.boolean'}},\n      \"have_number\": {{faker 'datatype.boolean'}},\n      \"have_special_character\": {{faker 'datatype.boolean'}},\n      \"length\": {{faker 'datatype.number'}},\n      \"only_allow_numeric\": {{faker 'datatype.boolean'}}\n    },\n    \"save_chat_text\": {{faker 'datatype.boolean'}},\n    \"show_timestamp\": {{faker 'datatype.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"{{oneOf (array 'both' 'telephony' 'voip' 'thirdParty')}}\",\n    \"default_password_for_scheduled_meetings\": \"\",\n    \"embed_password_in_join_link\": {{faker 'datatype.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'datatype.boolean'}},\n    \"host_video\": {{faker 'datatype.boolean'}},\n    \"join_before_host\": {{faker 'datatype.boolean'}},\n    \"meeting_password_requirement\": {\n      \"consecutive_characters_length\": \"{{oneOf (array '0' '4' '5' '6' '7' '8')}}\",\n      \"have_letter\": {{faker 'datatype.boolean'}},\n      \"have_number\": {{faker 'datatype.boolean'}},\n      \"have_special_character\": {{faker 'datatype.boolean'}},\n      \"have_upper_and_lower_characters\": {{faker 'datatype.boolean'}},\n      \"length\": {{faker 'datatype.number'}},\n      \"only_allow_numeric\": {{faker 'datatype.boolean'}},\n      \"weak_enhance_detection\": {{faker 'datatype.boolean'}}\n    },\n    \"participants_video\": {{faker 'datatype.boolean'}},\n    \"personal_meeting\": {{faker 'datatype.boolean'}},\n    \"pmi_password\": \"\",\n    \"pstn_password_protected\": {{faker 'datatype.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'jbh_only' 'all' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'datatype.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'datatype.boolean'}},\n    \"use_pmi_for_scheduled_meetings\": {{faker 'datatype.boolean'}}\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"show_international_numbers_link\": {{faker 'datatype.boolean'}},\n    \"telephony_regions\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'datatype.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'datatype.boolean'}},\n    \"call_out_countries\": [\n      \"\"\n    ],\n    \"show_international_numbers_link\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nUser settings returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ecc57541-b3f1-464f-aef8-6e64a14720a2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d381361-8f57-4e3d-b66f-bbd5a5639dac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e066891a-0a94-4c12-8d79-d778db58898e",
      "documentation": "Update user settings",
      "method": "patch",
      "endpoint": "users/:userId/settings",
      "responses": [
        {
          "uuid": "f247d4f3-56a0-4c4c-ae27-d261c86d1ac5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `200`<br>\nUser settings updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ac95234-b0b6-4e01-bf1b-ebf36127d194",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>\n**Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>**Error Code:** `1122`<br>\nWebinar feature can only be enabled for Licensed or On-prem users.<br><br>\n**Error Code:** `200`<br>\nYou can't add paid users.<br>\nYou can add max $maxNumber paid users.<br>\nYou can add max $maxNumber free users.<br>\nYou can add max $maxNumber Webinar 100 users.<br>\nYou can add max $maxNumber Webinar 500 users.<br>\nYou can add max $maxNumber Webinar 1000 users.<br>\nYou can add max $maxNumber Webinar 3000 users.<br>\nYou can add max $maxNumber Webinar 5000 users.<br>\nYou can add max $maxNumber Webinar 10000 users.<br>\nYou can add max $maxNumber Large 100 users.<br>\nYou can add max $maxNumber Large 200 users.<br>\nYou can add max $maxNumber Large 300 users.<br>\nYou can add max $maxNumber Large 500 users.<br>\nYou can add max $maxNumber Large 1000 users.<br>\nYou can add max $maxNumber paid users.<br>\n\n\n\n\n\n\n\n\n\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf1cebbe-5f1c-4ebe-a04b-0aef3bf9cfec",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddabc477-2acf-4ac5-a5f9-3dd917096e14",
      "documentation": "Delete virtual background files",
      "method": "delete",
      "endpoint": "users/:userId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "473a35cc-d48b-4af8-a7dc-ef2bd34f1519",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "766b0fde-c027-4af6-a1f4-cf40c51554f6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45d7aaa2-c5b9-476a-92ef-bfbb5af06fac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7627c811-4407-454c-a187-f22b8e8b12da",
      "documentation": "Upload virtual background files",
      "method": "post",
      "endpoint": "users/:userId/settings/virtual_backgrounds",
      "responses": [
        {
          "uuid": "f790f7f9-7dc1-4f35-835f-f4f3c89f041b",
          "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201` **Created** <br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0cca7a1e-b80a-4b08-b6c2-57664a31bd10",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file can be uploaded.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe515d30-76e7-4bbd-a82b-d15ca36203f2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\nGroup not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0a3c7a9-3145-4f71-aff9-ee52fcaaee1f",
      "documentation": "Update user status",
      "method": "put",
      "endpoint": "users/:userId/status",
      "responses": [
        {
          "uuid": "a6b33a67-debc-4377-aad2-83d7d67a04ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92b49491-e8c8-4db7-8d70-3dcce4f5ff85",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nStatus updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adda4121-a71c-40ff-86e7-4939d402503b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status can not be activated or deactivated.<br><br>\n**Error Code:** `3412`<br>Your request to activate the user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to activate this user.<br>\n**Error Code:** `2033`<br>Your request to activate the basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97c00d43-6068-4cd5-b0f5-179217d9ed29",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02fd1766-5ab8-425a-a3bc-f6b1b7840487",
      "documentation": "Revoke a user's SSO token",
      "method": "delete",
      "endpoint": "users/:userId/token",
      "responses": [
        {
          "uuid": "ec679c56-aa41-4a2b-a94e-d3e969c8f262",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nToken deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d4583c2-df40-4833-8a42-053c6dded156",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8533df8-c3ab-451d-8cc0-868d5b9a85f1",
      "documentation": "Get a user token",
      "method": "get",
      "endpoint": "users/:userId/token",
      "responses": [
        {
          "uuid": "06255bb2-6c7a-480a-8027-782e787449da",
          "body": "{\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nToken returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "58b1e2aa-a0a2-4884-964c-8c249b6dc275",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70731276-696a-4d3b-88e6-76a46de92273",
      "documentation": "List user's TSP accounts",
      "method": "get",
      "endpoint": "users/:userId/tsp",
      "responses": [
        {
          "uuid": "006efba9-7004-48ab-87d2-0feafa9a7c13",
          "body": "{\n  \"tsp_accounts\": [\n    {\n      \"conference_code\": \"\",\n      \"dial_in_numbers\": [\n        {\n          \"code\": \"\",\n          \"country_label\": \"\",\n          \"number\": \"\",\n          \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n        }\n      ],\n      \"id\": \"{{oneOf (array '1' '2')}}\",\n      \"leader_pin\": \"\",\n      \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0cbb06ef-4544-4aa6-a422-0c4601d459cc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `2024`<br>\nAccount has not enabled TSP.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77176539-9bd4-4a45-b5b9-2ef3ca240ee0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b7780ca-f570-4745-8029-7a22698388f9",
      "documentation": "Add a user's TSP account",
      "method": "post",
      "endpoint": "users/:userId/tsp",
      "responses": [
        {
          "uuid": "b41e582a-9063-48b4-a36f-ac071581a337",
          "body": "{\n  \"conference_code\": \"\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"country_label\": \"\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n    }\n  ],\n  \"leader_pin\": \"\",\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nTSP account added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38c2a38e-5edf-46f8-8022-03a8bc2c6097",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad Request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.<br>\n**Error Code:** `300`<br>\nYou can add a max of two tsp configs.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a10c8ca5-30a6-4ea5-aa2c-16456006711e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a53d38a5-a6e4-4a58-a4f6-cb5ea9f1afe2",
      "documentation": "Set global dial-in URL for a TSP user",
      "method": "patch",
      "endpoint": "users/:userId/tsp/settings",
      "responses": [
        {
          "uuid": "d2b2b619-9546-4805-bea9-b4726cfb3391",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204` **No Content** <br>\nURL set successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b180f11-f41c-4c3a-8c23-a0aabc4cbc7c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n Account not enable TSP",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84c715a4-0857-4d1a-9359-fb282591bd49",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dac253b0-bd75-4ffa-a80b-6067eca1e00e",
      "documentation": "Delete a user's TSP account",
      "method": "delete",
      "endpoint": "users/:userId/tsp/:tspId",
      "responses": [
        {
          "uuid": "61769045-c655-4503-87ee-f85342dff856",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**Status Code:** `204` **No Content**<br>\nTSP account deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f61e970f-ef06-4421-985a-41fed056f8c7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:** `300`<br>\nAt least one tsp config must be available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a88490e6-5692-4094-b397-ca60e21fd50f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "34fc32a5-7bad-4226-9b9b-cbf13698f46d",
      "documentation": "Get a user's TSP account",
      "method": "get",
      "endpoint": "users/:userId/tsp/:tspId",
      "responses": [
        {
          "uuid": "e786faa7-13a3-482c-88b4-b79052061fec",
          "body": "{\n  \"conference_code\": \"\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"country_label\": \"\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n    }\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"leader_pin\": \"\",\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3b58227-28ae-4f75-a3c6-4bae0bb8ae23",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07b58ae9-0eff-4e10-9d8e-e2c1d7c6d1bd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3ae3806-dc7b-4b31-83ed-b2fca64a287f",
      "documentation": "Update a TSP account",
      "method": "patch",
      "endpoint": "users/:userId/tsp/:tspId",
      "responses": [
        {
          "uuid": "01c2a148-d81c-433b-a7c6-b28b32b159e6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee0ac32d-65e5-495e-9248-18eaa4428bd9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:**`300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`300`<br>\nAt least one tsp config must be available.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.\n**Error Code:**`300`<br>\nInvalid parameter: tsp_bridge.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35a0c463-e6f1-4872-9ccc-112565452998",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d74ae7b6-f61e-45ac-9a59-95eddc0b3e88",
      "documentation": "List webinar templates",
      "method": "get",
      "endpoint": "users/:userId/webinar_templates",
      "responses": [
        {
          "uuid": "ce161299-4460-4ceb-ba63-2265ca991044",
          "body": "{\n  \"templates\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>\nList of existing templates returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1bd6df54-94f3-4330-8e75-327a53c031fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>\n**Error Code:** `1001`<br>\n* User not exist: {userId}.\n* User {userId} does not exist or does not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "256a4207-5f62-4ec0-9106-e3d7abd4ae59",
      "documentation": "List webinars",
      "method": "get",
      "endpoint": "users/:userId/webinars",
      "responses": [
        {
          "uuid": "1a5af618-8b06-49e1-bd3b-7de40f7b6d85",
          "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'datatype.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList of webinar objects returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8bf6127-bce8-441e-8d8e-3ed6e80833b8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d1cbd8e-b83c-4c08-8e91-b693e8f4c89f",
      "documentation": "Create a webinar",
      "method": "post",
      "endpoint": "users/:userId/webinars",
      "responses": [
        {
          "uuid": "7fc98caf-ec2d-4ec7-b2d4-2cb6cd7fcb99",
          "body": "{\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"registrants_confirmation_email\": {{faker 'datatype.boolean'}},\n  \"template_id\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nWebinar created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "657d1ef9-35d3-4ba7-bb0b-e01717167f8c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e0a1845-3197-4b1d-a371-4d4c0e2dc02b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7800d85f-74b9-40ae-b399-17dfbdf72426",
      "documentation": "Delete a webinar",
      "method": "delete",
      "endpoint": "webinars/:webinarId",
      "responses": [
        {
          "uuid": "17647177-de44-41b7-b1c7-212a1207b17a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8cd63b04-03a8-41cb-bafb-967c6e360857",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nWebinar deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "839ef912-3a1e-4af9-b4fb-a0505668076d",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36d13b79-5fb0-44b5-b48c-647bc73e13d7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou are not the webinar host.<br>\n**Error Code:** `3007`<br>\nSorry, you cannot delete this webinar since it has ended.<br>\n**Error Code:** `3018`<br>\nNot allowed to delete PMI.<br>\n**Error Code:** `3037`<br>\nNot allowed to delete PAC.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "045ad614-85b7-45bf-8198-3bef70b0c276",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e35e7746-0924-4630-b6e5-31731f821cc1",
      "documentation": "Get a webinar",
      "method": "get",
      "endpoint": "webinars/:webinarId",
      "responses": [
        {
          "uuid": "56aff28c-fd13-4786-8631-019ab73ff738",
          "body": "{\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nSuccess",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8eecb763-39df-42c0-9eda-94f9b48a31b3",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb60d4be-187b-4936-9efc-40643959162a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe5e41eb-971d-4841-b1d2-6bdca46a565a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad423dee-0ea9-47ce-adb7-ac8a70055fee",
      "documentation": "Update a webinar",
      "method": "patch",
      "endpoint": "webinars/:webinarId",
      "responses": [
        {
          "uuid": "63b6a95d-40ba-4264-a777-38703c2d4b04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d57f6171-7bf6-4b1f-8e92-f4449971f49f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nWebinar updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8ae5251-3531-48bf-a68c-d9762b8e3383",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61051396-dcbc-417a-83f4-e4c0b0e51dcd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "314eddc1-2968-4a2c-b9db-b18d5b75068b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3610a9da-5d5d-4d71-b790-495c6416d817",
      "documentation": "Perform batch registration",
      "method": "post",
      "endpoint": "webinars/:webinarId/batch_registrants",
      "responses": [
        {
          "uuid": "252c60b3-ec5a-4cf9-ac68-498c0b95b9a6",
          "body": "{\n  \"registrants\": [\n    {\n      \"email\": \"\",\n      \"join_url\": \"\",\n      \"registrant_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2cd64212-ac2d-4498-b957-6dd599dac027",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Webinar plan is missing. You must subscribe to the webinar plan and enable webinar for this user: {0} in order to perform this action.<br><br>\n**Error Code:** `300`<br> \nThis API can only be used for scheduled webinar(webinar type: 5). Batch registration is not supported for other webinar types.<br><br>\n**Error Code:** `3038`<br>\nThis webinar is over, you can no longer register for this webinar. If you have any questions, please contact the webinar host.<br><br>\n**Error Code:** `3000`<br> Registration has not been enabled for this webinar: {0}.\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c1bcc80-8eec-4f38-93aa-7479884f1146",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nWebinar does not exist: {0}.<br><br>\n**Error Code:** `3043`<br>\nWebinar has reached maximum attendee capacity.<br><br>\n**Error Code:** `404`<br>\nRegistration has not been enabled for this meeting: {meetingId}.\n\n\n\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0d29751-5af4-4717-a77a-45361ca9fab7",
      "documentation": "Remove panelists",
      "method": "delete",
      "endpoint": "webinars/:webinarId/panelists",
      "responses": [
        {
          "uuid": "6e3ad405-b903-4c1b-a351-f854821c6a95",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nPanelists removed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64fa6087-ef14-4f2d-a8fc-788be90a9b33",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c317e05-31cf-4ea8-93f7-7e65d53e45a0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d249bc3-bc71-462c-b893-1189c1882266",
      "documentation": "List panelists",
      "method": "get",
      "endpoint": "webinars/:webinarId/panelists",
      "responses": [
        {
          "uuid": "52859311-6bbd-4cba-8f9d-d098760932e9",
          "body": "{\n  \"panelists\": [\n    {\n      \"id\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f1d9ed8-0e56-4a38-a88a-ec34d0e5da64",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22f8826d-8d5d-4c4c-a3b0-1010ef63e8f6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ffc4e6c-b0fb-468e-9a5e-372bb45a4a4a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f59e590-4fe1-44b4-ba56-7762e08def50",
      "documentation": "Add panelists",
      "method": "post",
      "endpoint": "webinars/:webinarId/panelists",
      "responses": [
        {
          "uuid": "6d264dd1-1b85-4b92-95d9-88787b754e61",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92770e2f-bfb2-460d-88d7-e6a39b519cbb",
          "body": "{\n  \"id\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nPanelist created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ada5a23-ce43-474a-b64e-ec8becd11388",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41a8d038-0174-4d97-b395-5f0078f03d19",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f3fb8de-ee4f-40bd-844d-9cf44a2783b2",
      "documentation": "Remove a panelist",
      "method": "delete",
      "endpoint": "webinars/:webinarId/panelists/:panelistId",
      "responses": [
        {
          "uuid": "fae7203f-6455-4407-a34a-f04e8af22488",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a006f12d-20fc-4057-92fe-0a19e6f7ae74",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nPanelists removed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ffd44c3a-b71c-4c08-93cf-5af7800a1eb0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1249ed55-1ff6-4770-9097-0e761d3fed9c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d927e805-04f5-43c3-96dd-10ae03a7ff82",
      "documentation": "List a webinar's polls ",
      "method": "get",
      "endpoint": "webinars/:webinarId/polls",
      "responses": [
        {
          "uuid": "e8b998e5-03cb-4f2a-acf3-649b18bff67b",
          "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7fe9676-8285-498c-b665-064cd4fc1a6e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "458c65d2-7ab9-4626-8ce6-f7b8c553ac9a",
      "documentation": "Create a webinar's poll",
      "method": "post",
      "endpoint": "webinars/:webinarId/polls",
      "responses": [
        {
          "uuid": "721bd374-0203-41a2-9874-901d0d51de64",
          "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nWebinar Poll Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Location",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b6cae809-1950-4022-870f-728749cee2b2",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinarId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6f57bfa-1682-4fe1-8f71-fbf348922bf1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "715ff6f1-708f-40c0-87e1-90fddefebd92",
      "documentation": "Delete a webinar poll",
      "method": "delete",
      "endpoint": "webinars/:webinarId/polls/:pollId",
      "responses": [
        {
          "uuid": "455c3b44-635a-4993-b155-1dff7c5792f6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d7a44fb0-746d-4244-96c8-62e8ed7ccc8a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c83d369-fd98-423f-9b8d-c9ba75e52a0e",
      "documentation": "Get a webinar poll",
      "method": "get",
      "endpoint": "webinars/:webinarId/polls/:pollId",
      "responses": [
        {
          "uuid": "cfa2915b-a4ad-46c6-bad5-6b1dd699d5a0",
          "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f7f9a85-b209-4999-9ca7-0e19227cd09f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e81b2b5e-5b01-46d7-8751-2c11a823bb56",
      "documentation": "Update a webinar poll",
      "method": "put",
      "endpoint": "webinars/:webinarId/polls/:pollId",
      "responses": [
        {
          "uuid": "05c0983f-473d-4a05-b9ff-bde3eb900dcf",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "756ab1ca-ca0c-4741-bb2b-067f5c9038cd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64e02e18-add6-492e-a58f-06bc8ce5ebc5",
      "documentation": "List webinar registrants",
      "method": "get",
      "endpoint": "webinars/:webinarId/registrants",
      "responses": [
        {
          "uuid": "babbba41-a581-469f-83cd-2fe44a4732ea",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d885fc1c-1e6d-42ed-9ab8-1deff2f9120a",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1de1584-7e81-46e4-8765-82eefc516c5c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4ecab15-0980-4e43-b87b-e7b6d5f03537",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4312f2c5-e2d5-4b8d-a655-8771594d9b9e",
      "documentation": "Add a webinar registrant",
      "method": "post",
      "endpoint": "webinars/:webinarId/registrants",
      "responses": [
        {
          "uuid": "7d78051f-3ec9-4fd8-a204-9164d029810f",
          "body": "{\n  \"id\": \"\",\n  \"join_url\": \"\",\n  \"registrant_id\": \"\",\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "**HTTP Status Code:** `201`<br>\nRegistration created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2da47306-8a78-4e65-8194-c05582b731c2",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID. <br>\nInvalid parameter: occurrence_ids.<br>\nInvalid user name.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20c83647-d320-4cc2-bd79-c909d81c5d7f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis webinar does not have registration as required:{webinarId}.<br>\n**Error Code:** `3027`<br>\nHost can not register.<br>\n**Error Code:** `3034`<br>\nIf you have been invited, please input your work email address.<br>\n**Error Code:** `3038`<br>\nWebinar is over, you can not register now. If you have any questions, please contact Webinar host.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3729403-1298-4bb0-a1ab-0b994efdddec",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "016001c5-a7db-42a6-8ba9-134462c9eb78",
      "documentation": "List registration questions",
      "method": "get",
      "endpoint": "webinars/:webinarId/registrants/questions",
      "responses": [
        {
          "uuid": "b225cec8-ada8-4903-a1a4-b1edd2893c0c",
          "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'datatype.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single_radio' 'single_dropdown' 'multiple')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'last_name' 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3621d525-70a6-47e7-b5ac-280d3b70b05c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>Webinar not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8ea2fdff-c51a-428c-b5fa-0df170083cc3",
      "documentation": "Update registration questions",
      "method": "patch",
      "endpoint": "webinars/:webinarId/registrants/questions",
      "responses": [
        {
          "uuid": "741144de-8091-4bb7-a3df-aa48842fca0d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce19062b-e477-4628-ae38-dcdb8bd662e7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>Webinar not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b1d98689-6e38-4435-a09f-32cea8ff7125",
      "documentation": "Update registrant's status",
      "method": "put",
      "endpoint": "webinars/:webinarId/registrants/status",
      "responses": [
        {
          "uuid": "9763943c-bf32-4615-b55f-ff221fe254c3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`<br>\nThe webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12801559-2b2f-475e-8d5a-4e28914a0090",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fb66684-56a9-46f9-bb02-4cdff63906f5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3035`<br>\nWebinar has reached maximum attendee capacity.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7387388b-89b8-43c9-ad9c-a450dcbbebbb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3649a29-c8c6-482c-bbb3-171ed74ecd67",
      "documentation": "Delete a webinar registrant",
      "method": "delete",
      "endpoint": "webinars/:webinarId/registrants/:registrantId",
      "responses": [
        {
          "uuid": "84733ee4-89a5-450d-bfce-d2a085c18f77",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "**HTTP status code:** `204` <br>\nOK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d3ef20c-5373-4c3b-b654-b0d9cfca16e7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this webinar: {0}.<br>\n\n**Error code:** `3000` <br>\nRegistrant {0} was not found.<br>\n\n**Error code:** `3001` <br>\nWebinar does not exist: {0}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddfc1d78-8ec5-40f8-aa91-e906f7e804bd",
      "documentation": "Get a webinar registrant",
      "method": "get",
      "endpoint": "webinars/:webinarId/registrants/:registrantId",
      "responses": [
        {
          "uuid": "5f594368-93ab-406e-9c7c-d2f9ad222de1",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "715bf121-2631-4605-8f35-ff75c1848cbb",
          "body": "",
          "latency": 0,
          "statusCode": 300,
          "label": "Invalid webinar ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef614149-255a-489e-ab63-9bad5d33e3e2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da60af16-db26-4503-a59f-b514c9f3737f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6867900c-3686-4caa-b084-db85ac1dcfea",
      "documentation": "Update webinar status",
      "method": "put",
      "endpoint": "webinars/:webinarId/status",
      "responses": [
        {
          "uuid": "a173a258-5dd1-4435-9795-4b486e4f670b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b42e9059-8fe3-4f2e-8613-29b983457b61",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Webinar's status updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a92565f-df47-41a2-b36a-3c7a97252e5d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:{meetingId}.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44b04cf9-ddd0-45ef-b92b-e1b637767559",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f9fbcd6-0399-401c-9319-5f283cdaa743",
      "documentation": "Get webinar tracking sources",
      "method": "get",
      "endpoint": "webinars/:webinarId/tracking_sources",
      "responses": [
        {
          "uuid": "c7fcfccd-b610-4570-ac6f-b47e8e606288",
          "body": "{\n  \"total_records\": {{faker 'datatype.number'}},\n  \"tracking_sources\": [\n    {\n      \"id\": \"\",\n      \"registration_count\": {{faker 'datatype.number'}},\n      \"source_name\": \"\",\n      \"tracking_url\": \"\",\n      \"visitor_count\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "**HTTP Status Code:** `200`",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}