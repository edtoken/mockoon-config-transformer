{
  "uuid": "d4760010-b802-4a3a-92cb-f70548d387d5",
  "lastMigration": 24,
  "name": "Just Eat UK",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5d8f3ea1-0234-4b2e-af78-57604039181a",
      "documentation": "Acceptance requested",
      "method": "post",
      "endpoint": "acceptance-requested",
      "responses": [
        {
          "uuid": "46e3621d-e5cf-4f3d-84b6-943a98623989",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5f7b180-4840-4442-b574-50ee80167bec",
      "documentation": "Attempted delivery query resolved",
      "method": "put",
      "endpoint": "attempted-delivery-query-resolved",
      "responses": [
        {
          "uuid": "68b70288-9fda-4730-8720-3da57ba761d3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67f998b8-0936-4775-8226-126b527167ec",
      "documentation": "Get Checkout",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "d46ded3b-1b01-47aa-8c10-dbedbdc09a3f",
          "body": "{\n  \"customer\": {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"phoneNumber\": \"\"\n  },\n  \"fulfilment\": {\n    \"location\": {\n      \"address\": {\n        \"administrativeArea\": \"\",\n        \"lines\": [\n          \"\"\n        ],\n        \"locality\": \"\",\n        \"postalCode\": \"\"\n      },\n      \"geolocation\": {\n        \"latitude\": {{faker 'datatype.number'}},\n        \"longitude\": {{faker 'datatype.number'}}\n      }\n    },\n    \"time\": {\n      \"asap\": {{faker 'datatype.boolean'}},\n      \"scheduled\": {\n        \"from\": \"\",\n        \"to\": \"\"\n      }\n    }\n  },\n  \"isFulfillable\": {{faker 'datatype.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ],\n  \"restaurant\": {\n    \"availabilityId\": \"\",\n    \"id\": \"\"\n  },\n  \"serviceType\": \"{{oneOf (array 'delivery' 'collection')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8766c101-2291-49e3-9004-602737abb7e3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "252d4b0d-586c-441a-a270-32630aa3edbd",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14c12510-68ee-4913-9943-64955b1feb14",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20329b83-94f5-4e25-90b3-4d6430a394d6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbbc7da5-f576-47d6-8906-1d9e0e7ddb50",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac2cbd58-80df-4a3e-8bfd-857eda9956f0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "103a1bb3-e315-40cf-85b3-3030e1b762bb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67a39dc8-e0c3-41d0-9797-8cce895a7c66",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c06d3789-1611-478c-a7f7-77531548acb4",
      "documentation": "Update Checkout",
      "method": "patch",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "1c47bbe7-2148-4bc8-bc59-3c31e9f1d109",
          "body": "{\n  \"isFulfillable\": {{faker 'datatype.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d7c2111e-d4cc-4ef8-bf60-6b0286b78264",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID' 'INVALID_REQUEST' 'FIRST_NAME_INVALID' 'LAST_NAME_INVALID' 'PHONE_NUMBER_INVALID' 'DATE_OF_BIRTH_INVALID' 'FULFILMENT_TIME_INVALID' 'ADDRESS_LINES_INVALID' 'LOCALITY_INVALID' 'ADMINISTRATIVE_AREA_INVALID' 'POSTAL_CODE_INVALID' 'GEOLOCATION_INVALID' 'DELIVERY_NOTE_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47768ed8-d40f-4f77-a9bf-a67b32929195",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd3b4ff6-0553-4eab-bde7-a32fa7d3af5a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cca6f01a-9a9d-4fac-988f-d1a9776b649a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15767994-9aa0-4640-997f-602ff14eee6c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90216437-24ab-4d03-b832-7e06a6540c35",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa109d41-fb52-4d63-9d5c-7d04033b1649",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b98b0e98-d97e-41e1-85f4-a41ac04449a4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17e97a25-2cb2-4b6f-93f2-f006035e173a",
      "documentation": "Get Available Fulfilment Times",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId/fulfilment/availabletimes",
      "responses": [
        {
          "uuid": "6b1bb4db-58f4-4168-96fa-a03515c7d6a3",
          "body": "{\n  \"asapAvailable\": {{faker 'datatype.boolean'}},\n  \"times\": [\n    {\n      \"from\": \"{{faker 'date.recent' 365}}\",\n      \"to\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ed8e45b-20a4-45dc-810d-67f9e15a3d29",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fecd28b-b0f9-4199-a379-478390cf6a1a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0032ab08-3db2-46c3-9601-1e9d48f71e42",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'FULFILMENT_TIME_BANDS_INVALID' 'FULFILMENT_TIME_BANDS_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b05f3e7b-23f9-4102-a344-16e8897fe32e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e4eb7ce-a8fd-4239-b2dd-facd76d12161",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "034e8d36-51fc-4b2f-a567-691e40d94ee7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f94de5b-dbb3-43a4-89ee-3f490224100d",
      "documentation": "Get consumers details",
      "method": "get",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "aa3ed3bd-230a-419a-b783-920f5bcfd856",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cddbb475-4a5e-4ce8-85ae-5897f4e30e62",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6aafaf5e-dd3e-48ca-9371-747d08645b21",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d61dab31-6d61-4803-a2e1-368bed723a00",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f2cd882-4223-4bf9-b811-b0efea4443a5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 501,
          "label": "The operation has not been implemented",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "883bce6a-4412-4096-8261-1832e97a6673",
      "documentation": "Create consumer",
      "method": "post",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "a4fcd2d2-ef6c-451e-8905-bbbf3069df21",
          "body": "{\n  \"token\": \"SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=\",\n  \"type\": \"otac\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Consumer created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0bd5cfe-693a-4ec7-bd09-f9242f5f28d9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7814783a-9a00-4463-ad69-aa1cb6e76838",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55fd732f-6594-4061-8ab7-f8aa6389eba0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7538d15-fd4e-485a-975b-077deeadced7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The specified email already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ee57868-6108-4e0e-ae9e-ad40eef17372",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30aa1457-cd2d-495a-97fe-e3269d425e00",
      "documentation": "Get communication preferences",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences",
      "responses": [
        {
          "uuid": "8b44c787-a190-4665-8f74-1fbcc4c724c7",
          "body": "{\n  \"marketing\": {\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"subscribedChannels\": [\n      \"{{oneOf (array 'email' 'sms' 'push')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8e01263-6c6b-4482-bca0-5f98e60f9391",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02ec9e57-0ad9-48d7-984e-a8e0fec33f09",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de284e89-bb99-4501-a20b-c9a41c1413cc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44ef946b-6028-4913-b18f-e34190254b36",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b67c9e83-4163-4628-a105-08c9ac77418a",
      "documentation": "Get channel subscriptions for a given consumer's communication preference type",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "2ffcd29c-e438-4b7e-baa4-47440321c4b3",
          "body": "{\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"subscribedChannels\": [\n    \"{{oneOf (array 'email' 'sms' 'push')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4cb604c-caca-4c08-a00f-76e2b0b59056",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f304a7c-dfc9-4e51-aa68-ae086f1b6773",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "041e82ef-0638-4b75-b953-d9a3d665b7c4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba82188c-1574-4985-9b8d-3d4133a03597",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f2b9be2-397b-4551-b883-8986c011cc3d",
      "documentation": "Set only the channel subscriptions for a given consumer's communication preference type",
      "method": "put",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "f0e114d0-ed2e-4173-a8aa-6c4b554f17b5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0151bf2e-45c6-4da4-830d-c3a127d54cbf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6801cac-e3b9-479f-9b15-8ecbf0594957",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4996de0d-4e50-4b4d-a908-bd2d3d3e1084",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b9fdaa5-8d7d-42c5-bdc7-70f85fa6abc1",
      "documentation": "Remove subscription of a specific communication preference channel",
      "method": "delete",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "123e33b7-eb67-44ac-8d5e-f6753a1ee30e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e6bb1c9-48ca-4596-a5c7-bc66284c8f5a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a56d6da-72d6-4dec-92d2-c54b6bb9d933",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aae2017f-ae46-46eb-9af5-b3fb30ec84b1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "acab5e74-a7b6-4c7f-8d6c-a81850abd40b",
      "documentation": "Subscribe to a specific communication preference channel",
      "method": "post",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "c9a040d7-019b-4efe-8b26-fb1b9ab9a550",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b7bf0ef1-42ca-4b52-95f5-90d363651d87",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35ca5de4-1763-4a23-b56d-7888082ecc33",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0d6ecd7-628b-4769-87b5-56dd119dbdfe",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12443d8d-4e5e-4c0b-9867-8862bdc35198",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98d2d686-8951-44e5-8505-50d88a275820",
      "documentation": "Delivery Attempt Failed",
      "method": "put",
      "endpoint": "delivery-failed",
      "responses": [
        {
          "uuid": "a6755600-dcac-40e7-8f41-27961d5df0f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "45519e93-bb7d-4710-a1ba-495c95d75fe1",
      "documentation": "Get restaurant delivery fees",
      "method": "get",
      "endpoint": "delivery-fees/:tenant",
      "responses": [
        {
          "uuid": "8cbbc8e2-cf9f-4c14-a3d8-682d45a28c2e",
          "body": "{\n  \"restaurants\": [\n    {\n      \"bands\": [\n        {\n          \"fee\": 250,\n          \"minimumAmount\": 1000\n        },\n        {\n          \"fee\": 0,\n          \"minimumAmount\": 2000\n        }\n      ],\n      \"minimumOrderValue\": 1000,\n      \"restaurantId\": \"5678\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7020c46c-ff3e-42ca-8b82-155ff90ccfbe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4404b9f5-021e-44b5-b069-c94e485e2152",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb63f1e1-2815-46ec-8ed8-71a9cf4b0390",
      "documentation": "Get delivery estimate",
      "method": "get",
      "endpoint": "delivery/estimate",
      "responses": [
        {
          "uuid": "ba8e15dc-1d06-4afd-bebd-75a629a1e09f",
          "body": "{\n  \"DurationInMinutes\": \"\",\n  \"RestaurantReference\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08d5a54d-0416-41cb-b5d3-dc4ec62f7266",
      "documentation": "Get your delivery pools",
      "method": "get",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "922760ad-8499-4ca0-a55e-6eae445f361a",
          "body": "{\n  \"delivery-pool-id\": {\n    \"name\": \"\",\n    \"restaurants\": [\n      {{faker 'datatype.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14988c25-49da-4ea6-b225-1136a847927c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "47082709-74d7-495d-807e-3aa53689a234",
      "documentation": "Create a new delivery pool",
      "method": "post",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "9e704019-2a5c-4198-a6ee-864af6f9e32a",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Pool has been created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "01f6e10a-5c8a-49c3-b404-805372347097",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93124711-8511-4290-bc3b-53c8e91d460c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e06a25ee-92eb-46a7-ad90-990a7fd8466e",
      "documentation": "Delete a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "77c63064-5eda-4ecc-8586-05b684018e15",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0e58573-2689-4757-ac36-eb2e7c0f7001",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc0864b1-7aa5-4376-a371-015dd5f1eba2",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01e69219-05df-46a1-af8b-6c809a9563ba",
      "documentation": "Get an individual delivery pool",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "2f5b3e71-62e3-4b37-901a-43cded62050c",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'datatype.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00844126-7c67-4765-beff-de62aad116fa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9472f492-4510-4130-9608-9bf18442a50b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04ddf49a-00aa-466a-ad87-07750e18f9c3",
      "documentation": "Modify a delivery pool",
      "method": "patch",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "c634e87a-1e53-4337-9fcc-901d3f23dd38",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'datatype.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "876e5918-f3db-49bd-b275-1f200bace4bd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96fd8093-3b5d-43b7-a76f-2c8a7470d32e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7debe81c-4118-4cff-b6b9-23979e1289e3",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42bbef64-970e-49b3-90ab-1527e0e1a2ec",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9be3287a-2def-45eb-981c-ccac799e4511",
      "documentation": "Replace an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "57871f57-58d7-45e7-ab93-5e50c7ceef39",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'datatype.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been replaced",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e69cc66-e23b-418d-8636-9bea4faf98b4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8f3df47-ba8a-46b1-984c-395e3debad93",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6b79c5d-de99-49e3-8785-ec96b460c18f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af8267bb-1378-4bbb-80a8-e2432f5ecf25",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "53c574ba-8202-450d-9c86-f957a5808116",
      "documentation": "Get availability for pickup",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "da92debc-f644-4b8e-8c99-5b0672d146bc",
          "body": "{\n  \"bestGuess\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e6bc9a4-cbe9-4044-b9b9-384c457bce90",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a22fa637-c21a-43e2-b8e6-e6d4f892b8c4",
      "documentation": "Set availability for pickup",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "f18c61da-408d-4b31-99c5-2f110f790f00",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aee4bc4d-4517-4b84-a29d-b4cd2dfddeb4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "726874d5-7d23-4d26-b790-e16d15f68a23",
      "documentation": "Set the delivery pools daily start and end times",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/hours",
      "responses": [
        {
          "uuid": "f4808d8e-ff5d-441e-b37d-677152356e30",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool hours have been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d247834-7a86-4b98-af81-6dcb126bd72a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fed0f6c3-a655-4a3a-a855-8933b2955d16",
      "documentation": "Remove restaurants from a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "d783b8b1-bc1a-43c5-89fb-3e2fdb7f3c04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9bb1d5d4-e581-4859-8485-3e08377a8d50",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "509f8308-1eb8-4210-837c-a8f8e78aa82f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a3ce115-1c4b-41c2-b1c7-a8ee2f851384",
      "documentation": "Add restaurants to an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "2af0ea3a-0fe7-4b73-aed6-33be4d132a87",
          "body": "{\n  \"restaurants\": [\n    10202,\n    10203\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32b2dc3c-7e82-4a86-9144-be5579bfc2cd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd605983-f964-4e68-ae82-448ce02d321d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "003e3d1e-e08e-4c0f-8378-2927e8599e21",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The restaurants could not be added to the pool. Typically this is because they are already assigned to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ce60d35-22e7-4cf5-9108-c9a186a209a1",
      "documentation": "Driver Assigned to Delivery",
      "method": "put",
      "endpoint": "driver-assigned-to-delivery",
      "responses": [
        {
          "uuid": "89c4a1f3-a535-4983-80be-7a2061492ee0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f976bdf9-e0f7-495b-8b6e-b7c9eecbe89a",
      "documentation": "Driver at delivery address",
      "method": "put",
      "endpoint": "driver-at-delivery-address",
      "responses": [
        {
          "uuid": "7ef585a1-6e44-41f2-bf18-a73523e09112",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e95eff9-c948-425c-b4b6-cac13c446883",
      "documentation": "Driver at restaurant",
      "method": "put",
      "endpoint": "driver-at-restaurant",
      "responses": [
        {
          "uuid": "84a4c245-281e-4808-8b13-4da8a5f84101",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f880b62b-0d03-462a-9642-e77cc4ebab9f",
      "documentation": "Driver has delivered order",
      "method": "put",
      "endpoint": "driver-has-delivered-order",
      "responses": [
        {
          "uuid": "96bdb540-48c1-4599-b76b-0a2a2254f61a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b8e8e95-a0d9-49c5-9556-824c24fa510d",
      "documentation": "Driver Location",
      "method": "put",
      "endpoint": "driver-location",
      "responses": [
        {
          "uuid": "791a32c5-19bd-4530-8b93-3ccc73c70020",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d824e0d9-8749-471c-9c84-92f0d481ce8f",
      "documentation": "Driver on their way to delivery address",
      "method": "put",
      "endpoint": "driver-on-their-way-to-delivery-address",
      "responses": [
        {
          "uuid": "ad327c62-91d5-4daa-88e7-b07dd907bfc0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32bd74f3-6175-41b4-9ba5-7a3ab69cced3",
      "documentation": "late order compensation query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-compensation-query",
      "responses": [
        {
          "uuid": "dfc0aa82-05b7-48b0-8136-303bda7bd803",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f98802b-72f8-4568-9cc1-42d6ba30c45b",
      "documentation": "late order query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-query",
      "responses": [
        {
          "uuid": "2aee05bd-b7c0-4bf5-9d16-175410065b9e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e80b08a2-3809-4917-867c-d37a0cb356d5",
      "documentation": "Menu ingestion complete",
      "method": "post",
      "endpoint": "menu-ingestion-complete",
      "responses": [
        {
          "uuid": "61f1ed1f-3f03-435f-a702-e7fba6dceb4e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60f12a2e-4cdb-40fc-bfe2-71035d6f7ae7",
      "documentation": "Order accepted",
      "method": "post",
      "endpoint": "order-accepted",
      "responses": [
        {
          "uuid": "c60a4ac6-a299-4bd6-84fe-50451ad9aeb6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4bc6a8e8-1398-44a1-8582-82544d9da20a",
      "documentation": "Order cancelled",
      "method": "post",
      "endpoint": "order-cancelled",
      "responses": [
        {
          "uuid": "a50f0bc0-0222-4c0f-8797-adf8d68fa0d4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5f3fa7e-78d4-4a7d-a84a-80741da5db96",
      "documentation": "Order Eligible For Restaurant Compensation",
      "method": "post",
      "endpoint": "order-eligible-for-restaurant-compensation",
      "responses": [
        {
          "uuid": "3f7cc578-ebbd-440c-a3a1-b35a3896c917",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ece66e9-0a21-4ae4-91e2-c5cac3dd0f4d",
      "documentation": "Order ready for pickup",
      "method": "put",
      "endpoint": "order-is-ready-for-pickup",
      "responses": [
        {
          "uuid": "6692eea3-7f79-4cae-b4ec-365105d88b17",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Upon successful receipt of the event, delivery partners should return a 200 HTTP status code indicating acknowledgement of transmission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4b33115-4a77-4b0e-921b-f377fc6538cf",
          "body": "{\n  \"Details\": \"\",\n  \"Message\": \"\",\n  \"OrderId\": \"\",\n  \"Timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the unlikely case of unknown errors, JUST EAT will log a raw response. If possible, the response should have the following format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b89f542e-0d31-482b-b477-c36d2bd6bae4",
      "documentation": "Order ready for preparation (async)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-async",
      "responses": [
        {
          "uuid": "1f17da85-23ed-409c-9947-458fd304e57d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Upon successful receipt of this event, a `202` status code should be returned, indicating the request has been accepted. You should then later respond with the result of processing this request, via the [callback URL](#section/Async-Webhooks) endpoint.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3753bfd-bb91-4b36-be83-feb28516c855",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Should the initial validation of the order fail, return a `400` status code. NOTE: In this instance we do not also expect a failure callback via the async callback URL.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3924e96e-b832-4546-9598-f60eab58ae98",
      "documentation": "Order ready for preparation (sync)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-sync",
      "responses": [
        {
          "uuid": "3acf0965-6c9c-4e9a-9a22-80ecc8236ea0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0bb8d11-4219-4b5f-8a0f-11c2c7c80d5a",
      "documentation": "Order rejected",
      "method": "post",
      "endpoint": "order-rejected",
      "responses": [
        {
          "uuid": "abe2764d-264c-4bea-8820-4acea4759ec7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eec89a97-8916-40b0-b3b4-be962adde4de",
      "documentation": "Order requires delivery acceptance",
      "method": "put",
      "endpoint": "order-requires-delivery-acceptance",
      "responses": [
        {
          "uuid": "bb725db5-d4e0-46d0-9919-bdde157d2d2c",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "In the event of successful handling of the request, a 201 status code should be returned, indicating acknowledgement of transmission success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f75cb975-7a31-44c7-b11c-a62cc10f82dc",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": \"{{oneOf (array 'outside_hours' 'too_busy' 'too_far' 'not_supported' 'bad_address' 'bad_request' 'restaurant_not_configured' 'duplicate' 'other')}}\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the case that the order cannot be accepted, an appropriate HTTP status code, such as 400 (Bad request) or 500 (Internal server error) should be returned.  In addition to the HTTP status code, a specific reason code and explanatory message should be provided within the response body",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83db19d5-8084-4779-9d5a-38d7a28465ee",
      "documentation": "Order time updated",
      "method": "post",
      "endpoint": "order-time-updated",
      "responses": [
        {
          "uuid": "21031ea5-511a-4b1c-8b0f-1f44d4713f3b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cade46f5-ccb3-4a62-a9e6-02a15c0b0e1d",
      "documentation": "Create order",
      "method": "post",
      "endpoint": "orders",
      "responses": [
        {
          "uuid": "08be86c3-c346-4409-ac7b-91b3b70c3fb1",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b754cc48-1b2b-47e5-b291-c0d1dfa64560",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - Request is for deprecated API version or has failed validation in some way - see response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c5565ad-710f-4fdb-91e1-5bd3854ff2f3",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - you've already told us about an order with this `OrderReference`",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9b6d75e-087c-4c49-9df6-b9cff8e1a338",
      "documentation": "Update current driver locations (bulk upload)",
      "method": "put",
      "endpoint": "orders/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "fe50c50e-0fcb-4f6e-86ad-d263dc6eaced",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd9b9887-fcd1-4bdb-9d5c-362b155aea0a",
      "documentation": "Accept order",
      "method": "put",
      "endpoint": "orders/:orderId/accept",
      "responses": [
        {
          "uuid": "53372d46-20c8-43a7-8b84-e380e8ae3fd5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "083f607e-880a-40b0-88e0-7af585820094",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ff44ef4-b40e-4a72-a9d7-5915d93f7a30",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07bc118e-5164-4d20-88de-6f7a8e3e4361",
      "documentation": "Cancel order",
      "method": "put",
      "endpoint": "orders/:orderId/cancel",
      "responses": [
        {
          "uuid": "644f27d4-a881-4bc6-be71-63c7c6110407",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7f97279-f86f-474e-81be-ac1ceeaaba7b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35cc1bfd-e12e-4dbc-a623-0e075e281b89",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has already been cancelled",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f300b51-08e8-4616-beaa-27d426af630e",
      "documentation": "Complete order",
      "method": "post",
      "endpoint": "orders/:orderId/complete",
      "responses": [
        {
          "uuid": "ab2f4282-f7fc-4179-a38e-644869554cea",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9ed5fcc3-fff6-4c71-afd7-bb6972ea9dff",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f454a75-89d9-4f94-9f9e-0dc13c544794",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order has already been marked as cancelled or complete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8a14082-9bd2-4385-8138-34e230a79b7e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "555f000a-08eb-4d47-ae07-64279fddee85",
      "documentation": "Update order with driver at delivery address details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atdeliveryaddress",
      "responses": [
        {
          "uuid": "e9d9c21f-227c-4cb4-b4c4-69c42c7ce7cf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0d21c3e-a717-484e-821d-c4c9b7628893",
      "documentation": "Update order with driver at restaurant details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestaurant",
      "responses": [
        {
          "uuid": "567b8e86-ed88-4da0-a77c-5dca1dc5ec69",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94cd3462-bbea-4b6f-96d6-6fce714c858c",
      "documentation": "Update the driver's estimated time to arrive at the Restaurant",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestauranteta",
      "responses": [
        {
          "uuid": "827f4faa-9656-4015-8e17-cc6108506837",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "447eecdc-9d9e-43c6-b2da-8b22df9ca6f9",
      "documentation": "Update order with delivered details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/delivered",
      "responses": [
        {
          "uuid": "78a42515-fd35-4ce3-aa88-5d7b78a83161",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "126bb3f6-078b-4779-b46c-a3e82c6d0f79",
      "documentation": "Update order with driver assigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverassigned",
      "responses": [
        {
          "uuid": "5d831b83-bb4b-4ea8-a189-1df2d831cabe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb1c9f91-1df4-499c-b03f-a9e7dc8cf83e",
      "documentation": "Update the driver's current location",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "d77244eb-3c5d-4da0-b6e9-31777fb9a792",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bac91f6e-0274-4d2c-910a-4884f99b368a",
      "documentation": "Update order with driver unassigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverunassigned",
      "responses": [
        {
          "uuid": "5c024edd-2b0f-463c-9a91-a664f0a1dfcf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "81a221ae-aea5-4f47-8d2d-eb0d4b1a0e8e",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98b3bf3d-a107-4e33-89a8-862e2480e8c3",
      "documentation": "Update order with driver on its way details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/onitsway",
      "responses": [
        {
          "uuid": "21bf8853-5034-450e-bcb6-e0cfa17b12f7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "918d57f8-698d-4a62-bb67-6a43da0ddfee",
      "documentation": "Update order ETA",
      "method": "put",
      "endpoint": "orders/:orderId/duedate",
      "responses": [
        {
          "uuid": "8e5a59dd-ac9f-4417-8432-4245292aa43f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "516da315-043b-48a2-8dd4-2b1a1fdc6afd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The due date is missing, or out of range (either in the past, or > 7 days in the future).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "881c8aa0-0bcf-429a-8521-9a62e193cace",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The order could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ccbed4e3-f9ea-4cc4-bf38-9f75de098165",
      "documentation": "Ignore order",
      "method": "put",
      "endpoint": "orders/:orderId/ignore",
      "responses": [
        {
          "uuid": "77a69453-4d03-4e46-8b5e-f45dcc9cfcb4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46128f24-2e5d-4be4-a627-bcf7a4bf79b8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e7122b3-424c-48d6-b4f0-0f5ce14fca11",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbb52050-34c4-424c-939b-65c7f77c106c",
      "documentation": "Mark order as ready for collection",
      "method": "post",
      "endpoint": "orders/:orderId/readyforcollection",
      "responses": [
        {
          "uuid": "28e985e9-5ede-43ff-ab98-cfa5d9ce04b8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7dee5d04-1e75-4bc5-ab70-b458ed3763a9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request - order cannot be marked as ready for collection because it is not a collection order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b301d9df-91bc-43a9-b8d6-c3f237f5cb01",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "556cdc15-2337-4e31-9c42-1ce325dd5917",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order is not in the accepted state",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec148653-29b7-4827-bea6-21b2aa5dfbd3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc3e729a-fdd7-4b6f-9781-55b2d29115b9",
      "documentation": "Reject order",
      "method": "put",
      "endpoint": "orders/:orderId/reject",
      "responses": [
        {
          "uuid": "d600fb7d-3c18-4eed-9662-2959ae2d36c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de103aa3-3c96-4b2f-924b-551f2d829744",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e826986-12af-4b1e-9690-d19f5ad422dd",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b7c7fbe-5857-4487-ad84-49bf68fec337",
      "documentation": "Response to Late Order Update Request",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateorder/restaurantresponse",
      "responses": [
        {
          "uuid": "ec394aa7-2793-4e50-bdcd-e6c042158e22",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9edf0dac-dc16-4a42-a083-1ce91a58fae0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid i.e. missing a required parameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66199fb4-622d-4b5d-b267-653e2f4f4666",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb546f41-8c85-4b09-aa4b-54213e8ff8a6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f85daa66-aa6b-436f-93f9-a3a84cb2bdae",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47ce357a-bc8f-4330-971e-3a6767953ad3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70c5d216-81bb-4f57-98b8-0aae3cf6b653",
      "documentation": "Update late order compensation request with Restaurant response",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateordercompensation/restaurantresponse",
      "responses": [
        {
          "uuid": "ee9a6ea6-5508-4a6d-b6d9-091c0083499a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26a36bbd-22e0-4a3f-ba69-2660a6b8f1bf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid - e.g. contains missing or invalid parameters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9687f2da-676d-4e9a-b99b-0a7ca29b9e28",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c778eac-4b31-4ad6-b4c0-07519e4d737f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b499624-232c-4853-8dd6-53a83f9c91d7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ebd4bdc-e9f3-4827-871c-ca5e5600fd10",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67aabd4d-f58b-4882-9803-eb7e760acda1",
      "documentation": "Create Compensation requests",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/restaurantqueries/compensation",
      "responses": [
        {
          "uuid": "0afc2f97-3657-4b06-8483-e84d6e4526b8",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b374f82e-d496-4cc6-bc54-ebd57935c694",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fff0db19-9ebe-4dd4-b628-b3f1b1fae463",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "557e95e9-4bdd-4888-b3d9-575a2dd7e51d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - credentials provided by consumer do not allow access to this resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e7ea53e-fdda-4099-9c12-bdc4df8b3aa6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2ff8a5d-210c-4adf-81ac-d9828697e9ff",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - returned if tried to claim compensation for an order that is not eligible",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57b1e5e2-ed7d-4746-9dad-a0f72f382e41",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18b5e7ba-b658-45c6-a460-23a7def82e70",
      "documentation": "Customer Requested Redelivery",
      "method": "put",
      "endpoint": "redelivery-requested",
      "responses": [
        {
          "uuid": "ef776292-17bc-4ffc-b2be-0f4ccf63904e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "efd8bfa8-b34a-4b3e-be6f-995df48c8836",
      "documentation": "Restaurant Offline Status",
      "method": "put",
      "endpoint": "restaurant-offline-status",
      "responses": [
        {
          "uuid": "9ecfae28-e543-4691-a250-55d1a6639590",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8521aaf8-8465-4921-9828-9a8c38183fe9",
      "documentation": "Restaurant Online Status",
      "method": "put",
      "endpoint": "restaurant-online-status",
      "responses": [
        {
          "uuid": "92e12bd6-98de-41e9-b4f5-79f5586ba42f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef341640-5338-482f-adb8-ec1c66d8b08f",
      "documentation": "Get restaurants by location",
      "method": "get",
      "endpoint": "restaurants/bylatlong",
      "responses": [
        {
          "uuid": "13d3d759-edb6-492f-9504-9daef354a06e",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'datatype.number'}},\n          \"ProductId\": {{faker 'datatype.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'datatype.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'datatype.number'}},\n          \"ProductId\": {{faker 'datatype.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'datatype.number'}},\n    \"Longitude\": {{faker 'datatype.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'datatype.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'datatype.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'datatype.number'}},\n        \"Longitude\": {{faker 'datatype.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'datatype.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'datatype.number'}},\n          \"IsTopCuisine\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'datatype.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'datatype.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'datatype.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'datatype.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'datatype.number'}},\n        \"RangeLower\": {{faker 'datatype.number'}},\n        \"RangeUpper\": {{faker 'datatype.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'datatype.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'datatype.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'datatype.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'datatype.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'datatype.number'}},\n      \"DriveInfoCalculated\": {{faker 'datatype.boolean'}},\n      \"HygieneRating\": {{faker 'datatype.number'}},\n      \"Id\": {{faker 'datatype.number'}},\n      \"IsBrand\": {{faker 'datatype.boolean'}},\n      \"IsCloseBy\": {{faker 'datatype.boolean'}},\n      \"IsCollection\": {{faker 'datatype.boolean'}},\n      \"IsDelivery\": {{faker 'datatype.boolean'}},\n      \"IsFreeDelivery\": {{faker 'datatype.boolean'}},\n      \"IsHalal\": {{faker 'datatype.boolean'}},\n      \"IsNew\": {{faker 'datatype.boolean'}},\n      \"IsOpenNow\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'datatype.boolean'}},\n      \"IsPremier\": {{faker 'datatype.boolean'}},\n      \"IsSponsored\": {{faker 'datatype.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'datatype.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'datatype.boolean'}},\n      \"IsTestRestaurant\": {{faker 'datatype.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'datatype.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'datatype.number'}},\n      \"MinimumDeliveryValue\": {{faker 'datatype.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'datatype.number'}},\n      \"OfferPercent\": {{faker 'datatype.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'datatype.number'}},\n        \"Count\": {{faker 'datatype.number'}},\n        \"StarRating\": {{faker 'datatype.number'}}\n      },\n      \"RatingAverage\": {{faker 'datatype.number'}},\n      \"RatingStars\": {{faker 'datatype.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'datatype.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'datatype.number'}},\n      \"SecondDateRanking\": {{faker 'datatype.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'datatype.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'datatype.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'datatype.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'datatype.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'datatype.number'}},\n    \"rankedIds\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6389b688-36ab-46a3-8a0a-5d97949b4dc0",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2c162d7-39d4-4bac-9c96-9be88a2cb96e",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fe98a1b-8d98-4cf7-9122-7857da086cdd",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6408b2b0-1594-4305-b4c0-86463b8fd7ec",
      "documentation": "Get restaurants by postcode",
      "method": "get",
      "endpoint": "restaurants/bypostcode/:postcode",
      "responses": [
        {
          "uuid": "5c7055e5-f7e5-428e-9cd3-85e78d652c0b",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'datatype.number'}},\n          \"ProductId\": {{faker 'datatype.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'datatype.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'datatype.number'}},\n          \"ProductId\": {{faker 'datatype.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'datatype.number'}},\n    \"Longitude\": {{faker 'datatype.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'datatype.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'datatype.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'datatype.number'}},\n        \"Longitude\": {{faker 'datatype.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'datatype.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'datatype.number'}},\n          \"IsTopCuisine\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'datatype.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'datatype.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'datatype.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'datatype.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'datatype.number'}},\n        \"RangeLower\": {{faker 'datatype.number'}},\n        \"RangeUpper\": {{faker 'datatype.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'datatype.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'datatype.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'datatype.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'datatype.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'datatype.number'}},\n      \"DriveInfoCalculated\": {{faker 'datatype.boolean'}},\n      \"HygieneRating\": {{faker 'datatype.number'}},\n      \"Id\": {{faker 'datatype.number'}},\n      \"IsBrand\": {{faker 'datatype.boolean'}},\n      \"IsCloseBy\": {{faker 'datatype.boolean'}},\n      \"IsCollection\": {{faker 'datatype.boolean'}},\n      \"IsDelivery\": {{faker 'datatype.boolean'}},\n      \"IsFreeDelivery\": {{faker 'datatype.boolean'}},\n      \"IsHalal\": {{faker 'datatype.boolean'}},\n      \"IsNew\": {{faker 'datatype.boolean'}},\n      \"IsOpenNow\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'datatype.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'datatype.boolean'}},\n      \"IsPremier\": {{faker 'datatype.boolean'}},\n      \"IsSponsored\": {{faker 'datatype.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'datatype.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'datatype.boolean'}},\n      \"IsTestRestaurant\": {{faker 'datatype.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'datatype.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'datatype.number'}},\n      \"MinimumDeliveryValue\": {{faker 'datatype.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'datatype.number'}},\n      \"OfferPercent\": {{faker 'datatype.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'datatype.number'}},\n        \"Count\": {{faker 'datatype.number'}},\n        \"StarRating\": {{faker 'datatype.number'}}\n      },\n      \"RatingAverage\": {{faker 'datatype.number'}},\n      \"RatingStars\": {{faker 'datatype.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'datatype.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'datatype.number'}},\n      \"SecondDateRanking\": {{faker 'datatype.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'datatype.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'datatype.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'datatype.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'datatype.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'datatype.number'}},\n    \"rankedIds\": [\n      {{faker 'datatype.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1592a47a-5908-48db-b49f-836bb0d7aa70",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52e5099a-efda-423d-bdad-b8b8a8f585cb",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c2e8822-e586-4a15-b0a9-d86ef162604a",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0ac1d20-0c81-4156-b8fd-7c7584d34df2",
      "documentation": "Set ETA for pickup",
      "method": "put",
      "endpoint": "restaurants/driver/eta",
      "responses": [
        {
          "uuid": "6592524d-5f4e-4653-9843-c737c7ee8528",
          "body": "{\n  \"ignoredRestaurantIds\": [\n    \"123\",\n    \"456\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4ab5eae-2827-47b3-85e9-49e54187dbc8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b440366-9492-4668-b70f-1c82048ec549",
      "documentation": "Get product catalogue",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue",
      "responses": [
        {
          "uuid": "1f57500f-0543-4670-b023-d2ff558a98c2",
          "body": "{\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7f466cb-52fb-4a05-b276-5c091a45bbfa",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No product catalogue found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47a11142-0324-46e3-b0ba-0dbbbca02088",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9d67e44-3bcb-4966-9043-c6d90e4ceb30",
      "documentation": "Get all availabilities",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/availabilities",
      "responses": [
        {
          "uuid": "cfd63f74-6eba-4f46-a7b2-957cf668fe7e",
          "body": "{\n  \"availabilities\": [\n    {\n      \"description\": \"Menu items available for delivery during weekdays for lunch.\",\n      \"id\": \"1-lunch-delivery\",\n      \"name\": \"Delivery Lunch\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"11:30:00\",\n          \"toDateTime\": \"14:30:00\"\n        }\n      ]\n    },\n    {\n      \"description\": \"Menu items available for delivery during weekdays for dinner.\",\n      \"id\": \"1-dinner-delivery\",\n      \"name\": \"Delivery Dinner\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"16:30:00\",\n          \"toDateTime\": \"22:00:00\"\n        }\n      ]\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "655783d7-d75d-4735-9d39-d26e7119a32a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8e0a118-0d75-4451-90a9-dc6159a4635b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5213ebe-da51-4379-b9c7-597d4b8531d1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "701087b0-808e-4cf0-bfd0-6ba7c5d925f4",
      "documentation": "Get all categories",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories",
      "responses": [
        {
          "uuid": "fffdd0d9-166d-4b0e-9c83-3fff5700d095",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"Sumptuous starters\",\n      \"id\": \"3\",\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"Magnificent mains\",\n      \"id\": \"4\",\n      \"name\": \"Mains\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6171b7fe-5390-427d-a1b7-7d9ff8fbafe1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03cfa048-9668-49dd-be75-b4c34cdb1932",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "448ed0a5-4b44-4e2c-afa8-85b805a403f2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9e5c131-433c-4ed5-843a-2f9355646921",
      "documentation": "Get all category item IDs",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories/:categoryId/items",
      "responses": [
        {
          "uuid": "a63f9f06-dc7e-4ebb-a0d9-d9c2ee67cbcb",
          "body": "{\n  \"itemIds\": [\n    \"65143901\",\n    \"65143902\",\n    \"65143903\",\n    \"65143904\",\n    \"65143905\"\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46b0c9b2-bdab-4b87-ae2c-36bae99a02bb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1427546c-ede7-4b17-9512-9015bd6a067a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6249fe7-50e6-4999-8727-28352a0f7355",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e542c9d-0714-4125-925d-77a8bbe74230",
      "documentation": "Get all menu items",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items",
      "responses": [
        {
          "uuid": "0ad0c2d1-abb4-4926-9605-f5fad5cf883e",
          "body": "{\n  \"items\": [\n    {\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d0a793c-3c21-41a6-984f-d9d9ccc8818f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ac8878e-1a81-4a51-b007-fbfeabb2ae70",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No menu items found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80d0cbdb-8b9c-44fb-b859-b389ad43590f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "350dc9bf-1f68-4e9b-bd22-72374520b4ff",
      "documentation": "Get all menu item deal groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups",
      "responses": [
        {
          "uuid": "b4f49e69-a8fd-43a4-94cd-259bcedf0f6f",
          "body": "{\n  \"dealGroups\": [\n    {\n      \"id\": \"23435309-1\",\n      \"name\": \"Choose your base\",\n      \"numberOfChoices\": 1\n    },\n    {\n      \"id\": \"23435309-2\",\n      \"name\": \"Choose your halves\",\n      \"numberOfChoices\": 2\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a342d90-69df-4665-8c28-a32891b8958b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5f7b8b4-bf14-4c5f-9edc-749ffc266b7d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0b2a8e7-936e-445d-9a35-3bfa6c639f85",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d931c86f-82db-4ef9-bdcf-6dbc22c862f6",
      "documentation": "Get all deal item variations for a deal group",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups/:dealGroupId/dealitemvariations",
      "responses": [
        {
          "uuid": "433a123e-ebfc-4be2-8d06-0491479051f2",
          "body": "{\n  \"dealItemVariations\": [\n    {\n      \"additionPrice\": 50,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 1,\n      \"minChoices\": 0\n    },\n    {\n      \"additionPrice\": 100,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 2,\n      \"minChoices\": 1\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "295205d4-ef1c-4a38-8f70-b656a4c38a91",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f1c9288-4929-49ca-aefd-68e72be8c437",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal item variations found for given `tenant`, `restaurantId`, `itemId` and `dealGroupId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2748ef4-1de4-4782-983c-9714a69a9c5b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60c63be1-e92a-4759-8fef-0e20f506df92",
      "documentation": "Get all menu item modifier groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/modifiergroups",
      "responses": [
        {
          "uuid": "9bb560c4-4990-4ce3-83ad-e627e50ae94e",
          "body": "{\n  \"modifierGroups\": [\n    {\n      \"id\": \"8547130-req-1\",\n      \"maxChoices\": 1,\n      \"minChoices\": 1,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 0,\n          \"id\": \"854500\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Classic Crust\"\n        },\n        {\n          \"additionPrice\": 200,\n          \"id\": \"854600\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Stuffed Crust\"\n        }\n      ],\n      \"name\": \"Choose your crust\"\n    },\n    {\n      \"id\": \"8547130-opt-1\",\n      \"maxChoices\": 10,\n      \"minChoices\": 0,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1000\",\n          \"maxChoices\": 2,\n          \"minChoices\": 0,\n          \"name\": \"Mozzarella Cheese\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1001\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Ham\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1002\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Red Onion\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1003\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Pepperoni\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1004\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Olives\"\n        }\n      ],\n      \"name\": \"Any extra toppings?\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68231fa3-0d86-464b-8387-4cd15c6b4188",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06c7328d-7eac-4a0a-a054-bee1d40fffed",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No modifier groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8c61dec-535f-46d3-ac71-29d07dfaba04",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3508c09d-3806-478f-b701-a2eef344b8e6",
      "documentation": "Get all menu item variations",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/variations",
      "responses": [
        {
          "uuid": "c1b656e5-8fd1-4aec-b62b-d7e7ed5f457b",
          "body": "{\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  },\n  \"variations\": [\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 500,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8547121\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"Half\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 1000,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": false,\n      \"id\": \"8547130\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"12 inch\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery-weekday\",\n        \"2-lunch-collection-weekday\",\n        \"3-dinner-delivery-weekday\",\n        \"4-dinner-collection-weekday\"\n      ],\n      \"basePrice\": 1200,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8543123\",\n      \"kitchenNumber\": \"200\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"14 inch\",\n      \"type\": \"variation\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "347770b4-c797-47f2-8ed8-edb5ab2046c7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dab87dc1-67cf-472e-94f1-a132ffe4fbcd",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No variations found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d52903b1-8647-4177-b0bf-c6eeafbc9c9e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46ac6f6c-705c-416d-a865-a354ce0cc796",
      "documentation": "Get claims",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims",
      "responses": [
        {
          "uuid": "19f069ec-3358-4b26-853f-08446214849a",
          "body": "{\n  \"claims\": [\n    {\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"954226580\",\n      \"id\": \"z2749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"LateOrder\",\n      \"orderId\": \"z27tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 4000\n      },\n      \"restaurantResponse\": {\n        \"decision\": \"Accepted\",\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 4000\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Pizza\",\n          \"quantity\": 1,\n          \"reference\": \"productid%t5y6574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"451226580\",\n      \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Damaged\",\n      \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n      \"resolution\": null,\n      \"restaurantResponse\": null,\n      \"state\": \"Open\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 3800\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"151226580\",\n      \"id\": \"1f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"a23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Rejected\",\n        \"resolvedChannel\": \"PartnerCentre\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 0\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": {\n          \"comments\": null,\n          \"reason\": \"OrderWasHot\"\n        }\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226580\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": \"Meat was terribly cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\",\n          \"name\": \"Meat\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574593\",\n          \"totalClaimed\": 2900,\n          \"unitPrice\": 3000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226588\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e038\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorz\",\n      \"resolution\": {\n        \"decision\": \"PartiallyAccepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          },\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f464096-8729-4c73-b173-16e9b0b4e6a6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. has incorrect date limiter format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "807c5289-ce26-4087-8abd-75a35f0b5def",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87d90143-73d4-4f58-98a1-ed421f9f0ead",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87fed22f-6362-44b8-b813-2cf4758880e0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "485f8efb-02ad-4f86-b8f9-7e05d755260d",
      "documentation": "Get order claim",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id",
      "responses": [
        {
          "uuid": "d4f1958e-911b-495b-bf20-2bd067a1b612",
          "body": "{\n  \"affectedItems\": [\n    {\n      \"additionalContext\": \"Potato skin was damaged\",\n      \"decision\": \"Rejected\",\n      \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Potato skin\",\n      \"quantity\": 1,\n      \"reference\": \"productid%4t56574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    },\n    {\n      \"additionalContext\": \"Pizza was damaged too\",\n      \"decision\": \"Accepted\",\n      \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Pizza\",\n      \"quantity\": 1,\n      \"reference\": \"productid%t5y6574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n  \"friendlyOrderReference\": \"451226580\",\n  \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n  \"issueType\": \"Damaged\",\n  \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n  \"resolution\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"resolvedChannel\": \"PartnerCentre\",\n    \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n    \"totalClaimedAccepted\": 1900\n  },\n  \"restaurantResponse\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"items\": [\n      {\n        \"decision\": \"Rejected\",\n        \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      },\n      {\n        \"decision\": \"Accepted\",\n        \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      }\n    ],\n    \"justification\": {\n      \"comments\": \"The food was packed properly\",\n      \"reason\": \"Other\"\n    }\n  },\n  \"state\": \"Closed\",\n  \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n  \"totalClaimed\": 3800\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20d646ea-a07c-4406-a651-b7636fd051d7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8433db31-ef71-4bb0-a705-34f62f899c21",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81985cd7-c01b-44c9-a8ed-4ce36d22d0c5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5aa06f9-df49-4251-a292-ddffefabc946",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f15afac-0e19-44f9-8784-0bfee2234a3d",
      "documentation": "Submit a restaurant response for the claim",
      "method": "post",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse",
      "responses": [
        {
          "uuid": "d6cc2e1b-9d71-4b41-bea4-fec2320bd6e9",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Request succeeded. Your response to the claim has been submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de9ffe66-d658-4cde-8e5e-876e19699faa",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. decision value is incorrect",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9140d53d-6172-4a49-ab54-e510e69842b1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47de7cbe-d2a8-4950-9147-4c6b05eb09d5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3a3ad70-9630-4a69-adbf-af548a0b822d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92269038-5f8f-473d-aec0-a7675a6e5703",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to resolve is has been resolved",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34cb620d-c2c8-4bc0-b4a4-8a1e84feee2d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable. The claim you are attempting to update does not contain the items from the request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2196f3d-e5fe-4fa0-81b8-4e18f1c02244",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07d7fcb6-eee3-486e-a558-619219ec04de",
      "documentation": "Add reason and comments to the response",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse/justification",
      "responses": [
        {
          "uuid": "fdf7f131-21fb-4dd3-b5c0-53b0c486987d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Request succeeded. Justification was successfully submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15e2d638-b5a6-4bb8-99d4-1a70cf1c7310",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. reason doesn't match any of the predefined values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cabe4f5f-52a2-44d2-a1f7-16dc6682f67a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a133c93-44b4-47b5-94cc-78f5709e43e5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b234b8ce-dd7e-447f-a286-0c7ae35a9871",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b7e4075-9a4d-4224-9ef1-0b3c1c03d440",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to update is older than the current claim. Fetch the last copy of the entity and try the request again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4deb8845-4e65-4b69-a73a-5eb9934d279a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0322ecca-fcc2-47db-a166-7ee4739259e3",
      "documentation": "Get Restaurant Fees",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "cf9477d4-61d2-4e0e-94b4-3b228ffaf30d",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "833e7ae6-bfa4-48f7-a076-5899e7fba11d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec58ecc4-8ee9-4c28-94de-21e6c66388a2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85bf57f4-ddac-4da3-86af-eacdb7aea39c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1361428-cadd-41b5-ab2e-9a9440bf92e3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b60fea3-b10b-43b7-b5a4-f688a56c1aba",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a0d9b55-9deb-4d35-aa80-69a041c1b0dc",
      "documentation": "Create or Update Restaurant Fees",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "49c63c1e-cb5d-407b-b716-cea6a2ec4ddc",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "af4ae2f6-6460-4a56-97b9-18694858fe8d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36f29420-07f4-43a6-9470-4ef0b91edabc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfefedcf-a4fd-47f4-8cff-17cdc8c98062",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2623c7cd-b583-403a-97d9-a4c00350d1af",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc1b6ddf-03b2-415c-bac4-5f0cab6d59d1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5fb92b8-629d-4460-844f-0b2751161760",
      "documentation": "Get the latest version of the restaurant's full menu",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "2fe73911-c5ae-4043-9bf9-115c6b8d5bc2",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"\",\n      \"id\": \"3\",\n      \"itemIds\": [\n        \"65143901\"\n      ],\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"4\",\n      \"itemIds\": [\n        \"23435309\",\n        \"33445308\"\n      ],\n      \"name\": \"Deals\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"5\",\n      \"itemIds\": [\n        \"8547130\",\n        \"8547140\"\n      ],\n      \"name\": \"Pizzas\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"6\",\n      \"itemIds\": [\n        \"6537130\",\n        \"6537140\"\n      ],\n      \"name\": \"Drinks\"\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"items\": [\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"1577341\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-1\",\n          \"name\": \"Choose your base\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"8547121\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"3547157\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 50,\n              \"dealItemVariationId\": \"8548153\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-2\",\n          \"name\": \"Choose your halves\",\n          \"numberOfChoices\": 2\n        }\n      ],\n      \"description\": \"Choose each half.\",\n      \"id\": \"23435309\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Half-and-half Pizza\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"23435309-1\",\n            \"23435309-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"23435309\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750011\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750021\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"23435309\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-1\",\n          \"name\": \"Choose your pizza\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 13,\n              \"dealItemVariationId\": \"6537130\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"6537140\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"7739164\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-2\",\n          \"name\": \"Choose your drink\",\n          \"numberOfChoices\": 1\n        }\n      ],\n      \"description\": \"Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.\",\n      \"id\": \"33445308\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"14 inch Pizza & A Drink For 1\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"33445308-1\",\n            \"33445308-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"33445308\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"65143901-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"834502\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pitta Bread\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835700\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Sourdough\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"835601\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Wholemeal\"\n            }\n          ],\n          \"name\": \"Choose your bread\"\n        },\n        {\n          \"id\": \"65143901-req-2\",\n          \"maxChoices\": 2,\n          \"minChoices\": 2,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835340\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Tzatziki\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835341\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Taramasalata\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825344\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Hummus\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825346\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Onion\"\n            }\n          ],\n          \"name\": \"Choose your dips\"\n        }\n      ],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 650,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"65143901\",\n          \"kitchenNumber\": \"90\",\n          \"modifierGroupsIds\": [\n            \"65143901-req-1\",\n            \"65143901-req-2\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"1577341\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"1577341-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Crust\"\n        }\n      ],\n      \"name\": \"Base\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"1577341\",\n          \"modifierGroupsIds\": [\n            \"1577341-req-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547130-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547130-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8547121\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547130\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery-weekday\",\n            \"2-lunch-collection-weekday\",\n            \"3-dinner-delivery-weekday\",\n            \"4-dinner-collection-weekday\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8543123\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547140\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 4,\n              \"minChoices\": 2,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        },\n        {\n          \"id\": \"9755052-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 250,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"9755052-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Double Pepperoni\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8548153\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547140\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"9750021\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9755052\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"9755052-req-1\",\n            \"9755052-opt-1\"\n          ],\n          \"name\": \"18 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"3547157\",\n      \"labels\": [\n        \"vegetarian\"\n      ],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Vegetarian\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"3547157\",\n          \"kitchenNumber\": \"121\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537130\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Coca-Cola\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537130\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750011\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537140\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Diet Coke\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537140\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750312\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"7739164\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Bottle of Lager\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"7739164\",\n          \"kitchenNumber\": \"700\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    }\n  ],\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 301,
          "label": "Temporary Redirect. The redirect will contain the signed URL that the client needs to access the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ccef415-e662-44d9-8ca2-589485a5219a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. We were unable to process the request due to data you sent us",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9897672-2cfd-4e7d-ae3f-f343be21c3ac",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75c0a89b-5c96-4002-bbcc-ffe6517ca103",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "638440ba-07a8-48eb-a33e-4b8437fec737",
          "body": "{\n  \"code\": {{faker 'datatype.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b653cea2-ab68-4fd0-a294-f5d1db0255a1",
      "documentation": "Create or update a menu",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "724bb566-1c4f-4e87-89d5-19fb698227b2",
          "body": "{\n  \"correlationId\": \"64bef5ee-7265-47f8-9aee-28bc74f00b13\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10ff65c1-d175-46b1-89f8-996cb47436fc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f6a244a-308d-4cdc-8b94-9bc7c933bf5a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed18d512-daad-4012-b87b-aa35c003af14",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d8fe53f-e57f-4032-a5b6-d99a07a4a438",
          "body": "{\n  \"code\": {{faker 'datatype.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e733a2ac-ecc9-4805-a761-8b1688e5fd1a",
      "documentation": "Get the restaurant's delivery and collection lead times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes",
      "responses": [
        {
          "uuid": "5c9ccace-d37e-48bd-8146-5c9431a50a83",
          "body": "[\n  {\n    \"dayOfWeek\": \"Monday\",\n    \"lowerBoundMinutes\": 35,\n    \"serviceType\": \"Delivery\",\n    \"upperBoundMinutes\": 50\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36742737-114d-4800-8b34-3f8dcaa05b1f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16f6ac3b-c769-49dc-bba5-eee498ca0183",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - the restaurant still uses deprecated approach of Lunch and Night menus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d48fc607-1c48-448b-a489-aa7e969ab194",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6af55788-e0ea-4ded-a0a9-cdf8af3f9912",
      "documentation": "Update the restaurant's delivery and collection lead times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes/:dayOfWeek/:serviceType",
      "responses": [
        {
          "uuid": "101ff03d-0313-40c0-8d2b-2a0534279af2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b5f7413d-fd9a-4e28-82f8-d58cf782d30e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d294c40f-aae9-4fea-8770-6c8fedf81dd9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fe6fc5e-672d-47b1-adb7-dcc76df86933",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b41b19d-6920-492f-87f5-d89a918cdaac",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9c7d71c-5fcd-4719-93ca-eb45e4f8529f",
      "documentation": "Get service times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "51b2d655-0f48-4ccb-9b90-ffeb10422dc8",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The restaurant's service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c27fcde5-cc63-42e2-921b-85503aa467b5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9b323e4-efa0-447f-a121-baa2c5f30de3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a72e2023-ba49-4224-9ef2-c311ee8e5ea6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "33689909-d283-4fb8-a5a2-594a0079176d",
      "documentation": "Create or update service times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "7ac27802-e56f-4775-a68b-dc6280485fc9",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e542fa4-3efb-421b-9cad-1898cfc778ae",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdb6c8cc-9ba7-44de-b323-24bdae04b70a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33724572-fb22-4463-a7cc-50ccc4715d90",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "daf678a6-0044-46c0-868b-7c8f4ac119fa",
      "documentation": "Get auto-completed search terms",
      "method": "get",
      "endpoint": "search/autocomplete/:tenant",
      "responses": [
        {
          "uuid": "32926844-8653-4f69-963d-42bb83ba38cb",
          "body": "{\n  \"terms\": [\n    {\n      \"classification\": \"Restaurant\",\n      \"term\": \"Pizza Palace\"\n    },\n    {\n      \"classification\": \"Cuisine\",\n      \"term\": \"Pizza\"\n    },\n    {\n      \"classification\": \"Dish\",\n      \"term\": \"Large Hawaiian\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da99dcd5-0338-4b65-afb8-5650340bfe99",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\",\n        \"fields\": [\n          \"\"\n        ]\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88132f2c-b74b-4693-b176-ac20f236f429",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "447a3558-993b-4d46-82d5-5808415e10d8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f845036-4b60-473f-8cc9-1318c399c1b0",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fbb2a3ab-9c84-4343-ab7a-a7563473f517",
      "documentation": "Search restaurants",
      "method": "get",
      "endpoint": "search/restaurants/:tenant",
      "responses": [
        {
          "uuid": "9ccd49e5-9060-4088-a49b-3ef91ddf1013",
          "body": "{\n  \"restaurants\": [\n    {\n      \"isSponsored\": true,\n      \"products\": [\n        {\n          \"fullName\": \"Chicken Korma\",\n          \"price\": 799,\n          \"productId\": \"289347\"\n        },\n        {\n          \"fullName\": \"Chicken Madras\",\n          \"price\": 699,\n          \"productId\": \"563454\"\n        }\n      ],\n      \"restaurantId\": \"110230\"\n    },\n    {\n      \"isSponsored\": false,\n      \"products\": [\n        {\n          \"fullName\": \"BBQ Chicken Pizza\",\n          \"price\": 1099,\n          \"productId\": \"67832\"\n        },\n        {\n          \"fullName\": \"Chicken Burger\",\n          \"price\": 899,\n          \"productId\": \"23567\"\n        }\n      ],\n      \"restaurantId\": \"229390\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "547b5b5f-bbe0-4a8c-ab2e-f08b89f5d993",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "011d9a8a-c047-42d3-8133-5885d32d0e16",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a387d3fd-6a3a-4415-ad56-b6c82ff771cd",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - search term rejected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72589b7b-b9bb-4b33-9417-1a4772740944",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1252ccb0-21c8-4268-a960-b1a9e83bab5d",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c198cc0-d6b4-43cd-97d6-ccbd7d39b312",
      "documentation": "Send to POS failed",
      "method": "post",
      "endpoint": "send-to-pos-failed",
      "responses": [
        {
          "uuid": "82411174-4173-4345-980e-6c3d1578be02",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "28c6997d-ea3a-4f57-b2c8-d11c16ad6aba",
      "documentation": "Create Offline Event",
      "method": "post",
      "endpoint": "v1/:tenant/restaurants/event/offline",
      "responses": [
        {
          "uuid": "e3d2b1f3-7286-42f5-9e16-57cb54d256bd",
          "body": "{\n  \"restaurantEventId\": \"03bff206-d136-405f-b789-95190e9711a4\",\n  \"restaurantIds\": \"12345\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5df77bcc-c769-4cde-845b-3c080fb41991",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "301377f8-2dd9-4417-a58e-6bc0cbdb82a3",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "257c7ba5-90da-4446-a074-1532c373181d",
      "documentation": "Delete Offline Event",
      "method": "delete",
      "endpoint": "v1/:tenant/restaurants/:id/event/offline",
      "responses": [
        {
          "uuid": "6e492f51-0df0-42cd-995c-0fe5dbf32a62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No Events to Delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94823523-9790-4a71-af5a-33960a216bce",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Request Succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb717927-0736-4928-a72d-cd7c088e7dc4",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13482994-b4fe-4496-9a6c-b57f869aaa0e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70f9fc77-ef8a-4cbf-900a-c9888e485679",
      "documentation": "Delivery Attempt Failed",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery",
      "responses": [
        {
          "uuid": "4124322c-bbc6-4c7d-8cb5-521f53775a23",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "933de586-8e25-4279-8ce6-45a118a8cb4b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c39690a-7738-47e8-bd8b-3a27055820dc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b790d78a-ce66-494c-8931-078892adfa85",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b906af5-e971-49af-8780-388ee4909d61",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16b01f07-c590-444d-a6ed-9a66d16d87b5",
      "documentation": "Request Redelivery of the Order",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery/resolution/redeliverorder",
      "responses": [
        {
          "uuid": "f1bdab05-a774-4252-8597-7bc48838c088",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d89e1fe9-84a8-42e5-a634-67fb9d9f25e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85008ccd-ffcb-455d-86e8-6e312f3ccbd6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11557894-2eae-49ce-b08b-b26768a6e1c9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a32fe1f-1a5c-445c-b0ee-c7389c3b6270",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}