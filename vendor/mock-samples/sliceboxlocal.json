{
  "uuid": "d4341848-7b7a-4103-935b-b26e892025cd",
  "lastMigration": 24,
  "name": "Slicebox API",
  "endpointPrefix": "api",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "20ec4e33-0986-4607-a9d2-3d79f2334794",
      "documentation": "anonymize the images corresponding to the supplied list of image IDs (each paired with a list of DICOM tag translation). This route corresponds to repeated use of the route /images/{id}/anonymize.",
      "method": "post",
      "endpoint": "anonymization/anonymize",
      "responses": [
        {
          "uuid": "bae4ecee-87e9-45ff-bf90-a7d6529aff02",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of newly created anonymous images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "549d5814-f33a-46eb-baad-039062bba75f",
      "documentation": "get a list of anonymization keys, each specifying how vital DICOM attributes have been anonymized for a particular image",
      "method": "get",
      "endpoint": "anonymization/keys",
      "responses": [
        {
          "uuid": "c7a0ff33-ca23-457a-9b45-c892a8504763",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"id\": {{faker 'datatype.number'}},\n    \"imageId\": {{faker 'datatype.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys, one per DICOM image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92b5e982-b149-4dfd-bfae-e158551dfea0",
      "documentation": "export all anonymization keys as a csv file",
      "method": "get",
      "endpoint": "anonymization/keys/export/csv",
      "responses": [
        {
          "uuid": "456a89fd-c354-4085-8fda-fac0ad721f38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "all anonymization keys as a csv file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5dfe76ed-d732-446d-b2d3-f40fb1092553",
      "documentation": "submit a query for anonymization keys",
      "method": "post",
      "endpoint": "anonymization/keys/query",
      "responses": [
        {
          "uuid": "9ef9ce3e-4d41-41b8-96b9-8b37bc167d83",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"id\": {{faker 'datatype.number'}},\n    \"imageId\": {{faker 'datatype.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fda1a56b-9459-4fef-83d3-3f6c049e91f4",
      "documentation": "delete an anonymization key that is no longer of interest",
      "method": "delete",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "27577409-b386-4869-8b2f-ca84d64b5528",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "anonymization key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b700a6c2-bf10-4374-8967-08abb267ddab",
      "documentation": "get the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "65b67f8f-eaa6-4d18-9e6c-e7c0ade1b4b2",
          "body": "{\n  \"anonPatientID\": \"\",\n  \"anonPatientName\": \"\",\n  \"anonSOPInstanceUID\": \"\",\n  \"anonSeriesInstanceUID\": \"\",\n  \"anonStudyInstanceUID\": \"\",\n  \"created\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"imageId\": {{faker 'datatype.number'}},\n  \"patientID\": \"\",\n  \"patientName\": \"\",\n  \"seriesInstanceUID\": \"\",\n  \"sopInstanceUID\": \"\",\n  \"studyInstanceUID\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc737d11-6d76-4665-bc34-e3cd47f2e649",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e2372ae-dbac-40ec-912f-2b6491682943",
      "documentation": "get pointers to the images corresponding to the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id/keyvalues",
      "responses": [
        {
          "uuid": "f14112bc-bd73-4658-9e8c-f2ce0c5a0633",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "an array of anonymization key-value pairs corresponding to the anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b05dda8-e0ff-44c7-b993-64cea9666ae3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4f71228-d0a4-4880-a502-bfb4c1a45070",
      "documentation": "list all supported anonymization options defining an anonymization profile",
      "method": "get",
      "endpoint": "anonymization/options",
      "responses": [
        {
          "uuid": "36741d0f-ac9f-4806-9b93-412ede66a58b",
          "body": "[\n  {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"rank\": {{faker 'datatype.number'}},\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "supported anonymization options",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "28431a2c-f2a9-41d4-873a-b0436176f342",
      "documentation": "get a list of box connections",
      "method": "get",
      "endpoint": "boxes",
      "responses": [
        {
          "uuid": "bc053fe5-571d-458e-8d20-990343855f92",
          "body": "[\n  {\n    \"baseUrl\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"online\": {{faker 'datatype.boolean'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'datatype.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sendMethod\": \"\",\n    \"token\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "box connections",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d07c0d3a-d5b3-499f-9349-bcc7e2de42cf",
      "documentation": "connect to another box using a received URL. Used to connect to a public box.",
      "method": "post",
      "endpoint": "boxes/connect",
      "responses": [
        {
          "uuid": "010e9f2d-8a0e-4897-bed5-79d33f624966",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'datatype.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'datatype.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "connected box",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc331138-04e6-4516-b0db-f30b1ea37c5a",
      "documentation": "create a new box connection where the supplied entity holds the remote box name. Used by publicly available boxes.",
      "method": "post",
      "endpoint": "boxes/createconnection",
      "responses": [
        {
          "uuid": "6af6101f-c396-49ca-b14e-7e138b90fb5f",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'datatype.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'datatype.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "remote box of the connection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e10812f9-816b-48db-87cf-9143c08ab3b9",
      "documentation": "get incoming transactions (finished, currently receiving, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/incoming",
      "responses": [
        {
          "uuid": "3a9291e2-2285-4a46-9ade-1045b2c1d547",
          "body": "[\n  {\n    \"boxId\": {{faker 'datatype.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"outgoingTransactionId\": {{faker 'datatype.number'}},\n    \"receivedImageCount\": {{faker 'datatype.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "incoming transactions, sorted from most to least recently updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e92d3642-ce85-4874-8157-1f287120997b",
      "documentation": "delete an incoming transaction. If a currently active transaction is deleted, a new transaction with the remainder of the images is created when receiving the next incoming image.",
      "method": "delete",
      "endpoint": "boxes/incoming/:id",
      "responses": [
        {
          "uuid": "15d9cddf-3ed1-49db-9cd9-45e92f834860",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "incoming transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c81bb36-6daf-4f5a-ba3b-a83eae56f5ae",
      "documentation": "get the received images corresponding to the incoming transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/incoming/:id/images",
      "responses": [
        {
          "uuid": "456dc848-0810-466b-8902-77a1ce906610",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images received corresponding to the specified incoming transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0ba97e3-cd36-4460-99d3-eb60df3651e7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "incoming transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8b62e94-8150-4fd6-8cb4-bd62262903f9",
      "documentation": "get outgoing transactions (finished, currently sending, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/outgoing",
      "responses": [
        {
          "uuid": "9c99d8dd-45ae-4f5a-9ea1-4d3355614d96",
          "body": "[\n  {\n    \"boxId\": {{faker 'datatype.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'datatype.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sentImageCount\": {{faker 'datatype.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "outgoing transactions, finished, sending, waiting or failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6c4e7a6-bc22-4058-80a0-6eaa8d487590",
      "documentation": "delete an outgoing transaction. This will stop ongoing transactions.",
      "method": "delete",
      "endpoint": "boxes/outgoing/:id",
      "responses": [
        {
          "uuid": "9c5677e8-0120-463b-a38c-a44cc7976976",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "outgoing transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2a912cd-26ed-4144-9898-75784dbb936b",
      "documentation": "get the sent images corresponding to the outgoing transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/outgoing/:id/images",
      "responses": [
        {
          "uuid": "c07339fa-422d-415a-9fa6-8509c2cf786e",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images sent corresponding to the specified outgoing transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69972461-7722-41c5-ad17-e62879b9a749",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "outgoing transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "168f2b91-92e5-4eae-b0d5-0e0aed231a30",
      "documentation": "Delete the remote box with the supplied ID",
      "method": "delete",
      "endpoint": "boxes/:id",
      "responses": [
        {
          "uuid": "09b9f26a-e330-422e-8e4d-0b0e8ac66b63",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "box deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e16af24-ad40-4ff7-86bd-fd67b5d04a79",
      "documentation": "send images corresponding to the supplied image ids to the remote box with the supplied ID",
      "method": "post",
      "endpoint": "boxes/:id/send",
      "responses": [
        {
          "uuid": "915eb74a-3c08-4505-a827-af866a4a2508",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "images sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "96d93542-0a21-4a72-93a7-e636085bb640",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "box not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9df4666-6261-4f80-bfd4-e0f3b9443ec8",
      "documentation": "Returns a list of currently available destinations. Possible destinations are box - sending data to a remote box, and scu - sending data a receiving SCP.",
      "method": "get",
      "endpoint": "destinations",
      "responses": [
        {
          "uuid": "1d288ab5-7982-4c10-b73a-f6147ff79328",
          "body": "[\n  {\n    \"destinationId\": {{faker 'datatype.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available destinations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9177bbef-4261-4df4-bc76-323fa810fcc3",
      "documentation": "get a list of watch directories. Each watch directory and its sub-directories are watched for incoming DICOM files, which are read and imported into slicebox.",
      "method": "get",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "983d356e-808b-4161-b3ce-8972faaf5dcc",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"path\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of watched directories",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5afe0625-7cb0-4ee4-829f-c7ecce5374b2",
      "documentation": "add a new directory to watch for incoming DICOM files",
      "method": "post",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "3138ce8f-f541-4822-95d2-2094ca37eb0a",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"path\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the directory now being watched",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef9476fe-5e92-405f-b4e0-81b8f4a1196e",
      "documentation": "stop watching and remove the directory corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "directorywatches/:id",
      "responses": [
        {
          "uuid": "057a4f74-a7f8-4d9c-b22f-d0933ad6693a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "directory watch removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0852e98e-ebbb-4d35-addf-7fa19743ac56",
      "documentation": "Get a list of source to filter associations.",
      "method": "get",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "b8995975-869d-4b79-a997-c65507a54050",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"sourceId\": {{faker 'datatype.number'}},\n    \"sourceType\": \"\",\n    \"tagFilterId\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of source <-> filter associations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec90082c-ed9a-4b3d-b0f8-65e3d15f9219",
      "documentation": "Inserts or updates a source <-> filter associations. If the specified Source already  has an association this is updated, otherwise a new is inserted.",
      "method": "post",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "79c0a4b8-c560-49d8-8283-0e332eb5233b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Upserted source <-> filter association",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fb82f60-6ed7-4f1e-817f-8274a267a611",
      "documentation": "remove the source <-> filter association corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/associations/:id",
      "responses": [
        {
          "uuid": "bd87e223-b3fc-4fbf-a086-518000958a65",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "source <-> filter association removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b6dd8e4-5405-420a-847b-98ea3514fd0f",
      "documentation": "List defined filters",
      "method": "get",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "e7aa452b-1de2-4068-be44-687485e2c893",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of filters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dda1a979-448a-4d30-ad29-d84a520da67b",
      "documentation": "Inserts or updates a filter. If a filter with same name as supplied filter exists this filter is updated, otherwise a new filter is inserted.",
      "method": "post",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "37220506-1900-4253-9980-0632d8258768",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Filter upserted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82c858fc-5c07-44ce-96cf-57d564355306",
      "documentation": "remove the filter corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id",
      "responses": [
        {
          "uuid": "367965c8-21b3-4dc9-82bb-ce3a6e015b31",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Filter removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "845938e1-3080-4be8-b3f7-3040689caccf",
      "documentation": "List tagpaths for the selected filter",
      "method": "get",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "9a2e19b9-3234-419b-bc5e-2e5d10d809ef",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of tagpaths",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "090354c1-ea64-48a0-a3fa-68f1661e36a6",
      "documentation": "add a tagpath to a filter",
      "method": "post",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "9ddb36f1-8f37-4ec1-8178-c80a405946bc",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "TagPath added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa72a27c-253d-445c-9909-08a2d0a30e54",
      "documentation": "remove the tagpath corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id/tagpaths/:tagpathid",
      "responses": [
        {
          "uuid": "e021e1f1-ba6b-48bd-8fbf-5403924da3b4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "TagPath removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d16f46f8-d816-448c-9de5-729be13bdf1b",
      "documentation": "remove the forwarding rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "forwarding/rule/:id",
      "responses": [
        {
          "uuid": "4e7975c7-a326-4bbf-882c-4ae2cb151dcd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "forwarding rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7bcd4d6-fa2d-4b79-b812-4e1ecf19582b",
      "documentation": "get a list of all forwarding rules. A forwarding rule specifies the automatic forwarding of images from a source (SCP, BOX, etc.) to a destimation (BOX, SCU, etc.)",
      "method": "get",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "d2b8ae00-14e9-48dc-b1e7-91ea5903cb50",
          "body": "[\n  {\n    \"destination\": {\n      \"destinationId\": {{faker 'datatype.number'}},\n      \"destinationName\": \"\",\n      \"destinationType\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"keepImages\": {{faker 'datatype.boolean'}},\n    \"source\": {\n      \"sourceId\": {{faker 'datatype.number'}},\n      \"sourceName\": \"\",\n      \"sourceType\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of forwarding rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9593c714-65a4-49ef-aa74-c2b347e915ef",
      "documentation": "add a new forwarding rule",
      "method": "post",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "a6757704-3490-4af5-9463-128590b5e02d",
          "body": "{\n  \"destination\": {\n    \"destinationId\": {{faker 'datatype.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  },\n  \"id\": {{faker 'datatype.number'}},\n  \"keepImages\": {{faker 'datatype.boolean'}},\n  \"source\": {\n    \"sourceId\": {{faker 'datatype.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created forwarding rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df7f7363-f12c-4dde-9341-ab1e89aa2caf",
      "documentation": "add a DICOM dataset to slicebox",
      "method": "post",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "8518dc4a-2e2a-4de0-8210-b23fb24a0abe",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fd868ce8-75d2-4883-94b5-539dab77c45d",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3be99bfa-c7b9-4e6f-9f10-604342c6e15c",
      "documentation": "bulk delete a sequence of images according to the supplied image IDs. This is the same as a sequence of DELETE requests to /images/{id}",
      "method": "post",
      "endpoint": "images/delete",
      "responses": [
        {
          "uuid": "34f5e100-d2da-4791-b934-fca65a5d8556",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Images deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc4fbd83-fd8b-43c7-b878-8607c0c08dd6",
      "documentation": "download the export set with the supplied export set ID as a zip archive",
      "method": "get",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "2a189f5a-3d0b-4f73-9ede-57408af82092",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "zip archive of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/zip"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a033d1ee-709a-4249-81f3-016436e5e657",
      "documentation": "create an export set, a group of image IDs of images to export. The export set will contain the selected images. The export set is available for download 12 hours before it is automatically deleted.",
      "method": "post",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "d1fa1557-f0a1-40c9-acc4-df3e210b4d71",
          "body": "{\n  \"value\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ID of created export set. To be used with the associated GET method for downloading.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "616aae06-0472-4593-9a46-17a27d79e32a",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied list of image ids is empty or no if images could be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5f7ff66-51ea-49b2-84f2-cf2a8072f7ea",
      "documentation": "add a JPEG image to slicebox. The image data will be wrapped in a DICOM file and added as a new series belonging to the study with the supplied ID",
      "method": "post",
      "endpoint": "images/jpeg",
      "responses": [
        {
          "uuid": "c1b9fe03-a32e-4e5d-8359-fb9a926453de",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ef1b4089-339e-4b2e-8766-982a058d6104",
      "documentation": "Delete the image with the supplied ID",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "31646af2-e10e-4bb7-aca8-a9fc94ecfbd0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56873e42-47cb-4df1-b4e4-37155045d6f4",
      "documentation": "fetch dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "1b7ed8e6-d390-4b6b-b0c7-4dfdb9581b37",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3c4b042-3b3f-4e65-8a4e-54eeccc89379",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7bf0471-9992-4b47-bddb-d91d9048d6f2",
      "documentation": "delete the selected image and replace it with an anonymized version",
      "method": "put",
      "endpoint": "images/:id/anonymize",
      "responses": [
        {
          "uuid": "b7c98792-62c5-4b46-9ac5-da71a0b75e36",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the newly created anonymous image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc548ece-8f7a-41f7-9eca-bb0e1f1b7959",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image or corresponding dataset not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57a48620-619a-46fa-8cb2-264787b44e13",
      "documentation": "get an anonymized version of the image with the supplied ID",
      "method": "post",
      "endpoint": "images/:id/anonymized",
      "responses": [
        {
          "uuid": "b330530b-f5d7-4bbe-a5a9-72b5cb6859d3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of anonymized dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4efe400b-accc-45e2-86a0-c75bc00bf0e0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c030cb6-b4c1-4bbb-bf69-cab3acbb8623",
      "documentation": "list all DICOM attributes of the dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id/attributes",
      "responses": [
        {
          "uuid": "e0afbecf-5d14-45b4-8357-d5d2d9c344e5",
          "body": "[\n  {\n    \"depth\": {{faker 'datatype.number'}},\n    \"element\": \"\",\n    \"group\": \"\",\n    \"length\": {{faker 'datatype.number'}},\n    \"multiplicity\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"path\": \"\",\n    \"value\": \"\",\n    \"vr\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of DICOM attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c1d2e5c-2f50-4af9-8fff-e066b3989b60",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d6f6d783-0ed4-4f3d-af9e-29ff1fe41b26",
      "documentation": "get basic information about the pixel data of an image",
      "method": "get",
      "endpoint": "images/:id/imageinformation",
      "responses": [
        {
          "uuid": "0e57e054-8327-4a65-b68e-76c805096db9",
          "body": "{\n  \"frameIndex\": {{faker 'datatype.number'}},\n  \"maximumPixelValue\": {{faker 'datatype.number'}},\n  \"minimumPixelValue\": {{faker 'datatype.number'}},\n  \"numberOfFrames\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "basic information about the pixeldata of an image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bcdb69b2-1955-40b9-a0e5-0af0d25f9c0c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "846d5f0b-dbb3-4701-8f0e-6cbf54ae858a",
      "documentation": "modify and/or insert image attributes according to the input tagpath-value mappings",
      "method": "put",
      "endpoint": "images/:id/modify",
      "responses": [
        {
          "uuid": "6cf77911-7ff4-4ee3-aac8-4e503141b89d",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "image attributes successfully modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c493c631-a500-4b2f-9400-85604bd409c8",
      "documentation": "get a PNG image representation of the image corresponding to the supplied ID",
      "method": "get",
      "endpoint": "images/:id/png",
      "responses": [
        {
          "uuid": "ee489cf6-84bc-4d05-a0f9-d15c0ba1825b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "image data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "156c1cd3-e2cb-45b1-bda0-dcb1fa845a1f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "feb11f62-0323-4901-a9fa-8e165cf97979",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "if the system is not capable of creating an image representation of the data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71c85728-a717-4103-a691-ddc95662af6f",
      "documentation": "Returns a list of available import sessions.",
      "method": "get",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "6386b940-ca58-4296-a446-fa402668843f",
          "body": "[\n  {\n    \"created\": {{faker 'datatype.number'}},\n    \"filesAdded\": {{faker 'datatype.number'}},\n    \"filesImported\": {{faker 'datatype.number'}},\n    \"filesRejected\": {{faker 'datatype.number'}},\n    \"id\": {{faker 'datatype.number'}},\n    \"lastUpdated\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"user\": \"\",\n    \"userId\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "available import sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b93ad2ca-11cd-41ce-aed5-d03f8886e9c4",
      "documentation": "create a new import sessions",
      "method": "post",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "8be5032b-2f5e-40b2-be1e-2d83604295a3",
          "body": "{\n  \"created\": {{faker 'datatype.number'}},\n  \"filesAdded\": {{faker 'datatype.number'}},\n  \"filesImported\": {{faker 'datatype.number'}},\n  \"filesRejected\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"lastUpdated\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6db94787-6286-4c6d-80ad-96979de77e37",
      "documentation": "deletes the import session with the supplied ID",
      "method": "delete",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "bf1b4eeb-c21a-4237-a0c7-ff7c219de955",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "import session deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3acf5958-7295-4810-afe9-be00e8c0a0e4",
      "documentation": "Returns the import sessions with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "864079be-80a6-4043-99d0-d714d86df5cb",
          "body": "{\n  \"created\": {{faker 'datatype.number'}},\n  \"filesAdded\": {{faker 'datatype.number'}},\n  \"filesImported\": {{faker 'datatype.number'}},\n  \"filesRejected\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"lastUpdated\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the import session with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19931514-9453-4ad3-8055-a7b6cc02f456",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64a9f3c9-403d-44e3-85b5-d783b671db36",
      "documentation": "get the imported images corresponding to the import session with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "ec0c0399-98da-4748-ac74-b6a41c9e0cf2",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images corresponding to the specified import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "99cf2613-c96e-4129-8479-44e383ff2124",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "402c994d-2d59-491d-9ea4-082530655b4e",
      "documentation": "add a DICOM dataset to the import session with the supplied ID",
      "method": "post",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "55f01a3b-ce42-46b0-93a1-590b5d6ee6d2",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "887cb6f6-8407-4221-aeed-ca0eef7b4e0d",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e32ee0b-3e5e-47b9-9fc8-bcf7e7fb76bd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b5ee4a1-69ea-42e1-a35f-0d2d5672eb96",
      "documentation": "delete all log messages",
      "method": "delete",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "f8bb5d10-14df-4a28-9593-08041a580311",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log messages successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70d87ba2-f7f1-42c5-a6a5-87adf0d6806f",
      "documentation": "get a list of slicebox log messages",
      "method": "get",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "7cd6c2a9-b4e2-4bf1-9e1f-afb325b52f39",
          "body": "[\n  {\n    \"created\": {{faker 'datatype.number'}},\n    \"entryType\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"message\": \"\",\n    \"subject\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "log messages",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9864727e-f3de-407e-bf0d-fa8733fa52bd",
      "documentation": "Delete the log entry with the supplied ID",
      "method": "delete",
      "endpoint": "log/:id",
      "responses": [
        {
          "uuid": "6c7eb8c3-a748-4392-b548-ef754d2c5cf5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log entry deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44875bdd-062b-479d-8dd9-0310ae90f34f",
      "documentation": "Returns a list of flattened metadata on the patient, study and series levels",
      "method": "get",
      "endpoint": "metadata/flatseries",
      "responses": [
        {
          "uuid": "98bbcc9c-ee6d-4e85-82bf-a9648043db78",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"patient\": {\n      \"id\": {{faker 'datatype.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'datatype.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'datatype.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "126c9a84-2dbe-4b09-b2dd-9fbfd9808839",
      "documentation": "submit a query for flat series",
      "method": "post",
      "endpoint": "metadata/flatseries/query",
      "responses": [
        {
          "uuid": "7a57794f-3ff2-406a-8fe2-e79904fdf70a",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"patient\": {\n      \"id\": {{faker 'datatype.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'datatype.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'datatype.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "effc7128-7cda-498d-b5a3-c73b3345c8a2",
      "documentation": "Return the flat series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/flatseries/:id",
      "responses": [
        {
          "uuid": "ff528d2f-43c2-4662-ad70-e02149dc7ece",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"patient\": {\n    \"id\": {{faker 'datatype.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  },\n  \"series\": {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'datatype.number'}}\n  },\n  \"study\": {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'datatype.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bda3523e-0789-4035-873c-40179d5e978d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "flat series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "792b9075-454e-4edc-be22-54ac837eecdf",
      "documentation": "Returns a list of metadata on the image level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/images",
      "responses": [
        {
          "uuid": "a64a2bc5-e0e9-4f7f-b071-53a4d207b6c0",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec1d630d-cbbc-420a-aaed-2bea966659e0",
      "documentation": "submit a query for images",
      "method": "post",
      "endpoint": "metadata/images/query",
      "responses": [
        {
          "uuid": "2148bb65-1da4-4269-b04f-e3a4681f4cd3",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d56614c6-8d5a-4ac0-bbca-f14eafc3e3de",
      "documentation": "Return the image with the supplied ID",
      "method": "get",
      "endpoint": "metadata/images/:id",
      "responses": [
        {
          "uuid": "b3291709-73af-4bad-be6d-5432a78e1d30",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'datatype.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "image response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "681edeb9-cabe-47b0-8a1b-62483f84570e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ebf07a02-2035-4330-bdbf-98b2e9ba6b92",
      "documentation": "Returns a list of metadata on the patient level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/patients",
      "responses": [
        {
          "uuid": "11f86e72-a0d9-4da6-b391-75d2fbefa10c",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04696203-2599-4a93-923f-1e1a81062841",
      "documentation": "submit a query for patients",
      "method": "post",
      "endpoint": "metadata/patients/query",
      "responses": [
        {
          "uuid": "1d60b0a5-3b2e-4d95-8577-3dc7985fdff4",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d65966f-1c43-42ba-b452-a2ef4c424de4",
      "documentation": "Return the patient with the supplied ID",
      "method": "get",
      "endpoint": "metadata/patients/:id",
      "responses": [
        {
          "uuid": "c0fd3d07-adec-4b6b-ae01-5e2c81beebaa",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"patientBirthDate\": {\n    \"value\": \"\"\n  },\n  \"patientID\": {\n    \"value\": \"\"\n  },\n  \"patientName\": {\n    \"value\": \"\"\n  },\n  \"patientSex\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "patient response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "16f538d4-caea-4af8-86f9-3136bf11f2cf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "patient not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c19cb9c7-bf55-485c-8fca-90b2eae6e5f1",
      "documentation": "Returns all images for the patient with the supplied patient ID",
      "method": "get",
      "endpoint": "metadata/patients/:id/images",
      "responses": [
        {
          "uuid": "6a3a1de4-b769-422e-8e88-bbcb520a4457",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c1f017d-d665-4b8a-9911-0e3d68413a1b",
      "documentation": "Returns a list of metadata on the series level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/series",
      "responses": [
        {
          "uuid": "40328205-6018-4cf2-8d09-def331462526",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cf37165-96a1-419c-8e7f-b813919d994d",
      "documentation": "submit a query for series",
      "method": "post",
      "endpoint": "metadata/series/query",
      "responses": [
        {
          "uuid": "030d81a6-0fdc-4563-81fb-b0925cb8ab7b",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91bb5dde-2e5e-41b8-bc7b-ec08bb185416",
      "documentation": "Return the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id",
      "responses": [
        {
          "uuid": "2e733993-cbc6-48d8-b01d-ef71e064fba9",
          "body": "{\n  \"bodyPartExamined\": {\n    \"value\": \"\"\n  },\n  \"frameOfReferenceUID\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'datatype.number'}},\n  \"manufacturer\": {\n    \"value\": \"\"\n  },\n  \"modality\": {\n    \"value\": \"\"\n  },\n  \"protocolName\": {\n    \"value\": \"\"\n  },\n  \"seriesDate\": {\n    \"value\": \"\"\n  },\n  \"seriesDescription\": {\n    \"value\": \"\"\n  },\n  \"seriesInstanceUID\": {\n    \"value\": \"\"\n  },\n  \"stationName\": {\n    \"value\": \"\"\n  },\n  \"studyId\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b52d93b-5743-45a7-8acb-7e1dd82bb628",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9b8d764-e614-4ce0-b653-6b5f888103ed",
      "documentation": "get the list of series tags for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "5633b384-d7e4-4a49-8445-5910dcca9fe0",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series tags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ef6c551-02a6-4a71-93d7-501d4f128eb2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a97aa4ef-d8e1-4a1d-beac-a93b71c72240",
      "documentation": "add a series tag to the series with the supplied ID",
      "method": "post",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "fc74a451-4f0b-486e-a9f0-8b61c657aa02",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "added series tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6649a07e-4853-4dd1-b1e6-70765dde0488",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no series with the supplied ID exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "303f866c-3996-44cb-9a5d-b1a0f423d7cd",
      "documentation": "Delete all series types for the series with the supplied ID",
      "method": "delete",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "b644ab31-039f-4f1c-9967-55da389aa031",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series types deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77928f04-1779-4217-af8f-5db91cb68d64",
      "documentation": "get the list of series types for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "aca27ced-63b9-497b-9258-4d95aaa28aa7",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de4794bd-845d-4a0a-afc0-df0404160e4e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3eec559-a2bf-4bb7-8d0d-7654a7ac4b00",
      "documentation": "Return the source of the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id/source",
      "responses": [
        {
          "uuid": "ce203677-5f29-42b6-85cb-a064a766d5c5",
          "body": "{\n  \"sourceId\": {{faker 'datatype.number'}},\n  \"sourceName\": \"\",\n  \"sourceType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "source for series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cbffbc50-79e0-475b-b315-232c0517ba51",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f6af9ee-291c-409a-a841-e62f53edfa37",
      "documentation": "Delete the series tag with the supplied series tag ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestags/:seriesTagId",
      "responses": [
        {
          "uuid": "e121d5e3-1183-4aeb-a0fd-548c6aac2dd0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series tag removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15eced6e-2ab2-42f0-8afc-4d4061ecbb69",
      "documentation": "Delete the series type with the supplied series type ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "8d3775ea-13ff-4b07-a785-20cbc5fbbb12",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8d4f77e-9f2b-4aec-999c-80fe91e6009c",
      "documentation": "Add the series type with the supplied series type ID to the series with the supplied series ID",
      "method": "put",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "cee1130c-30f4-4656-b77e-afba920aaf9c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fcc15440-5600-47d5-9482-67a9b2623ec2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no series or series type found for the supplied ID(s)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa322c1e-d7c9-4713-8284-4c98730482e0",
      "documentation": "Returns a list of series tags currently currently in use.",
      "method": "get",
      "endpoint": "metadata/seriestags",
      "responses": [
        {
          "uuid": "a3fb698f-0777-4891-8e5a-fa93248b4447",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "a list of unique series tags currently used to tag series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf81c49c-373e-4ddc-a003-eedc1416f2d4",
      "documentation": "Returns a list of metadata on the study level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/studies",
      "responses": [
        {
          "uuid": "50d8f3f0-b14c-4876-a344-f8323dfeb42d",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'datatype.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d19ef876-cf02-47ec-ad2d-a127e545a8a4",
      "documentation": "submit a query for studies",
      "method": "post",
      "endpoint": "metadata/studies/query",
      "responses": [
        {
          "uuid": "c68432ba-e699-4d75-a27b-7050b5e0e92c",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'datatype.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'datatype.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ae73132-52ec-4c3d-b7e6-31b3762e8b41",
      "documentation": "Return the study with the supplied ID",
      "method": "get",
      "endpoint": "metadata/studies/:id",
      "responses": [
        {
          "uuid": "5b9011dd-b5ac-4936-81da-17b6db586e3f",
          "body": "{\n  \"accessionNumber\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'datatype.number'}},\n  \"patientAge\": {\n    \"value\": \"\"\n  },\n  \"patientId\": {{faker 'datatype.number'}},\n  \"studyDate\": {\n    \"value\": \"\"\n  },\n  \"studyDescription\": {\n    \"value\": \"\"\n  },\n  \"studyID\": {\n    \"value\": \"\"\n  },\n  \"studyInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "study response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42bef1ba-8f46-4fac-ad8a-c55823fd1444",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02553844-287c-4260-85a6-ec2bea497212",
      "documentation": "Returns all images for the study with the supplied study ID",
      "method": "get",
      "endpoint": "metadata/studies/:id/images",
      "responses": [
        {
          "uuid": "7cf56d1b-4b60-4e65-ad15-885de7ec337d",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'datatype.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d00eb486-f38a-49f6-93c4-71fd63d0ab3a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2bf1be8-f2be-46d9-9d37-177e48c44d3b",
      "documentation": "get a list of DICOM SCPs. Each SCP is a server for receiving DICOM images from e.g. a PACS system.",
      "method": "get",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "98b26316-e401-4422-a7f7-7d7ca4b2e66d",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCPs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7662462e-d522-488f-9d40-17587c671aa3",
      "documentation": "add a new SCP for receiving DICOM images",
      "method": "post",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "715f4316-9edb-4967-9799-5c8595641c32",
          "body": "{\n  \"aeTitle\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCP",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d955faca-a4a7-46fe-b372-cb0c221e7e4f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11bee7ef-a047-47a7-b695-01fba1485e3a",
      "documentation": "shut down and remove the SCP corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scps/:id",
      "responses": [
        {
          "uuid": "f3d069a8-3264-40d8-8006-d0e5de35810b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCP removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "556671a3-4af3-4a02-a492-fae7c918ccf1",
      "documentation": "get a list of DICOM SCUs. Each SCU is a client for sending DICOM images to an SCP, e.g. a PACS system.",
      "method": "get",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "adf5e6f5-4f43-44f5-9819-9771d28193c6",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"host\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCUs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2533b38-bade-447c-8a75-9223d73ac9be",
      "documentation": "add a new SCU for sending DICOM images",
      "method": "post",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "809a383d-2776-415e-9e86-08db79804b72",
          "body": "{\n  \"aeTitle\": \"\",\n  \"host\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCU",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55471507-ebe5-4ba9-afa0-a37003e52ade",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e29cf4f1-a18b-4265-a87d-f0a931746b2e",
      "documentation": "remove the SCU corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scus/:id",
      "responses": [
        {
          "uuid": "8c50f835-b038-42dd-9ef3-c2cf02fa72da",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCU removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1632f718-e6c0-460a-80aa-1405b58a23c5",
      "documentation": "send the images with the supplied image IDs to a DICOM SCP using the the SCU with the supplied scu ID",
      "method": "post",
      "endpoint": "scus/:id/send",
      "responses": [
        {
          "uuid": "c8ad5e12-9ce3-4658-a912-a248538e910a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Series sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0fae4862-17ef-4a90-8e6a-9d783786310f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Series not found or SCU not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a7e3065-e1fb-4cd8-a249-836c6eb6f261",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Receiving SCP host not available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62b4f339-d409-4838-b557-5aea3b29b551",
      "documentation": "get a list of all added series types. By filtering search results for certain series types, it is easier for applications to ensure that they read images of applicable types.",
      "method": "get",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "a9200db9-684a-4446-a796-06eaf2eabec6",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "24e9b60b-e378-468c-8582-adf265abbbad",
      "documentation": "add a new series type",
      "method": "post",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "949b6617-9e82-4099-9be6-aa38385a7460",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77f1649b-7ebe-49ff-81d2-f2df31419cf8",
      "documentation": "get a list of rules for assigning series types to series. A rule connects to a series of attributes with values and a resulting series type. If a series has the required values of the listed attributes, it is assigned to the series type of the rule.",
      "method": "get",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "534d0805-b57a-49b5-a094-22ed8b003424",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"seriesTypeId\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rules for the series type with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a2468e0-3d0d-4bcd-9407-d6bcfefe947c",
      "documentation": "add a new series type rule",
      "method": "post",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "248be2b0-0f1d-43d4-893a-464df88aeba7",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"seriesTypeId\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94d45ee6-b401-4b09-b047-9a54ab7550f3",
      "documentation": "get the status of the internal process of updating series types for series following a change of series types, rules or attributes.",
      "method": "get",
      "endpoint": "seriestypes/rules/updatestatus",
      "responses": [
        {
          "uuid": "a0cebee4-47db-4be9-a330-68243bf59b7b",
          "body": "{\n  \"running\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "a status message, indicating if an update is running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c3b1dcb-667c-4730-afa1-47bbb8bef34c",
      "documentation": "remove the series type rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/rules/:id",
      "responses": [
        {
          "uuid": "ae1f3839-6ebb-4864-b3db-3843f4aaa9aa",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3065ed2f-4b9b-42ab-a0bb-731808a35c27",
      "documentation": "get the list of attributes for the series type rule with the supplied ID.",
      "method": "get",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "47d21c82-1700-4ce5-bd0c-c41c21a15e15",
          "body": "[\n  {\n    \"element\": {{faker 'datatype.number'}},\n    \"group\": {{faker 'datatype.number'}},\n    \"id\": {{faker 'datatype.number'}},\n    \"path\": \"\",\n    \"seriesTypeRuleId\": {{faker 'datatype.number'}},\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rule attributes for the series type rule with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5652f091-f092-4ba2-97ed-68b51b0c93c9",
      "documentation": "add a new series type rule attribute",
      "method": "post",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "b683008e-7529-4785-8c4b-a5ca4dfa2928",
          "body": "{\n  \"element\": {{faker 'datatype.number'}},\n  \"group\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"path\": \"\",\n  \"seriesTypeRuleId\": {{faker 'datatype.number'}},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule attribute",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a4c952e-6abe-438a-a400-018b0dc4167b",
      "documentation": "remove the series type rule attribute corresponding to the supplied series type and attribute IDs",
      "method": "delete",
      "endpoint": "seriestypes/rules/:ruleId/attributes/:attributeId",
      "responses": [
        {
          "uuid": "e551897e-b313-4a73-8b95-4f24e517ea19",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule attribute removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b46bc2e-051c-4c70-8448-699017c96205",
      "documentation": "submit a query for seriestypes for a list of series",
      "method": "post",
      "endpoint": "seriestypes/series/query",
      "responses": [
        {
          "uuid": "beb306d1-702a-4e5b-ae3b-5fbb31ed477a",
          "body": "{\n  \"seriesidseriestypes\": [\n    {\n      \"seriesid\": {{faker 'datatype.number'}},\n      \"seriestype\": {\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b1c25e2-a6d5-449b-b86a-22a0f15b7a28",
      "documentation": "remove the series type corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "75a8f0f6-33af-4fe7-90c2-25984c60409f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60c64ec0-8cf5-4cb4-a922-1d8af82dd62b",
      "documentation": "request an asynchronous update of all series, labelling appropriate series with the series type corresponding to the supplied ID.",
      "method": "put",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "525579b9-2c50-43d2-8720-5996684c3c3c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "update successfully added to queue of series type updates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61ac290f-ac2a-44fe-843c-edb4faf54b63",
      "documentation": "Returns a list of currently available data sources. Possible source types are user - data imported by an API call by a user, box - data received from a remote box, directory - data imported via a watched directory, import - data imported into slicebox using import sessions, or scp - data received from a PACS.",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "cefe49ae-2f36-4de0-af96-13066befaaa7",
          "body": "[\n  {\n    \"sourceId\": {{faker 'datatype.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available sources",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "931705b0-e135-440e-9a31-ea284718de93",
      "documentation": "No-op route for checking whether the service is alive or not",
      "method": "get",
      "endpoint": "system/health",
      "responses": [
        {
          "uuid": "7f32e88d-99e0-45ea-8535-f339dba1712c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service is up and running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7fb234a-2cf7-4620-ac33-cdebb3869504",
      "documentation": "stop and shut down slicebox",
      "method": "post",
      "endpoint": "system/stop",
      "responses": [
        {
          "uuid": "5615f020-784e-4fee-802d-a236b0e9d950",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "shutdown message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3bb437c-7f4c-457c-9673-dc5131900726",
      "documentation": "add an image (dataset) as part of a transaction. This method is used when sending images using the push method to a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/image",
      "responses": [
        {
          "uuid": "26a1d308-6948-4ab5-83a7-199fe6a091c8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image data received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0722bfb8-991c-4f78-93ec-25d9c7cb249f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f47994df-c346-4fa5-943e-2aeb8d41e14c",
      "documentation": "fetch an image from the connected box as part of a transaction. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing",
      "responses": [
        {
          "uuid": "6b6ced81-f4e2-4810-bf73-bbb877f692e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e85bd33f-d844-4c2a-a074-69515d400c25",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6316f082-0ca0-4ca3-8d42-bf5a88ee7906",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no outgoing trensaction and/or image found for the supplied transaction id and transaction image id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83a1436b-66c9-4ec7-89b9-ea4f5ca25170",
      "documentation": "signal that the supplied outgoing transaction and image was successfully received and can be marked as sent. This method is used when sending images using the poll method from a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/done",
      "responses": [
        {
          "uuid": "aab47134-e39d-4408-80ef-e8f116f920e9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "done message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45783cd0-0251-4996-be0a-70b9548709c7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b204933a-a594-4b11-8331-ed3247753fc2",
      "documentation": "signal that the image corresponding to the supplied outgoing transaction and image could not be read or stored properly on the receiving side, and that the transaction should be marked as failed.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/failed",
      "responses": [
        {
          "uuid": "e7641932-b4b0-437f-b2c8-5dd3fbe45ef6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "failed message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "abf0fe4b-8421-42df-831c-db0005516b7b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4388acbe-5d8a-4a5c-a029-6093ef77d217",
      "documentation": "get next outgoing transaction and image (information on the next image that the connected box wishes to send to you), if any. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing/poll",
      "responses": [
        {
          "uuid": "36e1f451-43f0-4c1e-adbf-2305bd2daeac",
          "body": "[\n  {\n    \"image\": {\n      \"id\": {{faker 'datatype.number'}},\n      \"imageId\": {{faker 'datatype.number'}},\n      \"outgoingTransactionId\": {{faker 'datatype.number'}},\n      \"sent\": {{faker 'datatype.boolean'}},\n      \"sequenceNumber\": {{faker 'datatype.number'}}\n    },\n    \"transaction\": {\n      \"boxId\": {{faker 'datatype.number'}},\n      \"boxName\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"profile\": {\n        \"options\": [\n          {\n            \"description\": \"\",\n            \"name\": \"\",\n            \"rank\": {{faker 'datatype.number'}},\n            \"title\": \"\"\n          }\n        ]\n      },\n      \"sentImageCount\": {{faker 'datatype.number'}},\n      \"status\": \"\",\n      \"totalImageCount\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "next outgoing transaction and image information block",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64613e95-a462-4151-aaaf-07a6dae90cfd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01c43a8c-4613-441c-ad6d-608679060c0e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "there are currently no outgoing transactions to fetch for the box connection with the supplied token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89e35778-d4bf-4c48-9b64-258940ae86d9",
      "documentation": "get the status of the remote incoming transaction with the supplied transaction ID",
      "method": "get",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "79fcb81a-88a8-4436-86be-c84912266294",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "string representation of the transaction status (FINISHED, FAILED, WAITING or PROCESSING)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e15dfcd3-0a5c-4242-9706-b2229308d6d0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5fce320-9411-4d24-a37a-ec07e62441e0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e1b4ad9-8f9c-4b04-b8c7-a214def46c2d",
      "documentation": "update the status of the transaction with the supplied ID",
      "method": "put",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "443a332e-0c7e-45a9-8da6-c408b4fc8a64",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "status update successfully applied to transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89a00bbe-b303-4475-a731-abdcf0c1defb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea04ab3a-273e-4c06-b614-b7f98be16635",
      "documentation": "Returns all users of slicebox",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "ecd9d282-ca65-4df8-8c27-3734309efd0a",
          "body": "[\n  {\n    \"hashedPassword\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"role\": \"\",\n    \"user\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b4db586-8621-4d63-8509-1cef26e336e2",
      "documentation": "Creates a new user. Dupicates are accepted but not added.",
      "method": "post",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "241e4a4c-c835-4403-82ae-10d28cb3a05a",
          "body": "{\n  \"hashedPassword\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43651f71-5025-4612-b1df-d61509b27683",
      "documentation": "obtain information on the currently logged in user as specified by the supplied session cookie, IP address and user agent.",
      "method": "get",
      "endpoint": "users/current",
      "responses": [
        {
          "uuid": "8a901ccd-ae3b-4757-a29c-dd35f8c4fba2",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "user information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "106dd9ce-1c3c-4028-a682-bee9b69b35c2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no user found for the supplied session cookie, IP address and user agent, or if any of the required headers are missing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4729f8f-a7af-463e-b24e-391d29391525",
      "documentation": "Obtain a session cookie that can be used to authenticate future API calls from the present IP address and with the present user agent.",
      "method": "post",
      "endpoint": "users/login",
      "responses": [
        {
          "uuid": "dde8c175-a052-4e27-886b-e95062229eee",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied credentials are valid. The response headers will contain Set-Cookie.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d9ddb7bd-2b1d-4366-82e8-80d7a8470370",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "if the supplied credentials are invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd166580-b06f-42cb-b5ea-bea7bfe209db",
      "documentation": "Logout the current user by responding with a delete cookie header removing the session cookie for this user.",
      "method": "post",
      "endpoint": "users/logout",
      "responses": [
        {
          "uuid": "0144094f-fd58-42da-965e-64cb72faf100",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "the user was logged out",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "585da9b2-bcd1-457e-a7fe-1dc92f53f3b9",
      "documentation": "deletes a single user based on the ID supplied",
      "method": "delete",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "ffef64d5-d8a8-4ccc-8d04-7cf8a0e78830",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}