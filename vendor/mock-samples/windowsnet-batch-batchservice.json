{
  "uuid": "62ea2579-1ba5-47c1-ae44-bf53400e16bb",
  "lastMigration": 24,
  "name": "BatchService",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "afd42d4f-c885-447b-92c1-651741cdbac9",
      "documentation": "Lists all of the applications available in the specified account.",
      "method": "get",
      "endpoint": "applications",
      "responses": [
        {
          "uuid": "92b23c93-0013-4f61-802a-58347a3d5006",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"versions\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad5e1e6f-1dcd-40a3-a65a-c2a65de290cf",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd97d7ea-26b1-4874-818d-8379b7faa8e2",
      "documentation": "Gets information about the specified application.",
      "method": "get",
      "endpoint": "applications/:applicationId",
      "responses": [
        {
          "uuid": "d43c2b44-2f42-493f-af67-beeb81f54541",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"versions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the application.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "33db094e-8128-444c-84c7-cd89e90f8cc7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26d26d41-ddb3-412f-ac3c-83fa70571f7a",
      "documentation": "Lists all of the certificates that have been added to the specified account.",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "ce68061c-c437-475e-9800-57ff9ed1959b",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"deleteCertificateError\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"values\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"publicData\": \"\",\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d56fcd13-cb66-4bf8-a433-ad1ebd224b53",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6090ecad-95ef-4bc6-a347-e92e8ae46f3c",
      "documentation": "Adds a certificate to the specified account.",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "f2f5bf49-109e-4ad4-81b1-311b8d9235d7",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e41f5a72-1b89-4931-8e0e-ddd5ac6c4758",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56cf1e71-68e2-42c9-a16b-4826fc6bed69",
      "documentation": "Deletes a certificate from the specified account.",
      "method": "delete",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "80b0cd1b-b7f2-49c3-a662-02516629cd03",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83fb394b-61ce-4a3b-a5a8-3a9e5f29b57a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc54fb89-4b25-4001-9cb7-399c37bca543",
      "documentation": "Gets information about the specified certificate.",
      "method": "get",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "9af9b157-eec6-4754-b9a6-057159ba5006",
          "body": "{\n  \"deleteCertificateError\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"publicData\": \"\",\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"thumbprint\": \"\",\n  \"thumbprintAlgorithm\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "823879ed-11fa-4189-b647-8dd0554af68b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "69f9e1c1-e105-4bcf-a2b3-0cb01ec55950",
      "documentation": "Cancels a failed deletion of a certificate from the specified account.",
      "method": "post",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)/canceldelete",
      "responses": [
        {
          "uuid": "31da3d5c-6b55-4f45-9f53-0f5bb4ec7813",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e289ff26-b73a-4a0c-8f12-12ef15abdcac",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7afd2a43-e529-439a-8881-a6bcf58f5eb2",
      "documentation": "Lists all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "33f5a196-c4e5-4949-ade5-d6ac948b4d90",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'datatype.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'datatype.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'datatype.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n            \"maxTasksPerNode\": {{faker 'datatype.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'datatype.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'datatype.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n            \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'datatype.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'datatype.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'datatype.number'}},\n                  \"lun\": {{faker 'datatype.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'datatype.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e5ba0f23-556b-4bd1-b616-c04549266b7a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4db01b0f-2918-4ec2-8177-5ed5f3b39fac",
      "documentation": "Adds a job to the specified account.",
      "method": "post",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "ddc24855-8885-4124-bd9a-f163c98f88b2",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d6a650d-441a-4b57-a483-da16dbf3ed2b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d03769f-f617-4280-a883-8393aa5dab5a",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "8ce9741b-8890-427f-aed8-c4eec9ac3dc0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d9d55f7-38d0-432a-aa64-32d372119f71",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ebf64af2-1817-41f1-8bf2-a59ced78e5c0",
      "documentation": "Gets information about the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "afc32c35-52f7-4532-a806-e50b98f98e08",
          "body": "{\n  \"commonEnvironmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"maxWallClockTime\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"poolId\": \"\",\n    \"schedulingError\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"terminateReason\": \"\"\n  },\n  \"id\": \"\",\n  \"jobManagerTask\": {\n    \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n    \"applicationPackageReferences\": [\n      {\n        \"applicationId\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"authenticationTokenSettings\": {\n      \"access\": [\n        \"{{oneOf (array 'job')}}\"\n      ]\n    },\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"displayName\": \"\",\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n    \"outputFiles\": [\n      {\n        \"destination\": {\n          \"container\": {\n            \"containerUrl\": \"\",\n            \"path\": \"\"\n          }\n        },\n        \"filePattern\": \"\",\n        \"uploadOptions\": {\n          \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n        }\n      }\n    ],\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"runExclusive\": {{faker 'datatype.boolean'}},\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"jobPreparationTask\": {\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"jobReleaseTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"maxWallClockTime\": \"\",\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"retentionTime\": \"\",\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n  \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n  \"poolInfo\": {\n    \"autoPoolSpecification\": {\n      \"autoPoolIdPrefix\": \"\",\n      \"keepAlive\": {{faker 'datatype.boolean'}},\n      \"pool\": {\n        \"applicationLicenses\": [\n          \"\"\n        ],\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"autoScaleEvaluationInterval\": \"\",\n        \"autoScaleFormula\": \"\",\n        \"certificateReferences\": [\n          {\n            \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n            \"storeName\": \"\",\n            \"thumbprint\": \"\",\n            \"thumbprintAlgorithm\": \"\",\n            \"visibility\": [\n              \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n            ]\n          }\n        ],\n        \"cloudServiceConfiguration\": {\n          \"currentOSVersion\": \"\",\n          \"osFamily\": \"\",\n          \"targetOSVersion\": \"\"\n        },\n        \"displayName\": \"\",\n        \"enableAutoScale\": {{faker 'datatype.boolean'}},\n        \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n        \"maxTasksPerNode\": {{faker 'datatype.number'}},\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"networkConfiguration\": {\n          \"endpointConfiguration\": {\n            \"inboundNATPools\": [\n              {\n                \"backendPort\": {{faker 'datatype.number'}},\n                \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                \"name\": \"\",\n                \"networkSecurityGroupRules\": [\n                  {\n                    \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                    \"priority\": {{faker 'datatype.number'}},\n                    \"sourceAddressPrefix\": \"\"\n                  }\n                ],\n                \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n              }\n            ]\n          },\n          \"subnetId\": \"\"\n        },\n        \"resizeTimeout\": \"\",\n        \"startTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'datatype.boolean'}}\n        },\n        \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n        \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n        \"taskSchedulingPolicy\": {\n          \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n        },\n        \"userAccounts\": [\n          {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"linuxUserConfiguration\": {\n              \"gid\": {{faker 'datatype.number'}},\n              \"sshPrivateKey\": \"\",\n              \"uid\": {{faker 'datatype.number'}}\n            },\n            \"name\": \"\",\n            \"password\": \"\"\n          }\n        ],\n        \"virtualMachineConfiguration\": {\n          \"containerConfiguration\": {\n            \"containerImageNames\": [\n              \"\"\n            ],\n            \"containerRegistries\": [\n              {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            ],\n            \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n          },\n          \"dataDisks\": [\n            {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n              \"diskSizeGB\": {{faker 'datatype.number'}},\n              \"lun\": {{faker 'datatype.number'}},\n              \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n            }\n          ],\n          \"imageReference\": {\n            \"offer\": \"\",\n            \"publisher\": \"\",\n            \"sku\": \"\",\n            \"version\": \"\",\n            \"virtualMachineImageId\": \"\"\n          },\n          \"licenseType\": \"\",\n          \"nodeAgentSKUId\": \"\",\n          \"osDisk\": {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n          },\n          \"windowsConfiguration\": {\n            \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n          }\n        },\n        \"vmSize\": \"\"\n      },\n      \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n    },\n    \"poolId\": \"\"\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"priority\": {{faker 'datatype.number'}},\n  \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'datatype.number'}},\n    \"numSucceededTasks\": {{faker 'datatype.number'}},\n    \"numTaskRetries\": {{faker 'datatype.number'}},\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\",\n  \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "365da4ad-86e5-411a-921f-ec388e4bdce5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "354059c5-f03b-44b6-a349-256525a98582",
      "documentation": "Updates the properties of the specified job.",
      "method": "patch",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "cbf35b34-df54-45b4-971f-ad20179441c2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a95e6b88-2500-4fec-b558-6f335c28cf0a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "481e38b5-d003-4742-bac0-c4f39f49380f",
      "documentation": "Updates the properties of the specified job.",
      "method": "put",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "62148833-b3be-49ce-9e09-65e1dc5c6f92",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d53e586-28e5-4b77-bd07-1a393683bbc4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ead7b87-c013-4077-af9c-9a2c8d8c1680",
      "documentation": "Adds a collection of tasks to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/addtaskcollection",
      "responses": [
        {
          "uuid": "4ec8ca51-02ab-42ad-b628-cc5598856179",
          "body": "{\n  \"value\": [\n    {\n      \"eTag\": \"\",\n      \"error\": {\n        \"code\": \"\",\n        \"message\": {\n          \"lang\": \"\",\n          \"value\": \"\"\n        },\n        \"values\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"status\": \"{{oneOf (array 'success' 'clienterror' 'servererror')}}\",\n      \"taskId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the add task collection operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e93dee2-caea-4ebb-b783-c8961a413069",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c68d1c6d-5923-40cb-9805-16be24bf6014",
      "documentation": "Disables the specified job, preventing new tasks from running.",
      "method": "post",
      "endpoint": "jobs/:jobId/disable",
      "responses": [
        {
          "uuid": "f20813cb-9144-43f7-921a-0b384446d989",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8904e68d-271c-4b3a-b7be-694e9c36cf06",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "204b2c76-658c-42e5-a635-509142161363",
      "documentation": "Enables the specified job, allowing new tasks to run.",
      "method": "post",
      "endpoint": "jobs/:jobId/enable",
      "responses": [
        {
          "uuid": "c945c166-0c82-4a5d-8934-1e85af382ee0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12cc377e-2a8e-472e-a5a5-2f58b99ae168",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d4e68df4-fba5-4978-a1ea-89616902f469",
      "documentation": "Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.",
      "method": "get",
      "endpoint": "jobs/:jobId/jobpreparationandreleasetaskstatus",
      "responses": [
        {
          "uuid": "40099957-5260-4cda-8110-df11b2fc6271",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"jobPreparationTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"jobReleaseTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"nodeId\": \"\",\n      \"nodeUrl\": \"\",\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing a list of Job Preparation and Job Release task statuses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8315cf67-eb19-4cd7-9ad4-46dae67d4e4b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "960c4ea6-04c7-43c7-8e85-78f7ad2ecead",
      "documentation": "Gets the task counts for the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/taskcounts",
      "responses": [
        {
          "uuid": "61962e1d-c08c-4967-973e-1d62d6570df9",
          "body": "{\n  \"active\": {{faker 'datatype.number'}},\n  \"completed\": {{faker 'datatype.number'}},\n  \"failed\": {{faker 'datatype.number'}},\n  \"running\": {{faker 'datatype.number'}},\n  \"succeeded\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task counts for the specified job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "453b7127-f3ae-450f-9bfe-c7373ca276d5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf8792b7-cc5f-45bc-b5e5-89a4c4601370",
      "documentation": "Lists all of the tasks that are associated with the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "5e1fdddf-96e5-4da6-98b9-303c0e3bbbe8",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityInfo\": {\n        \"affinityId\": \"\"\n      },\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"dependsOn\": {\n        \"taskIdRanges\": [\n          {\n            \"end\": {{faker 'datatype.number'}},\n            \"start\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"taskIds\": [\n          \"\"\n        ]\n      },\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'datatype.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"exitConditions\": {\n        \"default\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"exitCodeRanges\": [\n          {\n            \"end\": {{faker 'datatype.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            },\n            \"start\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"exitCodes\": [\n          {\n            \"code\": {{faker 'datatype.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            }\n          }\n        ],\n        \"fileUploadError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"preProcessingError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"multiInstanceSettings\": {\n        \"commonResourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"coordinationCommandLine\": \"\",\n        \"numberOfInstances\": {{faker 'datatype.number'}}\n      },\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of tasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "66449a79-8f2a-4276-992f-9a64054c45d0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22b0901b-c8df-4af7-b64c-54d8d92c603b",
      "documentation": "Adds a task to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "e26888ce-5ff2-49fe-9238-8f95aca98e66",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dfc5242f-b739-4baf-957f-c969ea26f233",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2391c406-f124-44ef-a792-dd876d4f5e03",
      "documentation": "Deletes a task from the specified job.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "2cbe81a4-0ad0-4420-a9f0-25b1aee903c4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d7437d0-3c91-43ee-96e6-d9971ddc89b3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82066cfa-042a-4ffe-b39d-977e1bb9fbc7",
      "documentation": "Gets information about the specified task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "1a061ec6-4432-4f34-bdff-357eaa460c2d",
          "body": "{\n  \"affinityInfo\": {\n    \"affinityId\": \"\"\n  },\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"authenticationTokenSettings\": {\n    \"access\": [\n      \"{{oneOf (array 'job')}}\"\n    ]\n  },\n  \"commandLine\": \"\",\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"maxWallClockTime\": \"\",\n    \"retentionTime\": \"\"\n  },\n  \"containerSettings\": {\n    \"containerRunOptions\": \"\",\n    \"imageName\": \"\",\n    \"registry\": {\n      \"password\": \"\",\n      \"registryServer\": \"\",\n      \"username\": \"\"\n    }\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"dependsOn\": {\n    \"taskIdRanges\": [\n      {\n        \"end\": {{faker 'datatype.number'}},\n        \"start\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"taskIds\": [\n      \"\"\n    ]\n  },\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"environmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"executionInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'datatype.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"requeueCount\": {{faker 'datatype.number'}},\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"exitConditions\": {\n    \"default\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"exitCodeRanges\": [\n      {\n        \"end\": {{faker 'datatype.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"start\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"exitCodes\": [\n      {\n        \"code\": {{faker 'datatype.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      }\n    ],\n    \"fileUploadError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"preProcessingError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"multiInstanceSettings\": {\n    \"commonResourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"coordinationCommandLine\": \"\",\n    \"numberOfInstances\": {{faker 'datatype.number'}}\n  },\n  \"nodeInfo\": {\n    \"affinityId\": \"\",\n    \"nodeId\": \"\",\n    \"nodeUrl\": \"\",\n    \"poolId\": \"\",\n    \"taskRootDirectory\": \"\",\n    \"taskRootDirectoryUrl\": \"\"\n  },\n  \"outputFiles\": [\n    {\n      \"destination\": {\n        \"container\": {\n          \"containerUrl\": \"\",\n          \"path\": \"\"\n        }\n      },\n      \"filePattern\": \"\",\n      \"uploadOptions\": {\n        \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n      }\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceFiles\": [\n    {\n      \"blobSource\": \"\",\n      \"fileMode\": \"\",\n      \"filePath\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\",\n  \"userIdentity\": {\n    \"autoUser\": {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n    },\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "380b3d8a-6f10-4e15-8a42-904bc2e65a34",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c01a447-1a72-4c46-bda1-6182d8b3e26c",
      "documentation": "Updates the properties of the specified task.",
      "method": "put",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "d667b717-ccbd-4d63-88ca-bf380624f8c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "77199ae9-4738-4eae-bb28-66b01fb38b62",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "65e518a8-baf2-416f-b032-04f9b31c6a34",
      "documentation": "Lists the files in a task's directory on its compute node.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files",
      "responses": [
        {
          "uuid": "4ad5cf86-a49f-40d9-906f-ff0c0b4addd5",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'datatype.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "08d1f6ef-e5a2-4cbb-b093-a9e23e3a0252",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16ed064d-156f-427c-adf5-eb34b258d4e4",
      "documentation": "Deletes the specified task file from the compute node where the task ran.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "8b8b6351-efe7-4c44-bfb7-14b899bf0650",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3fe98dfd-2f29-4e3b-ab70-ae0a3e34e44c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb30d296-c9f8-4fdc-8af7-51d79685f82d",
      "documentation": "Returns the content of the specified task file.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "e7ce0005-3462-44e4-9e68-897923bdcbc9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73eaf4a1-f720-4494-8c3a-dacba2832e69",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "675b62d4-b44d-459a-bf3d-4b09b40e8426",
      "documentation": "Gets the properties of the specified task file.",
      "method": "head",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "08d07c83-5976-41ad-bb33-1236caa2a27a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ff2a2c60-1237-4758-8355-1a3615c6a342",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f839d5c5-46d0-4a84-8347-6c208491f4c9",
      "documentation": "Reactivates a task, allowing it to run again even if its retry count has been exhausted.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/reactivate",
      "responses": [
        {
          "uuid": "32fd3706-1b7f-498b-9f88-421d4781714b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b51b5131-2844-4597-96ca-dedeff863ea6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db01830e-62a0-4a92-acc6-cec10664680b",
      "documentation": "Lists all of the subtasks that are associated with the specified multi-instance task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/subtasksinfo",
      "responses": [
        {
          "uuid": "ba2b4fd0-736b-4862-ae44-be1d8c556946",
          "body": "{\n  \"value\": [\n    {\n      \"containerInfo\": {\n        \"containerId\": \"\",\n        \"error\": \"\",\n        \"state\": \"\"\n      },\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"exitCode\": {{faker 'datatype.number'}},\n      \"failureInfo\": {\n        \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n        \"code\": \"\",\n        \"details\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"message\": \"\"\n      },\n      \"id\": {{faker 'datatype.number'}},\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"state\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of subtasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c2250bda-37bf-49db-8d32-ac0bdeb4b10c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42ac193d-02a2-4e0e-b809-392c24a4579b",
      "documentation": "Terminates the specified task.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/terminate",
      "responses": [
        {
          "uuid": "5b586570-d942-4087-afab-66f203523260",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3f4c7a7a-3a1b-4cb2-99ac-27e3ee1cf772",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ac9b429-3f49-499f-84be-8d0a9ce22f12",
      "documentation": "Terminates the specified job, marking it as completed.",
      "method": "post",
      "endpoint": "jobs/:jobId/terminate",
      "responses": [
        {
          "uuid": "d70070d4-0988-461e-844f-82eed04de1c5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "54c7bd3c-51cd-45f1-8b66-bf762cd4de97",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "867bf49a-4646-4666-8bfb-768fcf27753e",
      "documentation": "Lists all of the job schedules in the specified account.",
      "method": "get",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "b3b0e91e-a923-4b5a-9a5f-3f1284c58469",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n        \"recentJob\": {\n          \"id\": \"\",\n          \"url\": \"\"\n        }\n      },\n      \"id\": \"\",\n      \"jobSpecification\": {\n        \"commonEnvironmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\"\n        },\n        \"displayName\": \"\",\n        \"jobManagerTask\": {\n          \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"authenticationTokenSettings\": {\n            \"access\": [\n              \"{{oneOf (array 'job')}}\"\n            ]\n          },\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"displayName\": \"\",\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n          \"outputFiles\": [\n            {\n              \"destination\": {\n                \"container\": {\n                  \"containerUrl\": \"\",\n                  \"path\": \"\"\n                }\n              },\n              \"filePattern\": \"\",\n              \"uploadOptions\": {\n                \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n              }\n            }\n          ],\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"runExclusive\": {{faker 'datatype.boolean'}},\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"jobPreparationTask\": {\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'datatype.boolean'}}\n        },\n        \"jobReleaseTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"maxWallClockTime\": \"\",\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"retentionTime\": \"\",\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n        \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n        \"poolInfo\": {\n          \"autoPoolSpecification\": {\n            \"autoPoolIdPrefix\": \"\",\n            \"keepAlive\": {{faker 'datatype.boolean'}},\n            \"pool\": {\n              \"applicationLicenses\": [\n                \"\"\n              ],\n              \"applicationPackageReferences\": [\n                {\n                  \"applicationId\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"autoScaleEvaluationInterval\": \"\",\n              \"autoScaleFormula\": \"\",\n              \"certificateReferences\": [\n                {\n                  \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                  \"storeName\": \"\",\n                  \"thumbprint\": \"\",\n                  \"thumbprintAlgorithm\": \"\",\n                  \"visibility\": [\n                    \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                  ]\n                }\n              ],\n              \"cloudServiceConfiguration\": {\n                \"currentOSVersion\": \"\",\n                \"osFamily\": \"\",\n                \"targetOSVersion\": \"\"\n              },\n              \"displayName\": \"\",\n              \"enableAutoScale\": {{faker 'datatype.boolean'}},\n              \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n              \"maxTasksPerNode\": {{faker 'datatype.number'}},\n              \"metadata\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"networkConfiguration\": {\n                \"endpointConfiguration\": {\n                  \"inboundNATPools\": [\n                    {\n                      \"backendPort\": {{faker 'datatype.number'}},\n                      \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                      \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                      \"name\": \"\",\n                      \"networkSecurityGroupRules\": [\n                        {\n                          \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                          \"priority\": {{faker 'datatype.number'}},\n                          \"sourceAddressPrefix\": \"\"\n                        }\n                      ],\n                      \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                    }\n                  ]\n                },\n                \"subnetId\": \"\"\n              },\n              \"resizeTimeout\": \"\",\n              \"startTask\": {\n                \"commandLine\": \"\",\n                \"containerSettings\": {\n                  \"containerRunOptions\": \"\",\n                  \"imageName\": \"\",\n                  \"registry\": {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                },\n                \"environmentSettings\": [\n                  {\n                    \"name\": \"\",\n                    \"value\": \"\"\n                  }\n                ],\n                \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n                \"resourceFiles\": [\n                  {\n                    \"blobSource\": \"\",\n                    \"fileMode\": \"\",\n                    \"filePath\": \"\"\n                  }\n                ],\n                \"userIdentity\": {\n                  \"autoUser\": {\n                    \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                    \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                  },\n                  \"username\": \"\"\n                },\n                \"waitForSuccess\": {{faker 'datatype.boolean'}}\n              },\n              \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n              \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n              \"taskSchedulingPolicy\": {\n                \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n              },\n              \"userAccounts\": [\n                {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"linuxUserConfiguration\": {\n                    \"gid\": {{faker 'datatype.number'}},\n                    \"sshPrivateKey\": \"\",\n                    \"uid\": {{faker 'datatype.number'}}\n                  },\n                  \"name\": \"\",\n                  \"password\": \"\"\n                }\n              ],\n              \"virtualMachineConfiguration\": {\n                \"containerConfiguration\": {\n                  \"containerImageNames\": [\n                    \"\"\n                  ],\n                  \"containerRegistries\": [\n                    {\n                      \"password\": \"\",\n                      \"registryServer\": \"\",\n                      \"username\": \"\"\n                    }\n                  ],\n                  \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n                },\n                \"dataDisks\": [\n                  {\n                    \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                    \"diskSizeGB\": {{faker 'datatype.number'}},\n                    \"lun\": {{faker 'datatype.number'}},\n                    \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                  }\n                ],\n                \"imageReference\": {\n                  \"offer\": \"\",\n                  \"publisher\": \"\",\n                  \"sku\": \"\",\n                  \"version\": \"\",\n                  \"virtualMachineImageId\": \"\"\n                },\n                \"licenseType\": \"\",\n                \"nodeAgentSKUId\": \"\",\n                \"osDisk\": {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n                },\n                \"windowsConfiguration\": {\n                  \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n                }\n              },\n              \"vmSize\": \"\"\n            },\n            \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n          },\n          \"poolId\": \"\"\n        },\n        \"priority\": {{faker 'datatype.number'}},\n        \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"schedule\": {\n        \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n        \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n        \"recurrenceInterval\": \"\",\n        \"startWindow\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of job schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4fc182f3-5fec-4f5f-b444-8cfe2196f8a4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3bf26ba8-f5e6-4fc7-bc82-1651ca59c76f",
      "documentation": "Adds a job schedule to the specified account.",
      "method": "post",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "30e7af03-d8e4-47e4-822a-2dab1c519e80",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ea3034a-cf3a-4cc9-bb85-be44f66c2ca3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a6d56a2-0f6d-4a8a-94ce-71da9a1442d6",
      "documentation": "Deletes a job schedule from the specified account.",
      "method": "delete",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "445ff506-b191-4f24-840d-39f5dfc347f1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9afe5a12-337a-4f12-8651-f2290d640860",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc72cbc5-4153-4d41-b30b-32f47ae8cce8",
      "documentation": "Gets information about the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "24fa574b-e696-446a-b0ad-a8a224be89c2",
          "body": "{\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n    \"recentJob\": {\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  },\n  \"id\": \"\",\n  \"jobSpecification\": {\n    \"commonEnvironmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n      \"maxWallClockTime\": \"\"\n    },\n    \"displayName\": \"\",\n    \"jobManagerTask\": {\n      \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"displayName\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"runExclusive\": {{faker 'datatype.boolean'}},\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"jobPreparationTask\": {\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      },\n      \"waitForSuccess\": {{faker 'datatype.boolean'}}\n    },\n    \"jobReleaseTask\": {\n      \"commandLine\": \"\",\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"maxWallClockTime\": \"\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"retentionTime\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"metadata\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n    \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n    \"poolInfo\": {\n      \"autoPoolSpecification\": {\n        \"autoPoolIdPrefix\": \"\",\n        \"keepAlive\": {{faker 'datatype.boolean'}},\n        \"pool\": {\n          \"applicationLicenses\": [\n            \"\"\n          ],\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"autoScaleEvaluationInterval\": \"\",\n          \"autoScaleFormula\": \"\",\n          \"certificateReferences\": [\n            {\n              \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n              \"storeName\": \"\",\n              \"thumbprint\": \"\",\n              \"thumbprintAlgorithm\": \"\",\n              \"visibility\": [\n                \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n              ]\n            }\n          ],\n          \"cloudServiceConfiguration\": {\n            \"currentOSVersion\": \"\",\n            \"osFamily\": \"\",\n            \"targetOSVersion\": \"\"\n          },\n          \"displayName\": \"\",\n          \"enableAutoScale\": {{faker 'datatype.boolean'}},\n          \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n          \"maxTasksPerNode\": {{faker 'datatype.number'}},\n          \"metadata\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"networkConfiguration\": {\n            \"endpointConfiguration\": {\n              \"inboundNATPools\": [\n                {\n                  \"backendPort\": {{faker 'datatype.number'}},\n                  \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                  \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                  \"name\": \"\",\n                  \"networkSecurityGroupRules\": [\n                    {\n                      \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                      \"priority\": {{faker 'datatype.number'}},\n                      \"sourceAddressPrefix\": \"\"\n                    }\n                  ],\n                  \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                }\n              ]\n            },\n            \"subnetId\": \"\"\n          },\n          \"resizeTimeout\": \"\",\n          \"startTask\": {\n            \"commandLine\": \"\",\n            \"containerSettings\": {\n              \"containerRunOptions\": \"\",\n              \"imageName\": \"\",\n              \"registry\": {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            },\n            \"environmentSettings\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n            \"resourceFiles\": [\n              {\n                \"blobSource\": \"\",\n                \"fileMode\": \"\",\n                \"filePath\": \"\"\n              }\n            ],\n            \"userIdentity\": {\n              \"autoUser\": {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n              },\n              \"username\": \"\"\n            },\n            \"waitForSuccess\": {{faker 'datatype.boolean'}}\n          },\n          \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n          \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n          \"taskSchedulingPolicy\": {\n            \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n          },\n          \"userAccounts\": [\n            {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"linuxUserConfiguration\": {\n                \"gid\": {{faker 'datatype.number'}},\n                \"sshPrivateKey\": \"\",\n                \"uid\": {{faker 'datatype.number'}}\n              },\n              \"name\": \"\",\n              \"password\": \"\"\n            }\n          ],\n          \"virtualMachineConfiguration\": {\n            \"containerConfiguration\": {\n              \"containerImageNames\": [\n                \"\"\n              ],\n              \"containerRegistries\": [\n                {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n            },\n            \"dataDisks\": [\n              {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                \"diskSizeGB\": {{faker 'datatype.number'}},\n                \"lun\": {{faker 'datatype.number'}},\n                \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n              }\n            ],\n            \"imageReference\": {\n              \"offer\": \"\",\n              \"publisher\": \"\",\n              \"sku\": \"\",\n              \"version\": \"\",\n              \"virtualMachineImageId\": \"\"\n            },\n            \"licenseType\": \"\",\n            \"nodeAgentSKUId\": \"\",\n            \"osDisk\": {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n            },\n            \"windowsConfiguration\": {\n              \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n            }\n          },\n          \"vmSize\": \"\"\n        },\n        \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n      },\n      \"poolId\": \"\"\n    },\n    \"priority\": {{faker 'datatype.number'}},\n    \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"schedule\": {\n    \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n    \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n    \"recurrenceInterval\": \"\",\n    \"startWindow\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'datatype.number'}},\n    \"numSucceededTasks\": {{faker 'datatype.number'}},\n    \"numTaskRetries\": {{faker 'datatype.number'}},\n    \"readIOGiB\": {{faker 'datatype.float'}},\n    \"readIOps\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'datatype.float'}},\n    \"writeIOps\": {{faker 'datatype.number'}}\n  },\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job schedule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f2bf61d-e56d-4ae5-8d30-3567a59eaeb1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67868937-d6a4-4b78-b92e-91f5980f7ee6",
      "documentation": "Checks the specified job schedule exists.",
      "method": "head",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "5fc149a4-221d-477a-be76-eebb7cb5269f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the job schedule, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7815ff49-5da7-4591-8ba1-d317099dc6e1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The job schedule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b199d265-7604-4e0e-b698-db5c00ee2dec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d80a6450-6d4a-465d-9f69-12b6900684ce",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "patch",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "7e9596c2-45da-469c-80f6-4c69e00de0e5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0771405-c1be-4e3a-ad92-3a955bd110d5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91b40d11-8b74-49ce-816a-d631add004cb",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "put",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "8dee12a3-e7a1-4cba-a4af-3c81874b39f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c4178d31-08d2-4a15-9b02-d70b3ebafc0a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a4380fb-7f09-4bf5-a174-7862bf4ca7bb",
      "documentation": "Disables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/disable",
      "responses": [
        {
          "uuid": "9a123a06-6879-4748-80ea-032d6c08b9e9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fab017fb-0b82-4ea8-8841-8e5f6bbe5bb5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61d31b42-308e-4684-8061-7879c08d803d",
      "documentation": "Enables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/enable",
      "responses": [
        {
          "uuid": "f81577c2-d5e1-4e9d-93ec-e3d8f8b3c083",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f8a7aa4-d49d-4fd4-bd12-f9ee7e7887a4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3d68526-029b-4a97-a16c-c2ec83f064b3",
      "documentation": "Lists the jobs that have been created under the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId/jobs",
      "responses": [
        {
          "uuid": "15a3fee2-1789-407d-8121-3e6eb356796d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'datatype.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'datatype.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'datatype.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'datatype.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'datatype.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'datatype.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n            \"maxTasksPerNode\": {{faker 'datatype.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n                    \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'datatype.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'datatype.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n            \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'datatype.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'datatype.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'datatype.number'}},\n                  \"lun\": {{faker 'datatype.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'datatype.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'datatype.number'}},\n        \"numSucceededTasks\": {{faker 'datatype.number'}},\n        \"numTaskRetries\": {{faker 'datatype.number'}},\n        \"readIOGiB\": {{faker 'datatype.float'}},\n        \"readIOps\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'datatype.float'}},\n        \"writeIOps\": {{faker 'datatype.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d8226e32-db82-45a0-a8be-e2e855e64181",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb40de5d-4a9a-4a2b-ace8-004bdab37175",
      "documentation": "Terminates a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/terminate",
      "responses": [
        {
          "uuid": "f9002516-bba8-4e67-8d79-21c514e0dd0d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "65946c0d-99d6-41dd-b82a-36b681d1484b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37cc294d-42fa-47e8-bf8c-4b046bc7f3a4",
      "documentation": "Gets lifetime summary statistics for all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "lifetimejobstats",
      "responses": [
        {
          "uuid": "d0cf7429-b93b-4df1-acfe-a57fa721d7bf",
          "body": "{\n  \"kernelCPUTime\": \"\",\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"numFailedTasks\": {{faker 'datatype.number'}},\n  \"numSucceededTasks\": {{faker 'datatype.number'}},\n  \"numTaskRetries\": {{faker 'datatype.number'}},\n  \"readIOGiB\": {{faker 'datatype.float'}},\n  \"readIOps\": {{faker 'datatype.number'}},\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"userCPUTime\": \"\",\n  \"waitTime\": \"\",\n  \"wallClockTime\": \"\",\n  \"writeIOGiB\": {{faker 'datatype.float'}},\n  \"writeIOps\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3699813a-cb54-40c2-9093-91d07a6cdd16",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b0ae2d5c-a17d-43ff-873b-993b257bf827",
      "documentation": "Gets lifetime summary statistics for all of the pools in the specified account.",
      "method": "get",
      "endpoint": "lifetimepoolstats",
      "responses": [
        {
          "uuid": "65fd2a8a-5583-4c6a-9fdf-272ed1c3ed51",
          "body": "{\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceStats\": {\n    \"avgCPUPercentage\": {{faker 'datatype.float'}},\n    \"avgDiskGiB\": {{faker 'datatype.float'}},\n    \"avgMemoryGiB\": {{faker 'datatype.float'}},\n    \"diskReadGiB\": {{faker 'datatype.float'}},\n    \"diskReadIOps\": {{faker 'datatype.number'}},\n    \"diskWriteGiB\": {{faker 'datatype.float'}},\n    \"diskWriteIOps\": {{faker 'datatype.number'}},\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"networkReadGiB\": {{faker 'datatype.float'}},\n    \"networkWriteGiB\": {{faker 'datatype.float'}},\n    \"peakDiskGiB\": {{faker 'datatype.float'}},\n    \"peakMemoryGiB\": {{faker 'datatype.float'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"usageStats\": {\n    \"dedicatedCoreTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1d8e4cc-18cb-4020-96fc-63e124093b83",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "070c7c67-f04d-4b0a-a552-6c434d1e50d8",
      "documentation": "Lists all node agent SKUs supported by the Azure Batch service.",
      "method": "get",
      "endpoint": "nodeagentskus",
      "responses": [
        {
          "uuid": "8ca53b4a-a296-4599-98ba-0402aac178a8",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"osType\": \"{{oneOf (array 'linux' 'windows')}}\",\n      \"verifiedImageReferences\": [\n        {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of node agent SKUs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b792c346-cc77-4bd7-b3dc-5124d8b9c603",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5fa13f2-33bd-4cd5-b0a0-4774924a6638",
      "documentation": "Gets the number of nodes in each state, grouped by pool.",
      "method": "get",
      "endpoint": "nodecounts",
      "responses": [
        {
          "uuid": "35bb9d0c-46ce-4cd6-bbbb-6c3984075cc8",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dedicated\": {\n        \"creating\": {{faker 'datatype.number'}},\n        \"idle\": {{faker 'datatype.number'}},\n        \"leavingPool\": {{faker 'datatype.number'}},\n        \"offline\": {{faker 'datatype.number'}},\n        \"preempted\": {{faker 'datatype.number'}},\n        \"rebooting\": {{faker 'datatype.number'}},\n        \"reimaging\": {{faker 'datatype.number'}},\n        \"running\": {{faker 'datatype.number'}},\n        \"startTaskFailed\": {{faker 'datatype.number'}},\n        \"starting\": {{faker 'datatype.number'}},\n        \"total\": {{faker 'datatype.number'}},\n        \"unknown\": {{faker 'datatype.number'}},\n        \"unusable\": {{faker 'datatype.number'}},\n        \"waitingForStartTask\": {{faker 'datatype.number'}}\n      },\n      \"lowPriority\": {\n        \"creating\": {{faker 'datatype.number'}},\n        \"idle\": {{faker 'datatype.number'}},\n        \"leavingPool\": {{faker 'datatype.number'}},\n        \"offline\": {{faker 'datatype.number'}},\n        \"preempted\": {{faker 'datatype.number'}},\n        \"rebooting\": {{faker 'datatype.number'}},\n        \"reimaging\": {{faker 'datatype.number'}},\n        \"running\": {{faker 'datatype.number'}},\n        \"startTaskFailed\": {{faker 'datatype.number'}},\n        \"starting\": {{faker 'datatype.number'}},\n        \"total\": {{faker 'datatype.number'}},\n        \"unknown\": {{faker 'datatype.number'}},\n        \"unusable\": {{faker 'datatype.number'}},\n        \"waitingForStartTask\": {{faker 'datatype.number'}}\n      },\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response contains the number of nodes in each node state, grouped by pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bbaf139e-49c8-496a-a882-13647abf7647",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d503376-3eb5-406e-b256-a5af563f2330",
      "documentation": "Lists all of the pools in the specified account.",
      "method": "get",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "b4e6a05f-20aa-4d63-82d1-eba4e41a7c14",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n      \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"applicationLicenses\": [\n        \"\"\n      ],\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"autoScaleEvaluationInterval\": \"\",\n      \"autoScaleFormula\": \"\",\n      \"autoScaleRun\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"results\": \"\",\n        \"timestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"cloudServiceConfiguration\": {\n        \"currentOSVersion\": \"\",\n        \"osFamily\": \"\",\n        \"targetOSVersion\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentDedicatedNodes\": {{faker 'datatype.number'}},\n      \"currentLowPriorityNodes\": {{faker 'datatype.number'}},\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"enableAutoScale\": {{faker 'datatype.boolean'}},\n      \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"maxTasksPerNode\": {{faker 'datatype.number'}},\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"endpointConfiguration\": {\n          \"inboundNATPools\": [\n            {\n              \"backendPort\": {{faker 'datatype.number'}},\n              \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n              \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n              \"name\": \"\",\n              \"networkSecurityGroupRules\": [\n                {\n                  \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                  \"priority\": {{faker 'datatype.number'}},\n                  \"sourceAddressPrefix\": \"\"\n                }\n              ],\n              \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n            }\n          ]\n        },\n        \"subnetId\": \"\"\n      },\n      \"resizeErrors\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"resizeTimeout\": \"\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"resourceStats\": {\n          \"avgCPUPercentage\": {{faker 'datatype.float'}},\n          \"avgDiskGiB\": {{faker 'datatype.float'}},\n          \"avgMemoryGiB\": {{faker 'datatype.float'}},\n          \"diskReadGiB\": {{faker 'datatype.float'}},\n          \"diskReadIOps\": {{faker 'datatype.number'}},\n          \"diskWriteGiB\": {{faker 'datatype.float'}},\n          \"diskWriteIOps\": {{faker 'datatype.number'}},\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"networkReadGiB\": {{faker 'datatype.float'}},\n          \"networkWriteGiB\": {{faker 'datatype.float'}},\n          \"peakDiskGiB\": {{faker 'datatype.float'}},\n          \"peakMemoryGiB\": {{faker 'datatype.float'}},\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"usageStats\": {\n          \"dedicatedCoreTime\": \"\",\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n      \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n      \"taskSchedulingPolicy\": {\n        \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n      },\n      \"url\": \"\",\n      \"userAccounts\": [\n        {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"linuxUserConfiguration\": {\n            \"gid\": {{faker 'datatype.number'}},\n            \"sshPrivateKey\": \"\",\n            \"uid\": {{faker 'datatype.number'}}\n          },\n          \"name\": \"\",\n          \"password\": \"\"\n        }\n      ],\n      \"virtualMachineConfiguration\": {\n        \"containerConfiguration\": {\n          \"containerImageNames\": [\n            \"\"\n          ],\n          \"containerRegistries\": [\n            {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n        },\n        \"dataDisks\": [\n          {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n            \"diskSizeGB\": {{faker 'datatype.number'}},\n            \"lun\": {{faker 'datatype.number'}},\n            \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n          }\n        ],\n        \"imageReference\": {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        },\n        \"licenseType\": \"\",\n        \"nodeAgentSKUId\": \"\",\n        \"osDisk\": {\n          \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n        },\n        \"windowsConfiguration\": {\n          \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pools.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a258e151-ef7d-4ff0-8430-2ec1950dc583",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46e0fa40-4e42-4792-9add-740c64724fc4",
      "documentation": "Adds a pool to the specified account.",
      "method": "post",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "da5454ba-b2d5-427c-963a-aa3d24b364de",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df783a28-2c78-47d8-9d71-d4b47e5df4c2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04dce515-120f-4de9-b00a-25dc386f3f54",
      "documentation": "Deletes a pool from the specified account.",
      "method": "delete",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "6c9943a5-5c63-4979-b256-e14b8260d3f1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "695b49d8-e614-402d-9caf-bcd70833b3a4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8adbc989-aa1f-4886-a47b-b335587fa611",
      "documentation": "Gets information about the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "d48f066e-1e1c-4264-871b-d971bf171a93",
          "body": "{\n  \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n  \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"applicationLicenses\": [\n    \"\"\n  ],\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"autoScaleEvaluationInterval\": \"\",\n  \"autoScaleFormula\": \"\",\n  \"autoScaleRun\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    },\n    \"results\": \"\",\n    \"timestamp\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"cloudServiceConfiguration\": {\n    \"currentOSVersion\": \"\",\n    \"osFamily\": \"\",\n    \"targetOSVersion\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"currentDedicatedNodes\": {{faker 'datatype.number'}},\n  \"currentLowPriorityNodes\": {{faker 'datatype.number'}},\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"enableAutoScale\": {{faker 'datatype.boolean'}},\n  \"enableInterNodeCommunication\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"maxTasksPerNode\": {{faker 'datatype.number'}},\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"networkConfiguration\": {\n    \"endpointConfiguration\": {\n      \"inboundNATPools\": [\n        {\n          \"backendPort\": {{faker 'datatype.number'}},\n          \"frontendPortRangeEnd\": {{faker 'datatype.number'}},\n          \"frontendPortRangeStart\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"networkSecurityGroupRules\": [\n            {\n              \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n              \"priority\": {{faker 'datatype.number'}},\n              \"sourceAddressPrefix\": \"\"\n            }\n          ],\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n        }\n      ]\n    },\n    \"subnetId\": \"\"\n  },\n  \"resizeErrors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"resizeTimeout\": \"\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"resourceStats\": {\n      \"avgCPUPercentage\": {{faker 'datatype.float'}},\n      \"avgDiskGiB\": {{faker 'datatype.float'}},\n      \"avgMemoryGiB\": {{faker 'datatype.float'}},\n      \"diskReadGiB\": {{faker 'datatype.float'}},\n      \"diskReadIOps\": {{faker 'datatype.number'}},\n      \"diskWriteGiB\": {{faker 'datatype.float'}},\n      \"diskWriteIOps\": {{faker 'datatype.number'}},\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"networkReadGiB\": {{faker 'datatype.float'}},\n      \"networkWriteGiB\": {{faker 'datatype.float'}},\n      \"peakDiskGiB\": {{faker 'datatype.float'}},\n      \"peakMemoryGiB\": {{faker 'datatype.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"usageStats\": {\n      \"dedicatedCoreTime\": \"\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"targetDedicatedNodes\": {{faker 'datatype.number'}},\n  \"targetLowPriorityNodes\": {{faker 'datatype.number'}},\n  \"taskSchedulingPolicy\": {\n    \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n  },\n  \"url\": \"\",\n  \"userAccounts\": [\n    {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"linuxUserConfiguration\": {\n        \"gid\": {{faker 'datatype.number'}},\n        \"sshPrivateKey\": \"\",\n        \"uid\": {{faker 'datatype.number'}}\n      },\n      \"name\": \"\",\n      \"password\": \"\"\n    }\n  ],\n  \"virtualMachineConfiguration\": {\n    \"containerConfiguration\": {\n      \"containerImageNames\": [\n        \"\"\n      ],\n      \"containerRegistries\": [\n        {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n    },\n    \"dataDisks\": [\n      {\n        \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n        \"diskSizeGB\": {{faker 'datatype.number'}},\n        \"lun\": {{faker 'datatype.number'}},\n        \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n      }\n    ],\n    \"imageReference\": {\n      \"offer\": \"\",\n      \"publisher\": \"\",\n      \"sku\": \"\",\n      \"version\": \"\",\n      \"virtualMachineImageId\": \"\"\n    },\n    \"licenseType\": \"\",\n    \"nodeAgentSKUId\": \"\",\n    \"osDisk\": {\n      \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n    },\n    \"windowsConfiguration\": {\n      \"enableAutomaticUpdates\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1bcd9bfc-a6fc-4605-80ca-61dfe435dc99",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a716c0b-5e4c-4d37-988c-a0f3b3b0ac4f",
      "documentation": "Gets basic properties of a pool.",
      "method": "head",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "2a786a85-522c-4c88-a908-7fc89bc4c6d4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the pool, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce11bd1b-29ed-4ee7-88c4-695503452b99",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48d1a08f-810b-4ff1-8723-bb4d4485751a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26e32f13-4aa5-4f6c-94b2-819e9ea50666",
      "documentation": "Updates the properties of the specified pool.",
      "method": "patch",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "6c17a4d3-1a21-4888-93ff-3e1f77cd7365",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "933ec4a7-dcd1-4df0-b1b2-26e960756b0d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14d770fb-2c67-4abf-9e09-07f31aeb7f6e",
      "documentation": "Disables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/disableautoscale",
      "responses": [
        {
          "uuid": "f193cb0d-5503-4b09-bc92-67d0adf708b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b561bd0-468c-457e-bf35-512c9c311ff0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66d319a8-1a6e-4443-9866-dfba966649b5",
      "documentation": "Enables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/enableautoscale",
      "responses": [
        {
          "uuid": "f02d45fd-7b4e-4024-b91f-506ebfd32f72",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9d87752-0ce9-4c07-b263-76b5dfe0dd9d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "687a9692-05cf-4b96-97c4-a9369d10e481",
      "documentation": "Gets the result of evaluating an automatic scaling formula on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/evaluateautoscale",
      "responses": [
        {
          "uuid": "a8cd5f94-e949-43cd-aa25-747b23042d68",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"results\": \"\",\n  \"timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the autoscale evaluation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4e6faf56-d393-435d-9204-dee24c68b586",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0bc46b9-5a0f-492d-a5c7-0c95378e219e",
      "documentation": "Lists the compute nodes in the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes",
      "responses": [
        {
          "uuid": "d3a3e179-17a1-47a2-bbc6-88c9d5f6b457",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityId\": \"\",\n      \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"endpointConfiguration\": {\n        \"inboundEndpoints\": [\n          {\n            \"backendPort\": {{faker 'datatype.number'}},\n            \"frontendPort\": {{faker 'datatype.number'}},\n            \"name\": \"\",\n            \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n            \"publicFQDN\": \"\",\n            \"publicIPAddress\": \"\"\n          }\n        ]\n      },\n      \"errors\": [\n        {\n          \"code\": \"\",\n          \"errorDetails\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"ipAddress\": \"\",\n      \"isDedicated\": {{faker 'datatype.boolean'}},\n      \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n      \"nodeAgentInfo\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"version\": \"\"\n      },\n      \"recentTasks\": [\n        {\n          \"executionInfo\": {\n            \"containerInfo\": {\n              \"containerId\": \"\",\n              \"error\": \"\",\n              \"state\": \"\"\n            },\n            \"endTime\": \"{{faker 'date.recent' 365}}\",\n            \"exitCode\": {{faker 'datatype.number'}},\n            \"failureInfo\": {\n              \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n              \"code\": \"\",\n              \"details\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"message\": \"\"\n            },\n            \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n            \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n            \"requeueCount\": {{faker 'datatype.number'}},\n            \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n            \"retryCount\": {{faker 'datatype.number'}},\n            \"startTime\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"jobId\": \"\",\n          \"subtaskId\": {{faker 'datatype.number'}},\n          \"taskId\": \"\",\n          \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n          \"taskUrl\": \"\"\n        }\n      ],\n      \"runningTasksCount\": {{faker 'datatype.number'}},\n      \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'datatype.boolean'}}\n      },\n      \"startTaskInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n      },\n      \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalTasksRun\": {{faker 'datatype.number'}},\n      \"totalTasksSucceeded\": {{faker 'datatype.number'}},\n      \"url\": \"\",\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e361af4-3fae-4487-b69e-77783cf08ee3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f3f1300-42c9-4279-81a5-b84487fd9832",
      "documentation": "Gets information about the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "20e7e171-6ef0-4e64-9812-edc323079d3f",
          "body": "{\n  \"affinityId\": \"\",\n  \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"endpointConfiguration\": {\n    \"inboundEndpoints\": [\n      {\n        \"backendPort\": {{faker 'datatype.number'}},\n        \"frontendPort\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n        \"publicFQDN\": \"\",\n        \"publicIPAddress\": \"\"\n      }\n    ]\n  },\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"errorDetails\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\",\n  \"ipAddress\": \"\",\n  \"isDedicated\": {{faker 'datatype.boolean'}},\n  \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n  \"nodeAgentInfo\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\"\n  },\n  \"recentTasks\": [\n    {\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'datatype.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'datatype.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'datatype.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"jobId\": \"\",\n      \"subtaskId\": {{faker 'datatype.number'}},\n      \"taskId\": \"\",\n      \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"taskUrl\": \"\"\n    }\n  ],\n  \"runningTasksCount\": {{faker 'datatype.number'}},\n  \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'datatype.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'datatype.boolean'}}\n  },\n  \"startTaskInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'datatype.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'datatype.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n  },\n  \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"totalTasksRun\": {{faker 'datatype.number'}},\n  \"totalTasksSucceeded\": {{faker 'datatype.number'}},\n  \"url\": \"\",\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the compute node.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "af7454f6-29c0-4691-aba1-532030bf6fef",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d48ab463-68a9-4347-b1c5-e88754ea7f2c",
      "documentation": "Disables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/disablescheduling",
      "responses": [
        {
          "uuid": "adccdaf6-19ff-44b7-9a8a-028b36a4776c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb350fa8-5f02-4b62-a4e2-559f1e7b0382",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4adc798a-c10e-405d-931d-3211426fd56a",
      "documentation": "Enables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/enablescheduling",
      "responses": [
        {
          "uuid": "ad04c7aa-90a7-4696-be57-82bcdb179d8d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "335a1e60-e93c-4b60-b5d1-41c57ef56d8d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d6026deb-be0f-4d28-ac8d-15b2702eabdb",
      "documentation": "Lists all of the files in task directories on the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files",
      "responses": [
        {
          "uuid": "8712182d-02f5-44e9-806d-40b2f6cdd6a3",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'datatype.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "277b32ad-772f-4b62-9052-9f6dd3838829",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c558c4ed-97cd-4830-b8f7-fb27ca309b84",
      "documentation": "Deletes the specified file from the compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "94392818-802a-4dfe-8bc9-85d4a71261d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83d97ca3-250b-43e3-9dc9-bdcae4d622cc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2a277cb-9c11-4562-a9ae-b4bdb4fc1909",
      "documentation": "Returns the content of the specified compute node file.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "990b05b5-b5b2-4516-9a21-785c43b3ba29",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e0e8c67-b79d-44b0-bcdc-e9fa7370ffbd",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09adfd1d-3826-4b3f-8a67-07f8807c6168",
      "documentation": "Gets the properties of the specified compute node file.",
      "method": "head",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "60bbcadc-2e6a-429c-9676-9506d7c1830e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d0a74c60-aed1-4f1d-a9ec-8a3bb7c76f72",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20e49095-5a9c-4a86-88bc-f710f3cf1a1b",
      "documentation": "Gets the Remote Desktop Protocol file for the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/rdp",
      "responses": [
        {
          "uuid": "7bf5af28-9bcc-4af8-b572-5afb5a417614",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the RDP information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d409ae60-198f-4240-ac68-804ca311f4cb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc0ab68b-2183-4259-8aef-6d321ebdf842",
      "documentation": "Restarts the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reboot",
      "responses": [
        {
          "uuid": "ce0776ae-ceef-4d34-ac33-f1dd767f1f14",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb06c87f-2f9c-44a0-bf37-8a63f24c6f5f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61edb8f1-740f-417a-8259-389fd5d67739",
      "documentation": "Reinstalls the operating system on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reimage",
      "responses": [
        {
          "uuid": "9100425e-2a38-4c75-adc8-a2266fbedc5f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57a8f1f6-e603-4663-8ceb-a021f7461ca1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8928665d-fb3b-4eb4-b662-79357bee4e9c",
      "documentation": "Gets the settings required for remote login to a compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/remoteloginsettings",
      "responses": [
        {
          "uuid": "d3ede6de-c4e4-4da6-b69c-5d18f426afbf",
          "body": "{\n  \"remoteLoginIPAddress\": \"\",\n  \"remoteLoginPort\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the login settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e2bd6557-64cf-44bc-8e67-c60b9b698b6c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15104641-297d-4048-8316-3561ba0b3bf9",
      "documentation": "Upload Azure Batch service log files from the specified compute node to Azure Blob Storage.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/uploadbatchservicelogs",
      "responses": [
        {
          "uuid": "d4810ec1-f380-4261-bf85-a10a24cadaba",
          "body": "{\n  \"numberOfFilesUploaded\": {{faker 'datatype.number'}},\n  \"virtualDirectoryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e75cb18-a59e-41d7-8016-850129d18f82",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ce1335f-98ac-44bf-bb7c-c3285ea150b1",
      "documentation": "Adds a user account to the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/users",
      "responses": [
        {
          "uuid": "44509aec-381e-42eb-baca-cf64d489a532",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "685c0044-e98f-4bef-a2f4-ddc45e4076af",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "835021e6-47f8-4e50-a0d1-2d79f7d0979f",
      "documentation": "Deletes a user account from the specified compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "6d4ec205-6ac1-4c77-bad2-b2cd201f507b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d817843-3d11-407c-b502-9ad7f1f5a42f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d27cecc-fc32-470d-a5b7-640cb0cc42be",
      "documentation": "Updates the password and expiration time of a user account on the specified compute node.",
      "method": "put",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "668edd61-c4e3-462f-a104-0a0060228e94",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20dcb25e-ba13-4899-9af0-2771edd2922a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8964211d-10df-45ff-92d1-5bbc858b7a3d",
      "documentation": "Removes compute nodes from the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/removenodes",
      "responses": [
        {
          "uuid": "1cc88f8d-69b4-4d13-a124-e816cbdf7f47",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc8f2db8-acfb-4f29-8eec-ce73d5dcbbdc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3faeef82-cad2-47ff-a7d3-654d4efc3f06",
      "documentation": "Changes the number of compute nodes that are assigned to a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/resize",
      "responses": [
        {
          "uuid": "8b0752c5-bbdb-4932-b005-bba6f267646a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "97857401-5692-4a83-8f60-245b3d5315e0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca2dc33f-56ce-461f-a73d-a449691af473",
      "documentation": "Stops an ongoing resize operation on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/stopresize",
      "responses": [
        {
          "uuid": "5ba40893-0270-4cdd-a01c-2efec730f011",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "35b91ac2-e6e3-45a1-a118-63d6a8fab02d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If you call this API on a pool which is not in the resizing state, the request fails with HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27f4f4ed-6c06-4070-b902-13dcb07935a1",
      "documentation": "Updates the properties of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/updateproperties",
      "responses": [
        {
          "uuid": "58bad23e-61f9-485f-9e53-6e9bfd823f94",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57d9cc69-29ef-433f-9d68-4317c4490f8f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7861d4a8-3b0a-489c-a0e9-553726af9b7f",
      "documentation": "Upgrades the operating system of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/upgradeos",
      "responses": [
        {
          "uuid": "43fceeb1-ca96-4902-97d5-a238579af609",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7a3572b-32e9-4bd0-a533-ec3bdc0137e8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ef5c056-b0a5-442a-95ed-df7fe6d2dc97",
      "documentation": "Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.",
      "method": "get",
      "endpoint": "poolusagemetrics",
      "responses": [
        {
          "uuid": "52e8161b-058e-4117-8454-f5668c9c4fe5",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dataEgressGiB\": {{faker 'datatype.float'}},\n      \"dataIngressGiB\": {{faker 'datatype.float'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"poolId\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalCoreHours\": {{faker 'datatype.float'}},\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pool usage details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1329104b-4fa6-4a40-afb1-f799e1bd9c5d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}