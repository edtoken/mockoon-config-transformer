{
  "uuid": "50e0a5ef-dac3-48cd-8fe7-998e270818f4",
  "lastMigration": 24,
  "name": "FaSta - Station Facilities Status",
  "endpointPrefix": "fasta/v2",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "91cb9edd-fe2f-400e-92ae-67db0e3ec6db",
      "documentation": "Access to public facilities (escalators and elevators) in railway stations",
      "method": "get",
      "endpoint": "facilities",
      "responses": [
        {
          "uuid": "b265c78e-49d7-4e0c-ac02-a2921e82c2f1",
          "body": "[\n  {\n    \"description\": \"\",\n    \"equipmentnumber\": {{faker 'datatype.number'}},\n    \"geocoordX\": {{faker 'datatype.float'}},\n    \"geocoordY\": {{faker 'datatype.float'}},\n    \"operatorname\": \"\",\n    \"state\": \"{{oneOf (array 'ACTIVE' 'INACTIVE' 'UNKNOWN')}}\",\n    \"stateExplanation\": \"\",\n    \"stationnumber\": {{faker 'datatype.number'}},\n    \"type\": \"{{oneOf (array 'ESCALATOR' 'ELEVATOR')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "facility data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d7c8dca-9ea3-4212-9502-cfba0c54f7dd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The given filters contained invalid values.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d2054f9-288b-4cde-a13a-ac0a5a1c8087",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "The requested representation format is not available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "449fd7b0-423a-4f03-89ff-a44dafbaec6d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "A processing error has occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0232070e-c5c1-4127-b95c-0a8c9bfe8e56",
          "body": "",
          "latency": 0,
          "statusCode": 503,
          "label": "The service has been disabled temporarily.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "993c3ad7-aeed-4191-99e8-8a75febadc5a",
      "documentation": "Returns the facility identified by its equipmentnumber.",
      "method": "get",
      "endpoint": "facilities/:equipmentnumber",
      "responses": [
        {
          "uuid": "2611825b-7304-4f71-b3be-7b3b4eeed7e6",
          "body": "{\n  \"description\": \"\",\n  \"equipmentnumber\": {{faker 'datatype.number'}},\n  \"geocoordX\": {{faker 'datatype.float'}},\n  \"geocoordY\": {{faker 'datatype.float'}},\n  \"operatorname\": \"\",\n  \"state\": \"{{oneOf (array 'ACTIVE' 'INACTIVE' 'UNKNOWN')}}\",\n  \"stateExplanation\": \"\",\n  \"stationnumber\": {{faker 'datatype.number'}},\n  \"type\": \"{{oneOf (array 'ESCALATOR' 'ELEVATOR')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Facility data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f06806ad-97d5-413b-a5e3-11a278fdc504",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested facility could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a8e7015-e8a8-4a93-9e1c-5bc7265afd97",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "The requested representation format is not available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc51f543-29ae-4a98-8d4f-ff5d79bbc262",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "A processing error has occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a034925a-45fd-4749-ba41-189dd1209518",
          "body": "",
          "latency": 0,
          "statusCode": 503,
          "label": "The service has been disabled temporarily.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c4be972-86ac-4ee0-94c3-c23c2dca27d4",
      "documentation": "Returns information about a station (and its corresponding facilities) identified by a stationnumber.",
      "method": "get",
      "endpoint": "stations/:stationnumber",
      "responses": [
        {
          "uuid": "08909775-35b7-4a25-ace4-f12188ecb3ad",
          "body": "{\n  \"facilities\": [\n    {\n      \"description\": \"\",\n      \"equipmentnumber\": {{faker 'datatype.number'}},\n      \"geocoordX\": {{faker 'datatype.float'}},\n      \"geocoordY\": {{faker 'datatype.float'}},\n      \"operatorname\": \"\",\n      \"state\": \"{{oneOf (array 'ACTIVE' 'INACTIVE' 'UNKNOWN')}}\",\n      \"stateExplanation\": \"\",\n      \"stationnumber\": {{faker 'datatype.number'}},\n      \"type\": \"{{oneOf (array 'ESCALATOR' 'ELEVATOR')}}\"\n    }\n  ],\n  \"name\": \"\",\n  \"stationnumber\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "station data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c1faeb0-e940-4e74-9990-e71c3217ab08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested station could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9258138e-22cc-4125-8e7d-d5cdbf22d280",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Requested representation format is not available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "981aa033-79d4-460c-8df1-88d1de5ce902",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "A processing error has occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a808a3de-381f-411b-989e-85e34a9319d8",
          "body": "",
          "latency": 0,
          "statusCode": 503,
          "label": "The service has been disabled temporarily.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}