{
  "uuid": "ba12a97f-516f-49b1-81ae-3fa93ed32b3c",
  "lastMigration": 24,
  "name": "NetworkManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1618acc5-010c-43a3-8f2c-dfcd7f3b8922",
      "documentation": "Gets all network watchers by subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "ec7a7347-5b4f-46fb-871e-fa17591df65e",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8b5ecaf4-2093-4fbd-ac74-39cd5cacab3f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af3b540d-b315-4bff-91cb-497cadec9fa6",
      "documentation": "Gets all network watchers by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "c1dbd7b0-ca27-412e-970d-499863d151a1",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f8b741fc-c8a0-4e08-bb18-9d13df067c61",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ff04523-eeb1-43d9-b184-4b86361bfe1a",
      "documentation": "Deletes the specified network watcher resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "422b8ce2-0329-4216-b9df-7fdb4d7e2e8a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "121cf324-5bb0-437c-b073-9bf739aa7026",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8137d2cd-c780-4dcf-9190-43ca9e58921b",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "24f50f2b-aa07-4239-aebd-678e9c603715",
      "documentation": "Gets the specified network watcher by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "da5e10c5-d920-458d-a354-23f9c100c9f3",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f0a9aa0b-296d-4a57-baca-c6b4e838f0d5",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e52eb643-5140-4422-a4b3-d50222a7ff43",
      "documentation": "Updates a network watcher tags.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "c5608cdd-e746-46bd-8ae4-0ad2ce9ea9ef",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "240c796d-c8e2-4d19-a9fa-66395aa1a38f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c5629ef-4f5a-4e43-a13b-b2eb5b490736",
      "documentation": "Creates or updates a network watcher in the specified resource group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "81db76bc-81f0-4c8e-89fe-82f312e5aea6",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6cb7909f-e252-417d-8409-d67dd06b9d3a",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbb66c79-dfa2-4834-a3ab-963f1e9ff12d",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9e34a0d-e570-4c93-8c7f-7e78cc574216",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/availableProvidersList",
      "responses": [
        {
          "uuid": "d6a99682-cef0-4f87-9275-3e624829037e",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for list of available providers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c5e1d8e-6158-4209-9ae4-319f77e9a84a",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf259139-a686-4d80-b002-27e0950a8133",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98280457-dce8-484d-bfea-e428b36ad0b8",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/azureReachabilityReport",
      "responses": [
        {
          "uuid": "40eef697-50fb-42bf-a08e-c3a2405e17b8",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'datatype.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for Azure reachability report.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89c39dbd-8889-4b04-8f2e-e3d14c00b6b1",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'datatype.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42e0f927-a7fc-467a-ba09-f4b7236dc598",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01f46637-7bb8-4d44-8ff5-995095384dc6",
      "documentation": "Configures flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/configureFlowLog",
      "responses": [
        {
          "uuid": "daf18780-8a7d-4a06-9a8a-70f6c5e75fb1",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'datatype.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for setting flow log and traffic analytics (optional) configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c2ca619-b31e-4975-9b75-88cf3c72668d",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'datatype.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7224b38-b516-4240-b8ac-52c791b11ab0",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2caad5d2-b404-4d28-b9f5-49c2e0fa2ddc",
      "documentation": "Lists all connection monitors for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors",
      "responses": [
        {
          "uuid": "b5962bcf-95fb-4370-9f0f-90ca69d3f146",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"autoStart\": true,\n        \"destination\": {\n          \"address\": \"\",\n          \"port\": {{faker 'datatype.number'}},\n          \"resourceId\": \"\"\n        },\n        \"endpoints\": [\n          {\n            \"address\": \"\",\n            \"filter\": {\n              \"items\": [\n                {\n                  \"address\": \"\",\n                  \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'Include')}}\"\n            },\n            \"name\": \"\",\n            \"resourceId\": \"\"\n          }\n        ],\n        \"monitoringIntervalInSeconds\": 60,\n        \"notes\": \"\",\n        \"outputs\": [\n          {\n            \"type\": \"{{oneOf (array 'Workspace')}}\",\n            \"workspaceSettings\": {\n              \"workspaceResourceId\": \"\"\n            }\n          }\n        ],\n        \"source\": {\n          \"port\": {{faker 'datatype.number'}},\n          \"resourceId\": \"\"\n        },\n        \"testConfigurations\": [\n          {\n            \"httpConfiguration\": {\n              \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n              \"path\": \"\",\n              \"port\": {{faker 'datatype.number'}},\n              \"preferHTTPS\": {{faker 'datatype.boolean'}},\n              \"requestHeaders\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"validStatusCodeRanges\": [\n                \"\"\n              ]\n            },\n            \"icmpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'datatype.boolean'}}\n            },\n            \"name\": \"\",\n            \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n            \"successThreshold\": {\n              \"checksFailedPercent\": {{faker 'datatype.number'}},\n              \"roundTripTimeMs\": {{faker 'datatype.number'}}\n            },\n            \"tcpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'datatype.boolean'}},\n              \"port\": {{faker 'datatype.number'}}\n            },\n            \"testFrequencySec\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"testGroups\": [\n          {\n            \"destinations\": [\n              \"\"\n            ],\n            \"disable\": {{faker 'datatype.boolean'}},\n            \"name\": \"\",\n            \"sources\": [\n              \"\"\n            ],\n            \"testConfigurations\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful connection monitor enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fe626cc-35e3-4bb2-96b6-c216ffe9fdcd",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "69604793-27ad-4cab-8cca-677674c65140",
      "documentation": "Deletes the specified connection monitor.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "dc7e5e40-db01-468e-870a-299fafcb082e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ac9d077-c929-42ed-b731-c2cc1bcd6a69",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f56b2ed6-25c4-47ac-b2a5-df4faaf73c43",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "457e4d99-689f-4541-8027-b3048c705f5e",
      "documentation": "Gets a connection monitor by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "2c6c2c8e-560a-459b-93f5-87ef73c01416",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'datatype.number'}},\n          \"preferHTTPS\": {{faker 'datatype.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'datatype.number'}},\n          \"roundTripTimeMs\": {{faker 'datatype.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}},\n          \"port\": {{faker 'datatype.number'}}\n        },\n        \"testFrequencySec\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'datatype.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "726854c1-9eb4-4518-b38d-44bfa5ba25c8",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2928ffcd-8acc-46c8-b8d4-28cd9dc4298c",
      "documentation": "Update tags of the specified connection monitor.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "596bb076-fe7d-4ca5-8d4a-07d663da2716",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'datatype.number'}},\n          \"preferHTTPS\": {{faker 'datatype.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'datatype.number'}},\n          \"roundTripTimeMs\": {{faker 'datatype.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}},\n          \"port\": {{faker 'datatype.number'}}\n        },\n        \"testFrequencySec\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'datatype.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns updated connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c41c198e-ba84-4615-a9a8-9a2b637ed60a",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a00d0a47-0d3e-4955-8fa8-9bd93a52400a",
      "documentation": "Create or update a connection monitor.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "fa5eeed5-1217-473d-b004-e3b66b0ebc6e",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'datatype.number'}},\n          \"preferHTTPS\": {{faker 'datatype.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'datatype.number'}},\n          \"roundTripTimeMs\": {{faker 'datatype.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}},\n          \"port\": {{faker 'datatype.number'}}\n        },\n        \"testFrequencySec\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'datatype.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f68b50ed-d4b2-40db-bc0d-2c48aa234cdf",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'datatype.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'datatype.number'}},\n          \"preferHTTPS\": {{faker 'datatype.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'datatype.number'}},\n          \"roundTripTimeMs\": {{faker 'datatype.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'datatype.boolean'}},\n          \"port\": {{faker 'datatype.number'}}\n        },\n        \"testFrequencySec\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'datatype.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d971d2bf-dcb6-4dd9-bba6-00fa4706a273",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4c5fc62-70c4-47aa-bdb5-a9cf2c82cfc3",
      "documentation": "Query a snapshot of the most recent connection states.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/query",
      "responses": [
        {
          "uuid": "dc189200-f3b9-414f-b226-6bc9f5e9dabf",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'datatype.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'datatype.number'}},\n      \"minLatencyInMs\": {{faker 'datatype.number'}},\n      \"probesFailed\": {{faker 'datatype.number'}},\n      \"probesSent\": {{faker 'datatype.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62538e89-c091-455c-8582-198a500233e4",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'datatype.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'datatype.number'}},\n      \"minLatencyInMs\": {{faker 'datatype.number'}},\n      \"probesFailed\": {{faker 'datatype.number'}},\n      \"probesSent\": {{faker 'datatype.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c77576c-3c01-44e7-aa2f-fd8865401120",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cfcac3f-002e-4fb4-8f01-aa8eea0cd11a",
      "documentation": "Starts the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/start",
      "responses": [
        {
          "uuid": "4dec4f61-5e12-46ed-8425-eb83e31b884c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation starts the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "17c3a0f0-4dc7-4504-830f-43bf7a36a8b1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "083c76e7-fc54-43bb-9f59-fb84023c62ed",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "999a3756-6d95-4653-ae5b-ce91bd7a3ad9",
      "documentation": "Stops the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/stop",
      "responses": [
        {
          "uuid": "4e739b46-8da5-4d20-9b9a-e3dce5f9bf44",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea47f3c0-3704-4dc8-ac21-57308b471d8c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2d121c1-105c-46ac-b862-ae5b88b98d71",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4893391d-aebc-475e-b1e2-e7c5d1e06759",
      "documentation": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectivityCheck",
      "responses": [
        {
          "uuid": "9c08b831-020e-4a54-85b8-386e9ce67806",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'datatype.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'datatype.number'}},\n  \"minLatencyInMs\": {{faker 'datatype.number'}},\n  \"probesFailed\": {{faker 'datatype.number'}},\n  \"probesSent\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for checking connectivity.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4ebd170-15fb-4b92-85cf-839a48740fe3",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'datatype.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'datatype.number'}},\n  \"minLatencyInMs\": {{faker 'datatype.number'}},\n  \"probesFailed\": {{faker 'datatype.number'}},\n  \"probesSent\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0afbda8-6c5d-47a6-a910-9c5bc0793002",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d4b0a3f-0578-4dd5-b782-f0e305768669",
      "documentation": "Lists all flow log resources for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs",
      "responses": [
        {
          "uuid": "96362fc7-c163-44d3-a9e4-9eaa719fa2ab",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful flow log enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "462dfd75-6aca-48e4-bafe-1b749283c053",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb705037-086f-4ead-a401-16a6da8b9ac5",
      "documentation": "Deletes the specified flow log resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "b0dfd4a5-d5fc-411b-816b-407f8690dfce",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "254f614e-013a-4708-82f4-af9f5b7685ac",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7c37c8c-49ed-4cee-b9dc-a88ee8c9ea33",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d5e6753-e0dd-4e7b-94e8-b349ae33348d",
      "documentation": "Gets a flow log resource by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "1c84d6f9-2442-41c7-8149-8c6aab7f6b93",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f68fb574-7422-440d-80d8-fc2412bd8551",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "55679ebc-2f06-42a9-8174-7f6a82b7ec2c",
      "documentation": "Create or update a flow log for the specified network security group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "f53d44f9-1786-426b-8c95-1a0bd1685239",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b5a38af-948a-4dd7-aee5-bb74856a60d6",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62346261-6e71-49a3-a36e-0844d8dc1c4b",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08e96744-d8cf-469a-ac26-71d6339f626d",
      "documentation": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/ipFlowVerify",
      "responses": [
        {
          "uuid": "e9361d50-866e-47b0-bd7f-f54eedd24e5e",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of IP flow verification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6eeda9c-ebec-4a72-af2c-916f4f80c7b1",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5399632-5432-465b-bd57-24e4cd5e315f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8618533c-6bff-4470-abc2-f268e6d3fa62",
      "documentation": "Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/networkConfigurationDiagnostic",
      "responses": [
        {
          "uuid": "878435e1-fa11-42c3-b917-c87b6e011e4b",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'datatype.boolean'}},\n                \"destinationPortMatched\": {{faker 'datatype.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'datatype.boolean'}},\n                \"sourceMatched\": {{faker 'datatype.boolean'}},\n                \"sourcePortMatched\": {{faker 'datatype.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of network configuration diagnostic.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "742a214e-4659-4949-8e5f-6522dcc2221f",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'datatype.boolean'}},\n                \"destinationPortMatched\": {{faker 'datatype.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'datatype.boolean'}},\n                \"sourceMatched\": {{faker 'datatype.boolean'}},\n                \"sourcePortMatched\": {{faker 'datatype.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0968a82f-c22d-478c-9091-25b0aa5187cc",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e866e36e-d048-4fef-8b36-24adf80f59a1",
      "documentation": "Gets the next hop from the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/nextHop",
      "responses": [
        {
          "uuid": "6bdae6d9-00bb-4e5e-8f7e-bb18b75dc652",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the next hop from the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07d37ce1-bc6e-442f-ab87-68511c93f9f6",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eea64836-6da6-44bb-a31f-2995c058deae",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b362634f-5633-495e-9ade-4ccd515d9c3d",
      "documentation": "Lists all packet capture sessions within the specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures",
      "responses": [
        {
          "uuid": "83a52ac7-cea0-458d-8ce0-311f0d967f55",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"bytesToCapturePerPacket\": {{faker 'datatype.number'}},\n        \"filters\": [\n          {\n            \"localIPAddress\": \"\",\n            \"localPort\": \"\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n            \"remoteIPAddress\": \"\",\n            \"remotePort\": \"\"\n          }\n        ],\n        \"storageLocation\": {\n          \"filePath\": \"\",\n          \"storageId\": \"\",\n          \"storagePath\": \"\"\n        },\n        \"target\": \"\",\n        \"timeLimitInSeconds\": 18000,\n        \"totalBytesPerSession\": 1073741824\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful packet capture enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "49c1b5e1-e8c8-4303-aa62-09d1b07f8904",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8dc78cd-b50f-4c0b-a90d-8588117c73e4",
      "documentation": "Deletes the specified packet capture session.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "79c13f69-d954-44ad-88e5-9d1b45e19083",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e674062-c5f2-4d58-99a7-bad557acd6a2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e9351d4-508b-4220-bbae-210a6ef1b2c2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f613fdbc-51a0-4b8b-bec4-58ac28708c24",
      "documentation": "Gets a packet capture session by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "2f50938e-412e-40b7-b51b-477e03e91d8e",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'datatype.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c639c018-89ce-4722-88a5-27b44ef26890",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d491ecb5-7212-4740-9134-1f6b01d60013",
      "documentation": "Create and start a packet capture on the specified VM.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "4f1b7f4a-8129-4ef7-8c7e-ab6d1407e24e",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'datatype.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cefa4dc-cfe3-42fd-ac3d-75c03ef773d3",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1604b32b-edd3-4c83-ab3d-a29eb0604511",
      "documentation": "Query the status of a running packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/queryStatus",
      "responses": [
        {
          "uuid": "631e9293-734e-40da-901c-edb904e0b5e7",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of packet capture status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45c37d3c-ed23-453d-9d8d-7d5f8c798d9e",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query status of packet capture.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d791d1e-b87d-473c-a4ac-66b874a946c2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1de1a92-0d4f-453e-bd07-c84e8c1fe1ec",
      "documentation": "Stops a specified packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/stop",
      "responses": [
        {
          "uuid": "253a62db-7c21-4122-9171-b67edf88942e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec3878b7-1511-4488-84c2-aca46a265f53",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c56564b-e5c7-4bbf-afad-df7116079f24",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a79e102b-4a8e-4082-8073-b49450c843c4",
      "documentation": "Queries status of flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryFlowLogStatus",
      "responses": [
        {
          "uuid": "3d03f2d6-46d1-44f1-92b1-e039760d633a",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'datatype.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for query flow log and traffic analytics (optional) status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f0702377-3fb9-45cd-b08c-68d823c6c3d3",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'datatype.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'datatype.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56e046a9-23c0-4aff-8d16-71620b5c41eb",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6fa0edb2-1cf3-436b-b596-7726480a6c91",
      "documentation": "Get the last completed troubleshooting result on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryTroubleshootResult",
      "responses": [
        {
          "uuid": "0eeca0d8-6cb3-48a9-9c48-5eab28d036fc",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "be039598-821b-4323-a554-cc286c5f717f",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83b3e433-dcae-4184-a469-e9bedeee14f0",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8fc5445-af9c-45fa-84ba-eb0939fec0de",
      "documentation": "Gets the configured and effective security group rules on the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/securityGroupView",
      "responses": [
        {
          "uuid": "d7fafc45-93b8-484c-9990-aece2e16ea7f",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'datatype.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns security group rules on the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8bcebeb0-ced3-4fad-9c53-6d4a2047b686",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'datatype.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e36a0142-0374-47d1-a0e3-ee0c5e0cb98c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31f4fe47-1c42-4a41-a5e3-c2f1176829d3",
      "documentation": "Gets the current network topology by resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/topology",
      "responses": [
        {
          "uuid": "e988cd06-a364-4d17-9502-864b307b3c43",
          "body": "{\n  \"createdDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"resources\": [\n    {\n      \"associations\": [\n        {\n          \"associationType\": \"{{oneOf (array 'Associated' 'Contains')}}\",\n          \"name\": \"\",\n          \"resourceId\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the topology of resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "461644aa-be28-4bac-a97b-341e0285e31d",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e6778f0-0100-4e7d-b54c-77af45af6e9e",
      "documentation": "Initiate troubleshooting on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/troubleshoot",
      "responses": [
        {
          "uuid": "4aed715b-2e50-4534-a1cb-725c8069ae50",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c84c7ffc-beb2-432e-a86a-0224502eb4d0",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3e7d361-bc9b-47d1-a546-56d52961fe7b",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}