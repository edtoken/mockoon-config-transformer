{
  "uuid": "470e0f6c-9ebe-4216-9489-7bd1d05f4657",
  "lastMigration": 24,
  "name": "smart-me",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "47a6e4c9-9946-4080-9a0e-7543d4e025a5",
      "documentation": "Creates a Access Token to write on a Card (e.g. NFC)",
      "method": "put",
      "endpoint": "api/AccessToken",
      "responses": [
        {
          "uuid": "06957360-92c9-41b1-bacd-a167b291ad47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "acf5a365-73d0-41fd-9132-bf4c871e846f",
      "documentation": "",
      "method": "get",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "03d476ee-428a-40b5-abe6-61828d9c3b47",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73efef7b-eb28-41d1-bce2-f1d17e305388",
      "documentation": "",
      "method": "post",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "b50c57d9-0c90-4baf-a13e-73d1bf17def5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9685143-68fa-467c-bc76-010b8eeb8590",
      "documentation": "Set an action for the specified device.",
      "method": "post",
      "endpoint": "api/Actions",
      "responses": [
        {
          "uuid": "3c444d69-d090-4bfe-aa1e-912ae08e0990",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fbee7f7-d8a1-4fcd-b7dc-cb45e14052d6",
      "documentation": "Gets all available Actions of a Device",
      "method": "get",
      "endpoint": "api/Actions/:id",
      "responses": [
        {
          "uuid": "46023958-4e55-4a40-8396-21e802c4290d",
          "body": "[\n  {\n    \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n    \"MaxValue\": {{faker 'datatype.float'}},\n    \"MinValue\": {{faker 'datatype.float'}},\n    \"Name\": \"\",\n    \"ObisCode\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00fb499a-c50b-429e-bac7-8c43889182aa",
      "documentation": "Gets the additional information (e.g. Firmware Version) about a device.",
      "method": "get",
      "endpoint": "api/AdditionalDeviceInformation/:id",
      "responses": [
        {
          "uuid": "5b69aa42-df83-4398-8e06-0b7c5a21b3d3",
          "body": "{\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"FirmwareVersion\": {{faker 'datatype.number'}},\n  \"HardwareVersion\": {{faker 'datatype.number'}},\n  \"ID\": \"\",\n  \"NetworkConnection\": \"\",\n  \"NetworkConnectionRSSI\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "acd49f25-8787-447b-80f6-edd33bcfdf11",
      "documentation": "Gets all Custom Devices",
      "method": "get",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "e8da7053-063f-40f2-93ab-d4ccab9f1142",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Serial\": {{faker 'datatype.number'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Values\": [\n      {\n        \"Name\": \"\",\n        \"Value\": {{faker 'datatype.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c61c2e4e-5d19-4437-b074-d0931b8bb959",
      "documentation": "Creates or updates a Custom Device or updates it's values.",
      "method": "post",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "e1189545-4f4a-4d01-99d3-c59a02f829f4",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'datatype.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c31b6827-b140-4d10-b536-a16dd54b7ce7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75868afb-9f6a-49be-be0f-b71ef97b068e",
      "documentation": "Gets a Custom Device by it's ID",
      "method": "get",
      "endpoint": "api/CustomDevice/:id",
      "responses": [
        {
          "uuid": "c571fb53-2cb2-436b-b81c-c2877605bf9a",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'datatype.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fef94414-b65c-4de6-b66d-998804eec1a8",
      "documentation": "Gets a Device by it's Serial Number. The Serial is the part before the \"-\".",
      "method": "get",
      "endpoint": "api/DeviceBySerial",
      "responses": [
        {
          "uuid": "dd9933b3-bae6-4799-aef6-b53568da5603",
          "body": "{\n  \"ActivePower\": {{faker 'datatype.float'}},\n  \"ActivePowerL1\": {{faker 'datatype.float'}},\n  \"ActivePowerL2\": {{faker 'datatype.float'}},\n  \"ActivePowerL3\": {{faker 'datatype.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'datatype.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'datatype.number'}},\n  \"AnalogOutput2\": {{faker 'datatype.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingImport\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT3\": {{faker 'datatype.float'}},\n  \"CounterReadingT4\": {{faker 'datatype.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'datatype.float'}},\n  \"CurrentL1\": {{faker 'datatype.float'}},\n  \"CurrentL2\": {{faker 'datatype.float'}},\n  \"CurrentL3\": {{faker 'datatype.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'datatype.boolean'}},\n  \"DigitalInput2\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'datatype.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'datatype.float'}},\n  \"PowerFactorL1\": {{faker 'datatype.float'}},\n  \"PowerFactorL2\": {{faker 'datatype.float'}},\n  \"PowerFactorL3\": {{faker 'datatype.float'}},\n  \"Serial\": {{faker 'datatype.number'}},\n  \"SwitchOn\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n  \"Temperature\": {{faker 'datatype.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'datatype.float'}},\n  \"VoltageL1\": {{faker 'datatype.float'}},\n  \"VoltageL2\": {{faker 'datatype.float'}},\n  \"VoltageL3\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fbf4278c-465b-4c31-b8b9-d5adb0fd9aba",
      "documentation": "Gets all Devices",
      "method": "get",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "3b27719d-1096-4b5d-9bbe-a65dde097589",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'datatype.float'}},\n    \"ActivePowerL1\": {{faker 'datatype.float'}},\n    \"ActivePowerL2\": {{faker 'datatype.float'}},\n    \"ActivePowerL3\": {{faker 'datatype.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'datatype.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'datatype.number'}},\n    \"AnalogOutput2\": {{faker 'datatype.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'datatype.float'}},\n    \"CounterReadingExport\": {{faker 'datatype.float'}},\n    \"CounterReadingImport\": {{faker 'datatype.float'}},\n    \"CounterReadingT1\": {{faker 'datatype.float'}},\n    \"CounterReadingT2\": {{faker 'datatype.float'}},\n    \"CounterReadingT3\": {{faker 'datatype.float'}},\n    \"CounterReadingT4\": {{faker 'datatype.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'datatype.float'}},\n    \"CurrentL1\": {{faker 'datatype.float'}},\n    \"CurrentL2\": {{faker 'datatype.float'}},\n    \"CurrentL3\": {{faker 'datatype.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'datatype.boolean'}},\n    \"DigitalInput2\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'datatype.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'datatype.float'}},\n    \"PowerFactorL1\": {{faker 'datatype.float'}},\n    \"PowerFactorL2\": {{faker 'datatype.float'}},\n    \"PowerFactorL3\": {{faker 'datatype.float'}},\n    \"Serial\": {{faker 'datatype.number'}},\n    \"SwitchOn\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n    \"Temperature\": {{faker 'datatype.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'datatype.float'}},\n    \"VoltageL1\": {{faker 'datatype.float'}},\n    \"VoltageL2\": {{faker 'datatype.float'}},\n    \"VoltageL3\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "168b1f9b-435d-40bc-be4d-af0b7e5f18a9",
      "documentation": "Creates or updates a Device or updates it's values.",
      "method": "post",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "b201dfa6-b74a-486c-a3fd-b7c56792a57c",
          "body": "{\n  \"ActivePower\": {{faker 'datatype.float'}},\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT1\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"Current\": {{faker 'datatype.float'}},\n  \"CurrentL1\": {{faker 'datatype.float'}},\n  \"CurrentL2\": {{faker 'datatype.float'}},\n  \"CurrentL3\": {{faker 'datatype.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'datatype.boolean'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'datatype.float'}},\n  \"PowerFactorL1\": {{faker 'datatype.float'}},\n  \"PowerFactorL2\": {{faker 'datatype.float'}},\n  \"PowerFactorL3\": {{faker 'datatype.float'}},\n  \"Serial\": {{faker 'datatype.number'}},\n  \"Temperature\": {{faker 'datatype.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'datatype.float'}},\n  \"VoltageL1\": {{faker 'datatype.float'}},\n  \"VoltageL2\": {{faker 'datatype.float'}},\n  \"VoltageL3\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1af2bea8-9e62-44e7-9a2f-5f1e8ec3fa38",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f4a5d82-e9c6-4663-a12b-c2789dda98df",
      "documentation": "Gets a Device by it's ID",
      "method": "get",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "66e118a2-d8dc-4cbb-b78e-528cd0f29a14",
          "body": "{\n  \"ActivePower\": {{faker 'datatype.float'}},\n  \"ActivePowerL1\": {{faker 'datatype.float'}},\n  \"ActivePowerL2\": {{faker 'datatype.float'}},\n  \"ActivePowerL3\": {{faker 'datatype.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'datatype.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'datatype.number'}},\n  \"AnalogOutput2\": {{faker 'datatype.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingImport\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT3\": {{faker 'datatype.float'}},\n  \"CounterReadingT4\": {{faker 'datatype.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'datatype.float'}},\n  \"CurrentL1\": {{faker 'datatype.float'}},\n  \"CurrentL2\": {{faker 'datatype.float'}},\n  \"CurrentL3\": {{faker 'datatype.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'datatype.boolean'}},\n  \"DigitalInput2\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'datatype.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'datatype.float'}},\n  \"PowerFactorL1\": {{faker 'datatype.float'}},\n  \"PowerFactorL2\": {{faker 'datatype.float'}},\n  \"PowerFactorL3\": {{faker 'datatype.float'}},\n  \"Serial\": {{faker 'datatype.number'}},\n  \"SwitchOn\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n  \"Temperature\": {{faker 'datatype.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'datatype.float'}},\n  \"VoltageL1\": {{faker 'datatype.float'}},\n  \"VoltageL2\": {{faker 'datatype.float'}},\n  \"VoltageL3\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70670240-2bbf-4db3-ab07-c5bd3a36eac4",
      "documentation": "Updates the On/Off Switch on a device. \r\n            For new implementations please use the \"actions\" command",
      "method": "put",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "7bd4eb68-69c0-42f6-9bed-875c2985a1c7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee3931c2-4a0a-4843-b6da-1f5e27f66230",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d6fcdd2-6390-40e5-abe6-4225b756c74d",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "MethodNotAllowed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9603fed-df0a-46e2-9a40-0859d05119e7",
      "documentation": "Gets all Devices for an Energy Type",
      "method": "get",
      "endpoint": "api/DevicesByEnergy",
      "responses": [
        {
          "uuid": "b370b028-f198-42a8-a7d1-d3aee4733373",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'datatype.float'}},\n    \"ActivePowerL1\": {{faker 'datatype.float'}},\n    \"ActivePowerL2\": {{faker 'datatype.float'}},\n    \"ActivePowerL3\": {{faker 'datatype.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'datatype.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'datatype.number'}},\n    \"AnalogOutput2\": {{faker 'datatype.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'datatype.float'}},\n    \"CounterReadingExport\": {{faker 'datatype.float'}},\n    \"CounterReadingImport\": {{faker 'datatype.float'}},\n    \"CounterReadingT1\": {{faker 'datatype.float'}},\n    \"CounterReadingT2\": {{faker 'datatype.float'}},\n    \"CounterReadingT3\": {{faker 'datatype.float'}},\n    \"CounterReadingT4\": {{faker 'datatype.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'datatype.float'}},\n    \"CurrentL1\": {{faker 'datatype.float'}},\n    \"CurrentL2\": {{faker 'datatype.float'}},\n    \"CurrentL3\": {{faker 'datatype.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'datatype.boolean'}},\n    \"DigitalInput2\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'datatype.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'datatype.float'}},\n    \"PowerFactorL1\": {{faker 'datatype.float'}},\n    \"PowerFactorL2\": {{faker 'datatype.float'}},\n    \"PowerFactorL3\": {{faker 'datatype.float'}},\n    \"Serial\": {{faker 'datatype.number'}},\n    \"SwitchOn\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n    \"Temperature\": {{faker 'datatype.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'datatype.float'}},\n    \"VoltageL1\": {{faker 'datatype.float'}},\n    \"VoltageL2\": {{faker 'datatype.float'}},\n    \"VoltageL3\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "856d0f5b-4fd6-4db7-9327-ecd075376a78",
      "documentation": "Gets all Devices by it's Sub Type (e.g. E-Charging Station)",
      "method": "get",
      "endpoint": "api/DevicesBySubType",
      "responses": [
        {
          "uuid": "707aafff-adde-47eb-a1a3-148f31ec0230",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'datatype.float'}},\n    \"ActivePowerL1\": {{faker 'datatype.float'}},\n    \"ActivePowerL2\": {{faker 'datatype.float'}},\n    \"ActivePowerL3\": {{faker 'datatype.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'datatype.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'datatype.number'}},\n    \"AnalogOutput2\": {{faker 'datatype.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'datatype.float'}},\n    \"CounterReadingExport\": {{faker 'datatype.float'}},\n    \"CounterReadingImport\": {{faker 'datatype.float'}},\n    \"CounterReadingT1\": {{faker 'datatype.float'}},\n    \"CounterReadingT2\": {{faker 'datatype.float'}},\n    \"CounterReadingT3\": {{faker 'datatype.float'}},\n    \"CounterReadingT4\": {{faker 'datatype.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'datatype.float'}},\n    \"CurrentL1\": {{faker 'datatype.float'}},\n    \"CurrentL2\": {{faker 'datatype.float'}},\n    \"CurrentL3\": {{faker 'datatype.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'datatype.boolean'}},\n    \"DigitalInput2\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'datatype.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'datatype.float'}},\n    \"PowerFactorL1\": {{faker 'datatype.float'}},\n    \"PowerFactorL2\": {{faker 'datatype.float'}},\n    \"PowerFactorL3\": {{faker 'datatype.float'}},\n    \"Serial\": {{faker 'datatype.number'}},\n    \"SwitchOn\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n    \"Temperature\": {{faker 'datatype.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'datatype.float'}},\n    \"VoltageL1\": {{faker 'datatype.float'}},\n    \"VoltageL2\": {{faker 'datatype.float'}},\n    \"VoltageL3\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c140e4c9-7bd3-413f-9811-cddafb2f337c",
      "documentation": "Force a device to send the data every second (if supported). This for about 30s.\r\n            Don't use this call to force a device to send the data every second for a longer time.",
      "method": "get",
      "endpoint": "api/FastSendDeviceValues/:id",
      "responses": [
        {
          "uuid": "c0904ea3-3758-44ab-9084-625846e964c8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "680a78a9-75eb-4c74-9c07-f2b7ddb2847d",
      "documentation": "Gets the Values for a folder or a meter",
      "method": "get",
      "endpoint": "api/Folder/:id",
      "responses": [
        {
          "uuid": "0d2f9e1b-64c2-45a1-a191-6a62737d0269",
          "body": "{\n  \"ElectricityCounterValue\": {{faker 'datatype.float'}},\n  \"ElectricityPower\": {{faker 'datatype.float'}},\n  \"GasCounterValue\": {{faker 'datatype.float'}},\n  \"GasFlowRate\": {{faker 'datatype.float'}},\n  \"HeatCounterValue\": {{faker 'datatype.float'}},\n  \"HeatPower\": {{faker 'datatype.float'}},\n  \"WaterCounterValue\": {{faker 'datatype.float'}},\n  \"WaterFlowRate\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d033c0fa-63e4-4205-84a9-881feab9f61d",
      "documentation": "Gets the folder menu items (each item might contain child items)",
      "method": "get",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "7147e157-753b-4df7-b1e3-c3abfd0c3325",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8e407990-84c4-4348-8daa-84d2add94fdf",
      "documentation": "Creates and updates the folder menu items",
      "method": "post",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "956a0f67-3a64-4d1d-b16e-d8837fb9fb55",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bf388fe-236a-4cbd-bc71-b8fbeff34209",
      "documentation": "A method returning HTTP 200 OK when queried.\r\n            It is used by Kubernetes probes to determine whether the app is healthy.",
      "method": "get",
      "endpoint": "api/Health",
      "responses": [
        {
          "uuid": "77accfc6-de47-42c3-95de-a7f78539a84e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15c688e9-7e94-4386-814b-e40828f28ad6",
      "documentation": "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n            Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest.",
      "method": "post",
      "endpoint": "api/MBus",
      "responses": [
        {
          "uuid": "a6f9dc9d-6162-4047-adb9-8cc13afd5e05",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e00aa708-101f-43f9-b554-da6d20eb475b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72507a99-da46-4ad9-9166-a7b424abb401",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b55c349-1b91-482c-8737-6f454d2ec315",
      "documentation": "Sets the Name of a Meter or a Folder",
      "method": "post",
      "endpoint": "api/MeterFolderInformation",
      "responses": [
        {
          "uuid": "e81a4d36-1be5-4a81-88f3-0659b44f0da0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b744e521-5897-4a35-adb3-f4d54f38a5af",
      "documentation": "Beta: Gets the General Information for a Meter or a Folder",
      "method": "get",
      "endpoint": "api/MeterFolderInformation/:id",
      "responses": [
        {
          "uuid": "a3624092-4d83-4520-918d-5bd84a154af4",
          "body": "{\n  \"CommunicationModuleFirmwareVersion\": {{faker 'datatype.number'}},\n  \"CommunicationModuleHardwareVersion\": {{faker 'datatype.number'}},\n  \"FirmwareVersion\": {{faker 'datatype.number'}},\n  \"HardwareVersion\": {{faker 'datatype.number'}},\n  \"InputInformations\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"IsFolder\": {{faker 'datatype.boolean'}},\n  \"Name\": \"\",\n  \"OutputInformations\": [\n    {\n      \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'datatype.number'}},\n      \"ObisCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d24884ad-0f10-4c79-8974-521c65cdd395",
      "documentation": "Gets the Values for a Meter at a given Date. \r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/MeterValues/:id",
      "responses": [
        {
          "uuid": "123d13f0-b896-47bf-ac7b-10848b593213",
          "body": "{\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT1\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT2\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT3\": {{faker 'datatype.float'}},\n  \"CounterReadingExportT4\": {{faker 'datatype.float'}},\n  \"CounterReadingImport\": {{faker 'datatype.float'}},\n  \"CounterReadingImportT1\": {{faker 'datatype.float'}},\n  \"CounterReadingImportT2\": {{faker 'datatype.float'}},\n  \"CounterReadingImportT3\": {{faker 'datatype.float'}},\n  \"CounterReadingImportT4\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT3\": {{faker 'datatype.float'}},\n  \"CounterReadingT4\": {{faker 'datatype.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"Id\": \"\",\n  \"Serial\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56a7ed46-d2ab-4dc6-85f2-a6fabcc163ab",
      "documentation": "Gets all registrations for the Realtime API.",
      "method": "get",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "6ff42551-1d6c-4fb0-8304-88713fde22b5",
          "body": "[\n  {\n    \"ApiUrl\": \"\",\n    \"BasicAuthPassword\": \"\",\n    \"BasicAuthUsername\": \"\",\n    \"Id\": \"\",\n    \"MeterId\": \"\",\n    \"RegistrationType\": \"{{oneOf (array 'Disabled' 'SingleMeterRegistration' 'UserRegistration')}}\",\n    \"SerialNumber\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5aae165-2def-4de2-b566-97c7efcb4bb0",
      "documentation": "Creates a new registration for the realtime API. The Realtime API sends you the data of the registred devices as soon as we have them on the cloud.\r\n             More Information about the realtime API: https://www.smart-me.com/Description/api/realtimeapi.aspx",
      "method": "post",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "785787e3-802c-4744-a335-50b0df8615f3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08d4e6bc-b94f-4a0e-9f7b-2a75d2eb8d9c",
      "documentation": "Deletes a realtime API registration.",
      "method": "delete",
      "endpoint": "api/RegisterForRealtimeApi/:id",
      "responses": [
        {
          "uuid": "a3c994bb-cd77-49f4-93aa-b2f941830245",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fec8a055-e631-4012-a9ba-952b2c8a9e6e",
      "documentation": "Sets the configuration of a smart-me device. The device needs to be online.",
      "method": "post",
      "endpoint": "api/SmartMeDeviceConfiguration",
      "responses": [
        {
          "uuid": "5a408ee1-e6a2-45f4-a838-4e6d4e1841e2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c73dd1c-3718-4088-b5bd-cb752c4bc36a",
      "documentation": "Gets the configuration of a smart-me device.",
      "method": "get",
      "endpoint": "api/SmartMeDeviceConfiguration/:id",
      "responses": [
        {
          "uuid": "e9eb3227-a47a-4a1b-bdf7-e3fc7af8201c",
          "body": "{\n  \"DeviceEncryptionKey\": \"\",\n  \"DevicePinCode\": \"\",\n  \"DnsUpdateState\": \"{{oneOf (array 'NoUpdate' 'DnsUpdatePublicIp' 'DnsUpdateInternalIp')}}\",\n  \"EnableModbusTcp\": {{faker 'datatype.boolean'}},\n  \"Id\": \"\",\n  \"InputConfiguration\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'datatype.number'}},\n      \"OffText\": \"\",\n      \"OnText\": \"\",\n      \"Type\": \"{{oneOf (array 'TariffInput' 'DigitalInput')}}\"\n    }\n  ],\n  \"OutputConfiguration\": [\n    {\n      \"DigitalOutputNoConnectionAction\": \"{{oneOf (array 'Nothing' 'TurnOff' 'TurnOn' 'SetPwmValue')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'datatype.number'}},\n      \"S0PulseValue\": \"{{oneOf (array 'PulseValue1000Kwh' 'PulseValue10000Kwh')}}\",\n      \"Type\": \"{{oneOf (array 'ImpulseOutputActiveEnergy' 'ImpulseOutputActiveEnergyImport' 'ImpulseOutputActiveEnergyExport' 'ImpulseOutputReactiveEnergy' 'DigitalOutput' 'AnalogPwmSignalOutput' 'Disabled')}}\"\n    }\n  ],\n  \"ShowReactiveEnergy\": {{faker 'datatype.boolean'}},\n  \"SwitchConfiguration\": [\n    {\n      \"CanSwitchOff\": {{faker 'datatype.boolean'}},\n      \"Number\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"UploadInterval\": \"{{oneOf (array 'UploadInterval_1s' 'UploadInterval_5s' 'UploadInterval_10s' 'UploadInterval_30s' 'UploadInterval_60s' 'UploadInterval_5min' 'UploadInterval_15min' 'UploadInterval_30min' 'UploadInterval_60min' 'UploadInterval_6h' 'UploadInterval_12h' 'UploadInterval_24h')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4a977de-a6eb-46b1-9cb6-02af1106de5b",
      "documentation": "Creates or updates a subuser.\r\n            To create a new user set no ID (empty)",
      "method": "post",
      "endpoint": "api/SubUser",
      "responses": [
        {
          "uuid": "4e9d5538-3549-4193-9200-1e6261beb1f6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b5c9f2a-0596-4d4c-8a73-562abee0a0d0",
      "documentation": "Delete a subuser",
      "method": "delete",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "ee8caeb3-f2c3-4422-81e2-2d95bb2269ac",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "652ff5dd-5649-4a62-bb2e-8d81ead17a1d",
      "documentation": "Get a sub user. The user must be assigend to the user that makes this call.",
      "method": "get",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "a9173a72-d0f1-4f85-9e76-86599945d80f",
          "body": "{\n  \"AccessEndDate\": \"{{faker 'date.recent' 365}}\",\n  \"AccessTimeStartDate\": \"{{faker 'date.recent' 365}}\",\n  \"Email\": \"\",\n  \"Id\": \"\",\n  \"NewPassword\": \"\",\n  \"PermissionLevel\": \"{{oneOf (array 'SelectedFolderAndSubfoldersMeters' 'SelectedFolderOnly')}}\",\n  \"Username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9556f3ae-432e-40ce-a8cb-a2a43d5a9459",
      "documentation": "Gets the informations for the user.",
      "method": "get",
      "endpoint": "api/User",
      "responses": [
        {
          "uuid": "23d98eb3-e43b-45aa-b518-538fe3be7af9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22c9c390-6bee-4b45-ac66-fc18b3b168b3",
      "documentation": "Gets all (last) values of a device",
      "method": "get",
      "endpoint": "api/Values/:id",
      "responses": [
        {
          "uuid": "b34b7aa5-fd07-4f0f-88f3-75eec42c358b",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "044f8a81-62bf-4024-82b2-811538eaec62",
      "documentation": "Gets all (last) values of a device\r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/ValuesInPast/:id",
      "responses": [
        {
          "uuid": "a99bc89f-9602-47d6-99af-4a45aa462a1f",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "661d7825-503a-42ac-9584-f0e93694f5c5",
      "documentation": "Gets multiple values of a device. This call needs a smart-me professional licence.",
      "method": "get",
      "endpoint": "api/ValuesInPastMultiple/:id",
      "responses": [
        {
          "uuid": "ff321527-dfbd-4a0d-bb7b-0e05fa0fa08f",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceId\": \"\",\n    \"Values\": [\n      {\n        \"Obis\": \"\",\n        \"Value\": {{faker 'datatype.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce52e919-6521-4c85-9a6f-600d8c0acc07",
      "documentation": "Beta: Gets all active virtual meters",
      "method": "get",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "290a4aa7-47c2-4145-9cd3-8c4ad480dfb9",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'datatype.float'}},\n    \"ActivePowerL1\": {{faker 'datatype.float'}},\n    \"ActivePowerL2\": {{faker 'datatype.float'}},\n    \"ActivePowerL3\": {{faker 'datatype.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'datatype.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'datatype.number'}},\n    \"AnalogOutput2\": {{faker 'datatype.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'datatype.float'}},\n    \"CounterReadingExport\": {{faker 'datatype.float'}},\n    \"CounterReadingImport\": {{faker 'datatype.float'}},\n    \"CounterReadingT1\": {{faker 'datatype.float'}},\n    \"CounterReadingT2\": {{faker 'datatype.float'}},\n    \"CounterReadingT3\": {{faker 'datatype.float'}},\n    \"CounterReadingT4\": {{faker 'datatype.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'datatype.float'}},\n    \"CurrentL1\": {{faker 'datatype.float'}},\n    \"CurrentL2\": {{faker 'datatype.float'}},\n    \"CurrentL3\": {{faker 'datatype.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'datatype.boolean'}},\n    \"DigitalInput2\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'datatype.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'datatype.float'}},\n    \"PowerFactorL1\": {{faker 'datatype.float'}},\n    \"PowerFactorL2\": {{faker 'datatype.float'}},\n    \"PowerFactorL3\": {{faker 'datatype.float'}},\n    \"Serial\": {{faker 'datatype.number'}},\n    \"SwitchOn\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n    \"Temperature\": {{faker 'datatype.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'datatype.float'}},\n    \"VoltageL1\": {{faker 'datatype.float'}},\n    \"VoltageL2\": {{faker 'datatype.float'}},\n    \"VoltageL3\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8495d249-8f51-4416-b019-563ce4cebe4e",
      "documentation": "Beta: Virtual Meter API: Activates a Meter and add the Consumption to a Virtual Meter assosiated with the User.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "224cda67-88a5-4e06-8a41-b076f0af8170",
          "body": "{\n  \"ActivePower\": {{faker 'datatype.float'}},\n  \"ActivePowerL1\": {{faker 'datatype.float'}},\n  \"ActivePowerL2\": {{faker 'datatype.float'}},\n  \"ActivePowerL3\": {{faker 'datatype.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'datatype.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'datatype.number'}},\n  \"AnalogOutput2\": {{faker 'datatype.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingImport\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT3\": {{faker 'datatype.float'}},\n  \"CounterReadingT4\": {{faker 'datatype.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'datatype.float'}},\n  \"CurrentL1\": {{faker 'datatype.float'}},\n  \"CurrentL2\": {{faker 'datatype.float'}},\n  \"CurrentL3\": {{faker 'datatype.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'datatype.boolean'}},\n  \"DigitalInput2\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'datatype.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'datatype.float'}},\n  \"PowerFactorL1\": {{faker 'datatype.float'}},\n  \"PowerFactorL2\": {{faker 'datatype.float'}},\n  \"PowerFactorL3\": {{faker 'datatype.float'}},\n  \"Serial\": {{faker 'datatype.number'}},\n  \"SwitchOn\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n  \"Temperature\": {{faker 'datatype.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'datatype.float'}},\n  \"VoltageL1\": {{faker 'datatype.float'}},\n  \"VoltageL2\": {{faker 'datatype.float'}},\n  \"VoltageL3\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d72351fe-f38b-4f9d-a34a-31d31c184ebd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad694ef9-080d-4d96-ab99-46a51df02e7e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44727309-8904-4aab-8644-dbb314f95bb7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8b5c6ff-25e4-430c-b21b-3547650ef2d6",
      "documentation": "Beta: Virtual Meter API: Deactivates a Virtual Meter.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterDeactivate",
      "responses": [
        {
          "uuid": "a51497b3-7bad-4674-af75-4ea15a944b2d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "44c9e7f8-7d81-4336-9409-12cc14dfb282",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c24c560-bc8b-45ca-bac6-0264f1763216",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35b24e87-43e3-4b9f-aac9-2ed4d4eb0523",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "19f5d33d-1e03-4a0b-a556-af23e41a741c",
      "documentation": "Beta: Gets all Meters available to activate as a Virtual Meter.",
      "method": "get",
      "endpoint": "api/VirtualBillingMeters",
      "responses": [
        {
          "uuid": "bf6e7099-e0f9-4b87-a3ef-1ce3badff203",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'datatype.float'}},\n    \"ActivePowerL1\": {{faker 'datatype.float'}},\n    \"ActivePowerL2\": {{faker 'datatype.float'}},\n    \"ActivePowerL3\": {{faker 'datatype.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'datatype.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'datatype.number'}},\n    \"AnalogOutput2\": {{faker 'datatype.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'datatype.float'}},\n    \"CounterReadingExport\": {{faker 'datatype.float'}},\n    \"CounterReadingImport\": {{faker 'datatype.float'}},\n    \"CounterReadingT1\": {{faker 'datatype.float'}},\n    \"CounterReadingT2\": {{faker 'datatype.float'}},\n    \"CounterReadingT3\": {{faker 'datatype.float'}},\n    \"CounterReadingT4\": {{faker 'datatype.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'datatype.float'}},\n    \"CurrentL1\": {{faker 'datatype.float'}},\n    \"CurrentL2\": {{faker 'datatype.float'}},\n    \"CurrentL3\": {{faker 'datatype.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'datatype.boolean'}},\n    \"DigitalInput2\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n    \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'datatype.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'datatype.float'}},\n    \"PowerFactorL1\": {{faker 'datatype.float'}},\n    \"PowerFactorL2\": {{faker 'datatype.float'}},\n    \"PowerFactorL3\": {{faker 'datatype.float'}},\n    \"Serial\": {{faker 'datatype.number'}},\n    \"SwitchOn\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n    \"Temperature\": {{faker 'datatype.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'datatype.float'}},\n    \"VoltageL1\": {{faker 'datatype.float'}},\n    \"VoltageL2\": {{faker 'datatype.float'}},\n    \"VoltageL3\": {{faker 'datatype.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2927602b-010a-47fe-ba44-43f6e446efec",
      "documentation": "Calculates a virtual meter from a formula. \r\n            A meter is coded as ID(\"METERID\")",
      "method": "get",
      "endpoint": "api/VirtualMeterCalculateFormula",
      "responses": [
        {
          "uuid": "ec331d49-bae9-44e0-8c9e-9065362a3baa",
          "body": "{\n  \"ActivePower\": {{faker 'datatype.float'}},\n  \"ActivePowerL1\": {{faker 'datatype.float'}},\n  \"ActivePowerL2\": {{faker 'datatype.float'}},\n  \"ActivePowerL3\": {{faker 'datatype.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'datatype.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'datatype.number'}},\n  \"AnalogOutput2\": {{faker 'datatype.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'datatype.float'}},\n  \"CounterReadingExport\": {{faker 'datatype.float'}},\n  \"CounterReadingImport\": {{faker 'datatype.float'}},\n  \"CounterReadingT1\": {{faker 'datatype.float'}},\n  \"CounterReadingT2\": {{faker 'datatype.float'}},\n  \"CounterReadingT3\": {{faker 'datatype.float'}},\n  \"CounterReadingT4\": {{faker 'datatype.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'datatype.float'}},\n  \"CurrentL1\": {{faker 'datatype.float'}},\n  \"CurrentL2\": {{faker 'datatype.float'}},\n  \"CurrentL3\": {{faker 'datatype.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'datatype.boolean'}},\n  \"DigitalInput2\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput1\": {{faker 'datatype.boolean'}},\n  \"DigitalOutput2\": {{faker 'datatype.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'datatype.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'datatype.float'}},\n  \"PowerFactorL1\": {{faker 'datatype.float'}},\n  \"PowerFactorL2\": {{faker 'datatype.float'}},\n  \"PowerFactorL3\": {{faker 'datatype.float'}},\n  \"Serial\": {{faker 'datatype.number'}},\n  \"SwitchOn\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'datatype.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'datatype.boolean'}},\n  \"Temperature\": {{faker 'datatype.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'datatype.float'}},\n  \"VoltageL1\": {{faker 'datatype.float'}},\n  \"VoltageL2\": {{faker 'datatype.float'}},\n  \"VoltageL3\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d9bbd4df-664a-4f74-ad92-7446c4702944",
      "documentation": "Gets all Virtual Tariffs of a user",
      "method": "get",
      "endpoint": "api/VirtualTariff",
      "responses": [
        {
          "uuid": "56c61553-a730-42be-bdf0-85c106a5c2bc",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'datatype.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'datatype.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c2be05a-6fe3-4ffc-9c89-6a82ae837d6f",
      "documentation": "Gets all virtual tariffs of a folder",
      "method": "get",
      "endpoint": "api/VirtualTariff/:id",
      "responses": [
        {
          "uuid": "bffcf790-d1f7-420d-ab69-c91c762bf692",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"FolderId\": \"\",\n  \"Name\": \"\",\n  \"VirtualTariffs\": [\n    {\n      \"Factor\": {{faker 'datatype.float'}},\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n      \"Unit\": \"\",\n      \"Value\": {{faker 'datatype.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43bce973-4451-4434-980b-cb9353b28077",
      "documentation": "Gets the consumption of a folder with a virtuall tariffs.",
      "method": "get",
      "endpoint": "api/VirtualTariffConsumption",
      "responses": [
        {
          "uuid": "187260f2-c937-40b6-adb2-10b3c24870e6",
          "body": "[\n  {\n    \"Consumption\": {{faker 'datatype.float'}},\n    \"Currency\": \"\",\n    \"Name\": \"\",\n    \"Price\": {{faker 'datatype.float'}},\n    \"TariffType\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0c08e10-0982-4585-a32f-44b87f72513a",
      "documentation": "Gets all Virtual Tariffs for a property (folder)",
      "method": "get",
      "endpoint": "api/VirtualTariffsForProperty/:id",
      "responses": [
        {
          "uuid": "72a381b4-fe1a-4e4d-b023-1afa7c95b479",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'datatype.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'datatype.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c5cdb7a-c5c3-43ee-b758-d5a9f093f6b2",
      "documentation": "Assign a folder (source) or meter to another folder (target). Can be used to create a folder structure.",
      "method": "post",
      "endpoint": "api/folder/assign",
      "responses": [
        {
          "uuid": "59017b4e-bf55-4108-9b4d-b85e11f67b94",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6470b7d5-2207-42e2-a204-4d5a1314291b",
      "documentation": "Deletes a folder",
      "method": "delete",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "8bbe80be-f888-4961-9401-5eff7b5abb7f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "155ce3ba-f883-41ab-bf7a-93b80bd0a75b",
      "documentation": "Gets the settings of a folder or meter",
      "method": "get",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "293ece2d-31b2-4fba-ab9c-9de8a506ba16",
          "body": "{\n  \"Description\": \"\",\n  \"Enable\": {{faker 'datatype.boolean'}},\n  \"FolderType\": \"{{oneOf (array 'Folder' 'Location' 'Factory' 'House' 'Office' 'Machine' 'VirtualMeter' 'ElecticityFolder' 'WaterFolder' 'HeatFolder' 'GasFolder' 'TemperatureFolder' 'Sun' 'Light' 'Ice' 'Sofa' 'Food' 'Coffee' 'Car' 'ChargingStation' 'Meter' 'User' 'Trash' 'GridPhotovoltaicPowerSystem')}}\",\n  \"Name\": \"\",\n  \"ParentFolderId\": \"\",\n  \"SerialNumber\": {{faker 'datatype.number'}},\n  \"UseableForVirtualBillingMeters\": {{faker 'datatype.boolean'}},\n  \"ValueCorrection\": {{faker 'datatype.float'}},\n  \"ValueCorrectionParentFolder\": {{faker 'datatype.float'}},\n  \"VisualizationName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b3bbbca-afc6-4c77-bd3f-986987c31568",
      "documentation": "Add or edit a folder or a meter. To add a new folder use and empty ID",
      "method": "post",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "94307ded-9011-4bd2-a1db-a92bc53b8b8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ac633371-6e2f-433a-b3cd-e7069852cbe8",
      "documentation": "Deletes a user to folder assignement",
      "method": "delete",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "7171deb4-6520-4c19-a90b-a35941f63754",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "112fff2e-5e9d-4ccf-ad9f-4bd28f492a37",
      "documentation": "Assign a user to a folder",
      "method": "post",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "a44a0174-2ae7-40b5-b183-4162b8727b13",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11df0217-0cba-49d2-beb0-437ffdb28609",
      "documentation": "",
      "method": "get",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "f7be5cfa-41c2-4148-b627-f9fd09639bd1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b491b4b-e6aa-489c-bfb9-9fe8497abcfd",
      "documentation": "",
      "method": "post",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "7596b924-2661-4a5e-b8b3-34ed2ab507f5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a09e6ee-7a6c-4643-ad87-65335fb7159e",
      "documentation": "Gets the active charging data of a pico station",
      "method": "get",
      "endpoint": "api/pico/charging/:id",
      "responses": [
        {
          "uuid": "9437571f-7418-4c5e-b1c1-151b3af71f92",
          "body": "{\n  \"ActiveChargingEnergy\": {{faker 'datatype.float'}},\n  \"ActiveChargingPower\": {{faker 'datatype.float'}},\n  \"Duration\": {{faker 'datatype.number'}},\n  \"State\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52ec857c-a5fb-4653-8cdf-b9818ae9db33",
      "documentation": "Gets the last charging history for a pico station",
      "method": "get",
      "endpoint": "api/pico/history/:id",
      "responses": [
        {
          "uuid": "c8d04800-38e4-489b-a7bf-6b193a54be35",
          "body": "[\n  {\n    \"Duration\": {{faker 'datatype.number'}},\n    \"EnergyUsed\": {{faker 'datatype.float'}},\n    \"StartTime\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a83a1cfc-f416-4e6f-8a48-7bc242a3264d",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns all available load management groups",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup",
      "responses": [
        {
          "uuid": "f9d68a78-d87a-4d44-bdba-693853e0bbc0",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"MaxCurrent\": {{faker 'datatype.float'}},\n    \"Name\": \"\",\n    \"NumberOfStations\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "555fb0b8-c9f0-4775-913d-54be573694b5",
      "documentation": "Sets the dynamic current of a load management group or a single station.",
      "method": "post",
      "endpoint": "api/pico/loadmanagementgroup/current/:serial",
      "responses": [
        {
          "uuid": "cf6edaf7-c23a-49a3-bb2b-2f61ca7e361e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3dff61c0-5119-4674-acde-bb19d47d7a29",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns a pico load management group by it's id",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup/:id",
      "responses": [
        {
          "uuid": "216b45db-a69e-47b0-95e0-a6b28a79b955",
          "body": "{\n  \"Id\": \"\",\n  \"MaxCurrent\": {{faker 'datatype.float'}},\n  \"Name\": \"\",\n  \"NumberOfStations\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7307d7e-61ff-48f0-bed2-7e4e1f0d767d",
      "documentation": "GET: api/pico/settings\r\n            \r\n            Returns the settings of a pico charging station.",
      "method": "get",
      "endpoint": "api/pico/settings/:id",
      "responses": [
        {
          "uuid": "6a107167-3f58-4024-a04d-182d296c7aea",
          "body": "{\n  \"AuthenticationType\": \"{{oneOf (array 'None' 'Backend')}}\",\n  \"DisplayBrightness\": \"\",\n  \"DnsName\": \"\",\n  \"IdleImageData\": \"\",\n  \"IdleImageUrl\": \"\",\n  \"InternalIp\": \"\",\n  \"LoadmanagementGroupId\": \"\",\n  \"MaxCurrent\": {{faker 'datatype.number'}},\n  \"MinCurrent\": {{faker 'datatype.number'}},\n  \"ModbusTcp\": {{faker 'datatype.boolean'}},\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}