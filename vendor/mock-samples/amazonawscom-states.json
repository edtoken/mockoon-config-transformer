{
  "uuid": "7ec4e359-7671-4483-9cde-e3e5f9ec42c9",
  "lastMigration": 24,
  "name": "AWS Step Functions",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0210af42-e302-462e-8132-93b5186b33d9",
      "documentation": "<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateActivity</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateActivity</code>'s idempotency check is based on the activity <code>name</code>. If a following request has different <code>tags</code> values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateActivity",
      "responses": [
        {
          "uuid": "2075bd24-09d9-4b54-abef-d4b36216fe81",
          "body": "{\n  \"activityArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04fd53fc-7339-46d5-8429-e1396505170e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3efd28bf-c651-488e-bd10-4a4beab7beab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ad71a23-3d53-449b-8906-3e1da0fbbf57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73ec2ead-84c1-4264-9172-ccaf2112de61",
      "documentation": "<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> in the AWS Step Functions User Guide.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateStateMachine</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateStateMachine</code>'s idempotency check is based on the state machine <code>name</code>, <code>definition</code>, <code>type</code>, <code>LoggingConfiguration</code> and <code>TracingConfiguration</code>. If a following request has a different <code>roleArn</code> or <code>tags</code>, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>roleArn</code> and <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateStateMachine",
      "responses": [
        {
          "uuid": "f321917d-6629-42a8-a8bf-a4cfe00fff7d",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "19c1195f-bc56-45a0-95d4-a5dd74223f2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2251f6af-e352-49bf-a8a1-dbc4e9306de4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a67c0da-6cc9-4ae3-9be9-fd7ff5ad98fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b105b6c-a6f4-4cbe-8f9e-798b6903d21a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b855081-67be-4275-8ae5-73d73a7facbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3862e2a0-838e-4ba5-a424-c5f6bcad8c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "970e2fbe-750c-4ada-b28b-03f797c4360e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e445f15-974f-400d-bd22-f50065de7870",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "StateMachineLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "594a72d4-e9d3-4fd6-8855-be0163da84f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6cfe6798-80fd-4d17-8ff8-598a7b7d9efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37f88594-9fde-41a1-a579-200bc490f0da",
      "documentation": "Deletes an activity.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteActivity",
      "responses": [
        {
          "uuid": "96eebe6b-34e1-4f2d-9ec1-ea28b2774209",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d0dc6048-0bcc-4f66-ad25-5e55a3674ef3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2746f182-f5db-47de-9eb4-817fd1cac420",
      "documentation": "<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine's status to <code>DELETING</code> and begins the deletion process. </p> <note> <p>For <code>EXPRESS</code>state machines, the deletion will happen eventually (usually less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteStateMachine",
      "responses": [
        {
          "uuid": "b1c3dc4a-b805-4804-b3c3-ba016d9a37e2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da45ddd9-3e58-46cb-826c-536f4aa95fad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b69164b5-99ab-401a-9b6b-1b3d9bb2a59f",
      "documentation": "<p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeActivity",
      "responses": [
        {
          "uuid": "3e8b5335-1e04-4ca0-a81d-22ecb58b8be4",
          "body": "{\n  \"activityArn\": \"\",\n  \"name\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39f5a8a3-3276-465a-a8c4-34fca01bab00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "446f7976-a459-42e9-b133-96dc2f4b6aea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "736665ac-93c4-44f9-896b-029ae608b76a",
      "documentation": "<p>Describes an execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeExecution",
      "responses": [
        {
          "uuid": "f3bb16d6-d95b-4edc-b8a6-7b8492f88758",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'datatype.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'datatype.boolean'}}\n  },\n  \"traceHeader\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d420ccaa-cdad-4ed9-a8fd-0866628902ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84328eda-8029-4c18-ae70-77ef5bd4bf21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fdaf7558-0980-48e1-a88a-ee6344a8544c",
      "documentation": "<p>Describes a state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachine",
      "responses": [
        {
          "uuid": "4d9ffc98-e13c-4ce6-944f-c0075758d79f",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"type\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'datatype.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df2f3169-4b8f-4db8-91f7-816c7fa39d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29614a18-8cc1-4356-baa8-1612cd3ed7f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01ffc1a6-f6f3-42e6-9e42-d3c043fb09a6",
      "documentation": "<p>Describes the state machine associated with a specific execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution",
      "responses": [
        {
          "uuid": "0c2d4617-764e-45e8-9b43-6be1cf5bb621",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"updateDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'datatype.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "880e8811-8820-4463-8392-6cc0c50e0e18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa8212fe-ea3f-4e6b-9c3d-b133218ddb0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "556d118d-8e2b-42ca-a23c-d7b49132952e",
      "documentation": "<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html\">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetActivityTask",
      "responses": [
        {
          "uuid": "5798f19a-782b-4dd8-a2b1-ffc974afefe8",
          "body": "{\n  \"taskToken\": \"\",\n  \"input\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e787e36-bd33-414b-b37d-0f9e76442284",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88a40cac-4f23-48b9-baf8-402cd9b43f59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActivityWorkerLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c355170-b41c-4605-b8ec-5ec6fe9fad47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5da33fb3-caae-4d82-9544-d4db403c7890",
      "documentation": "<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetExecutionHistory",
      "responses": [
        {
          "uuid": "ced3537b-5c13-4b66-9fc1-6dad4a29ae9c",
          "body": "{\n  \"events\": [\n    {\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"type\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"previousEventId\": {{faker 'datatype.number'}},\n      \"activityFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'datatype.number'}},\n        \"heartbeatInSeconds\": {{faker 'datatype.number'}}\n      },\n      \"activityStartedEventDetails\": {\n        \"workerName\": \"\"\n      },\n      \"activitySucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"activityTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskScheduledEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"region\": \"\",\n        \"parameters\": \"\",\n        \"timeoutInSeconds\": {{faker 'datatype.number'}},\n        \"heartbeatInSeconds\": {{faker 'datatype.number'}}\n      },\n      \"taskStartFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskStartedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\"\n      },\n      \"taskSubmitFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskSubmittedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"taskSucceededEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"taskTimedOutEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionStartedEventDetails\": {\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        },\n        \"roleArn\": \"\"\n      },\n      \"executionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"executionAbortedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"mapStateStartedEventDetails\": {\n        \"length\": {{faker 'datatype.number'}}\n      },\n      \"mapIterationStartedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'datatype.number'}}\n      },\n      \"mapIterationSucceededEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'datatype.number'}}\n      },\n      \"mapIterationFailedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'datatype.number'}}\n      },\n      \"mapIterationAbortedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'datatype.number'}}\n      },\n      \"lambdaFunctionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'datatype.number'}}\n      },\n      \"lambdaFunctionStartFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"lambdaFunctionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"stateEnteredEventDetails\": {\n        \"name\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"stateExitedEventDetails\": {\n        \"name\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'datatype.boolean'}}\n        }\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec27bc59-8a0f-4f39-bfb2-9dffb89c66f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d6446db-c5e1-4f39-9c8d-05759b54682f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b1412c2-ae65-4875-96a5-3ce435df1cad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "804c741d-acf6-48a3-856f-6399d5301cd9",
      "documentation": "<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListActivities",
      "responses": [
        {
          "uuid": "4f31d169-6478-4a8c-a014-52fe20def949",
          "body": "{\n  \"activities\": [\n    {\n      \"activityArn\": \"\",\n      \"name\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a72bdbc-f37f-4c1f-adc7-51a16513e62d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ece9ebf9-f2ce-4558-8073-f264f7826998",
      "documentation": "<p>Lists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListExecutions",
      "responses": [
        {
          "uuid": "80081708-ca1d-40b7-8dfa-980cd7e3071b",
          "body": "{\n  \"executions\": [\n    {\n      \"executionArn\": \"\",\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"status\": \"\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\",\n      \"stopDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ed9e26dc-58fd-4e24-90dc-56cc8cdff3a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b436ae52-0994-46b8-bf3a-9bf99c32d89d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4344a7e-6b57-4678-9c3a-11ae266ed39d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ede9936f-ae02-4f25-b304-3f9040cfdc9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62a94829-48a5-410a-abef-349c85a5f80d",
      "documentation": "<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListStateMachines",
      "responses": [
        {
          "uuid": "05cc211b-5d51-4cd0-beae-204463a7c609",
          "body": "{\n  \"stateMachines\": [\n    {\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"type\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e0e5444-5912-4877-b5f7-e72c4d278989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5839f9e1-75a0-456c-8a2f-a78ded9f86f9",
      "documentation": "<p>List tags for a given resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListTagsForResource",
      "responses": [
        {
          "uuid": "dbcf20b4-8a77-4742-aba7-c43641fb9373",
          "body": "{\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9089303-2cbc-4417-83e1-3880a9e0e895",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f967685-9b3f-4423-834d-568a240cb17b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60dac9b2-6a93-4db2-9ca7-96827bea4eeb",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> failed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskFailure",
      "responses": [
        {
          "uuid": "44449439-0245-43c7-a3ea-dbec449720c9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57d4786a-e354-4b48-98df-cf0d3faf35f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5106250-e828-4c42-9737-f316bef23e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fe03ed0-9947-4e80-a027-47557ec1bde1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dde68e33-6b93-4d0d-a2c6-8c4e20b74b19",
      "documentation": "<p>Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report to Step Functions that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine's Amazon States Language definition (<code>HeartbeatSeconds</code>). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> entry for activities, or a <code>TaskTimedOut</code> entry for for tasks using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync\">job run</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine's Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received. Use <code>HeartbeatSeconds</code> to configure the timeout interval for heartbeats.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat",
      "responses": [
        {
          "uuid": "3ff295b7-2eae-4c66-ba1f-d5fcfb82fb91",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb23a40e-d8a2-48fe-a3c8-58777e2a29bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4b9bfe6-f436-4c9b-954d-8fbb52362851",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d70e551c-5cc0-4b6f-8b5a-360c7652e653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71225d7a-7b5e-44bd-963a-e09c485e1cd9",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> completed successfully.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskSuccess",
      "responses": [
        {
          "uuid": "52de3f80-aad4-4929-9723-e3a8bafaa196",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e28668c7-46c6-4a4d-9c89-38a84b0ad779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba2327cb-20ab-4bfc-aff7-72f5f0a31149",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOutput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a67f3934-ead6-4a57-abaf-c34a5857035b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "215fd735-3de9-48d7-ae7a-cc9e3ba75056",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6ba18b4-b471-4323-ad45-c4ab125f6982",
      "documentation": "<p>Starts a state machine execution.</p> <note> <p> <code>StartExecution</code> is idempotent. If <code>StartExecution</code> is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 <code>ExecutionAlreadyExists</code> error. Names can be reused after 90 days. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartExecution",
      "responses": [
        {
          "uuid": "cc8a5ce5-4771-432f-b003-640b7fe0ba60",
          "body": "{\n  \"executionArn\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80bf08af-ba69-41cf-96d4-f88621247276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "213fae51-ce76-47e5-a01d-6ec209ba6384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ExecutionAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e08f55fe-1ee7-447a-b0c5-097958878cfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ddfbb54-695d-40d8-8496-1a1e6d91ccd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09df1819-d9bc-4e9c-88b4-d83568b50167",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "302532bd-dd4c-46de-9d30-a18a64e27078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eee60071-e163-47f7-a701-7dde6746c95c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db380c76-2e20-4e04-8cf9-4b42d1a97184",
      "documentation": "Starts a Synchronous Express state machine execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartSyncExecution",
      "responses": [
        {
          "uuid": "887b758d-0b11-4fdb-b054-ceb6c1292837",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"error\": \"\",\n  \"cause\": \"\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'datatype.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'datatype.boolean'}}\n  },\n  \"traceHeader\": \"\",\n  \"billingDetails\": {\n    \"billedMemoryUsedInMB\": {{faker 'datatype.number'}},\n    \"billedDurationInMilliseconds\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d8bc0d70-15de-4b6c-bc3f-bcacadcb7119",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce413dbb-55da-4da6-a902-c6de49bfa6f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9742535-c64c-430e-b04f-51dfce182651",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08b200f5-eea9-4c34-93f0-3454bfbfcadf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2939a708-a243-4f60-8a91-2bf2d721483f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51831669-350c-4c51-b6a9-b90af6e9b611",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56076ce2-b809-4a19-ac85-c157e67cf050",
      "documentation": "<p>Stops an execution.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StopExecution",
      "responses": [
        {
          "uuid": "250e5cc5-2fe7-4c25-bfd4-ec7d75b17896",
          "body": "{\n  \"stopDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8cbf0443-10b8-45a9-bab1-f69212283012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4a1f015-37c0-4672-b4f5-1aa6275e2b64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87f9b678-818e-4432-a0b9-1efdc53d9dcd",
      "documentation": "<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.TagResource",
      "responses": [
        {
          "uuid": "c1cebe23-7875-499d-82c7-79f45431154a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "35670571-5454-4eec-8a68-4d61fd1aa0bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3934e58-44f4-4149-99e4-13b35244d73c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6f6db53-ff27-42f6-ad20-3ae0026146ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b99ea0a-551f-4d13-8360-f0aaa120b28c",
      "documentation": "Remove a tag from a Step Functions resource",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UntagResource",
      "responses": [
        {
          "uuid": "3194ad53-25cb-4f6c-a3f4-65e5c9fd47e1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf27efed-1fc6-40a7-94eb-5a1c5f77b8fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca464bca-98f9-4a7a-8568-8620eb000ed2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f922e17b-9e11-4e1f-a155-3325691ef1a0",
      "documentation": "<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, or <code>loggingConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UpdateStateMachine",
      "responses": [
        {
          "uuid": "c262b0b2-4fb9-4d9b-a69b-80fa8a3f1b51",
          "body": "{\n  \"updateDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8fafe594-0a6b-4f9b-9a19-f278993dccc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d36e89ac-ba51-441b-ba9b-f3614e92b49d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edf856e8-02ea-478c-b6e0-08609aeb4d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71279b83-82fe-486c-89c9-da2b95f095d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a0a7d3f-f4a9-42c9-87f7-1df15e1855cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MissingRequiredParameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff7653cc-2024-4859-ad24-ef7b23a51e38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7b39619-8b90-4899-8c5d-44dc6050d1a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}