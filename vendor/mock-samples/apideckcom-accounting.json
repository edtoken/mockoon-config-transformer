{
  "uuid": "8b050e5a-60ef-4020-971c-5428a3ac98c3",
  "lastMigration": 24,
  "name": "Accounting API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e59b5c68-c9f4-4fb9-94c9-2e710c998ec0",
      "documentation": "Get BalanceSheet",
      "method": "get",
      "endpoint": "accounting/balance-sheet",
      "responses": [
        {
          "uuid": "2cca9f6d-478c-4a8d-ad21-89fdba7ae61e",
          "body": "{\n  \"data\": {\n    \"assets\": {\n      \"current_assets\": {\n        \"accounts\": [\n          {\n            \"id\": \"1\",\n            \"name\": \"Accounts Receivable (A/R)\",\n            \"value\": 10000\n          },\n          {\n            \"id\": \"2\",\n            \"name\": \"Accounts Payable (A/P)\",\n            \"value\": 10000\n          }\n        ],\n        \"total\": 100000\n      },\n      \"fixed_assets\": {\n        \"accounts\": [\n          {\n            \"id\": \"1\",\n            \"name\": \"Accounts Receivable (A/R)\",\n            \"value\": 10000\n          },\n          {\n            \"id\": \"2\",\n            \"name\": \"Accounts Payable (A/P)\",\n            \"value\": 10000\n          }\n        ],\n        \"total\": 100000\n      },\n      \"total\": 200000\n    },\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"end_date\": \"2017-01-01\",\n    \"equity\": {\n      \"items\": [\n        {\n          \"id\": \"1\",\n          \"name\": \"Retained Earnings\",\n          \"value\": 10000\n        }\n      ],\n      \"total\": 200000\n    },\n    \"id\": \"12345\",\n    \"liabilities\": {\n      \"accounts\": [\n        {\n          \"id\": \"1\",\n          \"name\": \"Accounts Payable (A/P)\",\n          \"value\": 10000\n        }\n      ],\n      \"total\": 200000\n    },\n    \"report_name\": \"BalanceSheet\",\n    \"start_date\": \"2017-01-01\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"BalanceSheets\",\n  \"service\": \"quickbooks\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BalanceSheet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64df4600-41e5-40a3-8fb5-a8c280f893d1",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cdf9678-c9f0-4479-bee5-0f7f961f62f1",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9727eda-b517-4406-b985-cec7458fa6a0",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b530a809-cefe-449b-ac94-e10cb2c9a3d2",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2296b74d-489c-4b50-ae58-4554cf468ce8",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34d83503-ac15-44b3-8e22-be29a3dfd7e6",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "266626a1-62bb-47d1-bccb-3404f0166f75",
      "documentation": "List Bills",
      "method": "get",
      "endpoint": "accounting/bills",
      "responses": [
        {
          "uuid": "36a23fc7-15cf-49d1-9eab-bb399ce641c9",
          "body": "{\n  \"data\": [\n    {\n      \"balance\": 27500,\n      \"bill_date\": \"2020-09-30\",\n      \"bill_number\": \"10001\",\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"currency_rate\": 0.69,\n      \"deposit\": {{faker 'datatype.number'}},\n      \"downstream_id\": \"12345\",\n      \"due_date\": \"2020-10-30\",\n      \"id\": \"12345\",\n      \"ledger_account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"line_items\": [\n        {\n          \"code\": \"120-C\",\n          \"department_id\": \"1234\",\n          \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n          \"discount_percentage\": 0.01,\n          \"id\": \"12345\",\n          \"item\": {\n            \"code\": \"120-C\",\n            \"id\": \"12344\",\n            \"name\": \"Model Y\"\n          },\n          \"ledger_account\": {\n            \"code\": \"453\",\n            \"id\": \"123456\",\n            \"name\": \"Bank account\",\n            \"nominal_code\": \"N091\"\n          },\n          \"line_number\": 1,\n          \"location_id\": \"1234\",\n          \"quantity\": 1,\n          \"row_id\": \"12345\",\n          \"row_version\": \"1-12345\",\n          \"tax_amount\": 27500,\n          \"tax_rate\": {\n            \"code\": \"N-T\",\n            \"id\": \"123456\",\n            \"name\": \"GST on Purchases\"\n          },\n          \"total_amount\": 27500,\n          \"type\": \"{{oneOf (array 'expense_item' 'expense_account')}}\",\n          \"unit_of_measure\": \"pc.\",\n          \"unit_price\": 27500.5\n        }\n      ],\n      \"notes\": \"Some notes about this bill.\",\n      \"paid_date\": \"2020-10-30\",\n      \"po_number\": \"90000117\",\n      \"reference\": \"123456\",\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'draft' 'submitted' 'authorised' 'partially_paid' 'paid' 'void' 'credit' 'deleted')}}\",\n      \"sub_total\": 27500,\n      \"supplier\": {\n        \"address\": {\n          \"city\": \"San Francisco\",\n          \"contact_name\": \"Elon Musk\",\n          \"country\": \"US\",\n          \"county\": \"Santa Clara\",\n          \"email\": \"elon@musk.com\",\n          \"fax\": \"122-111-1111\",\n          \"id\": \"123\",\n          \"latitude\": \"40.759211\",\n          \"line1\": \"Main street\",\n          \"line2\": \"apt #\",\n          \"line3\": \"Suite #\",\n          \"line4\": \"delivery instructions\",\n          \"longitude\": \"-73.984638\",\n          \"name\": \"HQ US\",\n          \"phone_number\": \"111-111-1111\",\n          \"postal_code\": \"94104\",\n          \"row_version\": \"1-12345\",\n          \"salutation\": \"Mr\",\n          \"state\": \"CA\",\n          \"street_number\": \"25\",\n          \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n          \"website\": \"https://elonmusk.com\"\n        },\n        \"company_name\": \"The boring company\",\n        \"display_name\": \"Windsurf Shop\",\n        \"id\": \"12345\"\n      },\n      \"tax_code\": \"1234\",\n      \"tax_inclusive\": true,\n      \"terms\": \"Net 30 days\",\n      \"total\": 27500,\n      \"total_tax\": 2500,\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"bills\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bills",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf25fd74-1e67-4df5-822d-7c47210b3f46",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2fa8213-9892-4964-9b4e-9acf9bb72922",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "904e3ac5-54e7-4776-9352-f1750ef7af79",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5a272ef-8a8a-4917-bb85-be6122e672b2",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8156700-d5c7-4c5a-a913-e6daccb54d68",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d71bc55-1b48-4722-b05e-0d33075fc141",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e502ef07-af8e-4542-bfbe-838f5c456bd3",
      "documentation": "Create Bill",
      "method": "post",
      "endpoint": "accounting/bills",
      "responses": [
        {
          "uuid": "d1bea933-7648-47ac-8d8f-2908074467e6",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"bills\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Bill created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ef98ab4-17d0-4667-ab68-da09562da170",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39260c7a-9ea1-4b28-80c4-741ed9efc93d",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3230443-ef21-4b00-8294-4cb9b283dc21",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a1aafd1-3b97-4534-ba9f-99cc491bed02",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef38d054-4a12-4e00-b6b2-b58a4b71d971",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "349e06c6-2c3d-41b0-870f-3d292403c2b0",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a77eefd0-59ce-4b2e-8ff3-02eb97b2c178",
      "documentation": "Delete Bill",
      "method": "delete",
      "endpoint": "accounting/bills/:id",
      "responses": [
        {
          "uuid": "bf830e6e-1c97-4672-b243-ea79e711af95",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"bills\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bill deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ab04b34-b921-426a-b3d4-ea5dae0c3a3c",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bc0d539-7d68-4fc4-b38e-4d8e047baebb",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d20d25d-33ee-448d-844b-99bca0c4902a",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3538af72-b4dc-4c1e-b3a1-88facd21b56c",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1f0e3a8-3cbb-401c-bf5e-c1e5f2db9e4c",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34640e4b-04eb-4878-8bfc-7d93372901f4",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbfc957c-8895-4495-8a40-26a094b23633",
      "documentation": "Get Bill",
      "method": "get",
      "endpoint": "accounting/bills/:id",
      "responses": [
        {
          "uuid": "a3549edb-8719-4c78-8bc1-9460c9d9977a",
          "body": "{\n  \"data\": {\n    \"balance\": 27500,\n    \"bill_date\": \"2020-09-30\",\n    \"bill_number\": \"10001\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"currency_rate\": 0.69,\n    \"deposit\": {{faker 'datatype.number'}},\n    \"downstream_id\": \"12345\",\n    \"due_date\": \"2020-10-30\",\n    \"id\": \"12345\",\n    \"ledger_account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"line_items\": [\n      {\n        \"code\": \"120-C\",\n        \"department_id\": \"1234\",\n        \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n        \"discount_percentage\": 0.01,\n        \"id\": \"12345\",\n        \"item\": {\n          \"code\": \"120-C\",\n          \"id\": \"12344\",\n          \"name\": \"Model Y\"\n        },\n        \"ledger_account\": {\n          \"code\": \"453\",\n          \"id\": \"123456\",\n          \"name\": \"Bank account\",\n          \"nominal_code\": \"N091\"\n        },\n        \"line_number\": 1,\n        \"location_id\": \"1234\",\n        \"quantity\": 1,\n        \"row_id\": \"12345\",\n        \"row_version\": \"1-12345\",\n        \"tax_amount\": 27500,\n        \"tax_rate\": {\n          \"code\": \"N-T\",\n          \"id\": \"123456\",\n          \"name\": \"GST on Purchases\"\n        },\n        \"total_amount\": 27500,\n        \"type\": \"{{oneOf (array 'expense_item' 'expense_account')}}\",\n        \"unit_of_measure\": \"pc.\",\n        \"unit_price\": 27500.5\n      }\n    ],\n    \"notes\": \"Some notes about this bill.\",\n    \"paid_date\": \"2020-10-30\",\n    \"po_number\": \"90000117\",\n    \"reference\": \"123456\",\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'draft' 'submitted' 'authorised' 'partially_paid' 'paid' 'void' 'credit' 'deleted')}}\",\n    \"sub_total\": 27500,\n    \"supplier\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      },\n      \"company_name\": \"The boring company\",\n      \"display_name\": \"Windsurf Shop\",\n      \"id\": \"12345\"\n    },\n    \"tax_code\": \"1234\",\n    \"tax_inclusive\": true,\n    \"terms\": \"Net 30 days\",\n    \"total\": 27500,\n    \"total_tax\": 2500,\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"bills\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bill",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41f450ca-52be-46da-aa74-1e54a1880692",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f50053c2-9be0-4401-83ed-ed63389d8821",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be7e9a32-dc12-42ab-b30c-e50407b82d76",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2ec753d-b6f9-4289-bf71-edcbc9fe7310",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a11f1018-e4e9-4a1d-9de9-4628c18d8b8d",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13de7df8-631f-451b-abae-69f4fbd3de18",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05a7ae4e-03f6-4f1f-8592-6b56608c464f",
      "documentation": "Update Bill",
      "method": "patch",
      "endpoint": "accounting/bills/:id",
      "responses": [
        {
          "uuid": "247585a4-0967-49bb-ae01-6ddf0362f03d",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"bills\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bill Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cb3f11b-5aab-42f8-ade3-4ba35d168f05",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb897d74-28a8-4b39-8026-08cb85a77747",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5fdc5dc-d5ff-4f3e-82e3-e16e2399fc08",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d3153d2-9606-4671-85a2-c054afdeed70",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f4d7b16-1205-4145-9ca7-f97205975db2",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe9b7881-b12e-4803-a668-83a88a30a3dc",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82bbc86c-6532-4d62-86bd-79f048d57191",
      "documentation": "Get company info",
      "method": "get",
      "endpoint": "accounting/company-info",
      "responses": [
        {
          "uuid": "d08df9dc-80a4-46f6-b145-e9411d0ac506",
          "body": "{\n  \"data\": {\n    \"addresses\": [\n      {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      }\n    ],\n    \"automated_sales_tax\": {{faker 'datatype.boolean'}},\n    \"company_name\": \"SpaceX\",\n    \"company_start_date\": \"2015-06-05\",\n    \"country\": \"US\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"default_sales_tax\": {\n      \"code\": \"N-T\",\n      \"id\": \"123456\",\n      \"name\": \"GST on Purchases\"\n    },\n    \"emails\": [\n      {\n        \"email\": \"elon@musk.com\",\n        \"id\": \"123\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'billing' 'other')}}\"\n      }\n    ],\n    \"fiscal_year_start_month\": \"{{oneOf (array 'January' 'February' 'March' 'April' 'May' 'June' 'July' 'August' 'September' 'October' 'November' 'December')}}\",\n    \"id\": \"12345\",\n    \"language\": \"EN\",\n    \"legal_name\": \"SpaceX Inc.\",\n    \"phone_numbers\": [\n      {\n        \"area_code\": \"323\",\n        \"country_code\": \"1\",\n        \"extension\": \"105\",\n        \"id\": \"12345\",\n        \"number\": \"111-111-1111\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'work' 'office' 'mobile' 'assistant' 'fax' 'direct-dial-in' 'personal' 'other')}}\"\n      }\n    ],\n    \"row_version\": \"1-12345\",\n    \"sales_tax_enabled\": {{faker 'datatype.boolean'}},\n    \"sales_tax_number\": \"111.222.333\",\n    \"status\": \"{{oneOf (array 'active' 'inactive')}}\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"company-info\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "CompanyInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "02c5660a-49cd-42cc-8051-238f88ec3b79",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d459b71-f577-4814-8026-cddf6b74c6bb",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db6e645c-7ac3-408f-8038-36958d762234",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de1ea5d8-b74e-4a1b-bf40-fb2b52c30ad6",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c753e6ad-7a52-4c69-835f-c1bea9a6aaeb",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8905fd1d-7aac-4f08-9946-b48911c77c90",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba130daf-3210-4146-b7af-9cf28c1361e7",
      "documentation": "List Credit Notes",
      "method": "get",
      "endpoint": "accounting/credit-notes",
      "responses": [
        {
          "uuid": "461c95f7-609b-4e04-b0bd-6a7937b1a376",
          "body": "{\n  \"data\": [\n    {\n      \"allocations\": [\n        {\n          \"amount\": 49.99,\n          \"code\": \"N091\",\n          \"id\": \"123456\",\n          \"type\": \"{{oneOf (array 'invoice' 'order' 'expense' 'credit_memo' 'over_payment' 'pre_payment')}}\"\n        }\n      ],\n      \"balance\": 27500,\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"currency_rate\": 0.69,\n      \"customer\": {\n        \"company_name\": \"The boring company\",\n        \"display_id\": \"CUST00101\",\n        \"display_name\": \"Windsurf Shop\",\n        \"id\": \"12345\",\n        \"name\": \"Windsurf Shop\"\n      },\n      \"date_issued\": \"2021-05-01T12:00:00.000Z\",\n      \"date_paid\": \"2021-05-01T12:00:00.000Z\",\n      \"id\": \"123456\",\n      \"line_items\": [\n        {\n          \"code\": \"120-C\",\n          \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n          \"discount_percentage\": 0.01,\n          \"id\": \"12345\",\n          \"item\": {\n            \"code\": \"120-C\",\n            \"id\": \"12344\",\n            \"name\": \"Model Y\"\n          },\n          \"ledger_account\": {\n            \"code\": \"453\",\n            \"id\": \"123456\",\n            \"name\": \"Bank account\",\n            \"nominal_code\": \"N091\"\n          },\n          \"line_number\": 1,\n          \"quantity\": 1,\n          \"row_id\": \"12345\",\n          \"row_version\": \"1-12345\",\n          \"tax_amount\": 27500,\n          \"tax_rate\": {\n            \"code\": \"N-T\",\n            \"id\": \"123456\",\n            \"name\": \"GST on Purchases\"\n          },\n          \"total_amount\": 27500,\n          \"type\": \"{{oneOf (array 'sales_item' 'discount' 'info' 'sub_total')}}\",\n          \"unit_of_measure\": \"pc.\",\n          \"unit_price\": 27500.5\n        }\n      ],\n      \"note\": \"Some notes about this credit note\",\n      \"number\": \"OIT00546\",\n      \"reference\": \"123456\",\n      \"remaining_credit\": 27500,\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'draft' 'authorised' 'paid' 'voided' 'deleted')}}\",\n      \"sub_total\": 27500,\n      \"tax_code\": \"1234\",\n      \"tax_inclusive\": true,\n      \"total_amount\": 49.99,\n      \"total_tax\": 2500,\n      \"type\": \"{{oneOf (array 'accounts_receivable_credit' 'accounts_payable_credit')}}\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"credit-notes\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credit Notes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "817fdc4d-d7a9-4099-8910-f9d5be2ae40d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d95a7431-691c-4555-9f39-4fef58937c98",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b534043-d359-479b-849a-2673010c1cc5",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e46e0df-c179-4138-9095-694d7ffb51a0",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8b397c4-5bde-47d5-b3b5-28de2cd86e00",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c83a23d-2865-4f37-8f83-3f6c8af9d741",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d96003d-0177-48c2-b54f-556e6b1b789c",
      "documentation": "Create Credit Note",
      "method": "post",
      "endpoint": "accounting/credit-notes",
      "responses": [
        {
          "uuid": "daba1fdc-3995-48cb-acac-a009a13b4419",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"credit-notes\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Credit Note created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26d3df79-5e3d-4a4b-a6ba-50de378552c5",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea0247c2-0705-41e4-a319-88a616f3cc4e",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2413e00-7d33-405c-9664-bbfa10f3923f",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e9be6d2-925c-4142-bbb7-267990153082",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "993ca59b-97ef-486f-b7e4-850e5cf69033",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6f1d0cc-be96-4242-a739-5d57ed238c8e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1cdb3714-331a-4b87-b3fa-0ecf503a60ab",
      "documentation": "Delete Credit Note",
      "method": "delete",
      "endpoint": "accounting/credit-notes/:id",
      "responses": [
        {
          "uuid": "36009b4e-a809-4769-8626-c3a0400ac73d",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"credit-notes\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credit Note deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c874fee-7064-4075-8292-1d69923845cf",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68d8fd1d-6fef-4191-9a76-327bb70ef9e9",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdcfb5c4-89cc-4c40-b28e-f0e60d4b36a2",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26f31a25-1b04-4fd5-b9a8-cc18b6591ee0",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2cda8774-9ff5-4ef8-9e2f-d770ec85cd1c",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ac051f8-3607-42aa-82b1-b3109faacb0b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "edf0f5c0-01e8-4a04-9310-bc3dbe181d1e",
      "documentation": "Get Credit Note",
      "method": "get",
      "endpoint": "accounting/credit-notes/:id",
      "responses": [
        {
          "uuid": "951c455d-ef97-48b7-83e8-a6478d4a759d",
          "body": "{\n  \"data\": {\n    \"allocations\": [\n      {\n        \"amount\": 49.99,\n        \"code\": \"N091\",\n        \"id\": \"123456\",\n        \"type\": \"{{oneOf (array 'invoice' 'order' 'expense' 'credit_memo' 'over_payment' 'pre_payment')}}\"\n      }\n    ],\n    \"balance\": 27500,\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"currency_rate\": 0.69,\n    \"customer\": {\n      \"company_name\": \"The boring company\",\n      \"display_id\": \"CUST00101\",\n      \"display_name\": \"Windsurf Shop\",\n      \"id\": \"12345\",\n      \"name\": \"Windsurf Shop\"\n    },\n    \"date_issued\": \"2021-05-01T12:00:00.000Z\",\n    \"date_paid\": \"2021-05-01T12:00:00.000Z\",\n    \"id\": \"123456\",\n    \"line_items\": [\n      {\n        \"code\": \"120-C\",\n        \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n        \"discount_percentage\": 0.01,\n        \"id\": \"12345\",\n        \"item\": {\n          \"code\": \"120-C\",\n          \"id\": \"12344\",\n          \"name\": \"Model Y\"\n        },\n        \"ledger_account\": {\n          \"code\": \"453\",\n          \"id\": \"123456\",\n          \"name\": \"Bank account\",\n          \"nominal_code\": \"N091\"\n        },\n        \"line_number\": 1,\n        \"quantity\": 1,\n        \"row_id\": \"12345\",\n        \"row_version\": \"1-12345\",\n        \"tax_amount\": 27500,\n        \"tax_rate\": {\n          \"code\": \"N-T\",\n          \"id\": \"123456\",\n          \"name\": \"GST on Purchases\"\n        },\n        \"total_amount\": 27500,\n        \"type\": \"{{oneOf (array 'sales_item' 'discount' 'info' 'sub_total')}}\",\n        \"unit_of_measure\": \"pc.\",\n        \"unit_price\": 27500.5\n      }\n    ],\n    \"note\": \"Some notes about this credit note\",\n    \"number\": \"OIT00546\",\n    \"reference\": \"123456\",\n    \"remaining_credit\": 27500,\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'draft' 'authorised' 'paid' 'voided' 'deleted')}}\",\n    \"sub_total\": 27500,\n    \"tax_code\": \"1234\",\n    \"tax_inclusive\": true,\n    \"total_amount\": 49.99,\n    \"total_tax\": 2500,\n    \"type\": \"{{oneOf (array 'accounts_receivable_credit' 'accounts_payable_credit')}}\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"credit-notes\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credit Note",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fa51d5be-e990-42f1-b2c4-b93381db0022",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d6b2134-ec9a-4f07-adf5-c47035c8d7d3",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0228e17-fe87-4e4b-9164-addfc6410c75",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae91f752-d59d-49d5-9a0e-d0f0bad97efc",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e170fdb1-3ad1-43f2-ba39-7973c966b54e",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8def55d2-9f24-40da-ab83-f9613f3645ec",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed1dbd04-fa4a-44cd-a25f-7cd276ed6edc",
      "documentation": "Update Credit Note",
      "method": "patch",
      "endpoint": "accounting/credit-notes/:id",
      "responses": [
        {
          "uuid": "4af02ac0-6f32-477e-b87b-3d29f359c355",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"credit-notes\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credit Note updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9d165c1a-ec6b-450c-bee0-1437518c6de9",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd778994-e607-40e4-980b-9feb27928efc",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5616794-a739-4b58-ab89-7bf18a7706f3",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21483739-f7b8-4662-8869-88337fb40066",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5136202-7221-48e4-9456-113160f086d9",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d60115be-504a-44ca-b037-3f3ccf2ee341",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e56a7bcc-4ca7-4dfa-884b-a50b715b364f",
      "documentation": "List Customers",
      "method": "get",
      "endpoint": "accounting/customers",
      "responses": [
        {
          "uuid": "ec8d6b4b-afd5-4bec-96d8-434a493480ff",
          "body": "{\n  \"data\": [\n    {\n      \"addresses\": [\n        {\n          \"city\": \"San Francisco\",\n          \"contact_name\": \"Elon Musk\",\n          \"country\": \"US\",\n          \"county\": \"Santa Clara\",\n          \"email\": \"elon@musk.com\",\n          \"fax\": \"122-111-1111\",\n          \"id\": \"123\",\n          \"latitude\": \"40.759211\",\n          \"line1\": \"Main street\",\n          \"line2\": \"apt #\",\n          \"line3\": \"Suite #\",\n          \"line4\": \"delivery instructions\",\n          \"longitude\": \"-73.984638\",\n          \"name\": \"HQ US\",\n          \"phone_number\": \"111-111-1111\",\n          \"postal_code\": \"94104\",\n          \"row_version\": \"1-12345\",\n          \"salutation\": \"Mr\",\n          \"state\": \"CA\",\n          \"street_number\": \"25\",\n          \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n          \"website\": \"https://elonmusk.com\"\n        }\n      ],\n      \"bank_accounts\": [\n        {\n          \"account_name\": \"SPACEX LLC\",\n          \"account_number\": \"123465\",\n          \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n          \"bank_code\": \"BNH\",\n          \"bic\": \"AUDSCHGGXXX\",\n          \"branch_identifier\": \"001\",\n          \"bsb_number\": \"062-001\",\n          \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n          \"iban\": \"CH2989144532982975332\"\n        }\n      ],\n      \"company_name\": \"SpaceX\",\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"display_id\": \"EMP00101\",\n      \"display_name\": \"Windsurf Shop\",\n      \"emails\": [\n        {\n          \"email\": \"elon@musk.com\",\n          \"id\": \"123\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'billing' 'other')}}\"\n        }\n      ],\n      \"first_name\": \"Elon\",\n      \"id\": \"12345\",\n      \"individual\": true,\n      \"last_name\": \"Musk\",\n      \"middle_name\": \"D.\",\n      \"notes\": \"Some notes about this customer\",\n      \"phone_numbers\": [\n        {\n          \"area_code\": \"323\",\n          \"country_code\": \"1\",\n          \"extension\": \"105\",\n          \"id\": \"12345\",\n          \"number\": \"111-111-1111\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'work' 'office' 'mobile' 'assistant' 'fax' 'direct-dial-in' 'personal' 'other')}}\"\n        }\n      ],\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'active' 'inactive' 'archived' 'gdpr-erasure-request' 'unknown')}}\",\n      \"suffix\": \"Jr.\",\n      \"tax_number\": \"US123945459\",\n      \"tax_rate\": {\n        \"code\": \"N-T\",\n        \"id\": \"123456\",\n        \"name\": \"GST on Purchases\"\n      },\n      \"title\": \"CEO\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\",\n      \"websites\": [\n        {\n          \"id\": \"12345\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'other')}}\",\n          \"url\": \"http://example.com\"\n        }\n      ]\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"customers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Customers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1ec3942-fd80-4b49-bf7a-0426157b984d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae7e8e45-44fd-4571-ae1b-ac7acacdf739",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00ed4ff8-b088-4127-81d8-952f4371ad46",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7cafb26-c051-44f3-a1ee-bdc7d53eaea4",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e84afc72-2df4-4e98-ab54-0fa11265e7e2",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78970d00-3f0b-4740-a6c7-05dcc4740093",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59deeaf5-e645-419e-a431-a43e68551c02",
      "documentation": "Create Customer",
      "method": "post",
      "endpoint": "accounting/customers",
      "responses": [
        {
          "uuid": "3bc46649-ab4b-48e4-a746-fce7247baefc",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"customers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Customers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "071e2043-740b-4cdb-b80f-1e71a8dcd782",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "686789fd-9f10-4107-88d1-44afb15892b7",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0cee7017-aba0-454b-a19b-ba09c0a692bb",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db2fc19c-5906-4952-be56-07b63e5a2588",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a12eceae-ccf7-4013-93c8-5897646e5a93",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdaca144-e921-4fe2-80cc-be9755db46a4",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7e1e3f0-d944-41d6-ab3c-b2252da436b9",
      "documentation": "Delete Customer",
      "method": "delete",
      "endpoint": "accounting/customers/:id",
      "responses": [
        {
          "uuid": "5c0c6d3f-8f48-4199-a769-cf5d79f1d026",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"customers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Customers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "97a4488f-ceeb-4a52-aa9b-d35faf3bcb27",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5ed617e-26b6-4fcc-aa57-1c14927a83f8",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "860285ec-5229-44e0-baa7-f052502fff2a",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39a79152-d3ea-4971-8b14-bd008d13e563",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3901d21-e29b-43b2-9934-6171faf12932",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b1b2b99-3a3f-4ed8-94d7-62a321b343fc",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "674dcf5f-07b6-4a44-bfef-2aa1ee335ea2",
      "documentation": "Get Customer",
      "method": "get",
      "endpoint": "accounting/customers/:id",
      "responses": [
        {
          "uuid": "11647b2c-2ad2-4421-b143-9841572b9532",
          "body": "{\n  \"data\": {\n    \"addresses\": [\n      {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      }\n    ],\n    \"bank_accounts\": [\n      {\n        \"account_name\": \"SPACEX LLC\",\n        \"account_number\": \"123465\",\n        \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n        \"bank_code\": \"BNH\",\n        \"bic\": \"AUDSCHGGXXX\",\n        \"branch_identifier\": \"001\",\n        \"bsb_number\": \"062-001\",\n        \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n        \"iban\": \"CH2989144532982975332\"\n      }\n    ],\n    \"company_name\": \"SpaceX\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"display_id\": \"EMP00101\",\n    \"display_name\": \"Windsurf Shop\",\n    \"emails\": [\n      {\n        \"email\": \"elon@musk.com\",\n        \"id\": \"123\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'billing' 'other')}}\"\n      }\n    ],\n    \"first_name\": \"Elon\",\n    \"id\": \"12345\",\n    \"individual\": true,\n    \"last_name\": \"Musk\",\n    \"middle_name\": \"D.\",\n    \"notes\": \"Some notes about this customer\",\n    \"phone_numbers\": [\n      {\n        \"area_code\": \"323\",\n        \"country_code\": \"1\",\n        \"extension\": \"105\",\n        \"id\": \"12345\",\n        \"number\": \"111-111-1111\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'work' 'office' 'mobile' 'assistant' 'fax' 'direct-dial-in' 'personal' 'other')}}\"\n      }\n    ],\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'active' 'inactive' 'archived' 'gdpr-erasure-request' 'unknown')}}\",\n    \"suffix\": \"Jr.\",\n    \"tax_number\": \"US123945459\",\n    \"tax_rate\": {\n      \"code\": \"N-T\",\n      \"id\": \"123456\",\n      \"name\": \"GST on Purchases\"\n    },\n    \"title\": \"CEO\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\",\n    \"websites\": [\n      {\n        \"id\": \"12345\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'other')}}\",\n        \"url\": \"http://example.com\"\n      }\n    ]\n  },\n  \"operation\": \"one\",\n  \"resource\": \"customers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Customer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "32e410ef-2ee5-40ff-83ea-b126055305ff",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "940b2c04-3b7f-460d-8c9e-a1b3e17f3ed0",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "811df325-144d-498e-b818-e5a60ec338d5",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37f8a626-5cba-4fd5-b55b-24ee3d2b0177",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba5d51ad-774b-47c4-af2d-b8ae78143c8d",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a74a63e-e722-436c-af5d-f849164abd9d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2edfa848-7704-448e-82c4-9e3e3ddad35a",
      "documentation": "Update Customer",
      "method": "patch",
      "endpoint": "accounting/customers/:id",
      "responses": [
        {
          "uuid": "3c4f0557-fb39-4a3e-a60d-4cea21377111",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"customers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Customers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f9274383-4f4f-4c1d-b8f9-15f672fbe1f8",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04930f9a-d895-41db-8b92-0c1da6502ef4",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b006d274-ad06-425c-b63f-68379661ed13",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bda0a63-69a1-413f-b6b2-ae01e7751bac",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "182cdc67-c162-49bd-84f8-dc5cfaf6d274",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13bc4cb6-d2b4-4eb1-a1dc-082fd6f4cdf0",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "181181c2-16fb-472c-b92a-42a15fccb58c",
      "documentation": "List Invoice Items",
      "method": "get",
      "endpoint": "accounting/invoice-items",
      "responses": [
        {
          "uuid": "1e25cc83-383a-4e7d-aa2a-58f9fa381a2c",
          "body": "{\n  \"data\": [\n    {\n      \"active\": true,\n      \"asset_account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"code\": \"120-C\",\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n      \"expense_account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"id\": \"123456\",\n      \"income_account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"inventory_date\": \"2020-10-30\",\n      \"name\": \"Model Y\",\n      \"purchase_details\": {\n        \"tax_inclusive\": true,\n        \"tax_rate\": {\n          \"code\": \"N-T\",\n          \"id\": \"123456\",\n          \"name\": \"GST on Purchases\"\n        },\n        \"unit_of_measure\": \"pc.\",\n        \"unit_price\": 27500.5\n      },\n      \"purchased\": true,\n      \"quantity\": 1,\n      \"row_version\": \"1-12345\",\n      \"sales_details\": {\n        \"tax_inclusive\": true,\n        \"tax_rate\": {\n          \"code\": \"N-T\",\n          \"id\": \"123456\",\n          \"name\": \"GST on Purchases\"\n        },\n        \"unit_of_measure\": \"pc.\",\n        \"unit_price\": 27500.5\n      },\n      \"sold\": true,\n      \"tracked\": true,\n      \"type\": \"{{oneOf (array 'inventory' 'service' 'other')}}\",\n      \"unit_price\": 27500.5,\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"invoice-items\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "InvoiceItems",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8ca7e3c-ff65-4be3-bfd6-37ad50cbe759",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c2e9c11-9f5c-40e1-8e1d-2bd2cd84c2ec",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e41a9f8-99f1-47fe-9fe7-c15deaabf8f1",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8352a847-6a4b-4585-8364-43b5f4c8aaca",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70e943e0-3314-4351-8c2f-64c03149dd23",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1753d7d-bd49-48a2-b5eb-3ab61d7175e6",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a216361b-2749-497d-ba04-942144812921",
      "documentation": "Create Invoice Item",
      "method": "post",
      "endpoint": "accounting/invoice-items",
      "responses": [
        {
          "uuid": "f8b96f44-f27b-4606-b683-afa5bd042097",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"invoice-items\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "InvoiceItems",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56682ec6-6612-42d1-877d-ad273b67e9f7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17ecf6fa-6c68-49bd-abed-05b77782f3bb",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "340044d2-8542-4302-b7e6-5c562d4b5e6b",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef6561d6-0241-4647-acfe-3c850b51687e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "003172cc-6fbc-401e-99dc-6a9099c27a86",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d1d2de4-df03-43d2-b6ea-23fb0524e5c3",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6184928-8416-4964-ae48-df35b0c483c6",
      "documentation": "Delete Invoice Item",
      "method": "delete",
      "endpoint": "accounting/invoice-items/:id",
      "responses": [
        {
          "uuid": "403f8b69-beae-46bf-86a5-f5f56be4c6bd",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "InvoiceItems",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29864895-a6d7-4de9-8974-cf68bceb1904",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "605e5fcd-cca8-4dba-a555-97fae6cc4a70",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c72a053-5ea9-42c0-81fa-78c93b121aeb",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eac9868c-4fe1-4130-bbb0-21d4b104b4b6",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73e4f551-3a1a-4361-9208-50c64dba6d1d",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c82a84b6-4dc6-47c1-899b-b5078e524ca7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f43a9213-cd45-42f8-ab18-27ea9cc0e60e",
      "documentation": "Get Invoice Item",
      "method": "get",
      "endpoint": "accounting/invoice-items/:id",
      "responses": [
        {
          "uuid": "c7b03d2a-d857-48ed-985d-fea8d0fe81c0",
          "body": "{\n  \"data\": {\n    \"active\": true,\n    \"asset_account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"code\": \"120-C\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n    \"expense_account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"id\": \"123456\",\n    \"income_account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"inventory_date\": \"2020-10-30\",\n    \"name\": \"Model Y\",\n    \"purchase_details\": {\n      \"tax_inclusive\": true,\n      \"tax_rate\": {\n        \"code\": \"N-T\",\n        \"id\": \"123456\",\n        \"name\": \"GST on Purchases\"\n      },\n      \"unit_of_measure\": \"pc.\",\n      \"unit_price\": 27500.5\n    },\n    \"purchased\": true,\n    \"quantity\": 1,\n    \"row_version\": \"1-12345\",\n    \"sales_details\": {\n      \"tax_inclusive\": true,\n      \"tax_rate\": {\n        \"code\": \"N-T\",\n        \"id\": \"123456\",\n        \"name\": \"GST on Purchases\"\n      },\n      \"unit_of_measure\": \"pc.\",\n      \"unit_price\": 27500.5\n    },\n    \"sold\": true,\n    \"tracked\": true,\n    \"type\": \"{{oneOf (array 'inventory' 'service' 'other')}}\",\n    \"unit_price\": 27500.5,\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"invoice-items\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "InvoiceItems",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9fc02969-a13e-4676-b5de-6858785fc405",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99144f66-18f6-4dc3-a859-e6ff4265e34e",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b71b6c4a-1e2a-4500-8d9d-7ef687c15303",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de58e09d-780f-4b5e-87b3-ae7024206b18",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "908a5882-efd1-449f-9eef-4db0ba97bb3c",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e444c7b-7955-446a-a569-44820971427e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "abcaab55-3d2b-4547-a66e-14dd584b406a",
      "documentation": "Update Invoice Item",
      "method": "patch",
      "endpoint": "accounting/invoice-items/:id",
      "responses": [
        {
          "uuid": "e9e7101e-9c43-445a-a081-cc21afdc42b9",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"invoice-items\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "InvoiceItems",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "867bca3b-d042-4e08-973d-79f20905f761",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "075ffe2c-4a43-472b-a55e-f919f7cb9a37",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35892805-a6ac-40b1-9ce8-d86411866a27",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "878e4738-d245-4a07-bd9d-1c67794e297b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5b535a4-a6c1-412e-8bcd-4e6a789d809a",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9a49b48-a658-45c7-b3c4-e76528d675cd",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "21f376cd-1eb6-4f99-8591-c93ec4c45cbf",
      "documentation": "List Invoices",
      "method": "get",
      "endpoint": "accounting/invoices",
      "responses": [
        {
          "uuid": "c3e97ae2-fb2f-400a-98a6-2aa753bdc3b0",
          "body": "{\n  \"data\": [\n    {\n      \"balance\": 27500,\n      \"billing_address\": {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      },\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"currency_rate\": 0.69,\n      \"customer\": {\n        \"company_name\": \"The boring company\",\n        \"display_id\": \"CUST00101\",\n        \"display_name\": \"Windsurf Shop\",\n        \"id\": \"12345\",\n        \"name\": \"Windsurf Shop\"\n      },\n      \"customer_memo\": \"Thank you for your business and have a great day!\",\n      \"deposit\": {{faker 'datatype.number'}},\n      \"discount_percentage\": 5.5,\n      \"downstream_id\": \"12345\",\n      \"due_date\": \"2020-09-30\",\n      \"id\": \"12345\",\n      \"invoice_date\": \"2020-09-30\",\n      \"invoice_sent\": true,\n      \"line_items\": [\n        {\n          \"code\": \"120-C\",\n          \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n          \"discount_percentage\": 0.01,\n          \"id\": \"12345\",\n          \"item\": {\n            \"code\": \"120-C\",\n            \"id\": \"12344\",\n            \"name\": \"Model Y\"\n          },\n          \"ledger_account\": {\n            \"code\": \"453\",\n            \"id\": \"123456\",\n            \"name\": \"Bank account\",\n            \"nominal_code\": \"N091\"\n          },\n          \"line_number\": 1,\n          \"quantity\": 1,\n          \"row_id\": \"12345\",\n          \"row_version\": \"1-12345\",\n          \"tax_amount\": 27500,\n          \"tax_rate\": {\n            \"code\": \"N-T\",\n            \"id\": \"123456\",\n            \"name\": \"GST on Purchases\"\n          },\n          \"total_amount\": 27500,\n          \"type\": \"{{oneOf (array 'sales_item' 'discount' 'info' 'sub_total')}}\",\n          \"unit_of_measure\": \"pc.\",\n          \"unit_price\": 27500.5\n        }\n      ],\n      \"number\": \"OIT00546\",\n      \"po_number\": \"90000117\",\n      \"reference\": \"123456\",\n      \"row_version\": \"1-12345\",\n      \"shipping_address\": {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      },\n      \"source_document_url\": \"https://www.invoicesolution.com/invoice/123456\",\n      \"status\": \"{{oneOf (array 'draft' 'submitted' 'authorised' 'partially_paid' 'paid' 'void' 'credit' 'deleted')}}\",\n      \"sub_total\": 27500,\n      \"tax_code\": \"1234\",\n      \"tax_inclusive\": true,\n      \"template_id\": \"123456\",\n      \"terms\": \"Net 30 days\",\n      \"total\": 27500,\n      \"total_tax\": 2500,\n      \"type\": \"{{oneOf (array 'standard' 'credit' 'service' 'product' 'supplier' 'other')}}\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"invoices\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invoices",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18c6fbfe-bc2d-46b6-9953-5fbd27057039",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3af491b-47f2-4d25-8d96-574ec338773e",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f96516fe-ae2c-44c3-9926-2efa71bcee0b",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8637392b-f39c-4d4e-b3e1-592f618cd5de",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd97ffc5-710e-4b7a-ac2b-a6b4080d97ac",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17e967c5-5e3e-461e-b2e6-7071dc1ace1e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ec28d1e-9db6-41d0-bc0d-4f2e0d2dc6a5",
      "documentation": "Create Invoice",
      "method": "post",
      "endpoint": "accounting/invoices",
      "responses": [
        {
          "uuid": "88131091-5bf9-40c3-bccc-9e93210a85f8",
          "body": "{\n  \"data\": {\n    \"downstream_id\": \"12345\",\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"invoices\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Invoice created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26711475-d9d2-424a-9d58-4881bfe23c58",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76d5e673-6143-459c-9861-7fa188bafc91",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dac104b2-8d3e-4d62-9367-04e6d05135b1",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab5639f6-7c6a-44c8-b5a4-527ee2bf1fff",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "554ceb19-3326-4af2-8ec2-a69260e5b1f2",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "179ec62b-feb6-4a09-83c5-2598ef746ddc",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "258e9bf6-09de-4c0b-b753-dddaf8661eb9",
      "documentation": "Delete Invoice",
      "method": "delete",
      "endpoint": "accounting/invoices/:id",
      "responses": [
        {
          "uuid": "1d051eba-5508-44ac-b199-00341c9a7e76",
          "body": "{\n  \"data\": {\n    \"downstream_id\": \"12345\",\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"invoices\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invoice deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "427fedc2-9c06-4aba-b0c9-c39e823f8919",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a6b3a44-230c-4211-9841-3113df627da5",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b66cc6cd-2c5b-444f-b985-8803fad5c877",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1cae2cb-ebec-40e7-8531-cac6f7fa03da",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9d4e0a4-8443-4eda-8092-120f1a266b72",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c0a0f57-312f-47f3-9e98-361b632b372a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aca3fc2b-04e2-4d2f-badf-102a83b9906e",
      "documentation": "Get Invoice",
      "method": "get",
      "endpoint": "accounting/invoices/:id",
      "responses": [
        {
          "uuid": "9b30dee4-9a58-46e4-a8df-227dfa99a1c4",
          "body": "{\n  \"data\": {\n    \"balance\": 27500,\n    \"billing_address\": {\n      \"city\": \"San Francisco\",\n      \"contact_name\": \"Elon Musk\",\n      \"country\": \"US\",\n      \"county\": \"Santa Clara\",\n      \"email\": \"elon@musk.com\",\n      \"fax\": \"122-111-1111\",\n      \"id\": \"123\",\n      \"latitude\": \"40.759211\",\n      \"line1\": \"Main street\",\n      \"line2\": \"apt #\",\n      \"line3\": \"Suite #\",\n      \"line4\": \"delivery instructions\",\n      \"longitude\": \"-73.984638\",\n      \"name\": \"HQ US\",\n      \"phone_number\": \"111-111-1111\",\n      \"postal_code\": \"94104\",\n      \"row_version\": \"1-12345\",\n      \"salutation\": \"Mr\",\n      \"state\": \"CA\",\n      \"street_number\": \"25\",\n      \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n      \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n      \"website\": \"https://elonmusk.com\"\n    },\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"currency_rate\": 0.69,\n    \"customer\": {\n      \"company_name\": \"The boring company\",\n      \"display_id\": \"CUST00101\",\n      \"display_name\": \"Windsurf Shop\",\n      \"id\": \"12345\",\n      \"name\": \"Windsurf Shop\"\n    },\n    \"customer_memo\": \"Thank you for your business and have a great day!\",\n    \"deposit\": {{faker 'datatype.number'}},\n    \"discount_percentage\": 5.5,\n    \"downstream_id\": \"12345\",\n    \"due_date\": \"2020-09-30\",\n    \"id\": \"12345\",\n    \"invoice_date\": \"2020-09-30\",\n    \"invoice_sent\": true,\n    \"line_items\": [\n      {\n        \"code\": \"120-C\",\n        \"description\": \"Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\",\n        \"discount_percentage\": 0.01,\n        \"id\": \"12345\",\n        \"item\": {\n          \"code\": \"120-C\",\n          \"id\": \"12344\",\n          \"name\": \"Model Y\"\n        },\n        \"ledger_account\": {\n          \"code\": \"453\",\n          \"id\": \"123456\",\n          \"name\": \"Bank account\",\n          \"nominal_code\": \"N091\"\n        },\n        \"line_number\": 1,\n        \"quantity\": 1,\n        \"row_id\": \"12345\",\n        \"row_version\": \"1-12345\",\n        \"tax_amount\": 27500,\n        \"tax_rate\": {\n          \"code\": \"N-T\",\n          \"id\": \"123456\",\n          \"name\": \"GST on Purchases\"\n        },\n        \"total_amount\": 27500,\n        \"type\": \"{{oneOf (array 'sales_item' 'discount' 'info' 'sub_total')}}\",\n        \"unit_of_measure\": \"pc.\",\n        \"unit_price\": 27500.5\n      }\n    ],\n    \"number\": \"OIT00546\",\n    \"po_number\": \"90000117\",\n    \"reference\": \"123456\",\n    \"row_version\": \"1-12345\",\n    \"shipping_address\": {\n      \"city\": \"San Francisco\",\n      \"contact_name\": \"Elon Musk\",\n      \"country\": \"US\",\n      \"county\": \"Santa Clara\",\n      \"email\": \"elon@musk.com\",\n      \"fax\": \"122-111-1111\",\n      \"id\": \"123\",\n      \"latitude\": \"40.759211\",\n      \"line1\": \"Main street\",\n      \"line2\": \"apt #\",\n      \"line3\": \"Suite #\",\n      \"line4\": \"delivery instructions\",\n      \"longitude\": \"-73.984638\",\n      \"name\": \"HQ US\",\n      \"phone_number\": \"111-111-1111\",\n      \"postal_code\": \"94104\",\n      \"row_version\": \"1-12345\",\n      \"salutation\": \"Mr\",\n      \"state\": \"CA\",\n      \"street_number\": \"25\",\n      \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n      \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n      \"website\": \"https://elonmusk.com\"\n    },\n    \"source_document_url\": \"https://www.invoicesolution.com/invoice/123456\",\n    \"status\": \"{{oneOf (array 'draft' 'submitted' 'authorised' 'partially_paid' 'paid' 'void' 'credit' 'deleted')}}\",\n    \"sub_total\": 27500,\n    \"tax_code\": \"1234\",\n    \"tax_inclusive\": true,\n    \"template_id\": \"123456\",\n    \"terms\": \"Net 30 days\",\n    \"total\": 27500,\n    \"total_tax\": 2500,\n    \"type\": \"{{oneOf (array 'standard' 'credit' 'service' 'product' 'supplier' 'other')}}\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"invoices\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invoice",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45244b95-43ec-4d8f-a342-478bb09bdd4b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "285629f5-79e7-4b90-9c44-b7b7023af912",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6dd7fe56-ca74-44d5-9ae2-e68652ba2984",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1154fdde-6c0e-4c8d-a877-b2638b59509d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2eaaadd7-169d-496c-9727-c8e655b011a1",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "37fbe259-623e-4ed3-b029-69033d096d57",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e6acd61-b37a-4971-9d82-9f4eaae444cf",
      "documentation": "Update Invoice",
      "method": "patch",
      "endpoint": "accounting/invoices/:id",
      "responses": [
        {
          "uuid": "b49548fe-336f-4d96-812e-8483e0b53e03",
          "body": "{\n  \"data\": {\n    \"downstream_id\": \"12345\",\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"invoices\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invoice updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "774d3571-f7ee-4bad-93f7-f7ac40da047a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b3811db-98ea-47f5-ac40-49f78055fa96",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9814a2d9-0675-4601-ad5f-5ba2c911bbf6",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38c6a8ca-5131-4312-97dd-53012d2d1c2f",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb50c206-371b-4a2e-8e5b-bd010509d8e7",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6359f7b-af74-45ae-a2d0-1898f6939244",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bce56975-e8e7-4fbe-9405-1121701830bb",
      "documentation": "List Ledger Accounts",
      "method": "get",
      "endpoint": "accounting/ledger-accounts",
      "responses": [
        {
          "uuid": "7f9ee276-5841-4240-b428-f102840f24ab",
          "body": "{\n  \"data\": [\n    {\n      \"active\": true,\n      \"bank_account\": {\n        \"account_name\": \"SPACEX LLC\",\n        \"account_number\": \"123465\",\n        \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n        \"bank_code\": \"BNH\",\n        \"bic\": \"AUDSCHGGXXX\",\n        \"branch_identifier\": \"001\",\n        \"bsb_number\": \"062-001\",\n        \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n        \"iban\": \"CH2989144532982975332\"\n      },\n      \"categories\": [\n        {\n          \"id\": \"12345\",\n          \"name\": \"Finance Charges Expense\"\n        }\n      ],\n      \"classification\": \"{{oneOf (array 'asset' 'equity' 'expense' 'liability' 'revenue' 'income' 'other_income' 'other_expense' 'costs_of_sales')}}\",\n      \"code\": \"453\",\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"current_balance\": 20000,\n      \"description\": \"Main checking account\",\n      \"display_id\": \"1-12345\",\n      \"fully_qualified_name\": \"Asset.Bank.Checking_Account\",\n      \"header\": true,\n      \"id\": \"12345\",\n      \"last_reconciliation_date\": \"2020-09-30\",\n      \"level\": 1,\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\",\n      \"opening_balance\": 75000,\n      \"parent_account\": {\n        \"display_id\": \"1-1100\",\n        \"id\": \"12345\",\n        \"name\": \"Bank Accounts\"\n      },\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'active' 'inactive' 'archived')}}\",\n      \"sub_account\": {{faker 'datatype.boolean'}},\n      \"sub_accounts\": [\n        {\n          \"account_sub_name\": \"Petty Cash\",\n          \"id\": \"12345\"\n        }\n      ],\n      \"sub_type\": \"CHECKING_ACCOUNT\",\n      \"tax_rate\": {\n        \"code\": \"N-T\",\n        \"id\": \"123456\",\n        \"name\": \"GST on Purchases\"\n      },\n      \"tax_type\": \"NONE\",\n      \"type\": \"{{oneOf (array 'accounts_receivable' 'revenue' 'sales' 'other_income' 'bank' 'current_asset' 'fixed_asset' 'non_current_asset' 'other_asset' 'balancesheet' 'equity' 'expense' 'other_expense' 'costs_of_sales' 'accounts_payable' 'credit_card' 'current_liability' 'non_current_liability' 'other_liability')}}\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"ledger-accounts\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "LedgerAccounts",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae31b791-3e08-4a79-822c-e913d7f88f1a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0198b0c7-81dd-45fd-aaf2-dacf69f4ecef",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f1b8a24-0ee5-40b8-88a9-8522754d87a8",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "671b99ed-b0c6-446f-8595-e2bfebdcc956",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07c0cb10-46ba-42b9-802f-e58e5d4c166f",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a4a2bf3-0dae-4cf4-8dbc-cd1429659a74",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ead5977-1b3f-4fb8-b342-05473062064f",
      "documentation": "Create Ledger Account",
      "method": "post",
      "endpoint": "accounting/ledger-accounts",
      "responses": [
        {
          "uuid": "1905ed77-94e4-416c-ab15-f370c1c410f5",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"ledger-accounts\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "LedgerAccount created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e45a6c8c-39f4-4d0f-a518-c4d69f7226ed",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8138f699-e4ef-4916-bf55-1100144054be",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dc7fbf8c-e8d4-494c-ab48-e366b57ffa8d",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32b90e3a-52cd-496a-8d52-dde2f82e326e",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "213a0cd0-adcb-4322-afff-d3bcc3713d9d",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef742123-9679-4c8a-906b-8fcbc4d00b87",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f8418e0-04b0-43f4-9928-4e3046b45909",
      "documentation": "Delete Ledger Account",
      "method": "delete",
      "endpoint": "accounting/ledger-accounts/:id",
      "responses": [
        {
          "uuid": "2202bd0b-550d-46ae-92fd-1b22b5b18169",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"ledger-accounts\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "LedgerAccount deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "882443b5-af1f-4ced-84ff-913f857b1a79",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "174a18d9-c126-472b-9193-0794d7b32d60",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01dbc742-1569-4fb0-9f44-70ad913bf661",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c1d734b-fe58-4ea7-add0-fdea007b7919",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "037164cf-16b9-42e9-8a30-ceec2ecabeae",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa6dc538-8a96-47dc-aaa0-1950d4734793",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6119fda8-fd9f-45ec-a9d5-7d322a656dd0",
      "documentation": "Get Ledger Account",
      "method": "get",
      "endpoint": "accounting/ledger-accounts/:id",
      "responses": [
        {
          "uuid": "3097f3df-51f2-4203-8924-216a7a532876",
          "body": "{\n  \"data\": {\n    \"active\": true,\n    \"bank_account\": {\n      \"account_name\": \"SPACEX LLC\",\n      \"account_number\": \"123465\",\n      \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n      \"bank_code\": \"BNH\",\n      \"bic\": \"AUDSCHGGXXX\",\n      \"branch_identifier\": \"001\",\n      \"bsb_number\": \"062-001\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"iban\": \"CH2989144532982975332\"\n    },\n    \"categories\": [\n      {\n        \"id\": \"12345\",\n        \"name\": \"Finance Charges Expense\"\n      }\n    ],\n    \"classification\": \"{{oneOf (array 'asset' 'equity' 'expense' 'liability' 'revenue' 'income' 'other_income' 'other_expense' 'costs_of_sales')}}\",\n    \"code\": \"453\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"current_balance\": 20000,\n    \"description\": \"Main checking account\",\n    \"display_id\": \"1-12345\",\n    \"fully_qualified_name\": \"Asset.Bank.Checking_Account\",\n    \"header\": true,\n    \"id\": \"12345\",\n    \"last_reconciliation_date\": \"2020-09-30\",\n    \"level\": 1,\n    \"name\": \"Bank account\",\n    \"nominal_code\": \"N091\",\n    \"opening_balance\": 75000,\n    \"parent_account\": {\n      \"display_id\": \"1-1100\",\n      \"id\": \"12345\",\n      \"name\": \"Bank Accounts\"\n    },\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'active' 'inactive' 'archived')}}\",\n    \"sub_account\": {{faker 'datatype.boolean'}},\n    \"sub_accounts\": [\n      {\n        \"account_sub_name\": \"Petty Cash\",\n        \"id\": \"12345\"\n      }\n    ],\n    \"sub_type\": \"CHECKING_ACCOUNT\",\n    \"tax_rate\": {\n      \"code\": \"N-T\",\n      \"id\": \"123456\",\n      \"name\": \"GST on Purchases\"\n    },\n    \"tax_type\": \"NONE\",\n    \"type\": \"{{oneOf (array 'accounts_receivable' 'revenue' 'sales' 'other_income' 'bank' 'current_asset' 'fixed_asset' 'non_current_asset' 'other_asset' 'balancesheet' 'equity' 'expense' 'other_expense' 'costs_of_sales' 'accounts_payable' 'credit_card' 'current_liability' 'non_current_liability' 'other_liability')}}\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"ledger-accounts\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "LedgerAccount",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2ebc8f10-7d9c-42c6-98cb-cb9be3fc105a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4bd1b9b-d9e3-4117-a5ed-57841d9e9eb4",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9360494f-5278-4bc5-867b-a7198da4deb8",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce9ec24e-927e-408b-87fa-974e952a95c1",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b618de3f-f9fc-4458-b6a8-1e50ea346b89",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ae180a7-20d3-44da-8556-902d3008e230",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32e1ea35-e458-4ae8-bd99-3aba501c58a6",
      "documentation": "Update Ledger Account",
      "method": "patch",
      "endpoint": "accounting/ledger-accounts/:id",
      "responses": [
        {
          "uuid": "a40d4fcd-bc68-4db2-a6fb-3eba971d93cd",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"ledger-accounts\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "LedgerAccount updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15268b9c-88bc-4592-ada5-33724810a0b2",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00af8db5-7208-41d5-b851-5b67a561052a",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edee2dbd-4810-4291-956e-061145887b96",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65618a19-1c63-467c-b1ae-1980ad911883",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c05f33e-05c1-480e-bd4e-b23b43f4cdc7",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba354c2e-00fd-4923-bae9-e1606c563126",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c095c53d-6f8f-4454-a634-6afdab869193",
      "documentation": "List Payments",
      "method": "get",
      "endpoint": "accounting/payments",
      "responses": [
        {
          "uuid": "404c1617-295f-4989-aea7-2fd846624a2b",
          "body": "{\n  \"data\": [\n    {\n      \"account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"accounts_receivable_account_id\": \"123456\",\n      \"accounts_receivable_account_type\": \"Account\",\n      \"allocations\": [\n        {\n          \"amount\": 49.99,\n          \"code\": \"N091\",\n          \"id\": \"123456\",\n          \"type\": \"{{oneOf (array 'invoice' 'order' 'expense' 'credit_memo' 'over_payment' 'pre_payment')}}\"\n        }\n      ],\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"currency_rate\": 0.69,\n      \"customer\": {\n        \"company_name\": \"The boring company\",\n        \"display_id\": \"CUST00101\",\n        \"display_name\": \"Windsurf Shop\",\n        \"id\": \"12345\",\n        \"name\": \"Windsurf Shop\"\n      },\n      \"display_id\": \"123456\",\n      \"id\": \"123456\",\n      \"note\": \"Some notes about this payment\",\n      \"payment_method\": \"Credit Card\",\n      \"payment_method_reference\": \"123456\",\n      \"reconciled\": true,\n      \"reference\": \"123456\",\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'authorised' 'paid' 'voided' 'deleted')}}\",\n      \"total_amount\": 49.99,\n      \"transaction_date\": \"2021-05-01T12:00:00.000Z\",\n      \"type\": \"{{oneOf (array 'accounts_receivable' 'accounts_payable' 'accounts_receivable_credit' 'accounts_payable_credit' 'accounts_receivable_overpayment' 'accounts_payable_overpayment' 'accounts_receivable_prepayment' 'accounts_payable_prepayment')}}\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payments",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2048b3f2-c10c-4275-8282-805d1e7e7ad3",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bb6c95f-401a-4d4f-b716-9f1bf941e59a",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fb9ba16-a1c0-43a5-add6-38d79425091c",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "803e7eee-a545-42be-85a4-e532f7fe49d5",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "545a3652-70e2-49c0-93ac-a0e02d6adc7d",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57de660d-f23f-4286-91c0-d0d3874c8ecd",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c780ebe-d039-4a02-9c40-64614c6444eb",
      "documentation": "Create Payment",
      "method": "post",
      "endpoint": "accounting/payments",
      "responses": [
        {
          "uuid": "f594277d-4918-4399-8836-430c7b096adc",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Payment created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61d0a60b-71c2-4ebb-913f-a972c01b4040",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "334a9962-db64-4b95-8cf5-527b3c78128a",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c26d869d-f0d0-4177-9a9c-6f7ddea0e9be",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e54fde6-faac-4ca4-b508-7378a3a95ea7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6867a47d-7ddc-4195-8ffd-8e22ca66b638",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56e6331c-872a-4223-a0b6-64b4f6bf6c09",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfd6420c-0e0b-4cd3-818e-be46d245ad3a",
      "documentation": "Delete Payment",
      "method": "delete",
      "endpoint": "accounting/payments/:id",
      "responses": [
        {
          "uuid": "7ea4a360-5bf1-4e3d-85e5-8c6d51a39055",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payment deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ddb53d17-167f-44a2-bb53-277af3eec991",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "000ec95c-4a0f-4b55-8e36-2aa14c2f8777",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e1a5b8f-0a9f-4366-bf17-26c93c261a17",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f48de1a6-5da0-43ed-8503-361fefb78e81",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2469708b-b031-4c89-825e-ca8156c555b7",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b68ae057-4ff1-436d-8a64-e76925cdf7e7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "55de33f7-8ebd-4bf4-a904-2d66897d4c3d",
      "documentation": "Get Payment",
      "method": "get",
      "endpoint": "accounting/payments/:id",
      "responses": [
        {
          "uuid": "35054051-3927-4207-9a48-64033bf3781a",
          "body": "{\n  \"data\": {\n    \"account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"accounts_receivable_account_id\": \"123456\",\n    \"accounts_receivable_account_type\": \"Account\",\n    \"allocations\": [\n      {\n        \"amount\": 49.99,\n        \"code\": \"N091\",\n        \"id\": \"123456\",\n        \"type\": \"{{oneOf (array 'invoice' 'order' 'expense' 'credit_memo' 'over_payment' 'pre_payment')}}\"\n      }\n    ],\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"currency_rate\": 0.69,\n    \"customer\": {\n      \"company_name\": \"The boring company\",\n      \"display_id\": \"CUST00101\",\n      \"display_name\": \"Windsurf Shop\",\n      \"id\": \"12345\",\n      \"name\": \"Windsurf Shop\"\n    },\n    \"display_id\": \"123456\",\n    \"id\": \"123456\",\n    \"note\": \"Some notes about this payment\",\n    \"payment_method\": \"Credit Card\",\n    \"payment_method_reference\": \"123456\",\n    \"reconciled\": true,\n    \"reference\": \"123456\",\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'authorised' 'paid' 'voided' 'deleted')}}\",\n    \"total_amount\": 49.99,\n    \"transaction_date\": \"2021-05-01T12:00:00.000Z\",\n    \"type\": \"{{oneOf (array 'accounts_receivable' 'accounts_payable' 'accounts_receivable_credit' 'accounts_payable_credit' 'accounts_receivable_overpayment' 'accounts_payable_overpayment' 'accounts_receivable_prepayment' 'accounts_payable_prepayment')}}\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91f32058-3d2f-433c-819d-deb60c24b876",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66fd1667-b175-4f7e-89bf-3c49705c9e03",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e07f7c39-9235-4563-8866-4a18191605fe",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ef4d298-35dc-477b-b26f-c22022839db2",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebc5dbde-8610-4d45-8001-22f951b23fd0",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f2537cb-2196-4ade-8309-f9d98aa78a26",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e4077b3-35ec-4257-8bae-3d4510ae1873",
      "documentation": "Update Payment",
      "method": "patch",
      "endpoint": "accounting/payments/:id",
      "responses": [
        {
          "uuid": "e0489817-7e4d-4e1b-aed3-221f73cc50d1",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payment Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9296a832-e5a1-4626-a477-23f864796c14",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9063107c-16d6-43bb-843c-5cab0f303406",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05e34c8e-28b4-4056-bd34-123e3c0143aa",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9efe8bf-7ab9-4839-bcc1-730de156c8b7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f84b142d-460b-4a0a-a911-47247870e4f0",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1355b3b7-27fc-4dfd-bfd0-72bd15cd0b02",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e3e2c55-4307-4985-8469-63fedf32da43",
      "documentation": "Get Profit and Loss",
      "method": "get",
      "endpoint": "accounting/profit-and-loss",
      "responses": [
        {
          "uuid": "8a1cd20c-0a9f-431d-a853-45e4397fe117",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ecab5b1-f812-4295-95e8-cbd05da3e967",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0dddaa9-c09d-4b95-92fd-f4506f63786d",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd8a0620-5f8f-4450-b163-11a411b54652",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "359928fc-7ba1-4ab2-8c84-2359a919d58b",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2af47327-f482-4fd8-bb7d-7337f15b16db",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9b9ec3f-c7a9-48e3-a22a-3616129aafbb",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1388024-40b1-4171-a05f-1ca83bacb27d",
      "documentation": "List Suppliers",
      "method": "get",
      "endpoint": "accounting/suppliers",
      "responses": [
        {
          "uuid": "a10336e7-f591-45c4-a7fc-ea56548196c5",
          "body": "{\n  \"data\": [\n    {\n      \"account\": {\n        \"code\": \"453\",\n        \"id\": \"123456\",\n        \"name\": \"Bank account\",\n        \"nominal_code\": \"N091\"\n      },\n      \"addresses\": [\n        {\n          \"city\": \"San Francisco\",\n          \"contact_name\": \"Elon Musk\",\n          \"country\": \"US\",\n          \"county\": \"Santa Clara\",\n          \"email\": \"elon@musk.com\",\n          \"fax\": \"122-111-1111\",\n          \"id\": \"123\",\n          \"latitude\": \"40.759211\",\n          \"line1\": \"Main street\",\n          \"line2\": \"apt #\",\n          \"line3\": \"Suite #\",\n          \"line4\": \"delivery instructions\",\n          \"longitude\": \"-73.984638\",\n          \"name\": \"HQ US\",\n          \"phone_number\": \"111-111-1111\",\n          \"postal_code\": \"94104\",\n          \"row_version\": \"1-12345\",\n          \"salutation\": \"Mr\",\n          \"state\": \"CA\",\n          \"street_number\": \"25\",\n          \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n          \"website\": \"https://elonmusk.com\"\n        }\n      ],\n      \"bank_accounts\": [\n        {\n          \"account_name\": \"SPACEX LLC\",\n          \"account_number\": \"123465\",\n          \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n          \"bank_code\": \"BNH\",\n          \"bic\": \"AUDSCHGGXXX\",\n          \"branch_identifier\": \"001\",\n          \"bsb_number\": \"062-001\",\n          \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n          \"iban\": \"CH2989144532982975332\"\n        }\n      ],\n      \"company_name\": \"SpaceX\",\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n      \"display_name\": \"Windsurf Shop\",\n      \"downstream_id\": \"12345\",\n      \"emails\": [\n        {\n          \"email\": \"elon@musk.com\",\n          \"id\": \"123\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'billing' 'other')}}\"\n        }\n      ],\n      \"first_name\": \"Elon\",\n      \"id\": \"12345\",\n      \"last_name\": \"Musk\",\n      \"middle_name\": \"D.\",\n      \"notes\": \"Some notes about this supplier\",\n      \"phone_numbers\": [\n        {\n          \"area_code\": \"323\",\n          \"country_code\": \"1\",\n          \"extension\": \"105\",\n          \"id\": \"12345\",\n          \"number\": \"111-111-1111\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'work' 'office' 'mobile' 'assistant' 'fax' 'direct-dial-in' 'personal' 'other')}}\"\n        }\n      ],\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'active' 'inactive' 'archived' 'gdpr-erasure-request' 'unknown')}}\",\n      \"suffix\": \"Jr.\",\n      \"tax_number\": \"US123945459\",\n      \"tax_rate\": {\n        \"code\": \"N-T\",\n        \"id\": \"123456\",\n        \"name\": \"GST on Purchases\"\n      },\n      \"title\": \"CEO\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\",\n      \"websites\": [\n        {\n          \"id\": \"12345\",\n          \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'other')}}\",\n          \"url\": \"http://example.com\"\n        }\n      ]\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"suppliers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Suppliers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e91f32ff-c6e7-4760-a364-9c9768777b7f",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6bcccd34-3f90-4b49-95dd-81a51b26eeb7",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9ff7441-71a0-4cdd-9b3c-53188b1aad17",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c48bc3c-57e9-4f71-a7e8-614eb53a11ee",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39ac4d10-2efe-45af-bdb9-4ca5ae61f4fa",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f0fe878-0ea0-433d-9327-72f8342ca5e4",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7257115c-fccf-4d13-9a10-7d58d6c3ba65",
      "documentation": "Create Supplier",
      "method": "post",
      "endpoint": "accounting/suppliers",
      "responses": [
        {
          "uuid": "840aff02-dd93-497d-81f9-bdd8d1383e2a",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"payments\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Supplier created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "be4f6796-a9eb-4220-b105-a3c4a91c23e1",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a650a72a-37a6-41c2-a5fa-1c3c5c38cd14",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df555c80-e5e8-44a9-a741-a7ca8a8eccc5",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f056d2da-d880-4635-99fe-c1d90abb8ba8",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebef3f9e-2107-47af-977a-1913e4eaba15",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69130fbf-f4cf-416c-8635-29fea60168b5",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b68832b3-b8b0-4a6d-828b-640f4dd77a4b",
      "documentation": "Delete Supplier",
      "method": "delete",
      "endpoint": "accounting/suppliers/:id",
      "responses": [
        {
          "uuid": "d3dc670f-c63f-41f4-b7aa-878fb3a5cdfc",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"suppliers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Supplier deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "30dc8294-2dbf-4632-a1d6-4047ecc8f6a5",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b64dc3ef-6596-4c13-a576-917242c94eec",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "062723bd-1c37-4388-92c3-55d3ebf4f2dd",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0e89c3e-7191-4039-8349-829e61ca8dbc",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "190f902a-2530-485b-9b0f-0b542d179672",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0be8c68e-b9fd-403b-a00c-e9a3a706f800",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "505965da-9fd6-4753-9f3c-c11d8109bad3",
      "documentation": "Get Supplier",
      "method": "get",
      "endpoint": "accounting/suppliers/:id",
      "responses": [
        {
          "uuid": "900c2825-e841-4894-9cf3-5271c0725e6b",
          "body": "{\n  \"data\": {\n    \"account\": {\n      \"code\": \"453\",\n      \"id\": \"123456\",\n      \"name\": \"Bank account\",\n      \"nominal_code\": \"N091\"\n    },\n    \"addresses\": [\n      {\n        \"city\": \"San Francisco\",\n        \"contact_name\": \"Elon Musk\",\n        \"country\": \"US\",\n        \"county\": \"Santa Clara\",\n        \"email\": \"elon@musk.com\",\n        \"fax\": \"122-111-1111\",\n        \"id\": \"123\",\n        \"latitude\": \"40.759211\",\n        \"line1\": \"Main street\",\n        \"line2\": \"apt #\",\n        \"line3\": \"Suite #\",\n        \"line4\": \"delivery instructions\",\n        \"longitude\": \"-73.984638\",\n        \"name\": \"HQ US\",\n        \"phone_number\": \"111-111-1111\",\n        \"postal_code\": \"94104\",\n        \"row_version\": \"1-12345\",\n        \"salutation\": \"Mr\",\n        \"state\": \"CA\",\n        \"street_number\": \"25\",\n        \"string\": \"25 Spring Street, Blackburn, VIC 3130\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'office' 'shipping' 'billing' 'other')}}\",\n        \"website\": \"https://elonmusk.com\"\n      }\n    ],\n    \"bank_accounts\": [\n      {\n        \"account_name\": \"SPACEX LLC\",\n        \"account_number\": \"123465\",\n        \"account_type\": \"{{oneOf (array 'bank_account' 'credit_card' 'other')}}\",\n        \"bank_code\": \"BNH\",\n        \"bic\": \"AUDSCHGGXXX\",\n        \"branch_identifier\": \"001\",\n        \"bsb_number\": \"062-001\",\n        \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n        \"iban\": \"CH2989144532982975332\"\n      }\n    ],\n    \"company_name\": \"SpaceX\",\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"currency\": \"{{oneOf (array 'UNKNOWN_CURRENCY' 'AED' 'AFN' 'ALL' 'AMD' 'ANG' 'AOA' 'ARS' 'AUD' 'AWG' 'AZN' 'BAM' 'BBD' 'BDT' 'BGN' 'BHD' 'BIF' 'BMD' 'BND' 'BOB' 'BOV' 'BRL' 'BSD' 'BTN' 'BWP' 'BYR' 'BZD' 'CAD' 'CDF' 'CHE' 'CHF' 'CHW' 'CLF' 'CLP' 'CNY' 'COP' 'COU' 'CRC' 'CUC' 'CUP' 'CVE' 'CZK' 'DJF' 'DKK' 'DOP' 'DZD' 'EGP' 'ERN' 'ETB' 'EUR' 'FJD' 'FKP' 'GBP' 'GEL' 'GHS' 'GIP' 'GMD' 'GNF' 'GTQ' 'GYD' 'HKD' 'HNL' 'HRK' 'HTG' 'HUF' 'IDR' 'ILS' 'INR' 'IQD' 'IRR' 'ISK' 'JMD' 'JOD' 'JPY' 'KES' 'KGS' 'KHR' 'KMF' 'KPW' 'KRW' 'KWD' 'KYD' 'KZT' 'LAK' 'LBP' 'LKR' 'LRD' 'LSL' 'LTL' 'LVL' 'LYD' 'MAD' 'MDL' 'MGA' 'MKD' 'MMK' 'MNT' 'MOP' 'MRO' 'MUR' 'MVR' 'MWK' 'MXN' 'MXV' 'MYR' 'MZN' 'NAD' 'NGN' 'NIO' 'NOK' 'NPR' 'NZD' 'OMR' 'PAB' 'PEN' 'PGK' 'PHP' 'PKR' 'PLN' 'PYG' 'QAR' 'RON' 'RSD' 'RUB' 'RWF' 'SAR' 'SBD' 'SCR' 'SDG' 'SEK' 'SGD' 'SHP' 'SLL' 'SOS' 'SRD' 'SSP' 'STD' 'SVC' 'SYP' 'SZL' 'THB' 'TJS' 'TMT' 'TND' 'TOP' 'TRC' 'TRY' 'TTD' 'TWD' 'TZS' 'UAH' 'UGX' 'USD' 'USN' 'USS' 'UYI' 'UYU' 'UZS' 'VEF' 'VND' 'VUV' 'WST' 'XAF' 'XAG' 'XAU' 'XBA' 'XBB' 'XBC' 'XBD' 'XCD' 'XDR' 'XOF' 'XPD' 'XPF' 'XPT' 'XTS' 'XXX' 'YER' 'ZAR' 'ZMK' 'ZMW' 'BTC')}}\",\n    \"display_name\": \"Windsurf Shop\",\n    \"downstream_id\": \"12345\",\n    \"emails\": [\n      {\n        \"email\": \"elon@musk.com\",\n        \"id\": \"123\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'billing' 'other')}}\"\n      }\n    ],\n    \"first_name\": \"Elon\",\n    \"id\": \"12345\",\n    \"last_name\": \"Musk\",\n    \"middle_name\": \"D.\",\n    \"notes\": \"Some notes about this supplier\",\n    \"phone_numbers\": [\n      {\n        \"area_code\": \"323\",\n        \"country_code\": \"1\",\n        \"extension\": \"105\",\n        \"id\": \"12345\",\n        \"number\": \"111-111-1111\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'home' 'work' 'office' 'mobile' 'assistant' 'fax' 'direct-dial-in' 'personal' 'other')}}\"\n      }\n    ],\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'active' 'inactive' 'archived' 'gdpr-erasure-request' 'unknown')}}\",\n    \"suffix\": \"Jr.\",\n    \"tax_number\": \"US123945459\",\n    \"tax_rate\": {\n      \"code\": \"N-T\",\n      \"id\": \"123456\",\n      \"name\": \"GST on Purchases\"\n    },\n    \"title\": \"CEO\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\",\n    \"websites\": [\n      {\n        \"id\": \"12345\",\n        \"type\": \"{{oneOf (array 'primary' 'secondary' 'work' 'personal' 'other')}}\",\n        \"url\": \"http://example.com\"\n      }\n    ]\n  },\n  \"operation\": \"one\",\n  \"resource\": \"suppliers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Supplier",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "37526cbb-6703-4439-9511-4b3741d88682",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5ac88f7-9c7c-4211-a477-5b87ce16ff60",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c349cb47-9286-4743-a1b1-1d15ccd98c41",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2108cf8-a657-43b3-b703-74817d88e724",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "658f3fdd-0b2e-450c-8c81-252cfef5f141",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c905a8a7-e978-4b44-ba56-457f0cd9bad9",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b85cff4e-fcdc-446e-8630-5090f21f94cb",
      "documentation": "Update Supplier",
      "method": "patch",
      "endpoint": "accounting/suppliers/:id",
      "responses": [
        {
          "uuid": "3ad4d60d-da4f-42bf-a28d-f3ab84ab60bf",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"suppliers\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Supplier updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a4d23fe2-fe10-482e-a468-40e9a1a6882a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e5feb40-bad4-4fb4-beb2-543a6270d549",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbcd834a-a4a2-4e88-a89c-3983b4223a41",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2e3eca8-e93c-4e36-971f-2b7224506166",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e39d066c-4a8c-435b-87ca-753a20023e6f",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54a63a7a-5039-4790-8a43-cd594053d025",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "220239ad-4990-4090-a8c3-fcac704c5d8b",
      "documentation": "List Tax Rates",
      "method": "get",
      "endpoint": "accounting/tax-rates",
      "responses": [
        {
          "uuid": "04c4e8f3-a31e-418a-a7d5-fed8a90ac5c7",
          "body": "{\n  \"data\": [\n    {\n      \"code\": \"ABN\",\n      \"components\": [\n        {\n          \"compound\": true,\n          \"id\": \"10\",\n          \"name\": \"GST\",\n          \"rate\": 10\n        }\n      ],\n      \"created_at\": \"2020-09-30T07:43:32.000Z\",\n      \"created_by\": \"12345\",\n      \"description\": \"Reduced rate GST Purchases\",\n      \"effective_tax_rate\": 10,\n      \"id\": \"1234\",\n      \"name\": \"GST on Purchases\",\n      \"original_tax_rate_id\": \"12345\",\n      \"report_tax_type\": \"NONE\",\n      \"row_version\": \"1-12345\",\n      \"status\": \"{{oneOf (array 'active' 'inactive' 'archived')}}\",\n      \"tax_payable_account_id\": \"123456\",\n      \"tax_remitted_account_id\": \"123456\",\n      \"total_tax_rate\": 10,\n      \"type\": \"NONE\",\n      \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n      \"updated_by\": \"12345\"\n    }\n  ],\n  \"links\": {\n    \"current\": \"https://unify.apideck.com/crm/companies\",\n    \"next\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"previous\": \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"meta\": {\n    \"cursors\": {\n      \"current\": \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"next\": \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"previous\": \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\": 50\n  },\n  \"operation\": \"all\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TaxRates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "707f04d5-9424-4254-97db-b6f792ebb378",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0e02c59-d8bb-4973-b892-3937879863f8",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a00ede46-bbd7-4d2b-a218-a1e32509c46d",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5468397d-c253-4249-966d-204a11e03cab",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89f57c0d-c561-4dde-a1ef-0fbcd531b2a9",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4ae3408-3a25-43bd-a49c-b3cd6bc32dcd",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a6d849f-63e7-48c6-a145-c31a52f284df",
      "documentation": "Create Tax Rate",
      "method": "post",
      "endpoint": "accounting/tax-rates",
      "responses": [
        {
          "uuid": "71509dea-dc03-4cda-9ddb-98b6cab91151",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"add\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "TaxRate created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4663d7c-6840-4353-97b3-1773a93d581d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38afa5b0-eadb-45bc-8206-ff159118fb24",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18f046a3-f69e-4507-a824-d9151b6ce283",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75af7196-b11a-4f81-a605-f7206b589f7d",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0fc6a0ae-7276-4148-80b0-0a5993199577",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb435f23-3a40-4ba7-b719-41ffb705563a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7211b4dc-4cae-49f1-b0f0-254571f737ca",
      "documentation": "Delete Tax Rate",
      "method": "delete",
      "endpoint": "accounting/tax-rates/:id",
      "responses": [
        {
          "uuid": "3e126fab-2907-4987-bbb5-fcd632d18e7a",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"delete\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TaxRates deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f62fa645-d755-453d-8762-f4d3be7829a2",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5a90a63-06c0-4bdb-b0fa-81c0bff62163",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aee791b9-41ba-4cc9-9254-107b5d1ff39a",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27e377b9-a79d-4aad-815a-d3af7cd0b3f4",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ecbca4e9-1fd0-4ad1-94af-28f746925b73",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3abdb8d-4492-402a-ab2b-d576882a4443",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "501841f0-21bc-4ad2-97bf-ddcee519c9c0",
      "documentation": "Get Tax Rate",
      "method": "get",
      "endpoint": "accounting/tax-rates/:id",
      "responses": [
        {
          "uuid": "9560ba10-6c4f-4ec9-b6b6-23afe32e7416",
          "body": "{\n  \"data\": {\n    \"code\": \"ABN\",\n    \"components\": [\n      {\n        \"compound\": true,\n        \"id\": \"10\",\n        \"name\": \"GST\",\n        \"rate\": 10\n      }\n    ],\n    \"created_at\": \"2020-09-30T07:43:32.000Z\",\n    \"created_by\": \"12345\",\n    \"description\": \"Reduced rate GST Purchases\",\n    \"effective_tax_rate\": 10,\n    \"id\": \"1234\",\n    \"name\": \"GST on Purchases\",\n    \"original_tax_rate_id\": \"12345\",\n    \"report_tax_type\": \"NONE\",\n    \"row_version\": \"1-12345\",\n    \"status\": \"{{oneOf (array 'active' 'inactive' 'archived')}}\",\n    \"tax_payable_account_id\": \"123456\",\n    \"tax_remitted_account_id\": \"123456\",\n    \"total_tax_rate\": 10,\n    \"type\": \"NONE\",\n    \"updated_at\": \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\": \"12345\"\n  },\n  \"operation\": \"one\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TaxRate",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "798b9173-3680-416a-910e-55001ef6d293",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7715fe95-1eab-41c1-8a3a-59648d920cac",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf79f607-2dc1-4cb0-b9dd-e50a6598a2ff",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eda287cf-ba73-4098-9e01-dee943a1789f",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c87e242-b9bc-4e20-a5a9-5bdec12c7065",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5ed7f45-7e73-4b24-abb1-539add9b0f14",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7f7208b-97df-4099-a572-1352e52bf9a4",
      "documentation": "Update Tax Rate",
      "method": "patch",
      "endpoint": "accounting/tax-rates/:id",
      "responses": [
        {
          "uuid": "e3aaf28d-1cac-4426-b574-2d0960efc7f3",
          "body": "{\n  \"data\": {\n    \"id\": \"12345\"\n  },\n  \"operation\": \"update\",\n  \"resource\": \"tax-rates\",\n  \"service\": \"xero\",\n  \"status\": \"OK\",\n  \"status_code\": 200\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TaxRate updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d1215fa-3241-40e8-9d3f-853a6a178c6a",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestValidationError\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1b98415-b699-43c4-a917-5fbf4b7baeed",
          "body": "{\n  \"detail\": \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\": \"Unauthorized\",\n  \"message\": \"Unauthorized Request\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 401,\n  \"type_name\": \"UnauthorizedError\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dc45fea-5178-4056-a811-977ba1683313",
          "body": "{\n  \"detail\": \"You have reached your limit of 2000\",\n  \"error\": \"Payment Required\",\n  \"message\": \"Request Limit Reached\",\n  \"ref\": \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"status_code\": 402,\n  \"type_name\": \"RequestLimitError\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Payment Required",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "781417d2-e666-4cbe-b803-e880c46f0899",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Not Found\",\n  \"message\": \"Unknown Widget\",\n  \"ref\": \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"status_code\": 404,\n  \"type_name\": \"EntityNotFoundError\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource was not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f16c0bf-6e55-4e64-976b-0940521d8280",
          "body": "{\n  \"detail\": \"Unprocessable request, please verify your request headers and body.\",\n  \"error\": \"Unprocessable Entity\",\n  \"message\": \"Invalid State\",\n  \"ref\": \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"status_code\": 422,\n  \"type_name\": \"InvalidStateError\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d94ee0fa-c819-4c71-89c1-e2857f54ddb7",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid Params\",\n  \"ref\": \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"status_code\": 400,\n  \"type_name\": \"RequestHeadersValidationError\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}