{
  "uuid": "6bf86848-2ab8-49fc-83c5-e1858ff22a31",
  "lastMigration": 24,
  "name": "AWS App Runner",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "47d56a9a-cbbe-408a-a341-5526fb3bd70b",
      "documentation": "<p>Associate your own domain name with the AWS App Runner subdomain URL of your App Runner service.</p> <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.AssociateCustomDomain",
      "responses": [
        {
          "uuid": "a006d4a6-750c-4f7f-bfba-f29b732d5bd8",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'datatype.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1eb2a7d-b340-4914-b56f-99a019b70a81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ce1b182-cabb-46d0-92a8-996bebaa329d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ff5576b-e0bf-4fb7-920b-5ad6527928a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7507d70b-e1f4-4170-a2e9-fe667d3b992f",
      "documentation": "<p>Create an AWS App Runner automatic scaling configuration resource. App Runner requires this resource when you create App Runner services that require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p> <p>Create multiple revisions of a configuration by using the same <code>AutoScalingConfigurationName</code> and different <code>AutoScalingConfigurationRevision</code> values. When you create a service, you can set it to use the latest active revision of an auto scaling configuration or a specific revision.</p> <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the AWS Region. The tradeoff is a higher minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "8f762b8b-833a-46c0-9eba-3f25f36481c7",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}},\n    \"Latest\": {{faker 'datatype.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'datatype.number'}},\n    \"MinSize\": {{faker 'datatype.number'}},\n    \"MaxSize\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7401bb25-55f5-4152-8eff-9313f8a420c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe753600-b4d5-4ec1-b311-b387d2157027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ec48258-95f6-4e79-8869-bfdda185385d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d3f8f00-0cf8-47c1-93ec-8f21ebbef3bb",
      "documentation": "<p>Create an AWS App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.</p> <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you can use the connection.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateConnection",
      "responses": [
        {
          "uuid": "1833b6da-176a-4013-93f3-8510625c0229",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a701cf79-4293-4387-b4de-b0bc4dda4a0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e08d5b4-7650-4ca7-ab5e-05fcd89a7e5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cebc0a1-cf54-453f-b455-411eed6e2113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af221800-58c9-4221-983c-25519e23ed20",
      "documentation": "<p>Create an AWS App Runner service. After the service is created, the action also automatically starts a deployment.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html\">ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateService",
      "responses": [
        {
          "uuid": "86f80b4a-5604-44e1-9f8b-14c9d4e507df",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "689eda28-1d1b-4467-bfc4-ecbf9acc701e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7661ea17-7c10-469d-bad4-c3d3ed3c6b8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5f208f6-6678-4350-afda-b9492b36fabe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e7ffae3-8ed7-4634-8bf3-b1ce31fddd10",
      "documentation": "Delete an AWS App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "bf666c00-d331-4efb-a4f7-be393b335309",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}},\n    \"Latest\": {{faker 'datatype.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'datatype.number'}},\n    \"MinSize\": {{faker 'datatype.number'}},\n    \"MaxSize\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "404a8b88-a892-4bd3-895c-4900ffdfe45c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e6366cbb-b3c2-4ce3-a242-560f985af3c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e03cadf-14b6-4f34-9c80-df88fccfa8ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88eeac6c-db4e-4adf-a085-75bedac3c9c0",
      "documentation": "Delete an AWS App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the <code>DeleteConnection</code> action fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteConnection",
      "responses": [
        {
          "uuid": "724d3d97-e972-4f24-ba9d-300cf02d07f5",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e16e93e-f491-42c3-a6d0-98dfacbfb4cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8b6fb89-10e0-410c-a1a5-7b3458f3ece3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c75576a-7765-40ca-a87a-932f9ce3caa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d404121-7a20-472a-8c19-0a49587f6aae",
      "documentation": "<p>Delete an AWS App Runner service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteService",
      "responses": [
        {
          "uuid": "92182681-29e1-4531-97b6-4655b57c20fb",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b41d6600-2459-45c2-ad03-6ee4058aa238",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ad10ca3-a053-4fa7-8e4a-a317be7edfa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2527360-0464-413e-835e-baed09fa767d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05ef8c55-6fa6-41b7-9f9d-52a081a48b25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66a49690-22d9-4704-b23e-7a7885f9ab24",
      "documentation": "Return a full description of an AWS App Runner automatic scaling configuration resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "aae876d3-f255-4356-9dee-0743b3a5447a",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}},\n    \"Latest\": {{faker 'datatype.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'datatype.number'}},\n    \"MinSize\": {{faker 'datatype.number'}},\n    \"MaxSize\": {{faker 'datatype.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "502a058a-e8af-4778-b37d-c39eb50cf754",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "491fabca-c42b-4618-a165-b586b8f0019c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a17f8648-71e6-45b6-89bc-b977320a6486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7429d8a7-7efc-47ae-8862-9747ab3eef6d",
      "documentation": "Return a description of custom domain names that are associated with an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeCustomDomains",
      "responses": [
        {
          "uuid": "ba640c51-964d-4043-a865-b4eba3a13931",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomains\": [\n    {\n      \"DomainName\": \"\",\n      \"EnableWWWSubdomain\": {{faker 'datatype.boolean'}},\n      \"CertificateValidationRecords\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Value\": \"\",\n          \"Status\": \"\"\n        }\n      ],\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c4ac7c4-976f-43b1-be1e-c53ddeb322e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fe9acd8-60d4-401e-9c65-a874f9f0abae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c71dcf3-caa2-4c85-b2e8-06e940ce6297",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7b73667-7e95-4767-bc9e-98955be85777",
      "documentation": "Return a full description of an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeService",
      "responses": [
        {
          "uuid": "1bd0a5ba-9750-4746-8a9e-8ceab3229693",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7bdf7326-c4ee-44ec-830c-bc52b7c9fc25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12c4bbc1-f8e4-42ab-b25e-6fbb6a70af4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d549c647-43da-4c94-8c17-da3cb7ee24e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "33060e49-b7f5-4791-ae2e-593471b8b5fb",
      "documentation": "<p>Disassociate a custom domain name from an AWS App Runner service.</p> <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DisassociateCustomDomain",
      "responses": [
        {
          "uuid": "2191b025-267c-4e52-95b4-08779aeafeaa",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'datatype.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a69a549d-1497-4850-8478-d9e72359c8b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68159a1c-71af-4701-aefd-76fc59b4afb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8090a154-9f16-4bcc-a44d-2f0a54c7d2ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebbf6caa-3707-4dec-982d-c10260b40acc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6809bdfe-3c8a-496e-8da7-bf8dfe66f547",
      "documentation": "Returns a list of AWS App Runner automatic scaling configurations in your AWS account. You can query the revisions for a specific configuration name or the revisions for all configurations in your account. You can optionally query only the latest revision of each requested name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListAutoScalingConfigurations",
      "responses": [
        {
          "uuid": "847b2e30-545e-44e0-a47f-241c3207b0a5",
          "body": "{\n  \"AutoScalingConfigurationSummaryList\": [\n    {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d05f2eb-963f-4290-a1e9-a136344b8043",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80b44958-30fd-4ac6-99b4-754dd6f37259",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39921304-432a-4eb9-b887-978b8d7a8c57",
      "documentation": "Returns a list of AWS App Runner connections that are associated with your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListConnections",
      "responses": [
        {
          "uuid": "8ab096bd-2348-4fed-9eda-aa6bbb696981",
          "body": "{\n  \"ConnectionSummaryList\": [\n    {\n      \"ConnectionName\": \"\",\n      \"ConnectionArn\": \"\",\n      \"ProviderType\": \"\",\n      \"Status\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b8d03b9-9d40-4f17-bcbe-3910fa42010c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3bbcb96-f15d-4590-a4ea-c133a79e6c7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8645e563-3b92-4d9d-8bf3-ae41ac5675a1",
      "documentation": "<p>Return a list of operations that occurred on an AWS App Runner service.</p> <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the last started operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListOperations",
      "responses": [
        {
          "uuid": "88b140e6-2975-46cd-8cb4-8c0dd1c9c6fc",
          "body": "{\n  \"OperationSummaryList\": [\n    {\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"Status\": \"\",\n      \"TargetArn\": \"\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n      \"EndedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94372410-35fb-44af-8cce-7928353b986b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7285bfd3-fd44-4b56-96d9-8d0f79e06507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9db803d2-d67a-4990-ac92-976299a637b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b7f600d-dcf5-45bc-a48d-159c378d5772",
      "documentation": "Returns a list of running AWS App Runner services in your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListServices",
      "responses": [
        {
          "uuid": "f5e130e5-555b-4766-8d61-4472d452f6d7",
          "body": "{\n  \"ServiceSummaryList\": [\n    {\n      \"ServiceName\": \"\",\n      \"ServiceId\": \"\",\n      \"ServiceArn\": \"\",\n      \"ServiceUrl\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67ac625e-9b31-4eb8-9411-0639199afdfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4315f5e-c0cd-4067-b3a5-3cef162efc81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c1fbce6-1bb1-4842-9df6-bb3faf3a8e72",
      "documentation": "List tags that are associated with for an AWS App Runner resource. The response contains a list of tag key-value pairs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListTagsForResource",
      "responses": [
        {
          "uuid": "a5257ac2-e7ba-4676-8436-14d66fe0c943",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "901106a6-98b1-4f7d-9fd0-8a21f83635d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46956e23-e56d-4e4e-9a4e-b3d91334833c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d8bf93c-e48c-4fb3-8ee7-9631010de65b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "628e3f6d-52df-4872-845c-c6475fe48461",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b73093d-8934-4203-84d8-a6462d008c6f",
      "documentation": "<p>Pause an active AWS App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.PauseService",
      "responses": [
        {
          "uuid": "1e097cc6-4c76-479a-b593-1d2cc5954efe",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8de09f0d-d610-44b8-9eab-af374d813f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f16275d5-73d3-4586-b50e-32b51c5aed63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04dc4a59-7074-44b1-8bb0-0151692b1d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "daab126c-c697-40f2-aa8c-d21e3f21381a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "572fa70d-e3e6-4d2c-8f2a-97032e9455b3",
      "documentation": "<p>Resume an active AWS App Runner service. App Runner provisions compute capacity for the service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ResumeService",
      "responses": [
        {
          "uuid": "f065ab63-3031-45aa-aad7-5dfc5c03868f",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b7b1814-c0fd-4464-83bd-9a68dd2fc76d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e83d360-205c-499b-bfc3-17ed36d0e25a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3be3e650-767c-44b5-9d73-b09c77f64f35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73f8b246-f16d-4021-ba04-cbc70a5d1462",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a359472-8038-4225-a929-8371862cef12",
      "documentation": "<p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an AWS App Runner service.</p> <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.StartDeployment",
      "responses": [
        {
          "uuid": "3310e2e8-ebce-45e6-ae6b-5db9f2653eac",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "006bd63d-5e93-424d-8b3e-fb2df5b7e447",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "011d498c-a29f-4adb-aff2-0e09243a2869",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88645428-d61c-42e1-9f69-b7bd164967d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "171892ec-cff2-47d9-95c6-df5198986221",
      "documentation": "Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.TagResource",
      "responses": [
        {
          "uuid": "ed4c3c2f-8f43-4ca3-bb35-28f6f9b4630a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f74d162-dbf1-44a8-b2d8-886d4519536d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34a57c8c-2f36-43bf-9f23-cb4ddecfb5b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be031426-3474-4023-ae35-2425647431b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0da3a61e-1f1f-4f06-b470-ed8820fbce35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f81403ca-91d5-449b-bcbe-34b34cdb10b1",
      "documentation": "Remove tags from an App Runner resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UntagResource",
      "responses": [
        {
          "uuid": "c8e9a5e2-32f8-40ca-9dc9-61ef620f19c7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef865c43-4b97-4600-bc75-43b336f39223",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6518f50b-d913-42b6-86f5-e282350f4981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3160a77-80b8-42f7-a0a2-284a41d967de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5ed9828-d881-405f-b91a-9a62d82804b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43fcca1b-5e9b-4379-a8b4-85e5f82de5d9",
      "documentation": "<p>Update an AWS App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service. These can be set only when you create the service.</p> <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UpdateService",
      "responses": [
        {
          "uuid": "0a868dc4-49b5-4b6f-9b86-47e8b5aa8090",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'datatype.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"HealthyThreshold\": {{faker 'datatype.number'}},\n      \"UnhealthyThreshold\": {{faker 'datatype.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'datatype.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f3b03a5d-304b-4056-99d7-db9b40ff8a65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a84fb5e1-8afe-4a6c-8222-895ba897f175",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "065efaa3-a9fa-49c7-8ef9-bba711844aec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7fbe593-90ce-4c4a-86c9-83acd673d11e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}