{
  "uuid": "87d48abd-076a-4b31-877a-7ce418223b97",
  "lastMigration": 24,
  "name": "Network Services API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7551ce2f-152f-47b3-9a55-f0cc60494741",
      "documentation": "Deletes a single TlsRoute.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "9cf06398-4cf0-483e-9109-bbcb8c0789c0",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab2573e0-e876-43be-930c-529d25cbf2dc",
      "documentation": "Gets details of a single TlsRoute.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "f7cb03ed-ee73-4e39-9b02-613b321af527",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"gateways\": [\n    \"\"\n  ],\n  \"meshes\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"rules\": [\n    {\n      \"action\": {\n        \"destinations\": [\n          {\n            \"serviceName\": \"\",\n            \"weight\": {{faker 'datatype.number'}}\n          }\n        ]\n      },\n      \"matches\": [\n        {\n          \"alpn\": [\n            \"\"\n          ],\n          \"sniHost\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"selfLink\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd6ee248-ed74-4abe-bba4-3654a4d2447e",
      "documentation": "Updates the parameters of a single TlsRoute.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "9663a510-1623-4e10-9e02-f8e824bbf3f1",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20774210-e5ad-4026-a3c9-2fa9a4d081a2",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "e1de00b6-443b-4310-8d74-91a49232d301",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9d83bda-770b-4d9e-af75-813951394e7d",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta1/:name/operations",
      "responses": [
        {
          "uuid": "200e77d6-bd08-4304-bc7d-e9fa9e13da15",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "acee7ea3-cea5-4aea-8568-3ffb83b49cde",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "faddb8bd-ee31-47da-80c6-1791fd8683a8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4d5eaa1-48b4-40d4-b94f-43aea057616a",
      "documentation": "Lists EndpointPolicies in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/endpointPolicies",
      "responses": [
        {
          "uuid": "70664b68-730c-4d52-a041-51f211d40a45",
          "body": "{\n  \"endpointPolicies\": [\n    {\n      \"authorizationPolicy\": \"\",\n      \"clientTlsPolicy\": \"\",\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"endpointMatcher\": {\n        \"metadataLabelMatcher\": {\n          \"metadataLabelMatchCriteria\": \"{{oneOf (array 'METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED' 'MATCH_ANY' 'MATCH_ALL')}}\",\n          \"metadataLabels\": [\n            {\n              \"labelName\": \"\",\n              \"labelValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"serverTlsPolicy\": \"\",\n      \"trafficPortSelector\": {\n        \"ports\": [\n          \"\"\n        ]\n      },\n      \"type\": \"{{oneOf (array 'ENDPOINT_POLICY_TYPE_UNSPECIFIED' 'SIDECAR_PROXY' 'GRPC_SERVER')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87690758-0ae2-47f9-b8fc-05e33ba019e1",
      "documentation": "Creates a new EndpointPolicy in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/endpointPolicies",
      "responses": [
        {
          "uuid": "93d8c52b-a3bc-40f4-a07b-37e663e22192",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb23f2e7-fe9c-44f7-bb0e-e48cc9b220d5",
      "documentation": "Lists Gateways in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/gateways",
      "responses": [
        {
          "uuid": "d5ff5508-dcd0-4d69-b188-779ac5ff3d8a",
          "body": "{\n  \"gateways\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"ports\": [\n        {{faker 'datatype.number'}}\n      ],\n      \"scope\": \"\",\n      \"selfLink\": \"\",\n      \"serverTlsPolicy\": \"\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'OPEN_MESH' 'SECURE_WEB_GATEWAY')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c86be931-06a9-4a38-b884-5c86a02c9dca",
      "documentation": "Creates a new Gateway in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/gateways",
      "responses": [
        {
          "uuid": "aab57b1e-ea72-4a96-b390-860539b9ca18",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94cf7d63-4043-4c95-9730-dbab0438f828",
      "documentation": "Lists GrpcRoutes in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/grpcRoutes",
      "responses": [
        {
          "uuid": "e1588e2c-4ea2-4b0b-b890-d9ee2621e456",
          "body": "{\n  \"grpcRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"hostnames\": [\n        \"\"\n      ],\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"faultInjectionPolicy\": {\n              \"abort\": {\n                \"httpStatus\": {{faker 'datatype.number'}},\n                \"percentage\": {{faker 'datatype.number'}}\n              },\n              \"delay\": {\n                \"fixedDelay\": \"\",\n                \"percentage\": {{faker 'datatype.number'}}\n              }\n            },\n            \"retryPolicy\": {\n              \"numRetries\": {{faker 'datatype.number'}},\n              \"retryConditions\": [\n                \"\"\n              ]\n            },\n            \"timeout\": \"\"\n          },\n          \"matches\": [\n            {\n              \"headers\": [\n                {\n                  \"key\": \"\",\n                  \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'EXACT' 'REGULAR_EXPRESSION')}}\",\n                  \"value\": \"\"\n                }\n              ],\n              \"method\": {\n                \"caseSensitive\": {{faker 'datatype.boolean'}},\n                \"grpcMethod\": \"\",\n                \"grpcService\": \"\",\n                \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'EXACT' 'REGULAR_EXPRESSION')}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b9eed06-8712-465c-942a-69b138baded7",
      "documentation": "Creates a new GrpcRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/grpcRoutes",
      "responses": [
        {
          "uuid": "9ee4eb05-4992-4901-b319-3c1474f65db0",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c8be663-9e2e-4bd7-b9a4-43970add87e5",
      "documentation": "Lists HttpRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/httpRoutes",
      "responses": [
        {
          "uuid": "25c5531b-361e-4bcc-923f-f5daf1e4f3d4",
          "body": "{\n  \"httpRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"hostnames\": [\n        \"\"\n      ],\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"corsPolicy\": {\n              \"allowCredentials\": {{faker 'datatype.boolean'}},\n              \"allowHeaders\": [\n                \"\"\n              ],\n              \"allowMethods\": [\n                \"\"\n              ],\n              \"allowOriginRegexes\": [\n                \"\"\n              ],\n              \"allowOrigins\": [\n                \"\"\n              ],\n              \"disabled\": {{faker 'datatype.boolean'}},\n              \"exposeHeaders\": [\n                \"\"\n              ],\n              \"maxAge\": \"\"\n            },\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"faultInjectionPolicy\": {\n              \"abort\": {\n                \"httpStatus\": {{faker 'datatype.number'}},\n                \"percentage\": {{faker 'datatype.number'}}\n              },\n              \"delay\": {\n                \"fixedDelay\": \"\",\n                \"percentage\": {{faker 'datatype.number'}}\n              }\n            },\n            \"redirect\": {\n              \"hostRedirect\": \"\",\n              \"httpsRedirect\": {{faker 'datatype.boolean'}},\n              \"pathRedirect\": \"\",\n              \"portRedirect\": {{faker 'datatype.number'}},\n              \"prefixRewrite\": \"\",\n              \"responseCode\": \"{{oneOf (array 'RESPONSE_CODE_UNSPECIFIED' 'MOVED_PERMANENTLY_DEFAULT' 'FOUND' 'SEE_OTHER' 'TEMPORARY_REDIRECT' 'PERMANENT_REDIRECT')}}\",\n              \"stripQuery\": {{faker 'datatype.boolean'}}\n            },\n            \"requestHeaderModifier\": {\n              \"add\": {},\n              \"remove\": [\n                \"\"\n              ],\n              \"set\": {}\n            },\n            \"requestMirrorPolicy\": {\n              \"destination\": {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'datatype.number'}}\n              }\n            },\n            \"responseHeaderModifier\": {\n              \"add\": {},\n              \"remove\": [\n                \"\"\n              ],\n              \"set\": {}\n            },\n            \"retryPolicy\": {\n              \"numRetries\": {{faker 'datatype.number'}},\n              \"perTryTimeout\": \"\",\n              \"retryConditions\": [\n                \"\"\n              ]\n            },\n            \"timeout\": \"\",\n            \"urlRewrite\": {\n              \"hostRewrite\": \"\",\n              \"pathPrefixRewrite\": \"\"\n            }\n          },\n          \"matches\": [\n            {\n              \"fullPathMatch\": \"\",\n              \"headers\": [\n                {\n                  \"exactMatch\": \"\",\n                  \"header\": \"\",\n                  \"invertMatch\": {{faker 'datatype.boolean'}},\n                  \"prefixMatch\": \"\",\n                  \"presentMatch\": {{faker 'datatype.boolean'}},\n                  \"rangeMatch\": {\n                    \"end\": {{faker 'datatype.number'}},\n                    \"start\": {{faker 'datatype.number'}}\n                  },\n                  \"regexMatch\": \"\",\n                  \"suffixMatch\": \"\"\n                }\n              ],\n              \"ignoreCase\": {{faker 'datatype.boolean'}},\n              \"prefixMatch\": \"\",\n              \"queryParameters\": [\n                {\n                  \"exactMatch\": \"\",\n                  \"presentMatch\": {{faker 'datatype.boolean'}},\n                  \"queryParameter\": \"\",\n                  \"regexMatch\": \"\"\n                }\n              ],\n              \"regexMatch\": \"\"\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd8c7a83-8617-4b68-9f26-ac5b93620c30",
      "documentation": "Creates a new HttpRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/httpRoutes",
      "responses": [
        {
          "uuid": "fcdef794-5585-4fad-8dbc-ea801295f0ee",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04346e22-f81e-4c35-962a-cdbbcabe8582",
      "documentation": "Lists Meshes in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/meshes",
      "responses": [
        {
          "uuid": "e0eadaff-f3d9-40ca-b165-2515029188cf",
          "body": "{\n  \"meshes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"interceptionPort\": {{faker 'datatype.number'}},\n      \"labels\": {},\n      \"name\": \"\",\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "72d42b24-8bec-4370-af77-36773bb38bdf",
      "documentation": "Creates a new Mesh in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/meshes",
      "responses": [
        {
          "uuid": "81fef089-7d9f-4495-b477-22276585bf74",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e179aac-ec05-4e23-bc74-6f73f77b6e3f",
      "documentation": "Lists ServiceBinding in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/serviceBindings",
      "responses": [
        {
          "uuid": "1b43b50a-c0df-49c2-a488-92138e1ef538",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"serviceBindings\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"service\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61eb7dd2-09f6-49ac-89be-e35e99ae7395",
      "documentation": "Creates a new ServiceBinding in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/serviceBindings",
      "responses": [
        {
          "uuid": "63b194b3-63ca-49b3-9cfd-5cba5e81c79b",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ede9e2b4-f8d8-4c2d-8701-4d5c52a5f144",
      "documentation": "Lists TcpRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/tcpRoutes",
      "responses": [
        {
          "uuid": "db2574c8-5ddd-4cad-8c87-115d5af73717",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"tcpRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"originalDestination\": {{faker 'datatype.boolean'}}\n          },\n          \"matches\": [\n            {\n              \"address\": \"\",\n              \"port\": \"\"\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20955a7e-ec14-49bd-bd09-44de7c72c1c8",
      "documentation": "Creates a new TcpRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/tcpRoutes",
      "responses": [
        {
          "uuid": "d1562d17-dfff-404f-829e-4db34e0b2bac",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c643985f-bac6-49f0-907b-34350e4ca538",
      "documentation": "Lists TlsRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/tlsRoutes",
      "responses": [
        {
          "uuid": "8b21bf83-a08f-4d11-9e8d-9f612d0a346e",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"tlsRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"matches\": [\n            {\n              \"alpn\": [\n                \"\"\n              ],\n              \"sniHost\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a735711-3084-4b62-8a80-0266ae230919",
      "documentation": "Creates a new TlsRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/tlsRoutes",
      "responses": [
        {
          "uuid": "8343aea4-2276-4817-a066-ebb74f355d63",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb0199b7-dc9d-4c75-bac5-cdacca2082ed",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "1bad63a5-ea36-40ab-99f9-6f8c3a680a94",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e6e3595-cfb6-414e-a325-07a0218fe2df",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "cc8064a6-9bb2-43ac-bf91-3489669bf983",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4cfb983-571b-45f7-8e31-fd8e1edeafe1",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "c7052d85-bb6a-4cb1-ba33-17b2139e19ca",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}