{
  "uuid": "35151706-1754-47bb-9988-14827bc60ffe",
  "lastMigration": 24,
  "name": "AWS Config",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0b98abf7-da52-42b3-9f4e-d0593607a5ec",
      "documentation": "<p>Returns the current configuration items for resources that are present in your Config aggregator. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty <code>unprocessedResourceIdentifiers</code> list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return tags and relationships.</p> </li> </ul> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.BatchGetAggregateResourceConfig",
      "responses": [
        {
          "uuid": "986c25af-d35f-425c-b121-bcfd1da714cf",
          "body": "{\n  \"BaseConfigurationItems\": [\n    {\n      \"version\": \"\",\n      \"accountId\": \"\",\n      \"configurationItemCaptureTime\": \"{{faker 'date.recent' 365}}\",\n      \"configurationItemStatus\": \"\",\n      \"configurationStateId\": \"\",\n      \"arn\": \"\",\n      \"resourceType\": \"\",\n      \"resourceId\": \"\",\n      \"resourceName\": \"\",\n      \"awsRegion\": \"\",\n      \"availabilityZone\": \"\",\n      \"resourceCreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"configuration\": \"\",\n      \"supplementaryConfiguration\": {}\n    }\n  ],\n  \"UnprocessedResourceIdentifiers\": [\n    {\n      \"SourceAccountId\": \"\",\n      \"SourceRegion\": \"\",\n      \"ResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "79a832fa-6667-45f1-b6df-c1847f9e90d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e728002-a8ac-4b44-8a7a-af14a8ee7995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d78f1e5-af69-44be-a675-6f52da40a46e",
      "documentation": "<p>Returns the <code>BaseConfigurationItem</code> for one or more requested resources. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty unprocessedResourceKeys list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return any tags for the requested resources. This information is filtered out of the supplementaryConfiguration section of the API response.</p> </li> </ul> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig",
      "responses": [
        {
          "uuid": "d7526ffd-115b-454b-bd3d-5d193891d342",
          "body": "{\n  \"baseConfigurationItems\": [\n    {\n      \"version\": \"\",\n      \"accountId\": \"\",\n      \"configurationItemCaptureTime\": \"{{faker 'date.recent' 365}}\",\n      \"configurationItemStatus\": \"\",\n      \"configurationStateId\": \"\",\n      \"arn\": \"\",\n      \"resourceType\": \"\",\n      \"resourceId\": \"\",\n      \"resourceName\": \"\",\n      \"awsRegion\": \"\",\n      \"availabilityZone\": \"\",\n      \"resourceCreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"configuration\": \"\",\n      \"supplementaryConfiguration\": {}\n    }\n  ],\n  \"unprocessedResourceKeys\": [\n    {\n      \"resourceType\": \"\",\n      \"resourceId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2883ae2-b7d8-46a7-b01f-2f09168a1c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e3f5790-891c-4ddc-92cc-2413daa39d7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "970f78e6-5392-45f7-a20a-5f579c74bba0",
      "documentation": "Deletes the authorization granted to the specified configuration aggregator account in a specified region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteAggregationAuthorization",
      "responses": [
        {
          "uuid": "61f7e551-2e0e-44bf-b70b-4b7f93ec5a74",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b3ace8a2-edda-4805-a9b0-fb524f9ad346",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2ce66e0-ecc6-4885-ab6a-bd27fea15b49",
      "documentation": "<p>Deletes the specified Config rule and all of its evaluation results.</p> <p>Config sets the state of a rule to <code>DELETING</code> until the deletion is complete. You cannot update a rule while it is in this state. If you make a <code>PutConfigRule</code> or <code>DeleteConfigRule</code> request for the rule, you will receive a <code>ResourceInUseException</code>.</p> <p>You can check the state of a rule by using the <code>DescribeConfigRules</code> request.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteConfigRule",
      "responses": [
        {
          "uuid": "21366fdb-c6bb-43e0-a15a-7eee87e89f36",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2dfb0018-5ef0-44d3-a0f1-b6c04f410108",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8389a30c-033a-41cb-834a-d0bff81b6f05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7f2c78b-f6e2-462e-9ca8-666588f83466",
      "documentation": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteConfigurationAggregator",
      "responses": [
        {
          "uuid": "f06b9459-49a8-4e72-96bd-5f667dabfa58",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c16dff82-936c-4d72-b7d7-cc5c5eca5ab7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c63d1ba-e495-40bc-9306-a70d5f26c707",
      "documentation": "<p>Deletes the configuration recorder.</p> <p>After the configuration recorder is deleted, Config will not record resource configuration changes until you create a new configuration recorder.</p> <p>This action does not delete the configuration information that was previously recorded. You will be able to access the previously recorded information by using the <code>GetResourceConfigHistory</code> action, but you will not be able to access this information in the Config console until you create a new configuration recorder.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteConfigurationRecorder",
      "responses": [
        {
          "uuid": "0795bcaf-6be4-4d33-b8cb-ccb3a737dbc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68e3642f-a2ad-425d-bd62-276e07bdf00c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3c59039-4341-40cf-8663-ab65d7ff2f88",
      "documentation": "<p>Deletes the specified conformance pack and all the Config rules, remediation actions, and all evaluation results within that conformance pack.</p> <p>Config sets the conformance pack to <code>DELETE_IN_PROGRESS</code> until the deletion is complete. You cannot update a conformance pack while it is in this state.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteConformancePack",
      "responses": [
        {
          "uuid": "385a7bce-bb56-49fc-abe6-db9798ec516a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7506984-487b-46e2-9d50-bcb20f38b26a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ca3d224-50c1-4a3d-b243-2707e89e640e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fde39bc-8c85-4931-9875-104a6bba8644",
      "documentation": "<p>Deletes the delivery channel.</p> <p>Before you can delete the delivery channel, you must stop the configuration recorder by using the <a>StopConfigurationRecorder</a> action.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteDeliveryChannel",
      "responses": [
        {
          "uuid": "2f75e138-f0bb-4581-9a07-4a98aa514f4e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e593c76d-6f61-4ba7-bf45-36add546b677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchDeliveryChannelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5fc0171-657c-4a43-999f-62a7bc624e23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LastDeliveryChannelDeleteFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cadfa4f7-cee2-4f3e-8b26-585cacdb5ff8",
      "documentation": "Deletes the evaluation results for the specified Config rule. You can specify one Config rule per request. After you delete the evaluation results, you can call the <a>StartConfigRulesEvaluation</a> API to start evaluating your Amazon Web Services resources against the rule.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteEvaluationResults",
      "responses": [
        {
          "uuid": "99012f34-f66e-4488-a156-8c7b07933c9e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e94c9a09-0273-4672-a2af-f9403d4bdcfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "942f5a43-2acf-4710-a0aa-3c5099f75689",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46c0c1da-a738-4bac-8409-753635ad5ac0",
      "documentation": "<p>Deletes the specified organization config rule and all of its evaluation results from all member accounts in that organization. </p> <p>Only a master account and a delegated administrator account can delete an organization config rule. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>Config sets the state of a rule to DELETE_IN_PROGRESS until the deletion is complete. You cannot update a rule while it is in this state.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteOrganizationConfigRule",
      "responses": [
        {
          "uuid": "5c5fbdab-9a9c-4190-9b65-62f17307874a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cdb1e8b8-d1b9-41da-96c6-27fbfcd22dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6a42bb6-cd36-408e-9415-e89661d49d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "673eb175-013c-4c06-bba8-8f84447094c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "464444f5-cf04-4db5-a786-c68d54ad2759",
      "documentation": "<p>Deletes the specified organization conformance pack and all of the config rules and remediation actions from all member accounts in that organization. </p> <p> Only a master account or a delegated administrator account can delete an organization conformance pack. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>Config sets the state of a conformance pack to DELETE_IN_PROGRESS until the deletion is complete. You cannot update a conformance pack while it is in this state. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteOrganizationConformancePack",
      "responses": [
        {
          "uuid": "e630af18-659d-44f7-a331-b34efd3fe3e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "76d8d874-f599-4f12-91bb-6066ef61c3f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20297e99-d4e4-4b96-a69b-f80fd2d8f071",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "306959c3-af42-41c0-aceb-ea3e4c755ec7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fefb3948-5de7-4299-9727-1d78d0f449b0",
      "documentation": "Deletes pending authorization requests for a specified aggregator account in a specified region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeletePendingAggregationRequest",
      "responses": [
        {
          "uuid": "0631eee7-11b0-47af-b8ff-e59a834d5da3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc4f6cf2-fca6-4b97-95c9-79bcb7423194",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6618c620-a60f-4e6c-a132-6d8254750211",
      "documentation": "Deletes the remediation configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteRemediationConfiguration",
      "responses": [
        {
          "uuid": "122d3202-3011-4333-aa4d-29dea412d126",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "66a419bd-17a1-4144-9801-692c5d0b0cb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchRemediationConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f401c47a-fd0b-4b22-b5ca-c1eb1d885057",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RemediationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe35ddbe-2ebc-4ef8-8de0-81cf6692d0e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e73a561-49cb-4923-a549-f336a6ad4e3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5d70d13-e868-411c-bdea-75fe81bc4c1e",
      "documentation": "<p>Deletes one or more remediation exceptions mentioned in the resource keys.</p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteRemediationExceptions",
      "responses": [
        {
          "uuid": "8724e138-bd64-4530-ae9a-1469fdd2ebee",
          "body": "{\n  \"FailedBatches\": [\n    {\n      \"FailureMessage\": \"\",\n      \"FailedItems\": [\n        {\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c169d2c9-3df1-4e66-a414-f9e46cfb000e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchRemediationExceptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d2f6c99-38ea-4ac7-ab2b-65243370167b",
      "documentation": "Records the configuration state for a custom resource that has been deleted. This API records a new ConfigurationItem with a ResourceDeleted status. You can retrieve the ConfigurationItems recorded for this resource in your Config History. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteResourceConfig",
      "responses": [
        {
          "uuid": "200c7e39-c773-4c06-9812-ce8d628031f2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ed9a4ed-c099-4e0e-85ac-ee0ab0303605",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4dae02d-66d2-4d4e-bc96-9a4bc6f9d1c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoRunningConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d45c4a9f-1a18-4535-92d4-48eb91408905",
      "documentation": "Deletes the retention configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteRetentionConfiguration",
      "responses": [
        {
          "uuid": "a7e4213e-4337-4c4d-9f65-6f6aec211d53",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "307608bf-a015-433e-aeb0-d0e016ff556d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07b3ed52-4afa-4aa1-8259-d03872ffa0ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchRetentionConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e43d53d-af1d-43c2-82fc-953ddd82b005",
      "documentation": "Deletes the stored query for a single Amazon Web Services account and a single Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeleteStoredQuery",
      "responses": [
        {
          "uuid": "5a881257-b364-47f6-afb6-245d96b2739e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "228f30d9-d143-4f48-9292-7ee4648b055c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42c9f967-fb52-4feb-9bda-17ac5e466255",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80703fdf-e688-497d-bf1a-2c401c25bc79",
      "documentation": "<p>Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel. After the delivery has started, Config sends the following notifications using an Amazon SNS topic that you have specified.</p> <ul> <li> <p>Notification of the start of the delivery.</p> </li> <li> <p>Notification of the completion of the delivery, if the delivery was successfully completed.</p> </li> <li> <p>Notification of delivery failure, if the delivery failed.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DeliverConfigSnapshot",
      "responses": [
        {
          "uuid": "73f7eb75-477f-43da-8aba-696f3c7633bd",
          "body": "{\n  \"configSnapshotId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27a1da97-24fe-4302-99a9-ce5036f32837",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchDeliveryChannelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b9223dc-a3b6-485a-95fe-ab3d8e6726b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78422f69-b7b6-4279-9ee9-1390e905cbd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoRunningConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a6844c6-04eb-4f34-9028-3939fd770e84",
      "documentation": "<p>Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules. Does not display rules that do not have compliance results. </p> <note> <p>The results can return an empty result page, but if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConfigRules",
      "responses": [
        {
          "uuid": "71482880-e64a-4c50-83dd-65e09d316bb7",
          "body": "{\n  \"AggregateComplianceByConfigRules\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"Compliance\": {\n        \"ComplianceType\": \"\",\n        \"ComplianceContributorCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"AccountId\": \"\",\n      \"AwsRegion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "84a8e7cf-b729-4d24-9aa3-e4c4e4ceae71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd86e0c1-83c0-4097-b6c2-717d93138d6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10c79101-6e63-4173-bfdb-e02eb31d0f51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9ba04cb-bd8c-4352-b336-e10750944d81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88f4b065-0245-4bdd-a621-60858bedb768",
      "documentation": "<p>Returns a list of the conformance packs and their associated compliance status with the count of compliant and noncompliant Config rules within each conformance pack. Also returns the total rule count which includes compliant rules, noncompliant rules, and rules that cannot be evaluated due to insufficient data.</p> <note> <p>The results can return an empty result page, but if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConformancePacks",
      "responses": [
        {
          "uuid": "42a8d713-f859-4b3a-b9b5-e2a1d0080cda",
          "body": "{\n  \"AggregateComplianceByConformancePacks\": [\n    {\n      \"ConformancePackName\": \"\",\n      \"Compliance\": {\n        \"ComplianceType\": \"\",\n        \"CompliantRuleCount\": {{faker 'datatype.number'}},\n        \"NonCompliantRuleCount\": {{faker 'datatype.number'}},\n        \"TotalRuleCount\": {{faker 'datatype.number'}}\n      },\n      \"AccountId\": \"\",\n      \"AwsRegion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92dd2a2f-4799-44d6-8bd1-293b1155b94b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7997f9ec-96cc-4812-af0c-c30de0bea1c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8a32b74-e0fe-4e19-b117-3d773eb916b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c86d0794-6e0f-401f-ada0-cb000cadf066",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3de98103-6e5d-4f4f-8fb3-729fb127f8b7",
      "documentation": "Returns a list of authorizations granted to various aggregator accounts and regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeAggregationAuthorizations",
      "responses": [
        {
          "uuid": "f5c9bef2-11e5-43a8-bda7-4de32de4a632",
          "body": "{\n  \"AggregationAuthorizations\": [\n    {\n      \"AggregationAuthorizationArn\": \"\",\n      \"AuthorizedAccountId\": \"\",\n      \"AuthorizedAwsRegion\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8c11ed7-f75c-4dbf-be25-ef611f3750e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bdc884bb-0031-415e-8381-1f5039217ebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a611123a-531c-4768-bf7e-c3b48b1b5617",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37c9b187-cae9-42da-b18c-c502da2438b2",
      "documentation": "<p>Indicates whether the specified Config rules are compliant. If a rule is noncompliant, this action returns the number of Amazon Web Services resources that do not comply with the rule.</p> <p>A rule is compliant if all of the evaluated resources comply with it. It is noncompliant if any of these resources do not comply.</p> <p>If Config has no current evaluation results for the rule, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions:</p> <ul> <li> <p>Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's Lambda function is failing to send evaluation results to Config. Verify that the role you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule's Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule's scope.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeComplianceByConfigRule",
      "responses": [
        {
          "uuid": "a4ac61b7-b997-4c0e-ab65-8430de8e9752",
          "body": "{\n  \"ComplianceByConfigRules\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"Compliance\": {\n        \"ComplianceType\": \"\",\n        \"ComplianceContributorCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cd5da30b-4c09-4106-8c91-c01314d9c809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9a737706-0540-47a3-ba03-2d1f3047513a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c9483e0-972e-4dfa-b302-db8a4a6ee47d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4fa2e715-27f9-40d5-b171-1ac29761e28b",
      "documentation": "<p>Indicates whether the specified Amazon Web Services resources are compliant. If a resource is noncompliant, this action returns the number of Config rules that the resource does not comply with.</p> <p>A resource is compliant if it complies with all the Config rules that evaluate it. It is noncompliant if it does not comply with one or more of these rules.</p> <p>If Config has no current evaluation results for the resource, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions about the rules that evaluate the resource:</p> <ul> <li> <p>Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's Lambda function is failing to send evaluation results to Config. Verify that the role that you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule's Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule's scope.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeComplianceByResource",
      "responses": [
        {
          "uuid": "e0ca133a-ecb1-48ca-8ed3-45ca4775b290",
          "body": "{\n  \"ComplianceByResources\": [\n    {\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Compliance\": {\n        \"ComplianceType\": \"\",\n        \"ComplianceContributorCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "50692022-cc0f-4f52-921d-7d6d0094ebb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44d7497b-9bce-42b7-950e-a35bb63f1b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ff72906-e9c1-42dc-9e9c-c8d8777df6ad",
      "documentation": "Returns status information for each of your Config managed rules. The status includes information such as the last time Config invoked the rule, the last time Config failed to invoke the rule, and the related error for the last failure.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigRuleEvaluationStatus",
      "responses": [
        {
          "uuid": "f144ff98-3aa0-4367-a63b-04bc1a22099a",
          "body": "{\n  \"ConfigRulesEvaluationStatus\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"ConfigRuleArn\": \"\",\n      \"ConfigRuleId\": \"\",\n      \"LastSuccessfulInvocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastFailedInvocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulEvaluationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastFailedEvaluationTime\": \"{{faker 'date.recent' 365}}\",\n      \"FirstActivatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastDeactivatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastErrorCode\": \"\",\n      \"LastErrorMessage\": \"\",\n      \"FirstEvaluationStarted\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "99db3479-ca0c-4bb5-b3c0-f03e4cce9ee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ef72de7-b59d-40d4-9e94-7b6870c2ec2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d02bdf69-ac7a-4919-9394-67c7e5493f80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c41932b-8080-463c-8217-3a1b1f266bdb",
      "documentation": "Returns details about your Config rules.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigRules",
      "responses": [
        {
          "uuid": "b25b8695-0632-4646-8b2f-0a37abfc1597",
          "body": "{\n  \"ConfigRules\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"ConfigRuleArn\": \"\",\n      \"ConfigRuleId\": \"\",\n      \"Description\": \"\",\n      \"Scope\": {\n        \"ComplianceResourceTypes\": [\n          \"\"\n        ],\n        \"TagKey\": \"\",\n        \"TagValue\": \"\",\n        \"ComplianceResourceId\": \"\"\n      },\n      \"Source\": {\n        \"Owner\": \"\",\n        \"SourceIdentifier\": \"\",\n        \"SourceDetails\": [\n          {\n            \"EventSource\": \"\",\n            \"MessageType\": \"\",\n            \"MaximumExecutionFrequency\": \"\"\n          }\n        ]\n      },\n      \"InputParameters\": \"\",\n      \"MaximumExecutionFrequency\": \"\",\n      \"ConfigRuleState\": \"\",\n      \"CreatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e08b03ab-6214-4998-a8b8-a4bd90215823",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88c1761e-bbf9-4c1a-93f2-1a9768076d62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67b8fd9b-522c-4ddc-b6c3-4fd9e4dd4945",
      "documentation": "Returns status information for sources within an aggregator. The status includes information about the last time Config verified authorization between the source account and an aggregator account. In case of a failure, the status contains the related error code or message. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus",
      "responses": [
        {
          "uuid": "55bca2d7-ca72-44f6-8da3-d76d21bc4223",
          "body": "{\n  \"AggregatedSourceStatusList\": [\n    {\n      \"SourceId\": \"\",\n      \"SourceType\": \"\",\n      \"AwsRegion\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastErrorCode\": \"\",\n      \"LastErrorMessage\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b234d2f-f68d-4429-bdda-55687e7bfd06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e4fc718f-4a4d-4fbc-8373-33704fb13176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6d5fedd-03ea-4e11-a108-ab02a9a97f64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13c1eeb6-b940-48f6-b29c-95d91e5a4da5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee001a11-ee1f-4c76-8ead-81a9bff47c57",
      "documentation": "Returns the details of one or more configuration aggregators. If the configuration aggregator is not specified, this action returns the details for all the configuration aggregators associated with the account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregators",
      "responses": [
        {
          "uuid": "9c37bb3d-1a8c-42ff-bce0-af30425b86b1",
          "body": "{\n  \"ConfigurationAggregators\": [\n    {\n      \"ConfigurationAggregatorName\": \"\",\n      \"ConfigurationAggregatorArn\": \"\",\n      \"AccountAggregationSources\": [\n        {\n          \"AccountIds\": [\n            \"\"\n          ],\n          \"AllAwsRegions\": {{faker 'datatype.boolean'}},\n          \"AwsRegions\": [\n            \"\"\n          ]\n        }\n      ],\n      \"OrganizationAggregationSource\": {\n        \"RoleArn\": \"\",\n        \"AwsRegions\": [\n          \"\"\n        ],\n        \"AllAwsRegions\": {{faker 'datatype.boolean'}}\n      },\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CreatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1ac7c1bc-25e8-4a35-bced-0a4490e8024a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2347a4da-78d6-4056-a690-32706c2bf10f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ac24061-9bee-4e94-afaa-69e05ffc5d8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93b4fd36-398d-4549-85ba-cc5cf09bc9da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3d1d381-2d4e-41c7-a92c-3121e204cd4e",
      "documentation": "<p>Returns the current status of the specified configuration recorder. If a configuration recorder is not specified, this action returns the status of all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorderStatus",
      "responses": [
        {
          "uuid": "83c854cc-0aa3-42ca-b35a-4ca9eaca3723",
          "body": "{\n  \"ConfigurationRecordersStatus\": [\n    {\n      \"name\": \"\",\n      \"lastStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastStopTime\": \"{{faker 'date.recent' 365}}\",\n      \"recording\": {{faker 'datatype.boolean'}},\n      \"lastStatus\": \"\",\n      \"lastErrorCode\": \"\",\n      \"lastErrorMessage\": \"\",\n      \"lastStatusChangeTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8af034c-65f3-41dd-8fe3-8ed6c2fb6f39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "beecd43d-4b9e-435e-bab9-b009c82230bd",
      "documentation": "<p>Returns the details for the specified configuration recorders. If the configuration recorder is not specified, this action returns the details for all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorders",
      "responses": [
        {
          "uuid": "ad94aa7a-e7c4-4e57-9957-ebed1f833ce1",
          "body": "{\n  \"ConfigurationRecorders\": [\n    {\n      \"name\": \"\",\n      \"roleARN\": \"\",\n      \"recordingGroup\": {\n        \"allSupported\": {{faker 'datatype.boolean'}},\n        \"includeGlobalResourceTypes\": {{faker 'datatype.boolean'}},\n        \"resourceTypes\": [\n          \"{{oneOf (array 'AWS::EC2::CustomerGateway' 'AWS::EC2::EIP' 'AWS::EC2::Host' 'AWS::EC2::Instance' 'AWS::EC2::InternetGateway' 'AWS::EC2::NetworkAcl' 'AWS::EC2::NetworkInterface' 'AWS::EC2::RouteTable' 'AWS::EC2::SecurityGroup' 'AWS::EC2::Subnet' 'AWS::CloudTrail::Trail' 'AWS::EC2::Volume' 'AWS::EC2::VPC' 'AWS::EC2::VPNConnection' 'AWS::EC2::VPNGateway' 'AWS::EC2::RegisteredHAInstance' 'AWS::EC2::NatGateway' 'AWS::EC2::EgressOnlyInternetGateway' 'AWS::EC2::VPCEndpoint' 'AWS::EC2::VPCEndpointService' 'AWS::EC2::FlowLog' 'AWS::EC2::VPCPeeringConnection' 'AWS::Elasticsearch::Domain' 'AWS::IAM::Group' 'AWS::IAM::Policy' 'AWS::IAM::Role' 'AWS::IAM::User' 'AWS::ElasticLoadBalancingV2::LoadBalancer' 'AWS::ACM::Certificate' 'AWS::RDS::DBInstance' 'AWS::RDS::DBSubnetGroup' 'AWS::RDS::DBSecurityGroup' 'AWS::RDS::DBSnapshot' 'AWS::RDS::DBCluster' 'AWS::RDS::DBClusterSnapshot' 'AWS::RDS::EventSubscription' 'AWS::S3::Bucket' 'AWS::S3::AccountPublicAccessBlock' 'AWS::Redshift::Cluster' 'AWS::Redshift::ClusterSnapshot' 'AWS::Redshift::ClusterParameterGroup' 'AWS::Redshift::ClusterSecurityGroup' 'AWS::Redshift::ClusterSubnetGroup' 'AWS::Redshift::EventSubscription' 'AWS::SSM::ManagedInstanceInventory' 'AWS::CloudWatch::Alarm' 'AWS::CloudFormation::Stack' 'AWS::ElasticLoadBalancing::LoadBalancer' 'AWS::AutoScaling::AutoScalingGroup' 'AWS::AutoScaling::LaunchConfiguration' 'AWS::AutoScaling::ScalingPolicy' 'AWS::AutoScaling::ScheduledAction' 'AWS::DynamoDB::Table' 'AWS::CodeBuild::Project' 'AWS::WAF::RateBasedRule' 'AWS::WAF::Rule' 'AWS::WAF::RuleGroup' 'AWS::WAF::WebACL' 'AWS::WAFRegional::RateBasedRule' 'AWS::WAFRegional::Rule' 'AWS::WAFRegional::RuleGroup' 'AWS::WAFRegional::WebACL' 'AWS::CloudFront::Distribution' 'AWS::CloudFront::StreamingDistribution' 'AWS::Lambda::Function' 'AWS::NetworkFirewall::Firewall' 'AWS::NetworkFirewall::FirewallPolicy' 'AWS::NetworkFirewall::RuleGroup' 'AWS::ElasticBeanstalk::Application' 'AWS::ElasticBeanstalk::ApplicationVersion' 'AWS::ElasticBeanstalk::Environment' 'AWS::WAFv2::WebACL' 'AWS::WAFv2::RuleGroup' 'AWS::WAFv2::IPSet' 'AWS::WAFv2::RegexPatternSet' 'AWS::WAFv2::ManagedRuleSet' 'AWS::XRay::EncryptionConfig' 'AWS::SSM::AssociationCompliance' 'AWS::SSM::PatchCompliance' 'AWS::Shield::Protection' 'AWS::ShieldRegional::Protection' 'AWS::Config::ConformancePackCompliance' 'AWS::Config::ResourceCompliance' 'AWS::ApiGateway::Stage' 'AWS::ApiGateway::RestApi' 'AWS::ApiGatewayV2::Stage' 'AWS::ApiGatewayV2::Api' 'AWS::CodePipeline::Pipeline' 'AWS::ServiceCatalog::CloudFormationProvisionedProduct' 'AWS::ServiceCatalog::CloudFormationProduct' 'AWS::ServiceCatalog::Portfolio' 'AWS::SQS::Queue' 'AWS::KMS::Key' 'AWS::QLDB::Ledger' 'AWS::SecretsManager::Secret' 'AWS::SNS::Topic' 'AWS::SSM::FileData' 'AWS::Backup::BackupPlan' 'AWS::Backup::BackupSelection' 'AWS::Backup::BackupVault' 'AWS::Backup::RecoveryPoint' 'AWS::ECR::Repository' 'AWS::ECS::Cluster' 'AWS::ECS::Service' 'AWS::ECS::TaskDefinition' 'AWS::EFS::AccessPoint' 'AWS::EFS::FileSystem' 'AWS::EKS::Cluster')}}\"\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d361555-8a69-4d9e-80f8-5b6eeea15296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dfc9be5-3d5e-47bc-b65b-63e1bcb8ca9b",
      "documentation": "<p>Returns compliance details for each rule in that conformance pack.</p> <note> <p>You must provide exact rule names.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConformancePackCompliance",
      "responses": [
        {
          "uuid": "0a47d1c9-7582-48ed-90b7-0fa8f785c054",
          "body": "{\n  \"ConformancePackName\": \"\",\n  \"ConformancePackRuleComplianceList\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"ComplianceType\": \"\",\n      \"Controls\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1c4897f4-8625-4dec-96e1-432257e330d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72aa9b5d-5cb8-46d4-9385-f95a71c2a93f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0f6f401-9540-4dfe-b520-13847b7b740d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "caac7f7d-ed2a-4f90-93d2-8814b4d8ad51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigRuleInConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30ffd184-d0ce-4b62-bf28-f61baf76f92d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoSuchConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8bfd1f30-66d2-4695-9636-930ef2bd0d15",
      "documentation": "<p>Provides one or more conformance packs deployment status.</p> <note> <p>If there are no conformance packs then you will see an empty result.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConformancePackStatus",
      "responses": [
        {
          "uuid": "9fe42ffd-30f8-4a44-b4c2-21d69f8df41a",
          "body": "{\n  \"ConformancePackStatusDetails\": [\n    {\n      \"ConformancePackName\": \"\",\n      \"ConformancePackId\": \"\",\n      \"ConformancePackArn\": \"\",\n      \"ConformancePackState\": \"\",\n      \"StackArn\": \"\",\n      \"ConformancePackStatusReason\": \"\",\n      \"LastUpdateRequestedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdateCompletedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1bd3a760-cdfa-4893-b618-a1c94b32b260",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "519d303f-1580-4968-b1bb-99c1d54641f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94715078-b0d5-45d1-914b-5a20c6dbc94e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "feea07e0-644b-4cd8-8984-ed050bbaa1ec",
      "documentation": "Returns a list of one or more conformance packs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeConformancePacks",
      "responses": [
        {
          "uuid": "98ecdc64-5827-4d64-b7b1-d6591e1fb80b",
          "body": "{\n  \"ConformancePackDetails\": [\n    {\n      \"ConformancePackName\": \"\",\n      \"ConformancePackArn\": \"\",\n      \"ConformancePackId\": \"\",\n      \"DeliveryS3Bucket\": \"\",\n      \"DeliveryS3KeyPrefix\": \"\",\n      \"ConformancePackInputParameters\": [\n        {\n          \"ParameterName\": \"\",\n          \"ParameterValue\": \"\"\n        }\n      ],\n      \"LastUpdateRequestedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CreatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7676a06d-b114-4315-81e8-72e580a6c8e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cdd866d-b3f9-47c6-9cfe-a83848d0a648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f9d0901-a83a-44f4-8b36-d96416bda755",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "562f6f31-eb6f-4531-9189-3fc23fab4d50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6817d27d-389a-49ea-8031-7a9a2bd262ef",
      "documentation": "<p>Returns the current status of the specified delivery channel. If a delivery channel is not specified, this action returns the current status of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannelStatus",
      "responses": [
        {
          "uuid": "3f80a10f-b61c-4401-8451-d7d00670432e",
          "body": "{\n  \"DeliveryChannelsStatus\": [\n    {\n      \"name\": \"\",\n      \"configSnapshotDeliveryInfo\": {\n        \"lastStatus\": \"\",\n        \"lastErrorCode\": \"\",\n        \"lastErrorMessage\": \"\",\n        \"lastAttemptTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastSuccessfulTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextDeliveryTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"configHistoryDeliveryInfo\": {\n        \"lastStatus\": \"\",\n        \"lastErrorCode\": \"\",\n        \"lastErrorMessage\": \"\",\n        \"lastAttemptTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastSuccessfulTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextDeliveryTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"configStreamDeliveryInfo\": {\n        \"lastStatus\": \"\",\n        \"lastErrorCode\": \"\",\n        \"lastErrorMessage\": \"\",\n        \"lastStatusChangeTime\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "43d5b2e6-06c4-4ad4-9c99-bf9345059139",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchDeliveryChannelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1fc8204-3ba0-482d-b6f2-322f3e79f6cb",
      "documentation": "<p>Returns details about the specified delivery channel. If a delivery channel is not specified, this action returns the details of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannels",
      "responses": [
        {
          "uuid": "85f20180-d891-4543-b841-670aa1ad0ed5",
          "body": "{\n  \"DeliveryChannels\": [\n    {\n      \"name\": \"\",\n      \"s3BucketName\": \"\",\n      \"s3KeyPrefix\": \"\",\n      \"s3KmsKeyArn\": \"\",\n      \"snsTopicARN\": \"\",\n      \"configSnapshotDeliveryProperties\": {\n        \"deliveryFrequency\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "316c938e-8dad-49d1-a37c-bcf98f8b2d1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchDeliveryChannelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5a69e4b-12f3-40de-939a-a627b4d57e99",
      "documentation": "<p>Provides organization config rule deployment status for an organization.</p> <note> <p>The status is not considered successful until organization config rule is successfully deployed in all the member accounts with an exception of excluded accounts.</p> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization config rule names. It is only applicable, when you request all the organization config rules.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRuleStatuses",
      "responses": [
        {
          "uuid": "235d1a5d-6a34-49d7-a7b0-c79ae4651902",
          "body": "{\n  \"OrganizationConfigRuleStatuses\": [\n    {\n      \"OrganizationConfigRuleName\": \"\",\n      \"OrganizationRuleStatus\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09284080-3883-425a-8ae7-0cf713399113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39a51ef4-4d80-4a3d-9e1e-8d8a7fe6be6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ee3a683-e762-491f-9caf-05e680401fdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fe9aa64-57c5-48ed-92b2-fa34b8e0dfd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25ed6532-dea8-4322-b18f-8d0863a604fa",
      "documentation": "<p>Returns a list of organization config rules. </p> <note> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization config rule names. It is only applicable, when you request all the organization config rules.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRules",
      "responses": [
        {
          "uuid": "9aae846d-e364-42d3-818a-dc56ccc02a40",
          "body": "{\n  \"OrganizationConfigRules\": [\n    {\n      \"OrganizationConfigRuleName\": \"\",\n      \"OrganizationConfigRuleArn\": \"\",\n      \"OrganizationManagedRuleMetadata\": {\n        \"Description\": \"\",\n        \"RuleIdentifier\": \"\",\n        \"InputParameters\": \"\",\n        \"MaximumExecutionFrequency\": \"\",\n        \"ResourceTypesScope\": [\n          \"\"\n        ],\n        \"ResourceIdScope\": \"\",\n        \"TagKeyScope\": \"\",\n        \"TagValueScope\": \"\"\n      },\n      \"OrganizationCustomRuleMetadata\": {\n        \"Description\": \"\",\n        \"LambdaFunctionArn\": \"\",\n        \"OrganizationConfigRuleTriggerTypes\": [\n          \"{{oneOf (array 'ConfigurationItemChangeNotification' 'OversizedConfigurationItemChangeNotification' 'ScheduledNotification')}}\"\n        ],\n        \"InputParameters\": \"\",\n        \"MaximumExecutionFrequency\": \"\",\n        \"ResourceTypesScope\": [\n          \"\"\n        ],\n        \"ResourceIdScope\": \"\",\n        \"TagKeyScope\": \"\",\n        \"TagValueScope\": \"\"\n      },\n      \"ExcludedAccounts\": [\n        \"\"\n      ],\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "644b2b12-e3d9-406e-9c1e-fd87ff314f8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d054dcf-eb44-4027-a981-dfbdbb3e7e89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f572d5a3-45fb-460f-83f0-f6addd1ca4a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77dc45ff-074a-47ba-b002-883779f33f92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a7829e4-ea50-48ee-82cc-4541a9c7f965",
      "documentation": "<p>Provides organization conformance pack deployment status for an organization. </p> <note> <p>The status is not considered successful until organization conformance pack is successfully deployed in all the member accounts with an exception of excluded accounts.</p> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization conformance pack names. They are only applicable, when you request all the organization conformance packs.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePackStatuses",
      "responses": [
        {
          "uuid": "86ac7a1d-8601-4100-8155-0806a664bc11",
          "body": "{\n  \"OrganizationConformancePackStatuses\": [\n    {\n      \"OrganizationConformancePackName\": \"\",\n      \"Status\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6086931c-d39c-4a40-9032-1b57ee56646c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6484b2b9-f503-486c-981b-4b0d0c398df9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5356d2e9-4d8d-419d-8cff-651c18d75e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5925377f-3623-478e-ab39-de1afd4f0431",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48c5810f-9561-4fb7-8ebd-3614c600a3fd",
      "documentation": "<p>Returns a list of organization conformance packs. </p> <note> <p>When you specify the limit and the next token, you receive a paginated response. </p> <p>Limit and next token are not applicable if you specify organization conformance packs names. They are only applicable, when you request all the organization conformance packs. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePacks",
      "responses": [
        {
          "uuid": "60c11c36-5214-414c-8d56-e92f4a422dc7",
          "body": "{\n  \"OrganizationConformancePacks\": [\n    {\n      \"OrganizationConformancePackName\": \"\",\n      \"OrganizationConformancePackArn\": \"\",\n      \"DeliveryS3Bucket\": \"\",\n      \"DeliveryS3KeyPrefix\": \"\",\n      \"ConformancePackInputParameters\": [\n        {\n          \"ParameterName\": \"\",\n          \"ParameterValue\": \"\"\n        }\n      ],\n      \"ExcludedAccounts\": [\n        \"\"\n      ],\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70a31ad2-e242-46ee-89b7-b6171a281b87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef650b2a-f955-4926-af16-d811fa7cc7c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "750b1632-aa0a-4ea9-8803-545f54c0e236",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69fd7d35-5ece-4750-bd9c-39ffb969d207",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a94ee86f-2dd4-442b-baed-56bec6b63354",
      "documentation": "Returns a list of all pending aggregation requests.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribePendingAggregationRequests",
      "responses": [
        {
          "uuid": "a8bd7889-1933-44d6-9359-a3d0e27c6c2f",
          "body": "{\n  \"PendingAggregationRequests\": [\n    {\n      \"RequesterAccountId\": \"\",\n      \"RequesterAwsRegion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "45dd2f45-8bea-416e-aab1-e731ab7c4db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d63d148c-4b2b-47e0-ab97-b03f0f9a8db6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b755e892-135e-4a14-9968-4aca98a0ccaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9a379c8-1511-4589-a36c-5f0cd4ddb172",
      "documentation": "Returns the details of one or more remediation configurations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeRemediationConfigurations",
      "responses": [
        {
          "uuid": "4a704b33-fcc0-4566-860e-0b690f988759",
          "body": "{\n  \"RemediationConfigurations\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"TargetType\": \"\",\n      \"TargetId\": \"\",\n      \"TargetVersion\": \"\",\n      \"Parameters\": {},\n      \"ResourceType\": \"\",\n      \"Automatic\": {{faker 'datatype.boolean'}},\n      \"ExecutionControls\": {\n        \"SsmControls\": {\n          \"ConcurrentExecutionRatePercentage\": {{faker 'datatype.number'}},\n          \"ErrorPercentage\": {{faker 'datatype.number'}}\n        }\n      },\n      \"MaximumAutomaticAttempts\": {{faker 'datatype.number'}},\n      \"RetryAttemptSeconds\": {{faker 'datatype.number'}},\n      \"Arn\": \"\",\n      \"CreatedByService\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6644d01-de69-4e1d-8b72-ea6bdd1288de",
      "documentation": "<p>Returns the details of one or more remediation exceptions. A detailed view of a remediation exception for a set of resources that includes an explanation of an exception and the time when the exception will be deleted. When you specify the limit and the next token, you receive a paginated response. </p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> <p>When you specify the limit and the next token, you receive a paginated response. </p> <p>Limit and next token are not applicable if you request resources in batch. It is only applicable, when you request all resources.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeRemediationExceptions",
      "responses": [
        {
          "uuid": "1ef39bc6-1e98-4ac8-adad-9037f9bc8c77",
          "body": "{\n  \"RemediationExceptions\": [\n    {\n      \"ConfigRuleName\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Message\": \"\",\n      \"ExpirationTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "44791458-fa65-4217-a7df-9d7e8c218c0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e321353c-af31-4005-8a28-cc28485941fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d164982e-b3b2-4864-bbf0-683788715499",
      "documentation": "Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps for when steps for the remediation execution occur, and any error messages for steps that have failed. When you specify the limit and the next token, you receive a paginated response.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeRemediationExecutionStatus",
      "responses": [
        {
          "uuid": "2287a3e5-ae8c-4254-8516-84050506f737",
          "body": "{\n  \"RemediationExecutionStatuses\": [\n    {\n      \"ResourceKey\": {\n        \"resourceType\": \"\",\n        \"resourceId\": \"\"\n      },\n      \"State\": \"\",\n      \"StepDetails\": [\n        {\n          \"Name\": \"\",\n          \"State\": \"\",\n          \"ErrorMessage\": \"\",\n          \"StartTime\": \"{{faker 'date.recent' 365}}\",\n          \"StopTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"InvocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c569415-6b94-4b96-9e04-12051594747e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchRemediationConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fb08d66-923f-443a-ac3c-3a606847762d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "274445b4-c69f-4f50-acfb-a753189b7fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7a9b80d-df78-473f-8e1b-9de9042f93b2",
      "documentation": "<p>Returns the details of one or more retention configurations. If the retention configuration name is not specified, this action returns the details for all the retention configurations for that account.</p> <note> <p>Currently, Config supports only one retention configuration per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.DescribeRetentionConfigurations",
      "responses": [
        {
          "uuid": "f0421371-c4c0-43a0-bb7a-27fba36f2a79",
          "body": "{\n  \"RetentionConfigurations\": [\n    {\n      \"Name\": \"\",\n      \"RetentionPeriodInDays\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90367d48-d6c7-4b04-8388-ffc5794aec3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72e160c6-7bc2-47a9-8fe4-ba5ae6e1a66c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchRetentionConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d975b7c5-2e42-41cb-a55b-8a9880b90872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb8aadf4-fdbb-4c50-97c6-ab9c7079624d",
      "documentation": "<p>Returns the evaluation results for the specified Config rule for a specific resource in a rule. The results indicate which Amazon Web Services resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule. </p> <note> <p>The results can return an empty result page. But if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetAggregateComplianceDetailsByConfigRule",
      "responses": [
        {
          "uuid": "f0940516-d42e-40bf-973e-c6eb8bc6684e",
          "body": "{\n  \"AggregateEvaluationResults\": [\n    {\n      \"EvaluationResultIdentifier\": {\n        \"EvaluationResultQualifier\": {\n          \"ConfigRuleName\": \"\",\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\"\n        },\n        \"OrderingTimestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ComplianceType\": \"\",\n      \"ResultRecordedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ConfigRuleInvokedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Annotation\": \"\",\n      \"AccountId\": \"\",\n      \"AwsRegion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36657d39-6b3c-4f85-b353-b573f07236dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aafba13b-0121-413f-bc24-001975c697d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "814130fb-a4a3-48bd-ae37-fa9438c3680a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f9b4af6-63f8-44aa-a30c-340091a93376",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0fa86b99-9074-4e5f-9b12-8b4d0d72e59c",
      "documentation": "<p>Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator.</p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetAggregateConfigRuleComplianceSummary",
      "responses": [
        {
          "uuid": "d4eee4c7-4b18-4127-8df7-2960faf31255",
          "body": "{\n  \"GroupByKey\": \"\",\n  \"AggregateComplianceCounts\": [\n    {\n      \"GroupName\": \"\",\n      \"ComplianceSummary\": {\n        \"CompliantResourceCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        },\n        \"NonCompliantResourceCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        },\n        \"ComplianceSummaryTimestamp\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41c5a55c-d515-49df-95f9-7f3bbe5bf541",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61494f43-1d56-4527-a2cd-58d8cb097f81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95743913-65d3-4bb4-956f-5dd601d0975c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "977bd931-50dc-463e-bc31-6adcf941364a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26993a8c-4b4e-4e19-bb56-cb2e09084af5",
      "documentation": "<p>Returns the count of compliant and noncompliant conformance packs across all Amazon Web Services accounts and Amazon Web Services Regions in an aggregator. You can filter based on Amazon Web Services account ID or Amazon Web Services Region.</p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetAggregateConformancePackComplianceSummary",
      "responses": [
        {
          "uuid": "653744ec-bd67-46e6-a125-7552bd634c28",
          "body": "{\n  \"AggregateConformancePackComplianceSummaries\": [\n    {\n      \"ComplianceSummary\": {\n        \"CompliantConformancePackCount\": {{faker 'datatype.number'}},\n        \"NonCompliantConformancePackCount\": {{faker 'datatype.number'}}\n      },\n      \"GroupName\": \"\"\n    }\n  ],\n  \"GroupByKey\": \"\",\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca5c19bc-7655-467a-bb1c-28a13b8d9371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "862ddc1b-4c10-4646-902c-1d62392b89f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65e7b115-dd47-4904-82b0-8cc57e6e9c29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5628ea9e-9de2-495a-a367-b0480a07bb40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c38fa73-13a0-4882-b703-d0977046df5b",
      "documentation": "<p>Returns the resource counts across accounts and regions that are present in your Config aggregator. You can request the resource counts by providing filters and GroupByKey.</p> <p>For example, if the input contains accountID 12345678910 and region us-east-1 in filters, the API returns the count of resources in account ID 12345678910 and region us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the API returns resource counts for all source accounts that are present in your aggregator.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetAggregateDiscoveredResourceCounts",
      "responses": [
        {
          "uuid": "e27d6d1c-c49b-4643-aee2-0308e0f5264d",
          "body": "{\n  \"TotalDiscoveredResources\": {{faker 'datatype.number'}},\n  \"GroupByKey\": \"\",\n  \"GroupedResourceCounts\": [\n    {\n      \"GroupName\": \"\",\n      \"ResourceCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07a07312-e8d7-4be3-b0d0-49a54f13e932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f90da20-ba59-44de-8881-b1f0b57a2922",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fcd762c7-9355-45c0-b12e-fd097ce33062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51443d5d-9531-4792-8e7e-51b6794ebfad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "68188cf3-6a90-4a6f-a171-b35da0a28517",
      "documentation": "Returns configuration item that is aggregated for your specific resource in a specific source account and region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetAggregateResourceConfig",
      "responses": [
        {
          "uuid": "1229f370-901f-4430-a08d-d03a65790b5a",
          "body": "{\n  \"ConfigurationItem\": {\n    \"version\": \"\",\n    \"accountId\": \"\",\n    \"configurationItemCaptureTime\": \"{{faker 'date.recent' 365}}\",\n    \"configurationItemStatus\": \"\",\n    \"configurationStateId\": \"\",\n    \"configurationItemMD5Hash\": \"\",\n    \"arn\": \"\",\n    \"resourceType\": \"\",\n    \"resourceId\": \"\",\n    \"resourceName\": \"\",\n    \"awsRegion\": \"\",\n    \"availabilityZone\": \"\",\n    \"resourceCreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"tags\": {},\n    \"relatedEvents\": [\n      \"\"\n    ],\n    \"relationships\": [\n      {\n        \"resourceType\": \"\",\n        \"resourceId\": \"\",\n        \"resourceName\": \"\",\n        \"relationshipName\": \"\"\n      }\n    ],\n    \"configuration\": \"\",\n    \"supplementaryConfiguration\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "762e9d46-1e46-427c-bf17-ea86cf3f02b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "414e6af9-ff20-4178-8fbb-fc7850b28a20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3862406d-86b1-4b71-a59d-0f6f14c046ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OversizedConfigurationItemException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64539975-3423-4671-ada8-ce185f9199a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotDiscoveredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "223f7d56-9b7f-4c62-b8d1-56c5a5554384",
      "documentation": "Returns the evaluation results for the specified Config rule. The results indicate which Amazon Web Services resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByConfigRule",
      "responses": [
        {
          "uuid": "f1f6c4b5-95b1-4109-afe6-de2b933c7158",
          "body": "{\n  \"EvaluationResults\": [\n    {\n      \"EvaluationResultIdentifier\": {\n        \"EvaluationResultQualifier\": {\n          \"ConfigRuleName\": \"\",\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\"\n        },\n        \"OrderingTimestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ComplianceType\": \"\",\n      \"ResultRecordedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ConfigRuleInvokedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Annotation\": \"\",\n      \"ResultToken\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f475ae5a-1b48-474e-947a-74b665998d7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d51bdda7-0213-4355-bb67-8eaff996e898",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60de089b-a006-4351-bc5e-8eba3834ffd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3796dbce-1198-4efe-b78f-5f14f8e1dc75",
      "documentation": "Returns the evaluation results for the specified Amazon Web Services resource. The results indicate which Config rules were used to evaluate the resource, when each rule was last used, and whether the resource complies with each rule.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByResource",
      "responses": [
        {
          "uuid": "c3b04e6f-76d7-46fd-9766-35b95b2a9325",
          "body": "{\n  \"EvaluationResults\": [\n    {\n      \"EvaluationResultIdentifier\": {\n        \"EvaluationResultQualifier\": {\n          \"ConfigRuleName\": \"\",\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\"\n        },\n        \"OrderingTimestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ComplianceType\": \"\",\n      \"ResultRecordedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ConfigRuleInvokedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Annotation\": \"\",\n      \"ResultToken\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69a4a8e7-29e9-45d9-9571-e49998fbb4d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6aafdaec-dcf1-4007-a5a5-6a054facde7e",
      "documentation": "Returns the number of Config rules that are compliant and noncompliant, up to a maximum of 25 for each.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByConfigRule",
      "responses": [
        {
          "uuid": "2df4d8ce-07a7-4aac-ae92-a8c90ba45ae4",
          "body": "{\n  \"ComplianceSummary\": {\n    \"CompliantResourceCount\": {\n      \"CappedCount\": {{faker 'datatype.number'}},\n      \"CapExceeded\": {{faker 'datatype.boolean'}}\n    },\n    \"NonCompliantResourceCount\": {\n      \"CappedCount\": {{faker 'datatype.number'}},\n      \"CapExceeded\": {{faker 'datatype.boolean'}}\n    },\n    \"ComplianceSummaryTimestamp\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85d3bf97-b174-4a38-b24f-b1c5d1ab895a",
      "documentation": "Returns the number of resources that are compliant and the number that are noncompliant. You can specify one or more resource types to get these numbers for each resource type. The maximum number returned is 100.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByResourceType",
      "responses": [
        {
          "uuid": "0880c769-eff4-494b-ab81-30c3d01fdfc6",
          "body": "{\n  \"ComplianceSummariesByResourceType\": [\n    {\n      \"ResourceType\": \"\",\n      \"ComplianceSummary\": {\n        \"CompliantResourceCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        },\n        \"NonCompliantResourceCount\": {\n          \"CappedCount\": {{faker 'datatype.number'}},\n          \"CapExceeded\": {{faker 'datatype.boolean'}}\n        },\n        \"ComplianceSummaryTimestamp\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e4e006cb-7a48-42b3-930b-8cfd1b5a81eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6697737a-4ac6-47a3-97a5-0b29b6468cda",
      "documentation": "Returns compliance details of a conformance pack for all Amazon Web Services resources that are monitered by conformance pack.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceDetails",
      "responses": [
        {
          "uuid": "b50ec485-104c-4338-87b7-9eed8f1fe214",
          "body": "{\n  \"ConformancePackName\": \"\",\n  \"ConformancePackRuleEvaluationResults\": [\n    {\n      \"ComplianceType\": \"\",\n      \"EvaluationResultIdentifier\": {\n        \"EvaluationResultQualifier\": {\n          \"ConfigRuleName\": \"\",\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\"\n        },\n        \"OrderingTimestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ConfigRuleInvokedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ResultRecordedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Annotation\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e9448c5-b0fb-4217-aa31-fc7c00aaaf46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "daf6486b-333d-46de-b5e7-07111fa77fc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7e87eab-7d13-45b8-8ffb-f8d562ef481d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoSuchConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7bdaa1a-6733-467d-a8a3-a05e384e9adc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigRuleInConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d596496-6e85-44dd-bfba-f5e559a3bbc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42ec6717-29a1-42c9-bcc8-3c15f774bfe1",
      "documentation": "Returns compliance details for the conformance pack based on the cumulative compliance results of all the rules in that conformance pack.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceSummary",
      "responses": [
        {
          "uuid": "da8fb44d-0749-4298-be89-1491219c1bb9",
          "body": "{\n  \"ConformancePackComplianceSummaryList\": [\n    {\n      \"ConformancePackName\": \"\",\n      \"ConformancePackComplianceStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "806830b3-95a5-4dcc-8200-17b5166fa15f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b00237bd-84c4-4fc0-9725-b0213c9b2eb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e8e861f-1a10-469d-9e73-7949c194c585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b605e9d-2a63-4e65-9287-2be05018f4f8",
      "documentation": "<p>Returns the resource types, the number of each resource type, and the total number of resources that Config is recording in this region for your Amazon Web Services account. </p> <p class=\"title\"> <b>Example</b> </p> <ol> <li> <p>Config is recording three resource types in the US East (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3 buckets.</p> </li> <li> <p>You make a call to the <code>GetDiscoveredResourceCounts</code> action and specify that you want all resource types. </p> </li> <li> <p>Config returns the following:</p> <ul> <li> <p>The resource types (EC2 instances, IAM users, and S3 buckets).</p> </li> <li> <p>The number of each resource type (25, 20, and 15).</p> </li> <li> <p>The total number of all resources (60).</p> </li> </ul> </li> </ol> <p>The response is paginated. By default, Config lists 100 <a>ResourceCount</a> objects on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>If you make a call to the <a>GetDiscoveredResourceCounts</a> action, you might not immediately receive resource counts in the following situations:</p> <ul> <li> <p>You are a new Config customer.</p> </li> <li> <p>You just enabled resource recording.</p> </li> </ul> <p>It might take a few minutes for Config to record and count your resources. Wait a few minutes and then retry the <a>GetDiscoveredResourceCounts</a> action. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetDiscoveredResourceCounts",
      "responses": [
        {
          "uuid": "5d42becd-e5e7-409e-bfe2-cad2837b041e",
          "body": "{\n  \"totalDiscoveredResources\": {{faker 'datatype.number'}},\n  \"resourceCounts\": [\n    {\n      \"resourceType\": \"\",\n      \"count\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71b6413e-9a72-4779-8fc8-2e7cf3fc6a35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13d88acc-1256-4af8-8be5-532354c8ba3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf7f1a8a-536e-4d91-8ec9-dced27f74b21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d4eee655-5ae0-45d5-ae40-774237566f4f",
      "documentation": "Returns detailed status for each member account within an organization for a given organization config rule.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetOrganizationConfigRuleDetailedStatus",
      "responses": [
        {
          "uuid": "76d67627-6141-49c1-90a3-999790331852",
          "body": "{\n  \"OrganizationConfigRuleDetailedStatus\": [\n    {\n      \"AccountId\": \"\",\n      \"ConfigRuleName\": \"\",\n      \"MemberAccountRuleStatus\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e75a117d-0f1e-4c5e-8d8d-1af057825261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bee2e11a-beb7-46b5-afbf-dfe523039418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34d76bc9-1a59-4243-bf29-ea34340db3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42944f51-97f4-437b-937b-ef63f9e5962a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf8d4757-73fc-4f67-a4e8-aaa2b7d728ad",
      "documentation": "Returns detailed status for each member account within an organization for a given organization conformance pack.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetOrganizationConformancePackDetailedStatus",
      "responses": [
        {
          "uuid": "2a5ed20a-a5d6-4082-8d8d-0413398cc159",
          "body": "{\n  \"OrganizationConformancePackDetailedStatuses\": [\n    {\n      \"AccountId\": \"\",\n      \"ConformancePackName\": \"\",\n      \"Status\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3429f11e-4f97-4d1e-ae36-9972aea2b702",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchOrganizationConformancePackException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e0be0e7-778b-407a-98af-caf2eaa15e10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f223f658-e883-450e-9c97-323e65266ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48ae7fea-eb02-4379-b0a6-d49a9a15a248",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "245e53e6-27ee-4695-8c2c-8cd361021e4e",
      "documentation": "<p>Returns a list of <code>ConfigurationItems</code> for the specified resource. The list contains details about each state of the resource during the specified time interval. If you specified a retention period to retain your <code>ConfigurationItems</code> between a minimum of 30 days and a maximum of 7 years (2557 days), Config returns the <code>ConfigurationItems</code> for the specified retention period. </p> <p>The response is paginated. By default, Config returns a limit of 10 configuration items per page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>Each call to the API is limited to span a duration of seven days. It is likely that the number of records returned is smaller than the specified <code>limit</code>. In such cases, you can make another call, using the <code>nextToken</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetResourceConfigHistory",
      "responses": [
        {
          "uuid": "0df1ac7c-0aaf-4197-aad6-b3e4e011a8cb",
          "body": "{\n  \"configurationItems\": [\n    {\n      \"version\": \"\",\n      \"accountId\": \"\",\n      \"configurationItemCaptureTime\": \"{{faker 'date.recent' 365}}\",\n      \"configurationItemStatus\": \"\",\n      \"configurationStateId\": \"\",\n      \"configurationItemMD5Hash\": \"\",\n      \"arn\": \"\",\n      \"resourceType\": \"\",\n      \"resourceId\": \"\",\n      \"resourceName\": \"\",\n      \"awsRegion\": \"\",\n      \"availabilityZone\": \"\",\n      \"resourceCreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"tags\": {},\n      \"relatedEvents\": [\n        \"\"\n      ],\n      \"relationships\": [\n        {\n          \"resourceType\": \"\",\n          \"resourceId\": \"\",\n          \"resourceName\": \"\",\n          \"relationshipName\": \"\"\n        }\n      ],\n      \"configuration\": \"\",\n      \"supplementaryConfiguration\": {}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a03ac923-3f7a-4a5d-85a2-4a686862738b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca9e5a21-b846-46e9-84bd-0b93615c90d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTimeRangeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "631902cd-2295-4898-9df0-6db319c32834",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8eece72a-0431-40eb-b7b2-9286a659efc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74b5c9be-d31e-413c-8321-a2f37afe4b04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee1b3d96-c6bd-4937-948f-32356f21d539",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNotDiscoveredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07819968-f896-4b16-aa72-546aee510b97",
      "documentation": "Returns the details of a specific stored query.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.GetStoredQuery",
      "responses": [
        {
          "uuid": "d17f768a-4128-4e8b-a657-f570446a691f",
          "body": "{\n  \"StoredQuery\": {\n    \"QueryId\": \"\",\n    \"QueryArn\": \"\",\n    \"QueryName\": \"\",\n    \"Description\": \"\",\n    \"Expression\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7792d65a-e6ae-4474-a59c-4c54ca3eea2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "217a4f07-f5a8-4940-9607-c74e4ef5e185",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7d535680-7786-4a07-ac53-f4d3d3b146d2",
      "documentation": "<p>Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions. A resource identifier includes the resource type, ID, (if available) the custom resource name, source account, and source region. You can narrow the results to include only resources that have specific resource IDs, or a resource name, or source account ID, or source region.</p> <p>For example, if the input consists of accountID 12345678910 and the region is us-east-1 for resource type <code>AWS::EC2::Instance</code> then the API returns all the EC2 instance identifiers of accountID 12345678910 and region us-east-1.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.ListAggregateDiscoveredResources",
      "responses": [
        {
          "uuid": "e02db1f1-6e15-4f05-b685-f36a24f650ae",
          "body": "{\n  \"ResourceIdentifiers\": [\n    {\n      \"SourceAccountId\": \"\",\n      \"SourceRegion\": \"\",\n      \"ResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e82c0a5d-56ed-4e98-947f-632c32e5ab8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "602615ab-03ca-474f-af94-5ef1f2ece1f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "753bf49c-878d-4f32-9887-ecc07ba739b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bed29c9-ba58-494b-b551-efb214aa8edd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d34ddac-4e1f-4877-88c4-63d74f0881d9",
      "documentation": "<p>Accepts a resource type and returns a list of resource identifiers for the resources of that type. A resource identifier includes the resource type, ID, and (if available) the custom resource name. The results consist of resources that Config has discovered, including those that Config is not currently recording. You can narrow the results to include only resources that have specific resource IDs or a resource name.</p> <note> <p>You can specify either resource IDs or a resource name, but not both, in the same request.</p> </note> <p>The response is paginated. By default, Config lists 100 resource identifiers on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.ListDiscoveredResources",
      "responses": [
        {
          "uuid": "2a35a5c0-d1da-49d2-b14f-759e92897699",
          "body": "{\n  \"resourceIdentifiers\": [\n    {\n      \"resourceType\": \"\",\n      \"resourceId\": \"\",\n      \"resourceName\": \"\",\n      \"resourceDeletionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b5959e4b-dc6c-46f4-88df-42ad122df409",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2ed575f-3ac6-4521-a562-1a07764e9f96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ddd647cf-db09-4994-8ddf-e6347801c18f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60c3f152-392e-4b5d-ba68-3abb54300e01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f91cbe9b-f44b-4cff-bb38-fd562c399a31",
      "documentation": "Lists the stored queries for a single Amazon Web Services account and a single Amazon Web Services Region. The default is 100. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.ListStoredQueries",
      "responses": [
        {
          "uuid": "05170eb0-a5ce-4fd4-91d1-063addf0af06",
          "body": "{\n  \"StoredQueryMetadata\": [\n    {\n      \"QueryId\": \"\",\n      \"QueryArn\": \"\",\n      \"QueryName\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4951ebf0-f2a1-4826-a92b-d44c32344136",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c38333b4-eda9-46b8-a34c-4f2727883e48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ef657cc-dadb-4c4a-853c-167241bdb5fc",
      "documentation": "List the tags for Config resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.ListTagsForResource",
      "responses": [
        {
          "uuid": "26465e0e-2b35-42a7-a498-90aea94358a1",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9b890fdf-8a3d-4ca7-8464-3dddf1b860fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9bcb108-d625-48e3-acd7-7f76b8f4f587",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b02c06c8-788b-419d-9ff2-3c7820aded36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30d17f25-f09c-4b76-9a50-daf059ab09ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "440bcbaf-b3fe-4c1d-9db4-b8fa0866201b",
      "documentation": "Authorizes the aggregator account and region to collect data from the source account and region. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutAggregationAuthorization",
      "responses": [
        {
          "uuid": "86ad7b04-8d51-4920-82c0-f6f9e567096e",
          "body": "{\n  \"AggregationAuthorization\": {\n    \"AggregationAuthorizationArn\": \"\",\n    \"AuthorizedAccountId\": \"\",\n    \"AuthorizedAwsRegion\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f14198b-1d09-422a-a36b-217e85f35f0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0c91562-b27d-45b7-99cc-5707c5b2cc94",
      "documentation": "<p>Adds or updates an Config rule for evaluating whether your Amazon Web Services resources comply with your desired configurations.</p> <p>You can use this action for custom Config rules and Config managed rules. A custom Config rule is a rule that you develop and maintain. An Config managed rule is a customizable, predefined rule that Config provides.</p> <p>If you are adding a new custom Config rule, you must first create the Lambda function that the rule invokes to evaluate your resources. When you use the <code>PutConfigRule</code> action to add the rule to Config, you must specify the Amazon Resource Name (ARN) that Lambda assigns to the function. Specify the ARN for the <code>SourceIdentifier</code> key. This key is part of the <code>Source</code> object, which is part of the <code>ConfigRule</code> object. </p> <p>If you are adding an Config managed rule, specify the rule's identifier for the <code>SourceIdentifier</code> key. To reference Config managed rule identifiers, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">About Config managed rules</a>.</p> <p>For any new rule that you add, specify the <code>ConfigRuleName</code> in the <code>ConfigRule</code> object. Do not specify the <code>ConfigRuleArn</code> or the <code>ConfigRuleId</code>. These values are generated by Config for new rules.</p> <p>If you are updating a rule that you added previously, you can specify the rule by <code>ConfigRuleName</code>, <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the <code>ConfigRule</code> data type that you use in this request.</p> <p>The maximum number of rules that Config supports is 150.</p> <p>For information about requesting a rule limit increase, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config\">Config Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.</p> <p>For more information about developing and using Config rules, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html\">Evaluating Amazon Web Services resource Configurations with Config</a> in the <i>Config Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutConfigRule",
      "responses": [
        {
          "uuid": "8b0f5853-10ea-4854-b86b-322e2bc726c8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c6aafba-4819-4621-a09b-72c3a5f225b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "674bc36a-b79e-47a3-bb35-979d567a813c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaxNumberOfConfigRulesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b31995ac-2bbf-45c2-848c-578a0b80e8b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e548dce-dcf5-4691-9c79-ab8104f1bb87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0aa01435-0e09-44de-8515-246d3cbcb23e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa22869c-0278-4ff8-9c15-ca708bffab76",
      "documentation": "<p>Creates and updates the configuration aggregator with the selected source accounts and regions. The source account can be individual account(s) or an organization.</p> <p> <code>accountIds</code> that are passed will be replaced with existing accounts. If you want to add additional accounts into the aggregator, call <code>DescribeAggregator</code> to get the previous accounts and then append new ones.</p> <note> <p>Config should be enabled in source accounts and regions you want to aggregate.</p> <p>If your source type is an organization, you must be signed in to the management account or a registered delegated administrator and all the features must be enabled in your organization. If the caller is a management account, Config calls <code>EnableAwsServiceAccess</code> API to enable integration between Config and Organizations. If the caller is a registered delegated administrator, Config calls <code>ListDelegatedAdministrators</code> API to verify whether the caller is a valid delegated administrator.</p> <p>To register a delegated administrator, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/set-up-aggregator-cli.html#register-a-delegated-administrator-cli\">Register a Delegated Administrator</a> in the Config developer guide. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutConfigurationAggregator",
      "responses": [
        {
          "uuid": "1b5012a0-0cca-49a5-baf2-90dbdb1a3ef8",
          "body": "{\n  \"ConfigurationAggregator\": {\n    \"ConfigurationAggregatorName\": \"\",\n    \"ConfigurationAggregatorArn\": \"\",\n    \"AccountAggregationSources\": [\n      {\n        \"AccountIds\": [\n          \"\"\n        ],\n        \"AllAwsRegions\": {{faker 'datatype.boolean'}},\n        \"AwsRegions\": [\n          \"\"\n        ]\n      }\n    ],\n    \"OrganizationAggregationSource\": {\n      \"RoleArn\": \"\",\n      \"AwsRegions\": [\n        \"\"\n      ],\n      \"AllAwsRegions\": {{faker 'datatype.boolean'}}\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"CreatedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27db08e6-733a-4dcb-adba-a2678722cdd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22f70e21-1d8a-4f86-b22e-1be246b85c23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b05860d-7b80-44da-a5ba-aaca612fb7dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRoleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73b93135-9e82-46fe-a511-a680d69e32ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "190058f2-8769-4294-9008-d88c2cab4c50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoAvailableOrganizationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "698ddf2a-ae4c-4096-9c7c-20d6ec695235",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OrganizationAllFeaturesNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b465f6c6-c463-4691-a6cc-03b409a6698a",
      "documentation": "<p>Creates a new configuration recorder to record the selected resource configurations.</p> <p>You can use this action to change the role <code>roleARN</code> or the <code>recordingGroup</code> of an existing recorder. To change the role, call the action on the existing configuration recorder and specify a role.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> <p>If <code>ConfigurationRecorder</code> does not have the <b>recordingGroup</b> parameter specified, the default is to record all supported resource types.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder",
      "responses": [
        {
          "uuid": "9d28ac58-f09f-49f8-8b49-17488860d953",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3ab0942d-717b-4f9e-8c18-56fa59520e84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxNumberOfConfigurationRecordersExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e7a871a-dc7f-43bb-93b6-42ed7b6b692a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidConfigurationRecorderNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1f479ae-3d3b-4cc3-a8aa-5b1805de94eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRoleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a962c0be-34c5-4fb1-a022-1719572f59b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRecordingGroupException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d49cf582-fec5-4506-ab24-4ba48ac1d286",
      "documentation": "<p>Creates or updates a conformance pack. A conformance pack is a collection of Config rules that can be easily deployed in an account and a region and across Amazon Web Services Organization.</p> <p>This API creates a service linked role <code>AWSServiceRoleForConfigConforms</code> in your account. The service linked role is created only when the role does not exist in your account. </p> <note> <p>You must specify either the <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter, but not both. If you provide both Config uses the <code>TemplateS3Uri</code> parameter and ignores the <code>TemplateBody</code> parameter.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutConformancePack",
      "responses": [
        {
          "uuid": "fe1ec7ab-8df6-4c70-a65f-1a07a5df61ba",
          "body": "{\n  \"ConformancePackArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a5d98607-0abc-4b07-b4d8-b230615c99d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb8fd3c4-497e-4cdd-a1d5-f9ed94576d76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConformancePackTemplateValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d4fb5ed-0c81-45f3-bc83-37d87d147aac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dde86cba-e21e-4a6a-88ff-8dcbc1843356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00b04bbb-a768-40ab-a806-69e149e027b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaxNumberOfConformancePacksExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8b751fd-33b0-4975-87cf-6d35f13c3854",
      "documentation": "<p>Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic.</p> <p>Before you can create a delivery channel, you must create a configuration recorder.</p> <p>You can use this action to change the Amazon S3 bucket or an Amazon SNS topic of the existing delivery channel. To change the Amazon S3 bucket or an Amazon SNS topic, call this action and specify the changed values for the S3 bucket and the SNS topic. If you specify a different value for either the S3 bucket or the SNS topic, this action will keep the existing value for the parameter that is not changed.</p> <note> <p>You can have only one delivery channel per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutDeliveryChannel",
      "responses": [
        {
          "uuid": "69b59b5a-8c62-462b-a391-0c17a0bb42ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d3d999a8-5da8-4d48-8211-44e99b079598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxNumberOfDeliveryChannelsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32c698a9-4a48-4c21-b26a-71cd7908882c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoAvailableConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c41b8c4f-1f8f-4f69-bf65-15a0faa0546d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDeliveryChannelNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8595b252-0449-4f03-aac1-ede1d994cda9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoSuchBucketException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "759b00fb-9561-41a4-9564-d0bd0d57db5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidS3KeyPrefixException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00769fb1-2e36-4808-9b00-21e671812b73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidS3KmsKeyArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "642fe4eb-16ca-4875-b0c4-15adfbc26af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSNSTopicARNException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3cf5819-2a97-46d5-b6f8-56b19aad3e8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientDeliveryPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71cf9cf0-6ca2-4a21-a915-7d819879c9ef",
      "documentation": "Used by an Lambda function to deliver evaluation results to Config. This action is required in every Lambda function that is invoked by an Config rule.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutEvaluations",
      "responses": [
        {
          "uuid": "a0ec5cb9-05fc-48e2-8158-d29f04662ea5",
          "body": "{\n  \"FailedEvaluations\": [\n    {\n      \"ComplianceResourceType\": \"\",\n      \"ComplianceResourceId\": \"\",\n      \"ComplianceType\": \"\",\n      \"Annotation\": \"\",\n      \"OrderingTimestamp\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e0eef974-124e-44c7-bc87-5dc34efb5fc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06183a94-e0f8-4933-879e-1fd98f198654",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResultTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "406668cf-7d67-42f8-abff-55fadc8375aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c5ca854-b06f-4a1c-8735-ccc1f9868563",
      "documentation": "Add or updates the evaluations for process checks. This API checks if the rule is a process check when the name of the Config rule is provided.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutExternalEvaluation",
      "responses": [
        {
          "uuid": "ccde3de5-6bd9-4ccd-8a98-cf4c6a46034b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0453a01e-64a2-47a2-a20c-c33bee0f94a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a26caa73-1ce9-4c68-bbbe-3ae56a6d1b77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d955753a-1b62-4079-857e-98ee78f88b1e",
      "documentation": "<p>Adds or updates organization config rule for your entire organization evaluating whether your Amazon Web Services resources comply with your desired configurations.</p> <p> Only a master account and a delegated administrator can create or update an organization config rule. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added. </p> <p>This API enables organization service access through the <code>EnableAWSServiceAccess</code> action and creates a service linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master or delegated administrator account of your organization. The service linked role is created only when the role does not exist in the caller account. Config verifies the existence of role with <code>GetRole</code> action.</p> <p>To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegated-administrator</code> for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p>You can use this action to create both custom Config rules and Config managed rules. If you are adding a new custom Config rule, you must first create Lambda function in the master account or a delegated administrator that the rule invokes to evaluate your resources. You also need to create an IAM role in the managed-account that can be assumed by the Lambda function. When you use the <code>PutOrganizationConfigRule</code> action to add the rule to Config, you must specify the Amazon Resource Name (ARN) that Lambda assigns to the function. If you are adding an Config managed rule, specify the rule's identifier for the <code>RuleIdentifier</code> key.</p> <p>The maximum number of organization config rules that Config supports is 150 and 3 delegated administrator per organization. </p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>Specify either <code>OrganizationCustomRuleMetadata</code> or <code>OrganizationManagedRuleMetadata</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule",
      "responses": [
        {
          "uuid": "a6aa6210-d7ec-4805-afc9-8e2c5807223d",
          "body": "{\n  \"OrganizationConfigRuleArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d1c383c-c562-4c4c-bbab-4eb381962543",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxNumberOfOrganizationConfigRulesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a5cf80c-4070-4ed0-9aa4-1bfa69254391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ccfd6741-3953-4edf-a0f6-b4bbf1b484cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "404c0e7c-e748-4e33-b557-b5b0b051f5b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "702b8e8b-08a0-4bcb-a1fe-95ebd9e78247",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60a5805a-bec0-49af-8732-5bf3bd9b6441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NoAvailableOrganizationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd79d613-b8e3-47c3-b1dc-5f621095b1fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OrganizationAllFeaturesNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03212909-1096-4419-b273-d2e1eecbed32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e66a0690-1cf9-4fe7-866d-fd91e6ab2398",
      "documentation": "<p>Deploys conformance packs across member accounts in an Amazon Web Services Organization.</p> <p>Only a master account and a delegated administrator can call this API. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>This API enables organization service access for <code>config-multiaccountsetup.amazonaws.com</code> through the <code>EnableAWSServiceAccess</code> action and creates a service linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master or delegated administrator account of your organization. The service linked role is created only when the role does not exist in the caller account. To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegate-admin</code> for <code>config-multiaccountsetup.amazonaws.com</code>.</p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>You must specify either the <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter, but not both. If you provide both Config uses the <code>TemplateS3Uri</code> parameter and ignores the <code>TemplateBody</code> parameter.</p> <p>Config sets the state of a conformance pack to CREATE_IN_PROGRESS and UPDATE_IN_PROGRESS until the conformance pack is created or updated. You cannot update a conformance pack while it is in this state.</p> <p>You can create 50 conformance packs with 25 Config rules in each pack and 3 delegated administrator per organization. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutOrganizationConformancePack",
      "responses": [
        {
          "uuid": "64381b5f-0ef6-4c7e-a224-32bda8d4ee82",
          "body": "{\n  \"OrganizationConformancePackArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62b5d685-8a0e-4fcc-b80c-d3865437f3e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxNumberOfOrganizationConformancePacksExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cf18915-5c53-48ed-9182-17b12f475a2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf578c31-7be1-4dbc-8e63-e791f4eef61d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4909ac27-0642-49cd-8046-ef36ce599507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OrganizationAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bdae29d3-1f3a-4506-b403-8b4ca183c602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec87a72b-d906-4e51-8e5e-6b7dcba8efde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OrganizationConformancePackTemplateValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e3fb234-95e1-4317-bb7a-7f4a97bf362b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OrganizationAllFeaturesNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abc4252f-a5ec-432a-a663-7e9181d2df9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "NoAvailableOrganizationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "29f349a6-db97-40db-87e5-d78072222b7e",
      "documentation": "<p>Adds or updates the remediation configuration with a specific Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the Config rule. The Config rule must already exist for you to add a remediation configuration. The target (SSM document) must exist and have permissions to use the target. </p> <note> <p>If you make backward incompatible changes to the SSM document, you must call this again to ensure the remediations can run.</p> <p>This API does not support adding remediation configurations for service-linked Config Rules such as Organization Config rules, the rules deployed by conformance packs, and rules deployed by Amazon Web Services Security Hub.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations",
      "responses": [
        {
          "uuid": "99cc739f-5567-4cf6-97ae-cb8eb1cf4ad8",
          "body": "{\n  \"FailedBatches\": [\n    {\n      \"FailureMessage\": \"\",\n      \"FailedItems\": [\n        {\n          \"ConfigRuleName\": \"\",\n          \"TargetType\": \"\",\n          \"TargetId\": \"\",\n          \"TargetVersion\": \"\",\n          \"Parameters\": {},\n          \"ResourceType\": \"\",\n          \"Automatic\": {{faker 'datatype.boolean'}},\n          \"ExecutionControls\": {\n            \"SsmControls\": {\n              \"ConcurrentExecutionRatePercentage\": {{faker 'datatype.number'}},\n              \"ErrorPercentage\": {{faker 'datatype.number'}}\n            }\n          },\n          \"MaximumAutomaticAttempts\": {{faker 'datatype.number'}},\n          \"RetryAttemptSeconds\": {{faker 'datatype.number'}},\n          \"Arn\": \"\",\n          \"CreatedByService\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4e1d33c0-a5ee-4f59-b796-d4e9978882f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4626ff44-e95f-4c4b-a449-cb58ce5ee8e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2cb1b5b9-d31d-445d-9c3b-335a2ed8eddc",
      "documentation": "<p>A remediation exception is when a specific resource is no longer considered for auto-remediation. This API adds a new exception or updates an existing exception for a specific resource with a specific Config rule. </p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutRemediationExceptions",
      "responses": [
        {
          "uuid": "6569656e-7443-4ff7-a993-52e9036fcec2",
          "body": "{\n  \"FailedBatches\": [\n    {\n      \"FailureMessage\": \"\",\n      \"FailedItems\": [\n        {\n          \"ConfigRuleName\": \"\",\n          \"ResourceType\": \"\",\n          \"ResourceId\": \"\",\n          \"Message\": \"\",\n          \"ExpirationTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c589a87d-4492-4435-a90d-7948db4d3034",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a16eaf5-508c-4328-a5ae-83fb3e17cf9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48a0258d-6f85-407c-888f-c8c3f0bdaa0c",
      "documentation": "<p>Records the configuration state for the resource provided in the request. The configuration state of a resource is represented in Config as Configuration Items. Once this API records the configuration item, you can retrieve the list of configuration items for the custom resource type using existing Config APIs. </p> <note> <p>The custom resource type must be registered with CloudFormation. This API accepts the configuration item registered with CloudFormation.</p> <p>When you call this API, Config only stores configuration state of the resource provided in the request. This API does not change or remediate the configuration of the resource. </p> <p>Write-only schema properites are not recorded as part of the published configuration item.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutResourceConfig",
      "responses": [
        {
          "uuid": "22459924-de73-4ec8-9a9f-198fb231283f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b89158b8-9525-40b3-bad2-2413dc925e27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "922be131-9112-43b5-af5c-841e43217ae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1d7e715-974d-4268-a46d-924d45b49ee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoRunningConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58b6eeaa-97f5-44a6-93d0-a65c4e70460f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MaxActiveResourcesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5cefffad-8597-4adc-8742-45eab85decc3",
      "documentation": "<p>Creates and updates the retention configuration with details about retention period (number of days) that Config stores your historical information. The API creates the <code>RetentionConfiguration</code> object and names the object as <b>default</b>. When you have a <code>RetentionConfiguration</code> object named <b>default</b>, calling the API modifies the default object. </p> <note> <p>Currently, Config supports only one retention configuration per region in your account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutRetentionConfiguration",
      "responses": [
        {
          "uuid": "72a73ba4-dc32-4b7d-b103-6ef9b59258b6",
          "body": "{\n  \"RetentionConfiguration\": {\n    \"Name\": \"\",\n    \"RetentionPeriodInDays\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80bbdff6-c503-4c73-b1f1-435b0835c031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d15a70fd-7751-499f-8ab4-3ed4acbe95ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaxNumberOfRetentionConfigurationsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61adf5ce-4262-41cb-95d4-9c640ff2283f",
      "documentation": "Saves a new query or updates an existing saved query. The <code>QueryName</code> must be unique for a single Amazon Web Services account and a single Amazon Web Services Region. You can create upto 300 queries in a single Amazon Web Services account and a single Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.PutStoredQuery",
      "responses": [
        {
          "uuid": "dda0fe78-356a-4e9e-a559-5f425da7ccb9",
          "body": "{\n  \"QueryArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20542262-129c-4655-8134-9d24908c6fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1d7e8f1-cbc4-45d7-954b-6ddf3567ff17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "431e088e-3339-4173-819a-0245ed59fca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5101d4f5-e444-4276-b653-92dc4a12f8a7",
      "documentation": "<p>Accepts a structured query language (SQL) SELECT command and an aggregator to query configuration state of Amazon Web Services resources across multiple accounts and regions, performs the corresponding search, and returns resource configurations matching the properties.</p> <p>For more information about query components, see the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/query-components.html\"> <b>Query Components</b> </a> section in the Config Developer Guide.</p> <note> <p>If you run an aggregation query (i.e., using <code>GROUP BY</code> or using aggregate functions such as <code>COUNT</code>; e.g., <code>SELECT resourceId, COUNT(*) WHERE resourceType = 'AWS::IAM::Role' GROUP BY resourceId</code>) and do not specify the <code>MaxResults</code> or the <code>Limit</code> query parameters, the default page size is set to 500.</p> <p>If you run a non-aggregation query (i.e., not using <code>GROUP BY</code> or aggregate function; e.g., <code>SELECT * WHERE resourceType = 'AWS::IAM::Role'</code>) and do not specify the <code>MaxResults</code> or the <code>Limit</code> query parameters, the default page size is set to 25.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.SelectAggregateResourceConfig",
      "responses": [
        {
          "uuid": "3cae1d87-a40a-4ddf-b4fd-6c48157c5bf4",
          "body": "{\n  \"Results\": [\n    \"\"\n  ],\n  \"QueryInfo\": {\n    \"SelectFields\": [\n      {\n        \"Name\": \"\"\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3bc908f9-37fb-4556-a56e-f8fe26a09b01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidExpressionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6114e658-9e20-4a54-b52a-56e9cee58f90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoSuchConfigurationAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0db09f2a-9649-4c32-8a5e-767a262e1cba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3a6ea3b-68a5-4247-a4de-818e1719554b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b2708ef-e966-47ef-8273-8588264d3cd5",
      "documentation": "<p>Accepts a structured query language (SQL) <code>SELECT</code> command, performs the corresponding search, and returns resource configurations matching the properties.</p> <p>For more information about query components, see the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/query-components.html\"> <b>Query Components</b> </a> section in the Config Developer Guide.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.SelectResourceConfig",
      "responses": [
        {
          "uuid": "fb52b804-37dc-4ee2-9d56-521bc16b6d78",
          "body": "{\n  \"Results\": [\n    \"\"\n  ],\n  \"QueryInfo\": {\n    \"SelectFields\": [\n      {\n        \"Name\": \"\"\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f48690d3-436a-4695-8180-b6a1ee4b4835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidExpressionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d96c3e1-eea7-4a3e-823e-69fef63d6699",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidLimitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5892715e-13b7-4718-a6ff-692527998179",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "043a7fdc-2fdc-425a-b114-e18a49c55a65",
      "documentation": "<p>Runs an on-demand evaluation for the specified Config rules against the last known configuration state of the resources. Use <code>StartConfigRulesEvaluation</code> when you want to test that a rule you updated is working as expected. <code>StartConfigRulesEvaluation</code> does not re-record the latest configuration state for your resources. It re-runs an evaluation against the last known state of your resources. </p> <p>You can specify up to 25 Config rules per request. </p> <p>An existing <code>StartConfigRulesEvaluation</code> call for the specified rules must complete before you can call the API again. If you chose to have Config stream to an Amazon SNS topic, you will receive a <code>ConfigRuleEvaluationStarted</code> notification when the evaluation starts.</p> <note> <p>You don't need to call the <code>StartConfigRulesEvaluation</code> API to run an evaluation for a new rule. When you create a rule, Config evaluates your resources against the rule automatically. </p> </note> <p>The <code>StartConfigRulesEvaluation</code> API is useful if you want to run on-demand evaluations, such as the following example:</p> <ol> <li> <p>You have a custom rule that evaluates your IAM resources every 24 hours.</p> </li> <li> <p>You update your Lambda function to add additional conditions to your rule.</p> </li> <li> <p>Instead of waiting for the next periodic evaluation, you call the <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>Config invokes your Lambda function and evaluates your IAM resources.</p> </li> <li> <p>Your custom rule will still run periodic evaluations every 24 hours.</p> </li> </ol>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.StartConfigRulesEvaluation",
      "responses": [
        {
          "uuid": "20e092cc-1888-4121-ad90-cdb3d5628df4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf8ae3a7-dccd-4338-93cd-28fa60458f07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigRuleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09dc9d44-1132-4a89-be09-dfe95a2dcc90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0dd2f05-236c-4f7b-900e-dd62093c59d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7ff8517-8ee7-4b4a-8c76-3ba572796f25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e29ee959-c062-45d2-8234-f96e4368912b",
      "documentation": "<p>Starts recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account.</p> <p>You must have created at least one delivery channel to successfully start the configuration recorder.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.StartConfigurationRecorder",
      "responses": [
        {
          "uuid": "6c8a2738-a489-4684-879a-df5cad06370d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26f984e9-c70d-4076-9d8a-e5c1eaeee9ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d8518dc-c9b4-4ddb-9803-af059537f599",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NoAvailableDeliveryChannelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2598cb99-d9a5-47cc-afa2-35a2c70753a6",
      "documentation": "<p>Runs an on-demand remediation for the specified Config rules against the last known remediation configuration. It runs an execution against the current state of your resources. Remediation execution is asynchronous.</p> <p>You can specify up to 100 resource keys per request. An existing StartRemediationExecution call for the specified resource keys must complete before you can call the API again.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.StartRemediationExecution",
      "responses": [
        {
          "uuid": "32dfa50b-ea09-4a3c-95f7-ebef82fff982",
          "body": "{\n  \"FailureMessage\": \"\",\n  \"FailedItems\": [\n    {\n      \"resourceType\": \"\",\n      \"resourceId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9aeafffe-0a16-4925-91f9-4de3f7e37c2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7fe8cd5-3e32-46f4-978d-1b8bf623724c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b09a5092-29dc-4449-bdca-c86a68075bc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoSuchRemediationConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75e8318f-0294-412f-927a-6f9c667a99a1",
      "documentation": "Stops recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.StopConfigurationRecorder",
      "responses": [
        {
          "uuid": "b2f56351-cb4b-49d7-9032-6eb332c8c266",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b6bbfa8-500a-443e-9b8b-db8bacd5733c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NoSuchConfigurationRecorderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98219d81-6012-4149-8242-3bc77fed30b2",
      "documentation": "Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.TagResource",
      "responses": [
        {
          "uuid": "4f0e4756-5560-4066-83ff-5d2eb8bdbb6e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8f99554-11d5-479b-b866-64976f759cc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "314182cd-8957-4116-af04-f0b07bd84863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88e30959-7262-449e-81f3-6a8353259fcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3edbe063-e242-4bf6-b41f-78420601b771",
      "documentation": "Deletes specified tags from a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=StarlingDoveService.UntagResource",
      "responses": [
        {
          "uuid": "92373299-7277-4652-a2d8-932e1c5fa16b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0d895343-22f9-4d70-a1b8-1bfc9082aab5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81458c37-ba2f-46de-80bd-a018594f8d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}