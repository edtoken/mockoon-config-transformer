{
  "uuid": "68c66d54-14ef-45ce-a9a1-3f8c89ac3f1a",
  "lastMigration": 24,
  "name": "Cloud Vision API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ebd0593e-7240-4700-b223-defd250bdc92",
      "documentation": "Service that performs image detection and annotation for a batch of files. Now only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.",
      "method": "post",
      "endpoint": "v1p2beta1/files:annotate",
      "responses": [
        {
          "uuid": "9f27a518-28b7-475b-b1a9-4bd62e734ac6",
          "body": "{\n  \"responses\": [\n    {\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"inputConfig\": {\n        \"content\": \"\",\n        \"gcsSource\": {\n          \"uri\": \"\"\n        },\n        \"mimeType\": \"\"\n      },\n      \"responses\": [\n        {\n          \"context\": {\n            \"pageNumber\": {{faker 'datatype.number'}},\n            \"uri\": \"\"\n          },\n          \"cropHintsAnnotation\": {\n            \"cropHints\": [\n              {\n                \"boundingPoly\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"confidence\": {{faker 'datatype.float'}},\n                \"importanceFraction\": {{faker 'datatype.float'}}\n              }\n            ]\n          },\n          \"error\": {\n            \"code\": {{faker 'datatype.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"faceAnnotations\": [\n            {\n              \"angerLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"blurredLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"detectionConfidence\": {{faker 'datatype.float'}},\n              \"fdBoundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"headwearLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"joyLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"landmarkingConfidence\": {{faker 'datatype.float'}},\n              \"landmarks\": [\n                {\n                  \"position\": {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}},\n                    \"z\": {{faker 'datatype.float'}}\n                  },\n                  \"type\": \"{{oneOf (array 'UNKNOWN_LANDMARK' 'LEFT_EYE' 'RIGHT_EYE' 'LEFT_OF_LEFT_EYEBROW' 'RIGHT_OF_LEFT_EYEBROW' 'LEFT_OF_RIGHT_EYEBROW' 'RIGHT_OF_RIGHT_EYEBROW' 'MIDPOINT_BETWEEN_EYES' 'NOSE_TIP' 'UPPER_LIP' 'LOWER_LIP' 'MOUTH_LEFT' 'MOUTH_RIGHT' 'MOUTH_CENTER' 'NOSE_BOTTOM_RIGHT' 'NOSE_BOTTOM_LEFT' 'NOSE_BOTTOM_CENTER' 'LEFT_EYE_TOP_BOUNDARY' 'LEFT_EYE_RIGHT_CORNER' 'LEFT_EYE_BOTTOM_BOUNDARY' 'LEFT_EYE_LEFT_CORNER' 'RIGHT_EYE_TOP_BOUNDARY' 'RIGHT_EYE_RIGHT_CORNER' 'RIGHT_EYE_BOTTOM_BOUNDARY' 'RIGHT_EYE_LEFT_CORNER' 'LEFT_EYEBROW_UPPER_MIDPOINT' 'RIGHT_EYEBROW_UPPER_MIDPOINT' 'LEFT_EAR_TRAGION' 'RIGHT_EAR_TRAGION' 'LEFT_EYE_PUPIL' 'RIGHT_EYE_PUPIL' 'FOREHEAD_GLABELLA' 'CHIN_GNATHION' 'CHIN_LEFT_GONION' 'CHIN_RIGHT_GONION' 'LEFT_CHEEK_CENTER' 'RIGHT_CHEEK_CENTER')}}\"\n                }\n              ],\n              \"panAngle\": {{faker 'datatype.float'}},\n              \"rollAngle\": {{faker 'datatype.float'}},\n              \"sorrowLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"surpriseLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"tiltAngle\": {{faker 'datatype.float'}},\n              \"underExposedLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n            }\n          ],\n          \"fullTextAnnotation\": {\n            \"pages\": [\n              {\n                \"blocks\": [\n                  {\n                    \"blockType\": \"{{oneOf (array 'UNKNOWN' 'TEXT' 'TABLE' 'PICTURE' 'RULER' 'BARCODE')}}\",\n                    \"boundingBox\": {\n                      \"normalizedVertices\": [\n                        {\n                          \"x\": {{faker 'datatype.float'}},\n                          \"y\": {{faker 'datatype.float'}}\n                        }\n                      ],\n                      \"vertices\": [\n                        {\n                          \"x\": {{faker 'datatype.number'}},\n                          \"y\": {{faker 'datatype.number'}}\n                        }\n                      ]\n                    },\n                    \"confidence\": {{faker 'datatype.float'}},\n                    \"paragraphs\": [\n                      {\n                        \"boundingBox\": {\n                          \"normalizedVertices\": [\n                            {\n                              \"x\": {{faker 'datatype.float'}},\n                              \"y\": {{faker 'datatype.float'}}\n                            }\n                          ],\n                          \"vertices\": [\n                            {\n                              \"x\": {{faker 'datatype.number'}},\n                              \"y\": {{faker 'datatype.number'}}\n                            }\n                          ]\n                        },\n                        \"confidence\": {{faker 'datatype.float'}},\n                        \"property\": {\n                          \"detectedBreak\": {\n                            \"isPrefix\": {{faker 'datatype.boolean'}},\n                            \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                          },\n                          \"detectedLanguages\": [\n                            {\n                              \"confidence\": {{faker 'datatype.float'}},\n                              \"languageCode\": \"\"\n                            }\n                          ]\n                        },\n                        \"words\": [\n                          {\n                            \"boundingBox\": {\n                              \"normalizedVertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.float'}},\n                                  \"y\": {{faker 'datatype.float'}}\n                                }\n                              ],\n                              \"vertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.number'}},\n                                  \"y\": {{faker 'datatype.number'}}\n                                }\n                              ]\n                            },\n                            \"confidence\": {{faker 'datatype.float'}},\n                            \"property\": {\n                              \"detectedBreak\": {\n                                \"isPrefix\": {{faker 'datatype.boolean'}},\n                                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                              },\n                              \"detectedLanguages\": [\n                                {\n                                  \"confidence\": {{faker 'datatype.float'}},\n                                  \"languageCode\": \"\"\n                                }\n                              ]\n                            },\n                            \"symbols\": [\n                              {\n                                \"boundingBox\": {\n                                  \"normalizedVertices\": [\n                                    {\n                                      \"x\": {{faker 'datatype.float'}},\n                                      \"y\": {{faker 'datatype.float'}}\n                                    }\n                                  ],\n                                  \"vertices\": [\n                                    {\n                                      \"x\": {{faker 'datatype.number'}},\n                                      \"y\": {{faker 'datatype.number'}}\n                                    }\n                                  ]\n                                },\n                                \"confidence\": {{faker 'datatype.float'}},\n                                \"property\": {\n                                  \"detectedBreak\": {\n                                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                                  },\n                                  \"detectedLanguages\": [\n                                    {\n                                      \"confidence\": {{faker 'datatype.float'}},\n                                      \"languageCode\": \"\"\n                                    }\n                                  ]\n                                },\n                                \"text\": \"\"\n                              }\n                            ]\n                          }\n                        ]\n                      }\n                    ],\n                    \"property\": {\n                      \"detectedBreak\": {\n                        \"isPrefix\": {{faker 'datatype.boolean'}},\n                        \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                      },\n                      \"detectedLanguages\": [\n                        {\n                          \"confidence\": {{faker 'datatype.float'}},\n                          \"languageCode\": \"\"\n                        }\n                      ]\n                    }\n                  }\n                ],\n                \"confidence\": {{faker 'datatype.float'}},\n                \"height\": {{faker 'datatype.number'}},\n                \"property\": {\n                  \"detectedBreak\": {\n                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                  },\n                  \"detectedLanguages\": [\n                    {\n                      \"confidence\": {{faker 'datatype.float'}},\n                      \"languageCode\": \"\"\n                    }\n                  ]\n                },\n                \"width\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"text\": \"\"\n          },\n          \"imagePropertiesAnnotation\": {\n            \"dominantColors\": {\n              \"colors\": [\n                {\n                  \"color\": {\n                    \"alpha\": {{faker 'datatype.float'}},\n                    \"blue\": {{faker 'datatype.float'}},\n                    \"green\": {{faker 'datatype.float'}},\n                    \"red\": {{faker 'datatype.float'}}\n                  },\n                  \"pixelFraction\": {{faker 'datatype.float'}},\n                  \"score\": {{faker 'datatype.float'}}\n                }\n              ]\n            }\n          },\n          \"labelAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"landmarkAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"localizedObjectAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"languageCode\": \"\",\n              \"mid\": \"\",\n              \"name\": \"\",\n              \"score\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"logoAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"productSearchResults\": {\n            \"indexTime\": \"\",\n            \"productGroupedResults\": [\n              {\n                \"boundingPoly\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"objectAnnotations\": [\n                  {\n                    \"languageCode\": \"\",\n                    \"mid\": \"\",\n                    \"name\": \"\",\n                    \"score\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"results\": [\n                  {\n                    \"image\": \"\",\n                    \"product\": {\n                      \"description\": \"\",\n                      \"displayName\": \"\",\n                      \"name\": \"\",\n                      \"productCategory\": \"\",\n                      \"productLabels\": [\n                        {\n                          \"key\": \"\",\n                          \"value\": \"\"\n                        }\n                      ]\n                    },\n                    \"score\": {{faker 'datatype.float'}}\n                  }\n                ]\n              }\n            ],\n            \"results\": [\n              {\n                \"image\": \"\",\n                \"product\": {\n                  \"description\": \"\",\n                  \"displayName\": \"\",\n                  \"name\": \"\",\n                  \"productCategory\": \"\",\n                  \"productLabels\": [\n                    {\n                      \"key\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                },\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          },\n          \"safeSearchAnnotation\": {\n            \"adult\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"medical\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"racy\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"spoof\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"violence\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n          },\n          \"textAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"webDetection\": {\n            \"bestGuessLabels\": [\n              {\n                \"label\": \"\",\n                \"languageCode\": \"\"\n              }\n            ],\n            \"fullMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"pagesWithMatchingImages\": [\n              {\n                \"fullMatchingImages\": [\n                  {\n                    \"score\": {{faker 'datatype.float'}},\n                    \"url\": \"\"\n                  }\n                ],\n                \"pageTitle\": \"\",\n                \"partialMatchingImages\": [\n                  {\n                    \"score\": {{faker 'datatype.float'}},\n                    \"url\": \"\"\n                  }\n                ],\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"partialMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"visuallySimilarImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"webEntities\": [\n              {\n                \"description\": \"\",\n                \"entityId\": \"\",\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          }\n        }\n      ],\n      \"totalPages\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5929bacb-084c-4c44-9850-22a542a6cb74",
      "documentation": "Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
      "method": "post",
      "endpoint": "v1p2beta1/files:asyncBatchAnnotate",
      "responses": [
        {
          "uuid": "bee7eac7-546c-4e32-b153-8a8c3e82309b",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6b42b35-bade-44ef-8cf9-301589f9df37",
      "documentation": "Run image detection and annotation for a batch of images.",
      "method": "post",
      "endpoint": "v1p2beta1/images:annotate",
      "responses": [
        {
          "uuid": "cf9d9e18-d17b-44d7-b7d7-9b31b7f82538",
          "body": "{\n  \"responses\": [\n    {\n      \"context\": {\n        \"pageNumber\": {{faker 'datatype.number'}},\n        \"uri\": \"\"\n      },\n      \"cropHintsAnnotation\": {\n        \"cropHints\": [\n          {\n            \"boundingPoly\": {\n              \"normalizedVertices\": [\n                {\n                  \"x\": {{faker 'datatype.float'}},\n                  \"y\": {{faker 'datatype.float'}}\n                }\n              ],\n              \"vertices\": [\n                {\n                  \"x\": {{faker 'datatype.number'}},\n                  \"y\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"confidence\": {{faker 'datatype.float'}},\n            \"importanceFraction\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"faceAnnotations\": [\n        {\n          \"angerLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"blurredLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"detectionConfidence\": {{faker 'datatype.float'}},\n          \"fdBoundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"headwearLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"joyLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"landmarkingConfidence\": {{faker 'datatype.float'}},\n          \"landmarks\": [\n            {\n              \"position\": {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}},\n                \"z\": {{faker 'datatype.float'}}\n              },\n              \"type\": \"{{oneOf (array 'UNKNOWN_LANDMARK' 'LEFT_EYE' 'RIGHT_EYE' 'LEFT_OF_LEFT_EYEBROW' 'RIGHT_OF_LEFT_EYEBROW' 'LEFT_OF_RIGHT_EYEBROW' 'RIGHT_OF_RIGHT_EYEBROW' 'MIDPOINT_BETWEEN_EYES' 'NOSE_TIP' 'UPPER_LIP' 'LOWER_LIP' 'MOUTH_LEFT' 'MOUTH_RIGHT' 'MOUTH_CENTER' 'NOSE_BOTTOM_RIGHT' 'NOSE_BOTTOM_LEFT' 'NOSE_BOTTOM_CENTER' 'LEFT_EYE_TOP_BOUNDARY' 'LEFT_EYE_RIGHT_CORNER' 'LEFT_EYE_BOTTOM_BOUNDARY' 'LEFT_EYE_LEFT_CORNER' 'RIGHT_EYE_TOP_BOUNDARY' 'RIGHT_EYE_RIGHT_CORNER' 'RIGHT_EYE_BOTTOM_BOUNDARY' 'RIGHT_EYE_LEFT_CORNER' 'LEFT_EYEBROW_UPPER_MIDPOINT' 'RIGHT_EYEBROW_UPPER_MIDPOINT' 'LEFT_EAR_TRAGION' 'RIGHT_EAR_TRAGION' 'LEFT_EYE_PUPIL' 'RIGHT_EYE_PUPIL' 'FOREHEAD_GLABELLA' 'CHIN_GNATHION' 'CHIN_LEFT_GONION' 'CHIN_RIGHT_GONION' 'LEFT_CHEEK_CENTER' 'RIGHT_CHEEK_CENTER')}}\"\n            }\n          ],\n          \"panAngle\": {{faker 'datatype.float'}},\n          \"rollAngle\": {{faker 'datatype.float'}},\n          \"sorrowLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"surpriseLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"tiltAngle\": {{faker 'datatype.float'}},\n          \"underExposedLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n        }\n      ],\n      \"fullTextAnnotation\": {\n        \"pages\": [\n          {\n            \"blocks\": [\n              {\n                \"blockType\": \"{{oneOf (array 'UNKNOWN' 'TEXT' 'TABLE' 'PICTURE' 'RULER' 'BARCODE')}}\",\n                \"boundingBox\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"confidence\": {{faker 'datatype.float'}},\n                \"paragraphs\": [\n                  {\n                    \"boundingBox\": {\n                      \"normalizedVertices\": [\n                        {\n                          \"x\": {{faker 'datatype.float'}},\n                          \"y\": {{faker 'datatype.float'}}\n                        }\n                      ],\n                      \"vertices\": [\n                        {\n                          \"x\": {{faker 'datatype.number'}},\n                          \"y\": {{faker 'datatype.number'}}\n                        }\n                      ]\n                    },\n                    \"confidence\": {{faker 'datatype.float'}},\n                    \"property\": {\n                      \"detectedBreak\": {\n                        \"isPrefix\": {{faker 'datatype.boolean'}},\n                        \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                      },\n                      \"detectedLanguages\": [\n                        {\n                          \"confidence\": {{faker 'datatype.float'}},\n                          \"languageCode\": \"\"\n                        }\n                      ]\n                    },\n                    \"words\": [\n                      {\n                        \"boundingBox\": {\n                          \"normalizedVertices\": [\n                            {\n                              \"x\": {{faker 'datatype.float'}},\n                              \"y\": {{faker 'datatype.float'}}\n                            }\n                          ],\n                          \"vertices\": [\n                            {\n                              \"x\": {{faker 'datatype.number'}},\n                              \"y\": {{faker 'datatype.number'}}\n                            }\n                          ]\n                        },\n                        \"confidence\": {{faker 'datatype.float'}},\n                        \"property\": {\n                          \"detectedBreak\": {\n                            \"isPrefix\": {{faker 'datatype.boolean'}},\n                            \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                          },\n                          \"detectedLanguages\": [\n                            {\n                              \"confidence\": {{faker 'datatype.float'}},\n                              \"languageCode\": \"\"\n                            }\n                          ]\n                        },\n                        \"symbols\": [\n                          {\n                            \"boundingBox\": {\n                              \"normalizedVertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.float'}},\n                                  \"y\": {{faker 'datatype.float'}}\n                                }\n                              ],\n                              \"vertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.number'}},\n                                  \"y\": {{faker 'datatype.number'}}\n                                }\n                              ]\n                            },\n                            \"confidence\": {{faker 'datatype.float'}},\n                            \"property\": {\n                              \"detectedBreak\": {\n                                \"isPrefix\": {{faker 'datatype.boolean'}},\n                                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                              },\n                              \"detectedLanguages\": [\n                                {\n                                  \"confidence\": {{faker 'datatype.float'}},\n                                  \"languageCode\": \"\"\n                                }\n                              ]\n                            },\n                            \"text\": \"\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ],\n                \"property\": {\n                  \"detectedBreak\": {\n                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                  },\n                  \"detectedLanguages\": [\n                    {\n                      \"confidence\": {{faker 'datatype.float'}},\n                      \"languageCode\": \"\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"confidence\": {{faker 'datatype.float'}},\n            \"height\": {{faker 'datatype.number'}},\n            \"property\": {\n              \"detectedBreak\": {\n                \"isPrefix\": {{faker 'datatype.boolean'}},\n                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n              },\n              \"detectedLanguages\": [\n                {\n                  \"confidence\": {{faker 'datatype.float'}},\n                  \"languageCode\": \"\"\n                }\n              ]\n            },\n            \"width\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"text\": \"\"\n      },\n      \"imagePropertiesAnnotation\": {\n        \"dominantColors\": {\n          \"colors\": [\n            {\n              \"color\": {\n                \"alpha\": {{faker 'datatype.float'}},\n                \"blue\": {{faker 'datatype.float'}},\n                \"green\": {{faker 'datatype.float'}},\n                \"red\": {{faker 'datatype.float'}}\n              },\n              \"pixelFraction\": {{faker 'datatype.float'}},\n              \"score\": {{faker 'datatype.float'}}\n            }\n          ]\n        }\n      },\n      \"labelAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"landmarkAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"localizedObjectAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"languageCode\": \"\",\n          \"mid\": \"\",\n          \"name\": \"\",\n          \"score\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"logoAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"productSearchResults\": {\n        \"indexTime\": \"\",\n        \"productGroupedResults\": [\n          {\n            \"boundingPoly\": {\n              \"normalizedVertices\": [\n                {\n                  \"x\": {{faker 'datatype.float'}},\n                  \"y\": {{faker 'datatype.float'}}\n                }\n              ],\n              \"vertices\": [\n                {\n                  \"x\": {{faker 'datatype.number'}},\n                  \"y\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"objectAnnotations\": [\n              {\n                \"languageCode\": \"\",\n                \"mid\": \"\",\n                \"name\": \"\",\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"results\": [\n              {\n                \"image\": \"\",\n                \"product\": {\n                  \"description\": \"\",\n                  \"displayName\": \"\",\n                  \"name\": \"\",\n                  \"productCategory\": \"\",\n                  \"productLabels\": [\n                    {\n                      \"key\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                },\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          }\n        ],\n        \"results\": [\n          {\n            \"image\": \"\",\n            \"product\": {\n              \"description\": \"\",\n              \"displayName\": \"\",\n              \"name\": \"\",\n              \"productCategory\": \"\",\n              \"productLabels\": [\n                {\n                  \"key\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            },\n            \"score\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"safeSearchAnnotation\": {\n        \"adult\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"medical\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"racy\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"spoof\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"violence\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n      },\n      \"textAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"webDetection\": {\n        \"bestGuessLabels\": [\n          {\n            \"label\": \"\",\n            \"languageCode\": \"\"\n          }\n        ],\n        \"fullMatchingImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"pagesWithMatchingImages\": [\n          {\n            \"fullMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"pageTitle\": \"\",\n            \"partialMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"partialMatchingImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"visuallySimilarImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"webEntities\": [\n          {\n            \"description\": \"\",\n            \"entityId\": \"\",\n            \"score\": {{faker 'datatype.float'}}\n          }\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71c00dfa-57d0-492e-862b-8f0e0ac58199",
      "documentation": "Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
      "method": "post",
      "endpoint": "v1p2beta1/images:asyncBatchAnnotate",
      "responses": [
        {
          "uuid": "f47cfd79-8255-4f4e-8e80-0d6fc6ef0e64",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c6ac9b8-2058-4df0-ad24-5f09c60f60d4",
      "documentation": "Service that performs image detection and annotation for a batch of files. Now only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted.",
      "method": "post",
      "endpoint": "v1p2beta1/:parent/files:annotate",
      "responses": [
        {
          "uuid": "00fa6d13-6d5f-438c-94f2-5df2872add6c",
          "body": "{\n  \"responses\": [\n    {\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"inputConfig\": {\n        \"content\": \"\",\n        \"gcsSource\": {\n          \"uri\": \"\"\n        },\n        \"mimeType\": \"\"\n      },\n      \"responses\": [\n        {\n          \"context\": {\n            \"pageNumber\": {{faker 'datatype.number'}},\n            \"uri\": \"\"\n          },\n          \"cropHintsAnnotation\": {\n            \"cropHints\": [\n              {\n                \"boundingPoly\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"confidence\": {{faker 'datatype.float'}},\n                \"importanceFraction\": {{faker 'datatype.float'}}\n              }\n            ]\n          },\n          \"error\": {\n            \"code\": {{faker 'datatype.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"faceAnnotations\": [\n            {\n              \"angerLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"blurredLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"detectionConfidence\": {{faker 'datatype.float'}},\n              \"fdBoundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"headwearLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"joyLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"landmarkingConfidence\": {{faker 'datatype.float'}},\n              \"landmarks\": [\n                {\n                  \"position\": {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}},\n                    \"z\": {{faker 'datatype.float'}}\n                  },\n                  \"type\": \"{{oneOf (array 'UNKNOWN_LANDMARK' 'LEFT_EYE' 'RIGHT_EYE' 'LEFT_OF_LEFT_EYEBROW' 'RIGHT_OF_LEFT_EYEBROW' 'LEFT_OF_RIGHT_EYEBROW' 'RIGHT_OF_RIGHT_EYEBROW' 'MIDPOINT_BETWEEN_EYES' 'NOSE_TIP' 'UPPER_LIP' 'LOWER_LIP' 'MOUTH_LEFT' 'MOUTH_RIGHT' 'MOUTH_CENTER' 'NOSE_BOTTOM_RIGHT' 'NOSE_BOTTOM_LEFT' 'NOSE_BOTTOM_CENTER' 'LEFT_EYE_TOP_BOUNDARY' 'LEFT_EYE_RIGHT_CORNER' 'LEFT_EYE_BOTTOM_BOUNDARY' 'LEFT_EYE_LEFT_CORNER' 'RIGHT_EYE_TOP_BOUNDARY' 'RIGHT_EYE_RIGHT_CORNER' 'RIGHT_EYE_BOTTOM_BOUNDARY' 'RIGHT_EYE_LEFT_CORNER' 'LEFT_EYEBROW_UPPER_MIDPOINT' 'RIGHT_EYEBROW_UPPER_MIDPOINT' 'LEFT_EAR_TRAGION' 'RIGHT_EAR_TRAGION' 'LEFT_EYE_PUPIL' 'RIGHT_EYE_PUPIL' 'FOREHEAD_GLABELLA' 'CHIN_GNATHION' 'CHIN_LEFT_GONION' 'CHIN_RIGHT_GONION' 'LEFT_CHEEK_CENTER' 'RIGHT_CHEEK_CENTER')}}\"\n                }\n              ],\n              \"panAngle\": {{faker 'datatype.float'}},\n              \"rollAngle\": {{faker 'datatype.float'}},\n              \"sorrowLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"surpriseLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"tiltAngle\": {{faker 'datatype.float'}},\n              \"underExposedLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n            }\n          ],\n          \"fullTextAnnotation\": {\n            \"pages\": [\n              {\n                \"blocks\": [\n                  {\n                    \"blockType\": \"{{oneOf (array 'UNKNOWN' 'TEXT' 'TABLE' 'PICTURE' 'RULER' 'BARCODE')}}\",\n                    \"boundingBox\": {\n                      \"normalizedVertices\": [\n                        {\n                          \"x\": {{faker 'datatype.float'}},\n                          \"y\": {{faker 'datatype.float'}}\n                        }\n                      ],\n                      \"vertices\": [\n                        {\n                          \"x\": {{faker 'datatype.number'}},\n                          \"y\": {{faker 'datatype.number'}}\n                        }\n                      ]\n                    },\n                    \"confidence\": {{faker 'datatype.float'}},\n                    \"paragraphs\": [\n                      {\n                        \"boundingBox\": {\n                          \"normalizedVertices\": [\n                            {\n                              \"x\": {{faker 'datatype.float'}},\n                              \"y\": {{faker 'datatype.float'}}\n                            }\n                          ],\n                          \"vertices\": [\n                            {\n                              \"x\": {{faker 'datatype.number'}},\n                              \"y\": {{faker 'datatype.number'}}\n                            }\n                          ]\n                        },\n                        \"confidence\": {{faker 'datatype.float'}},\n                        \"property\": {\n                          \"detectedBreak\": {\n                            \"isPrefix\": {{faker 'datatype.boolean'}},\n                            \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                          },\n                          \"detectedLanguages\": [\n                            {\n                              \"confidence\": {{faker 'datatype.float'}},\n                              \"languageCode\": \"\"\n                            }\n                          ]\n                        },\n                        \"words\": [\n                          {\n                            \"boundingBox\": {\n                              \"normalizedVertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.float'}},\n                                  \"y\": {{faker 'datatype.float'}}\n                                }\n                              ],\n                              \"vertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.number'}},\n                                  \"y\": {{faker 'datatype.number'}}\n                                }\n                              ]\n                            },\n                            \"confidence\": {{faker 'datatype.float'}},\n                            \"property\": {\n                              \"detectedBreak\": {\n                                \"isPrefix\": {{faker 'datatype.boolean'}},\n                                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                              },\n                              \"detectedLanguages\": [\n                                {\n                                  \"confidence\": {{faker 'datatype.float'}},\n                                  \"languageCode\": \"\"\n                                }\n                              ]\n                            },\n                            \"symbols\": [\n                              {\n                                \"boundingBox\": {\n                                  \"normalizedVertices\": [\n                                    {\n                                      \"x\": {{faker 'datatype.float'}},\n                                      \"y\": {{faker 'datatype.float'}}\n                                    }\n                                  ],\n                                  \"vertices\": [\n                                    {\n                                      \"x\": {{faker 'datatype.number'}},\n                                      \"y\": {{faker 'datatype.number'}}\n                                    }\n                                  ]\n                                },\n                                \"confidence\": {{faker 'datatype.float'}},\n                                \"property\": {\n                                  \"detectedBreak\": {\n                                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                                  },\n                                  \"detectedLanguages\": [\n                                    {\n                                      \"confidence\": {{faker 'datatype.float'}},\n                                      \"languageCode\": \"\"\n                                    }\n                                  ]\n                                },\n                                \"text\": \"\"\n                              }\n                            ]\n                          }\n                        ]\n                      }\n                    ],\n                    \"property\": {\n                      \"detectedBreak\": {\n                        \"isPrefix\": {{faker 'datatype.boolean'}},\n                        \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                      },\n                      \"detectedLanguages\": [\n                        {\n                          \"confidence\": {{faker 'datatype.float'}},\n                          \"languageCode\": \"\"\n                        }\n                      ]\n                    }\n                  }\n                ],\n                \"confidence\": {{faker 'datatype.float'}},\n                \"height\": {{faker 'datatype.number'}},\n                \"property\": {\n                  \"detectedBreak\": {\n                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                  },\n                  \"detectedLanguages\": [\n                    {\n                      \"confidence\": {{faker 'datatype.float'}},\n                      \"languageCode\": \"\"\n                    }\n                  ]\n                },\n                \"width\": {{faker 'datatype.number'}}\n              }\n            ],\n            \"text\": \"\"\n          },\n          \"imagePropertiesAnnotation\": {\n            \"dominantColors\": {\n              \"colors\": [\n                {\n                  \"color\": {\n                    \"alpha\": {{faker 'datatype.float'}},\n                    \"blue\": {{faker 'datatype.float'}},\n                    \"green\": {{faker 'datatype.float'}},\n                    \"red\": {{faker 'datatype.float'}}\n                  },\n                  \"pixelFraction\": {{faker 'datatype.float'}},\n                  \"score\": {{faker 'datatype.float'}}\n                }\n              ]\n            }\n          },\n          \"labelAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"landmarkAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"localizedObjectAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"languageCode\": \"\",\n              \"mid\": \"\",\n              \"name\": \"\",\n              \"score\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"logoAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"productSearchResults\": {\n            \"indexTime\": \"\",\n            \"productGroupedResults\": [\n              {\n                \"boundingPoly\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"objectAnnotations\": [\n                  {\n                    \"languageCode\": \"\",\n                    \"mid\": \"\",\n                    \"name\": \"\",\n                    \"score\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"results\": [\n                  {\n                    \"image\": \"\",\n                    \"product\": {\n                      \"description\": \"\",\n                      \"displayName\": \"\",\n                      \"name\": \"\",\n                      \"productCategory\": \"\",\n                      \"productLabels\": [\n                        {\n                          \"key\": \"\",\n                          \"value\": \"\"\n                        }\n                      ]\n                    },\n                    \"score\": {{faker 'datatype.float'}}\n                  }\n                ]\n              }\n            ],\n            \"results\": [\n              {\n                \"image\": \"\",\n                \"product\": {\n                  \"description\": \"\",\n                  \"displayName\": \"\",\n                  \"name\": \"\",\n                  \"productCategory\": \"\",\n                  \"productLabels\": [\n                    {\n                      \"key\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                },\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          },\n          \"safeSearchAnnotation\": {\n            \"adult\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"medical\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"racy\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"spoof\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"violence\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n          },\n          \"textAnnotations\": [\n            {\n              \"boundingPoly\": {\n                \"normalizedVertices\": [\n                  {\n                    \"x\": {{faker 'datatype.float'}},\n                    \"y\": {{faker 'datatype.float'}}\n                  }\n                ],\n                \"vertices\": [\n                  {\n                    \"x\": {{faker 'datatype.number'}},\n                    \"y\": {{faker 'datatype.number'}}\n                  }\n                ]\n              },\n              \"confidence\": {{faker 'datatype.float'}},\n              \"description\": \"\",\n              \"locale\": \"\",\n              \"locations\": [\n                {\n                  \"latLng\": {\n                    \"latitude\": {{faker 'datatype.float'}},\n                    \"longitude\": {{faker 'datatype.float'}}\n                  }\n                }\n              ],\n              \"mid\": \"\",\n              \"properties\": [\n                {\n                  \"name\": \"\",\n                  \"uint64Value\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"score\": {{faker 'datatype.float'}},\n              \"topicality\": {{faker 'datatype.float'}}\n            }\n          ],\n          \"webDetection\": {\n            \"bestGuessLabels\": [\n              {\n                \"label\": \"\",\n                \"languageCode\": \"\"\n              }\n            ],\n            \"fullMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"pagesWithMatchingImages\": [\n              {\n                \"fullMatchingImages\": [\n                  {\n                    \"score\": {{faker 'datatype.float'}},\n                    \"url\": \"\"\n                  }\n                ],\n                \"pageTitle\": \"\",\n                \"partialMatchingImages\": [\n                  {\n                    \"score\": {{faker 'datatype.float'}},\n                    \"url\": \"\"\n                  }\n                ],\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"partialMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"visuallySimilarImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"webEntities\": [\n              {\n                \"description\": \"\",\n                \"entityId\": \"\",\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          }\n        }\n      ],\n      \"totalPages\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f05cebc-041b-4106-9b1e-60421ce12b9d",
      "documentation": "Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
      "method": "post",
      "endpoint": "v1p2beta1/:parent/files:asyncBatchAnnotate",
      "responses": [
        {
          "uuid": "18ff659f-4938-4a11-93ce-2b9ffda8a733",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e9c6853-93b0-4b35-accb-f15877f12a39",
      "documentation": "Run image detection and annotation for a batch of images.",
      "method": "post",
      "endpoint": "v1p2beta1/:parent/images:annotate",
      "responses": [
        {
          "uuid": "0e23805d-d7b9-488d-abd6-a3f1c6ed9d8b",
          "body": "{\n  \"responses\": [\n    {\n      \"context\": {\n        \"pageNumber\": {{faker 'datatype.number'}},\n        \"uri\": \"\"\n      },\n      \"cropHintsAnnotation\": {\n        \"cropHints\": [\n          {\n            \"boundingPoly\": {\n              \"normalizedVertices\": [\n                {\n                  \"x\": {{faker 'datatype.float'}},\n                  \"y\": {{faker 'datatype.float'}}\n                }\n              ],\n              \"vertices\": [\n                {\n                  \"x\": {{faker 'datatype.number'}},\n                  \"y\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"confidence\": {{faker 'datatype.float'}},\n            \"importanceFraction\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"faceAnnotations\": [\n        {\n          \"angerLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"blurredLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"detectionConfidence\": {{faker 'datatype.float'}},\n          \"fdBoundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"headwearLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"joyLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"landmarkingConfidence\": {{faker 'datatype.float'}},\n          \"landmarks\": [\n            {\n              \"position\": {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}},\n                \"z\": {{faker 'datatype.float'}}\n              },\n              \"type\": \"{{oneOf (array 'UNKNOWN_LANDMARK' 'LEFT_EYE' 'RIGHT_EYE' 'LEFT_OF_LEFT_EYEBROW' 'RIGHT_OF_LEFT_EYEBROW' 'LEFT_OF_RIGHT_EYEBROW' 'RIGHT_OF_RIGHT_EYEBROW' 'MIDPOINT_BETWEEN_EYES' 'NOSE_TIP' 'UPPER_LIP' 'LOWER_LIP' 'MOUTH_LEFT' 'MOUTH_RIGHT' 'MOUTH_CENTER' 'NOSE_BOTTOM_RIGHT' 'NOSE_BOTTOM_LEFT' 'NOSE_BOTTOM_CENTER' 'LEFT_EYE_TOP_BOUNDARY' 'LEFT_EYE_RIGHT_CORNER' 'LEFT_EYE_BOTTOM_BOUNDARY' 'LEFT_EYE_LEFT_CORNER' 'RIGHT_EYE_TOP_BOUNDARY' 'RIGHT_EYE_RIGHT_CORNER' 'RIGHT_EYE_BOTTOM_BOUNDARY' 'RIGHT_EYE_LEFT_CORNER' 'LEFT_EYEBROW_UPPER_MIDPOINT' 'RIGHT_EYEBROW_UPPER_MIDPOINT' 'LEFT_EAR_TRAGION' 'RIGHT_EAR_TRAGION' 'LEFT_EYE_PUPIL' 'RIGHT_EYE_PUPIL' 'FOREHEAD_GLABELLA' 'CHIN_GNATHION' 'CHIN_LEFT_GONION' 'CHIN_RIGHT_GONION' 'LEFT_CHEEK_CENTER' 'RIGHT_CHEEK_CENTER')}}\"\n            }\n          ],\n          \"panAngle\": {{faker 'datatype.float'}},\n          \"rollAngle\": {{faker 'datatype.float'}},\n          \"sorrowLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"surpriseLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"tiltAngle\": {{faker 'datatype.float'}},\n          \"underExposedLikelihood\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n        }\n      ],\n      \"fullTextAnnotation\": {\n        \"pages\": [\n          {\n            \"blocks\": [\n              {\n                \"blockType\": \"{{oneOf (array 'UNKNOWN' 'TEXT' 'TABLE' 'PICTURE' 'RULER' 'BARCODE')}}\",\n                \"boundingBox\": {\n                  \"normalizedVertices\": [\n                    {\n                      \"x\": {{faker 'datatype.float'}},\n                      \"y\": {{faker 'datatype.float'}}\n                    }\n                  ],\n                  \"vertices\": [\n                    {\n                      \"x\": {{faker 'datatype.number'}},\n                      \"y\": {{faker 'datatype.number'}}\n                    }\n                  ]\n                },\n                \"confidence\": {{faker 'datatype.float'}},\n                \"paragraphs\": [\n                  {\n                    \"boundingBox\": {\n                      \"normalizedVertices\": [\n                        {\n                          \"x\": {{faker 'datatype.float'}},\n                          \"y\": {{faker 'datatype.float'}}\n                        }\n                      ],\n                      \"vertices\": [\n                        {\n                          \"x\": {{faker 'datatype.number'}},\n                          \"y\": {{faker 'datatype.number'}}\n                        }\n                      ]\n                    },\n                    \"confidence\": {{faker 'datatype.float'}},\n                    \"property\": {\n                      \"detectedBreak\": {\n                        \"isPrefix\": {{faker 'datatype.boolean'}},\n                        \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                      },\n                      \"detectedLanguages\": [\n                        {\n                          \"confidence\": {{faker 'datatype.float'}},\n                          \"languageCode\": \"\"\n                        }\n                      ]\n                    },\n                    \"words\": [\n                      {\n                        \"boundingBox\": {\n                          \"normalizedVertices\": [\n                            {\n                              \"x\": {{faker 'datatype.float'}},\n                              \"y\": {{faker 'datatype.float'}}\n                            }\n                          ],\n                          \"vertices\": [\n                            {\n                              \"x\": {{faker 'datatype.number'}},\n                              \"y\": {{faker 'datatype.number'}}\n                            }\n                          ]\n                        },\n                        \"confidence\": {{faker 'datatype.float'}},\n                        \"property\": {\n                          \"detectedBreak\": {\n                            \"isPrefix\": {{faker 'datatype.boolean'}},\n                            \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                          },\n                          \"detectedLanguages\": [\n                            {\n                              \"confidence\": {{faker 'datatype.float'}},\n                              \"languageCode\": \"\"\n                            }\n                          ]\n                        },\n                        \"symbols\": [\n                          {\n                            \"boundingBox\": {\n                              \"normalizedVertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.float'}},\n                                  \"y\": {{faker 'datatype.float'}}\n                                }\n                              ],\n                              \"vertices\": [\n                                {\n                                  \"x\": {{faker 'datatype.number'}},\n                                  \"y\": {{faker 'datatype.number'}}\n                                }\n                              ]\n                            },\n                            \"confidence\": {{faker 'datatype.float'}},\n                            \"property\": {\n                              \"detectedBreak\": {\n                                \"isPrefix\": {{faker 'datatype.boolean'}},\n                                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                              },\n                              \"detectedLanguages\": [\n                                {\n                                  \"confidence\": {{faker 'datatype.float'}},\n                                  \"languageCode\": \"\"\n                                }\n                              ]\n                            },\n                            \"text\": \"\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ],\n                \"property\": {\n                  \"detectedBreak\": {\n                    \"isPrefix\": {{faker 'datatype.boolean'}},\n                    \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n                  },\n                  \"detectedLanguages\": [\n                    {\n                      \"confidence\": {{faker 'datatype.float'}},\n                      \"languageCode\": \"\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"confidence\": {{faker 'datatype.float'}},\n            \"height\": {{faker 'datatype.number'}},\n            \"property\": {\n              \"detectedBreak\": {\n                \"isPrefix\": {{faker 'datatype.boolean'}},\n                \"type\": \"{{oneOf (array 'UNKNOWN' 'SPACE' 'SURE_SPACE' 'EOL_SURE_SPACE' 'HYPHEN' 'LINE_BREAK')}}\"\n              },\n              \"detectedLanguages\": [\n                {\n                  \"confidence\": {{faker 'datatype.float'}},\n                  \"languageCode\": \"\"\n                }\n              ]\n            },\n            \"width\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"text\": \"\"\n      },\n      \"imagePropertiesAnnotation\": {\n        \"dominantColors\": {\n          \"colors\": [\n            {\n              \"color\": {\n                \"alpha\": {{faker 'datatype.float'}},\n                \"blue\": {{faker 'datatype.float'}},\n                \"green\": {{faker 'datatype.float'}},\n                \"red\": {{faker 'datatype.float'}}\n              },\n              \"pixelFraction\": {{faker 'datatype.float'}},\n              \"score\": {{faker 'datatype.float'}}\n            }\n          ]\n        }\n      },\n      \"labelAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"landmarkAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"localizedObjectAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"languageCode\": \"\",\n          \"mid\": \"\",\n          \"name\": \"\",\n          \"score\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"logoAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"productSearchResults\": {\n        \"indexTime\": \"\",\n        \"productGroupedResults\": [\n          {\n            \"boundingPoly\": {\n              \"normalizedVertices\": [\n                {\n                  \"x\": {{faker 'datatype.float'}},\n                  \"y\": {{faker 'datatype.float'}}\n                }\n              ],\n              \"vertices\": [\n                {\n                  \"x\": {{faker 'datatype.number'}},\n                  \"y\": {{faker 'datatype.number'}}\n                }\n              ]\n            },\n            \"objectAnnotations\": [\n              {\n                \"languageCode\": \"\",\n                \"mid\": \"\",\n                \"name\": \"\",\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"results\": [\n              {\n                \"image\": \"\",\n                \"product\": {\n                  \"description\": \"\",\n                  \"displayName\": \"\",\n                  \"name\": \"\",\n                  \"productCategory\": \"\",\n                  \"productLabels\": [\n                    {\n                      \"key\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                },\n                \"score\": {{faker 'datatype.float'}}\n              }\n            ]\n          }\n        ],\n        \"results\": [\n          {\n            \"image\": \"\",\n            \"product\": {\n              \"description\": \"\",\n              \"displayName\": \"\",\n              \"name\": \"\",\n              \"productCategory\": \"\",\n              \"productLabels\": [\n                {\n                  \"key\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            },\n            \"score\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"safeSearchAnnotation\": {\n        \"adult\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"medical\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"racy\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"spoof\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"violence\": \"{{oneOf (array 'UNKNOWN' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\"\n      },\n      \"textAnnotations\": [\n        {\n          \"boundingPoly\": {\n            \"normalizedVertices\": [\n              {\n                \"x\": {{faker 'datatype.float'}},\n                \"y\": {{faker 'datatype.float'}}\n              }\n            ],\n            \"vertices\": [\n              {\n                \"x\": {{faker 'datatype.number'}},\n                \"y\": {{faker 'datatype.number'}}\n              }\n            ]\n          },\n          \"confidence\": {{faker 'datatype.float'}},\n          \"description\": \"\",\n          \"locale\": \"\",\n          \"locations\": [\n            {\n              \"latLng\": {\n                \"latitude\": {{faker 'datatype.float'}},\n                \"longitude\": {{faker 'datatype.float'}}\n              }\n            }\n          ],\n          \"mid\": \"\",\n          \"properties\": [\n            {\n              \"name\": \"\",\n              \"uint64Value\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"score\": {{faker 'datatype.float'}},\n          \"topicality\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"webDetection\": {\n        \"bestGuessLabels\": [\n          {\n            \"label\": \"\",\n            \"languageCode\": \"\"\n          }\n        ],\n        \"fullMatchingImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"pagesWithMatchingImages\": [\n          {\n            \"fullMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"pageTitle\": \"\",\n            \"partialMatchingImages\": [\n              {\n                \"score\": {{faker 'datatype.float'}},\n                \"url\": \"\"\n              }\n            ],\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"partialMatchingImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"visuallySimilarImages\": [\n          {\n            \"score\": {{faker 'datatype.float'}},\n            \"url\": \"\"\n          }\n        ],\n        \"webEntities\": [\n          {\n            \"description\": \"\",\n            \"entityId\": \"\",\n            \"score\": {{faker 'datatype.float'}}\n          }\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35590d69-08b8-4bff-b180-565b3b3d053c",
      "documentation": "Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
      "method": "post",
      "endpoint": "v1p2beta1/:parent/images:asyncBatchAnnotate",
      "responses": [
        {
          "uuid": "e471810b-55e3-4535-b537-984a4d672991",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}