{
  "uuid": "cf7800d7-6308-46aa-96e3-cacc7321305e",
  "lastMigration": 24,
  "name": "Amazon FSx",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "bc9f4b92-6d85-4de7-9e9e-be358edf73aa",
      "documentation": "<p>Use this action to associate one or more Domain Name Server (DNS) aliases with an existing Amazon FSx for Windows File Server file system. A file system can have a maximum of 50 DNS aliases associated with it at any one time. If you try to associate a DNS alias that is already associated with the file system, FSx takes no action on that alias in the request. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">Working with DNS Aliases</a> and <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/walkthrough05-file-system-custom-CNAME.html\">Walkthrough 5: Using DNS aliases to access your file system</a>, including additional steps you must take to be able to access your file system using a DNS alias.</p> <p>The system response shows the DNS aliases that Amazon FSx is attempting to associate with the file system. Use the API operation to monitor the status of the aliases Amazon FSx is associating with the file system.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.AssociateFileSystemAliases",
      "responses": [
        {
          "uuid": "e7d9e7d5-0df7-49a8-9e1b-babba435f894",
          "body": "{\n  \"Aliases\": [\n    {\n      \"Name\": \"\",\n      \"Lifecycle\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8228afe9-bb11-4b40-abae-a715b52a5548",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c66d8fc-ce86-4e9c-b024-d5cef0b29ec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60094042-b188-4955-b19d-58ed0d0a6de2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "68dff5bf-e971-41e2-9b8f-9de9fa975a8f",
      "documentation": "<p>Cancels an existing Amazon FSx for Lustre data repository task if that task is in either the <code>PENDING</code> or <code>EXECUTING</code> state. When you cancel a task, Amazon FSx does the following.</p> <ul> <li> <p>Any files that FSx has already exported are not reverted.</p> </li> <li> <p>FSx continues to export any files that are \"in-flight\" when the cancel operation is received.</p> </li> <li> <p>FSx does not export any files that have not yet been exported.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CancelDataRepositoryTask",
      "responses": [
        {
          "uuid": "fd5201d8-8986-4517-b98a-9d6cb088f300",
          "body": "{\n  \"Lifecycle\": \"\",\n  \"TaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e666d3d-ba3b-442b-928b-06768a6f23bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a69b2dc5-2de3-44fd-9e07-5cfa91f6b09b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ef1f706-6083-4735-83e6-6932fd86f8a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DataRepositoryTaskNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b25d9d3-e964-4691-8eb4-7ee12db5be7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DataRepositoryTaskEnded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dddc0f5b-def2-4c29-a64f-38ba22c42735",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af9976a5-4e75-4708-a6e8-aca339e10a0b",
      "documentation": "<p>Copies an existing backup within the same Amazon Web Services account to another Amazon Web Services Region (cross-Region copy) or within the same Amazon Web Services Region (in-Region copy). You can have up to five backup copy requests in progress to a single destination Region per account.</p> <p>You can use cross-Region backup copies for cross-region disaster recovery. You periodically take backups and copy them to another Region so that in the event of a disaster in the primary Region, you can restore from backup and recover availability quickly in the other Region. You can make cross-Region copies only within your Amazon Web Services partition.</p> <p> You can also use backup copies to clone your file data set to another Region or within the same Region.</p> <p>You can use the <code>SourceRegion</code> parameter to specify the Amazon Web Services Region from which the backup will be copied. For example, if you make the call from the <code>us-west-1</code> Region and want to copy a backup from the <code>us-east-2</code> Region, you specify <code>us-east-2</code> in the <code>SourceRegion</code> parameter to make a cross-Region copy. If you don't specify a Region, the backup copy is created in the same Region where the request is sent from (in-Region copy).</p> <p>For more information on creating backup copies, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/using-backups.html#copy-backups\"> Copying backups</a> in the <i>Amazon FSx for Windows User Guide</i> and <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/using-backups-fsx.html#copy-backups\">Copying backups</a> in the <i>Amazon FSx for Lustre User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CopyBackup",
      "responses": [
        {
          "uuid": "35947ed5-83b3-4a72-a3e9-9d2c1b99dd08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a04ea6dd-4f20-462d-8021-ea377143b5d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3519dd26-c251-456c-afa1-3466dcec9c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BackupNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9bc0a1d-f53b-4d09-b8b6-954ff0cd682e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7964547-a494-4d62-a978-197408cf42c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5108f371-3f1b-46e1-9813-4abec9ada7fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ce96136-a7c6-4d61-9f4a-aaa25ab5c8cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "deeca6b8-04c9-4821-9cbf-73e183e4dd27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSourceKmsKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d139c7cf-01be-4e26-92db-e6034472f160",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDestinationKmsKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10ddbb13-4f67-4c20-b27f-93d41f99c9c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRegion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b31883f2-e417-4104-8115-b0ad8f6d85ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "SourceBackupUnavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a076b6ce-3f06-409f-8ada-0f7d1f21b810",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "IncompatibleRegionForMultiAZ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03d93691-6cf3-4b3c-b8ed-0f152ff0c346",
      "documentation": "<p>Creates a backup of an existing Amazon FSx for Windows File Server or Amazon FSx for Lustre file system, or of an Amazon FSx for NetApp ONTAP volume. Creating regular backups is a best practice, enabling you to restore a file system or volume from a backup if an issue arises with the original file system or volume.</p> <p>For Amazon FSx for Lustre file systems, you can create a backup only for file systems with the following configuration:</p> <ul> <li> <p>a Persistent deployment type</p> </li> <li> <p>is <i>not</i> linked to a data repository.</p> </li> </ul> <p>For more information about backups, see the following:</p> <ul> <li> <p>For Amazon FSx for Lustre, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/using-backups-fsx.html\">Working with FSx for Lustre backups</a>.</p> </li> <li> <p>For Amazon FSx for Windows, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/using-backups.html\">Working with FSx for Windows backups</a>.</p> </li> <li> <p>For Amazon FSx for NetApp ONTAP, see <a href=\"https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/using-backups.html\">Working with FSx for NetApp ONTAP backups</a>.</p> </li> </ul> <p>If a backup with the specified client request token exists, and the parameters match, this operation returns the description of the existing backup. If a backup specified client request token exists, and the parameters don't match, this operation returns <code>IncompatibleParameterError</code>. If a backup with the specified client request token doesn't exist, <code>CreateBackup</code> does the following: </p> <ul> <li> <p>Creates a new Amazon FSx backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the backup.</p> </li> </ul> <p>By using the idempotent operation, you can retry a <code>CreateBackup</code> operation without the risk of creating an extra backup. This approach can be useful when an initial call fails in a way that makes it unclear whether a backup was created. If you use the same client request token and the initial call created a backup, the operation returns a successful result because all the parameters are the same.</p> <p>The <code>CreateBackup</code> operation returns while the backup's lifecycle state is still <code>CREATING</code>. You can check the backup creation status by calling the <a>DescribeBackups</a> operation, which returns the backup state along with other information.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateBackup",
      "responses": [
        {
          "uuid": "72df1d6f-6e1e-47a7-95e9-e42c44396a04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fa6ebb87-2dff-48f6-bb6c-c855bd77820d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1858b0c1-1e24-4d1c-b723-310d82b0f2ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ed3b2ab-38da-423a-b394-80c43186adc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d4b71a6-1d4b-426e-9fc2-6639fcd8e007",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "VolumeNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e4955ea-f073-4e76-9dc3-4d99211e2a8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BackupInProgress",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d3b1c13-26cc-46d2-8a3d-15b1eba743df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15bbeb9a-b3e8-4e6d-9e80-f55a56b7d8a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "136b18ea-f49e-45c3-ac5e-0d91b17770fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f91f3f63-966d-44fa-851b-ad25d6c2db61",
      "documentation": "Creates an Amazon FSx for Lustre data repository task. You use data repository tasks to perform bulk operations between your Amazon FSx file system and its linked data repository. An example of a data repository task is exporting any data and metadata changes, including POSIX metadata, to files, directories, and symbolic links (symlinks) from your FSx file system to its linked data repository. A <code>CreateDataRepositoryTask</code> operation will fail if a data repository is not linked to the FSx file system. To learn more about data repository tasks, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/data-repository-tasks.html\">Data Repository Tasks</a>. To learn more about linking a data repository to your file system, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/create-fs-linked-data-repo.html\">Linking your file system to an S3 bucket</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateDataRepositoryTask",
      "responses": [
        {
          "uuid": "a99a30b2-5bf2-469c-a3bf-266eb0f06b0d",
          "body": "{\n  \"DataRepositoryTask\": {\n    \"TaskId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Type\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"StartTime\": \"{{faker 'date.recent' 365}}\",\n    \"EndTime\": \"{{faker 'date.recent' 365}}\",\n    \"ResourceARN\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"FileSystemId\": \"\",\n    \"Paths\": [\n      \"\"\n    ],\n    \"FailureDetails\": {\n      \"Message\": \"\"\n    },\n    \"Status\": {\n      \"TotalCount\": {{faker 'datatype.number'}},\n      \"SucceededCount\": {{faker 'datatype.number'}},\n      \"FailedCount\": {{faker 'datatype.number'}},\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Report\": {\n      \"Enabled\": {{faker 'datatype.boolean'}},\n      \"Path\": \"\",\n      \"Format\": \"\",\n      \"Scope\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67f4fd0d-95c1-413c-8215-527bee098a3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d084f12-1cc3-405a-918e-a267b01feb15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb603476-26c4-4303-8a49-9ba97042a00f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a17c4920-824a-4e86-8d23-db14135242de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "071ffb94-a7de-49ec-a792-aadb181d7e6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abf06203-90ce-4e7e-9067-8f958cd57cd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5874c05b-9a97-429e-8ef0-ad4411d41239",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "DataRepositoryTaskExecuting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9089916-6caa-49ed-ba94-7418cf18f469",
      "documentation": "<p>Creates a new, empty Amazon FSx file system.</p> <p>If a file system with the specified client request token exists and the parameters match, <code>CreateFileSystem</code> returns the description of the existing file system. If a file system specified client request token exists and the parameters don't match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn't exist, <code>CreateFileSystem</code> does the following: </p> <ul> <li> <p>Creates a new, empty Amazon FSx file system with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>This operation requires a client request token in the request that Amazon FSx uses to ensure idempotent creation. This means that calling the operation multiple times with the same client request token has no effect. By using the idempotent operation, you can retry a <code>CreateFileSystem</code> operation without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystem</code> call returns while the file system's lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystem",
      "responses": [
        {
          "uuid": "191d17b9-59c1-4166-ad40-203ffdd69cd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2f69fcc-089f-4fb7-a40c-cbc7ec5443ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "323875b6-0826-49a8-a285-bb7c083a9519",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActiveDirectoryError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27cee234-f350-45ae-8e4f-6aa3c7be6118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca2a242a-7905-4cd6-bd6d-9954f72da659",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidImportPath",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e81cea6e-111b-4f6f-9482-b0a22cb2799e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidExportPath",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "297d573b-1f1c-4ded-a9db-4987c7f7c69d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidNetworkSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "337bcf12-afcc-4b9f-a3db-801a0d7d465b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPerUnitStorageThroughput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9a71f39-8408-48f3-8460-b817ff05f373",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "001dd3f1-bb8e-4352-b287-614cbea99d21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e49223de-b479-4848-a9cf-79310548c112",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MissingFileSystemConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36b17721-1439-45af-a9fc-88657c458399",
      "documentation": "<p>Creates a new Amazon FSx for Lustre or Amazon FSx for Windows File Server file system from an existing Amazon FSx backup.</p> <p>If a file system with the specified client request token exists and the parameters match, this operation returns the description of the file system. If a client request token specified by the file system exists and the parameters don't match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn't exist, this operation does the following:</p> <ul> <li> <p>Creates a new Amazon FSx file system from backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>Parameters like Active Directory, default share name, automatic backup, and backup settings default to the parameters of the file system that was backed up, unless overridden. You can explicitly supply other settings.</p> <p>By using the idempotent operation, you can retry a <code>CreateFileSystemFromBackup</code> call without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystemFromBackup</code> call returns while the file system's lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup",
      "responses": [
        {
          "uuid": "fe316a20-8a4d-4b47-b89a-d4913f2c5514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef933fe6-8c91-4fa7-be73-0c040b947b19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb32c44a-4069-4edd-a357-193f732319ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActiveDirectoryError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c63b1648-4621-46e9-be30-337674c09123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06826b74-b6be-4b3e-b10c-df4b31863b25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNetworkSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a801c67a-79ce-4e99-acf8-8707dfa8ea81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPerUnitStorageThroughput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec25540c-4b86-4ac5-8810-b5abbfdeb53f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46ef778c-f8a1-4f7c-9a12-ba1686bfc18b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "BackupNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a74fb77-c570-4fb3-9f3f-d2a4e0f0231f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8dbf963-7e7f-49e8-b27c-c3f6cabd0abd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "MissingFileSystemConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62a23301-6096-4e43-8652-5c11230e8aa5",
      "documentation": "Creates a storage virtual machine (SVM) for an Amazon FSx for ONTAP file system.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateStorageVirtualMachine",
      "responses": [
        {
          "uuid": "346231ba-5f20-4037-ac88-c54e53cce773",
          "body": "{\n  \"StorageVirtualMachine\": {\n    \"ActiveDirectoryConfiguration\": {\n      \"NetBiosName\": \"\",\n      \"SelfManagedActiveDirectoryConfiguration\": {\n        \"DomainName\": \"\",\n        \"OrganizationalUnitDistinguishedName\": \"\",\n        \"FileSystemAdministratorsGroup\": \"\",\n        \"UserName\": \"\",\n        \"DnsIps\": [\n          \"\"\n        ]\n      }\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"Endpoints\": {\n      \"Iscsi\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Management\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Nfs\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Smb\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      }\n    },\n    \"FileSystemId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Name\": \"\",\n    \"ResourceARN\": \"\",\n    \"StorageVirtualMachineId\": \"\",\n    \"Subtype\": \"\",\n    \"UUID\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LifecycleTransitionReason\": {\n      \"Message\": \"\"\n    },\n    \"RootVolumeSecurityStyle\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "297cbea5-b3cc-4cba-99be-a70880c3cb0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActiveDirectoryError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbc9fdfc-08bc-4c0f-8201-3690f6e8a2ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a440af11-e5cd-438a-8a50-bbc3279f8cf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18261e0a-f0a8-49e4-87cb-ba3317e4ea33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3eaba44-0a1b-421b-8292-9388a4201fb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a34e3f05-0571-4606-aa46-87d749c2c11e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80667d2e-3283-46be-8e39-0897b1977fab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc9eecc1-5505-441f-a283-d3e3dbf9bf99",
      "documentation": "Creates an Amazon FSx for NetApp ONTAP storage volume.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateVolume",
      "responses": [
        {
          "uuid": "ccdd1f29-1496-4379-9b54-57beccb90793",
          "body": "{\n  \"Volume\": {\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"FileSystemId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Name\": \"\",\n    \"OntapConfiguration\": {\n      \"FlexCacheEndpointType\": \"\",\n      \"JunctionPath\": \"\",\n      \"SecurityStyle\": \"\",\n      \"SizeInMegabytes\": {{faker 'datatype.number'}},\n      \"StorageEfficiencyEnabled\": {{faker 'datatype.boolean'}},\n      \"StorageVirtualMachineId\": \"\",\n      \"StorageVirtualMachineRoot\": {{faker 'datatype.boolean'}},\n      \"TieringPolicy\": {\n        \"CoolingPeriod\": {{faker 'datatype.number'}},\n        \"Name\": \"\"\n      },\n      \"UUID\": \"\",\n      \"OntapVolumeType\": \"\"\n    },\n    \"ResourceARN\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"VolumeId\": \"\",\n    \"VolumeType\": \"\",\n    \"LifecycleTransitionReason\": {\n      \"Message\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b127ad25-a5ee-4597-be50-c8b1a611c16d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "acb113bd-c99f-4be8-85ae-0eca2d6eaccf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "987ac179-f9ec-47f2-872d-693199f6272f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06dcf5c0-c332-4b6a-936e-a8b6c06e21f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e14bcd8a-2500-400d-b5f0-e991b760e726",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MissingVolumeConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d733ea15-b336-49d6-b702-aa62d8ac8f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e81cbd1-b3a9-4d23-a635-54c5622f35c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StorageVirtualMachineNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1265243c-cf4a-47dc-bed4-38a583336a2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "520a9b35-55f8-4507-975c-71d59568d164",
      "documentation": "Creates a new Amazon FSx for NetApp ONTAP volume from an existing Amazon FSx volume backup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateVolumeFromBackup",
      "responses": [
        {
          "uuid": "9bcb2560-afa1-4a8d-ad68-539abfc19bdf",
          "body": "{\n  \"Volume\": {\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"FileSystemId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Name\": \"\",\n    \"OntapConfiguration\": {\n      \"FlexCacheEndpointType\": \"\",\n      \"JunctionPath\": \"\",\n      \"SecurityStyle\": \"\",\n      \"SizeInMegabytes\": {{faker 'datatype.number'}},\n      \"StorageEfficiencyEnabled\": {{faker 'datatype.boolean'}},\n      \"StorageVirtualMachineId\": \"\",\n      \"StorageVirtualMachineRoot\": {{faker 'datatype.boolean'}},\n      \"TieringPolicy\": {\n        \"CoolingPeriod\": {{faker 'datatype.number'}},\n        \"Name\": \"\"\n      },\n      \"UUID\": \"\",\n      \"OntapVolumeType\": \"\"\n    },\n    \"ResourceARN\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"VolumeId\": \"\",\n    \"VolumeType\": \"\",\n    \"LifecycleTransitionReason\": {\n      \"Message\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "958617c1-09b5-443f-a6f8-57a347eac2f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BackupNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e83b7057-70fb-42c8-8a09-879161b948a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbe4ed40-b3b4-4a73-9bef-84d88d50724f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9726f10-755f-4f21-9ff2-6dc07e513d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b52167f2-024b-402e-9389-d48f0a6de3dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b19dabe-c415-4f05-92a6-1b8fc1a9788e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MissingVolumeConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2252d9a-5cf2-4005-a0b8-e89d04474598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89a36bf7-3321-4c68-8e69-ca02f944c2d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageVirtualMachineNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1cf49b41-bc21-4f0a-a485-f736ae1dcd66",
      "documentation": "<p>Deletes an Amazon FSx backup, deleting its contents. After deletion, the backup no longer exists, and its data is gone.</p> <p>The <code>DeleteBackup</code> call returns instantly. The backup will not show up in later <code>DescribeBackups</code> calls.</p> <important> <p>The data in a deleted backup is also deleted and can't be recovered by any means.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteBackup",
      "responses": [
        {
          "uuid": "b4561662-acb2-4d87-ba55-785e072f7e05",
          "body": "{\n  \"BackupId\": \"backup-03e3c82e0183b7b6b\",\n  \"Lifecycle\": \"DELETED\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "03e8d057-449f-4c87-b1e6-50a83142bf61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1193272-67a1-4049-bfeb-c8254c75f20f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BackupInProgress",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b02a2bba-e5e3-4bb0-98a0-e4fe043b9d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BackupNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "135fbf8d-3cd6-4f4a-ab2e-1705431eed08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BackupRestoring",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da3f65a2-4830-4940-bfc4-56f68c680ded",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2659662e-ba2a-461a-a67c-932e0c93573a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5c5d753-d86a-4ec0-a0b9-109b0cacb08e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "BackupBeingCopied",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "daeb57f8-2e56-497a-bdf3-0512d778aec8",
      "documentation": "<p>Deletes a file system, deleting its contents. After deletion, the file system no longer exists, and its data is gone. Any existing automatic backups will also be deleted.</p> <p>To delete an Amazon FSx for NetApp ONTAP file system, first delete all the volumes and SVMs on the file system. Then provide a <code>FileSystemId</code> value to the <code>DeleFileSystem</code> operation.</p> <p>By default, when you delete an Amazon FSx for Windows File Server file system, a final backup is created upon deletion. This final backup is not subject to the file system's retention policy, and must be manually deleted.</p> <p>The <code>DeleteFileSystem</code> action returns while the file system has the <code>DELETING</code> status. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> action, which returns a list of file systems in your account. If you pass the file system ID for a deleted file system, the <a>DescribeFileSystems</a> returns a <code>FileSystemNotFound</code> error.</p> <note> <p>Deleting an Amazon FSx for Lustre file system will fail with a 400 BadRequest if a data repository task is in a <code>PENDING</code> or <code>EXECUTING</code> state.</p> </note> <important> <p>The data in a deleted file system is also deleted and can't be recovered by any means.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteFileSystem",
      "responses": [
        {
          "uuid": "193acbd1-c530-4b64-9c03-44b89e866141",
          "body": "{\n  \"FileSystemId\": \"fs-0498eed5fe91001ec\",\n  \"Lifecycle\": \"DELETING\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3db64ee7-b364-4666-8ee8-7e622b79ed0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ed8b8f0c-6e90-44b4-87ad-ad67e706801a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2123d679-f946-4df9-a5da-699554498836",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40af123c-f90e-4503-b981-26adc37d95e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "156319e5-e61d-4809-8864-7b284a03be36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96e88320-c39e-4fa7-a21b-94488b22cdd0",
      "documentation": "Deletes an existing Amazon FSx for ONTAP storage virtual machine (SVM). Prior to deleting an SVM, you must delete all non-root volumes in the SVM, otherwise the operation will fail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteStorageVirtualMachine",
      "responses": [
        {
          "uuid": "1c5ae716-eaf0-43a0-a02e-e24b8711a822",
          "body": "{\n  \"StorageVirtualMachineId\": \"\",\n  \"Lifecycle\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "143216b9-fd59-4474-9b3b-6fe8157ab45c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f14ff3ff-ccdc-46d8-a462-f2a1ccf1a61b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ad9fc7d-2066-48f8-8567-59e565896a62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99ed686b-689b-4187-854d-c0f5461dc43a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageVirtualMachineNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1828f292-fb5c-40d6-87a9-91088e578921",
      "documentation": "Deletes an Amazon FSx for NetApp ONTAP volume. When deleting a volume, you have the option of creating a final backup. If you create a final backup, you have the option to apply Tags to the backup. You need to have <code>fsx:TagResource</code> permission in order to apply tags to the backup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteVolume",
      "responses": [
        {
          "uuid": "b304a3e4-1798-4915-a773-2106ea422d14",
          "body": "{\n  \"VolumeId\": \"\",\n  \"Lifecycle\": \"\",\n  \"OntapResponse\": {\n    \"FinalBackupId\": \"\",\n    \"FinalBackupTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b896575-7b75-4c3a-b01f-ee3aa26b8310",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9e68e2b-4878-41ea-87e5-ecbc192d76dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c2fa751-3365-4686-afc3-a1a7438a5815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83f51b7e-8426-4d30-a16e-84503dda5cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "VolumeNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1894cf32-d275-4741-9c6b-3b0b01bf5899",
      "documentation": "<p>Returns the description of specific Amazon FSx backups, if a <code>BackupIds</code> value is provided for that backup. Otherwise, it returns all backups owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all backups, you can optionally specify the <code>MaxResults</code> parameter to limit the number of backups in a response. If more backups remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your backups. <code>DescribeBackups</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> backup descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of backups returned in the response of one <code>DescribeBackups</code> call and the order of backups returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeBackups",
      "responses": [
        {
          "uuid": "c9712572-ae9c-489a-8edf-a529284582cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "87b83f95-550b-430b-baf8-71859f45ec50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2cebb1cf-2b26-4d6c-8a12-5becf0845a41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87b9592a-350d-461b-a844-a65de7d75bfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "VolumeNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b4e0667-e853-4e80-824e-a3c7803a585a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BackupNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "caa6fef9-443a-4693-9aab-6fa59426264d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3cd30400-1d64-4685-8fa6-514ea62f1113",
      "documentation": "<p>Returns the description of specific Amazon FSx for Lustre data repository tasks, if one or more <code>TaskIds</code> values are provided in the request, or if filters are used in the request. You can use filters to narrow the response to include just tasks for specific file systems, or tasks in a specific lifecycle state. Otherwise, it returns all data repository tasks owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all tasks, you can paginate the response by using the optional <code>MaxResults</code> parameter to limit the number of tasks returned in a response. If more tasks remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks",
      "responses": [
        {
          "uuid": "ac296a28-01d5-4fe8-a5b2-3e02a74ed9fa",
          "body": "{\n  \"DataRepositoryTasks\": [\n    {\n      \"TaskId\": \"\",\n      \"Lifecycle\": \"\",\n      \"Type\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceARN\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"FileSystemId\": \"\",\n      \"Paths\": [\n        \"\"\n      ],\n      \"FailureDetails\": {\n        \"Message\": \"\"\n      },\n      \"Status\": {\n        \"TotalCount\": {{faker 'datatype.number'}},\n        \"SucceededCount\": {{faker 'datatype.number'}},\n        \"FailedCount\": {{faker 'datatype.number'}},\n        \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Report\": {\n        \"Enabled\": {{faker 'datatype.boolean'}},\n        \"Path\": \"\",\n        \"Format\": \"\",\n        \"Scope\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee2754d8-5363-4e7e-ae60-795cff91033e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8af3d74b-2c4d-46e7-a3e0-576d04d43c0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "143410f6-be81-4451-a96a-634d2b52a988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DataRepositoryTaskNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68c487f4-aa5f-4b72-b830-62c8be446742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "18736f79-5824-46a2-875d-f2b5a6f33768",
      "documentation": "Returns the DNS aliases that are associated with the specified Amazon FSx for Windows File Server file system. A history of all DNS aliases that have been associated with and disassociated from the file system is available in the list of <a>AdministrativeAction</a> provided in the <a>DescribeFileSystems</a> operation response.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeFileSystemAliases",
      "responses": [
        {
          "uuid": "ffc78a44-f630-4df0-87af-097e7a08a712",
          "body": "{\n  \"Aliases\": [\n    {\n      \"Name\": \"\",\n      \"Lifecycle\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "160c6bec-e725-40e1-82d4-d1c2ed65a018",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5777a7be-7126-452c-a9ac-db76d3450522",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35b933c6-f69a-4fb8-94e1-82bc3d9b1988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78d73857-b671-4738-98fe-62f472e1b38e",
      "documentation": "<p>Returns the description of specific Amazon FSx file systems, if a <code>FileSystemIds</code> value is provided for that file system. Otherwise, it returns descriptions of all file systems owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all file system descriptions, you can optionally specify the <code>MaxResults</code> parameter to limit the number of descriptions in a response. If more file system descriptions remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your file system descriptions. <code>DescribeFileSystems</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of file systems returned in the response of one <code>DescribeFileSystems</code> call and the order of file systems returned across the responses of a multicall iteration is unspecified.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeFileSystems",
      "responses": [
        {
          "uuid": "f8583d5d-e7ed-46b1-a12e-e4ef9d52f8f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d7dfe9e-4584-49b9-bd20-a89a435717d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a28f21b-cd50-4fe9-90a0-88dccf806651",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c09e436-454f-4799-ba55-021da8c06c47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64c72a6e-b751-4fc9-b155-2bcfaf7955b7",
      "documentation": "Describes one or more Amazon FSx for NetApp ONTAP storage virtual machines (SVMs).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeStorageVirtualMachines",
      "responses": [
        {
          "uuid": "fd624e11-f295-4da3-93dd-e7ebcaf9c499",
          "body": "{\n  \"StorageVirtualMachines\": [\n    {\n      \"ActiveDirectoryConfiguration\": {\n        \"NetBiosName\": \"\",\n        \"SelfManagedActiveDirectoryConfiguration\": {\n          \"DomainName\": \"\",\n          \"OrganizationalUnitDistinguishedName\": \"\",\n          \"FileSystemAdministratorsGroup\": \"\",\n          \"UserName\": \"\",\n          \"DnsIps\": [\n            \"\"\n          ]\n        }\n      },\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"Endpoints\": {\n        \"Iscsi\": {\n          \"DNSName\": \"\",\n          \"IpAddresses\": [\n            \"\"\n          ]\n        },\n        \"Management\": {\n          \"DNSName\": \"\",\n          \"IpAddresses\": [\n            \"\"\n          ]\n        },\n        \"Nfs\": {\n          \"DNSName\": \"\",\n          \"IpAddresses\": [\n            \"\"\n          ]\n        },\n        \"Smb\": {\n          \"DNSName\": \"\",\n          \"IpAddresses\": [\n            \"\"\n          ]\n        }\n      },\n      \"FileSystemId\": \"\",\n      \"Lifecycle\": \"\",\n      \"Name\": \"\",\n      \"ResourceARN\": \"\",\n      \"StorageVirtualMachineId\": \"\",\n      \"Subtype\": \"\",\n      \"UUID\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"LifecycleTransitionReason\": {\n        \"Message\": \"\"\n      },\n      \"RootVolumeSecurityStyle\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e5520f0f-e678-4c77-a396-2cfa798caf1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2e89637-eb71-4ae7-a491-a2ad5c5a88c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c47f5086-4148-45b5-8d02-dad414b11fcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageVirtualMachineNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8aa50219-907c-45da-95b3-ff526bcafbe0",
      "documentation": "Describes one or more Amazon FSx for NetApp ONTAP volumes.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeVolumes",
      "responses": [
        {
          "uuid": "28fb32b3-387d-4189-afef-5c9ed4db1618",
          "body": "{\n  \"Volumes\": [\n    {\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"FileSystemId\": \"\",\n      \"Lifecycle\": \"\",\n      \"Name\": \"\",\n      \"OntapConfiguration\": {\n        \"FlexCacheEndpointType\": \"\",\n        \"JunctionPath\": \"\",\n        \"SecurityStyle\": \"\",\n        \"SizeInMegabytes\": {{faker 'datatype.number'}},\n        \"StorageEfficiencyEnabled\": {{faker 'datatype.boolean'}},\n        \"StorageVirtualMachineId\": \"\",\n        \"StorageVirtualMachineRoot\": {{faker 'datatype.boolean'}},\n        \"TieringPolicy\": {\n          \"CoolingPeriod\": {{faker 'datatype.number'}},\n          \"Name\": \"\"\n        },\n        \"UUID\": \"\",\n        \"OntapVolumeType\": \"\"\n      },\n      \"ResourceARN\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"VolumeId\": \"\",\n      \"VolumeType\": \"\",\n      \"LifecycleTransitionReason\": {\n        \"Message\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "806a2f5d-9112-4adc-8a37-b13bd8b79c6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad0b559f-88b4-45dd-9f45-53a8a8dc86f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6be44bfc-50b8-41ac-840f-2b143a90d8d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "VolumeNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "219ed770-726d-420a-bf25-b25b29833d9a",
      "documentation": "<p>Use this action to disassociate, or remove, one or more Domain Name Service (DNS) aliases from an Amazon FSx for Windows File Server file system. If you attempt to disassociate a DNS alias that is not associated with the file system, Amazon FSx responds with a 400 Bad Request. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">Working with DNS Aliases</a>.</p> <p>The system generated response showing the DNS aliases that Amazon FSx is attempting to disassociate from the file system. Use the API operation to monitor the status of the aliases Amazon FSx is disassociating with the file system.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.DisassociateFileSystemAliases",
      "responses": [
        {
          "uuid": "42d825d3-a734-4a30-8047-0f3e11468a5c",
          "body": "{\n  \"Aliases\": [\n    {\n      \"Name\": \"\",\n      \"Lifecycle\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9bc66754-dae6-4439-b156-adab62d11ff5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3701c239-a0db-43f6-a08c-db83ff1a55ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8842d84-f834-4812-ba1f-749b381b4a55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66a8d353-5a60-4324-ae87-9cb56a0af6af",
      "documentation": "<p>Lists tags for an Amazon FSx file systems and backups in the case of Amazon FSx for Windows File Server.</p> <p>When retrieving all tags, you can optionally specify the <code>MaxResults</code> parameter to limit the number of tags in a response. If more tags remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your tags. <code>ListTagsForResource</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of tags returned in the response of one <code>ListTagsForResource</code> call and the order of tags returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.ListTagsForResource",
      "responses": [
        {
          "uuid": "52fdc86b-9c59-4de0-9262-9e8f8f968fcd",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"Name\",\n      \"Value\": \"MyFileSystem\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2513bddd-030c-428b-9087-a60f1d2cdda8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b18b90d-1685-4cb4-822f-1e7c86c2a8a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "308e6abe-3125-4d1a-9dda-ae0ba41e2b39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "269ca589-4ab4-44ab-8a45-9e4264288898",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotServiceResourceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e780702-6dff-4978-baed-27e6c54ffb52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceDoesNotSupportTagging",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "035ad7ba-4ded-4b61-8987-a8b9555c06ee",
      "documentation": "Tags an Amazon FSx resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.TagResource",
      "responses": [
        {
          "uuid": "454afacf-a3c3-4603-bebc-921d16a884bb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20813d6a-fb23-443f-82f2-e11027c17636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "edb30114-6955-4d74-a0ac-eb9005e0aca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a74b6ae0-dd2f-420a-b459-c5bdb84ca2d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "82b9f0b6-a499-4c9e-891d-d12784f77bc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotServiceResourceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc892410-cc2c-4d7c-afb7-12a7d1a48e16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceDoesNotSupportTagging",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cea62740-c46b-41e2-b71d-5bdf8a1b3f95",
      "documentation": "This action removes a tag from an Amazon FSx resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.UntagResource",
      "responses": [
        {
          "uuid": "867eba06-c540-428b-8e95-1de41428ceac",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "536154c1-9bdb-4e32-863e-8e877ab93b99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4cab287-c72e-4101-b52b-12e7c463c9fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55a1c27c-291e-4d51-8d2e-e587292a4276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f4409db-0c50-4a6c-b17c-16907820ca2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotServiceResourceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8737063e-6bbe-4700-9d97-0ae024fb0679",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceDoesNotSupportTagging",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f1d3170-8b65-4ce7-afdb-726ab96cb536",
      "documentation": "<p>Use this operation to update the configuration of an existing Amazon FSx file system. You can update multiple properties in a single request.</p> <p>For Amazon FSx for Windows File Server file systems, you can update the following properties:</p> <ul> <li> <p>AuditLogConfiguration</p> </li> <li> <p>AutomaticBackupRetentionDays</p> </li> <li> <p>DailyAutomaticBackupStartTime</p> </li> <li> <p>SelfManagedActiveDirectoryConfiguration</p> </li> <li> <p>StorageCapacity</p> </li> <li> <p>ThroughputCapacity</p> </li> <li> <p>WeeklyMaintenanceStartTime</p> </li> </ul> <p>For Amazon FSx for Lustre file systems, you can update the following properties:</p> <ul> <li> <p>AutoImportPolicy</p> </li> <li> <p>AutomaticBackupRetentionDays</p> </li> <li> <p>DailyAutomaticBackupStartTime</p> </li> <li> <p>DataCompressionType</p> </li> <li> <p>StorageCapacity</p> </li> <li> <p>WeeklyMaintenanceStartTime</p> </li> </ul> <p>For Amazon FSx for NetApp ONTAP file systems, you can update the following properties:</p> <ul> <li> <p>AutomaticBackupRetentionDays</p> </li> <li> <p>DailyAutomaticBackupStartTime</p> </li> <li> <p>FsxAdminPassword</p> </li> <li> <p>WeeklyMaintenanceStartTime</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateFileSystem",
      "responses": [
        {
          "uuid": "78ca44e0-dbd4-408e-8e58-410856fa92af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7b0f899-d0e7-4797-a28b-798cd21dca84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbc768b6-77c8-4a11-bb5a-658a012d5af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19c38837-3c30-4b8e-bf61-9d3b257611eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4152d595-d9a3-4acf-9a7f-22b0420faecb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "083f1af2-e600-4648-854f-ec414ee74ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "FileSystemNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "722e2c1b-0e83-4a2b-8786-68411b07bfd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MissingFileSystemConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2aa4d13a-1e35-4b69-bbc2-c3fa4a31aa78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e80451df-acaf-4baf-84d5-7190b6df4cc2",
      "documentation": "Updates an Amazon FSx for ONTAP storage virtual machine (SVM).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateStorageVirtualMachine",
      "responses": [
        {
          "uuid": "fd78ba94-2a7d-42e0-87f8-747978341356",
          "body": "{\n  \"StorageVirtualMachine\": {\n    \"ActiveDirectoryConfiguration\": {\n      \"NetBiosName\": \"\",\n      \"SelfManagedActiveDirectoryConfiguration\": {\n        \"DomainName\": \"\",\n        \"OrganizationalUnitDistinguishedName\": \"\",\n        \"FileSystemAdministratorsGroup\": \"\",\n        \"UserName\": \"\",\n        \"DnsIps\": [\n          \"\"\n        ]\n      }\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"Endpoints\": {\n      \"Iscsi\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Management\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Nfs\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      },\n      \"Smb\": {\n        \"DNSName\": \"\",\n        \"IpAddresses\": [\n          \"\"\n        ]\n      }\n    },\n    \"FileSystemId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Name\": \"\",\n    \"ResourceARN\": \"\",\n    \"StorageVirtualMachineId\": \"\",\n    \"Subtype\": \"\",\n    \"UUID\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LifecycleTransitionReason\": {\n      \"Message\": \"\"\n    },\n    \"RootVolumeSecurityStyle\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eb8be248-9723-402e-935e-1e42038a8933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7aee7cf0-7022-470e-8466-b42a5e99ca0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ee7e8ed-24ed-4a74-9ef4-cac250ccedee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08c78c38-df88-4b57-949f-1c3208510d3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageVirtualMachineNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "313249f0-bfbb-40bb-900e-1b453a1e1b7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c32b25b-9b16-4a64-97e9-47345fe2cb51",
      "documentation": "Updates an Amazon FSx for NetApp ONTAP volume's configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateVolume",
      "responses": [
        {
          "uuid": "911fd07b-6cca-4d92-b2eb-c152de1caa15",
          "body": "{\n  \"Volume\": {\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"FileSystemId\": \"\",\n    \"Lifecycle\": \"\",\n    \"Name\": \"\",\n    \"OntapConfiguration\": {\n      \"FlexCacheEndpointType\": \"\",\n      \"JunctionPath\": \"\",\n      \"SecurityStyle\": \"\",\n      \"SizeInMegabytes\": {{faker 'datatype.number'}},\n      \"StorageEfficiencyEnabled\": {{faker 'datatype.boolean'}},\n      \"StorageVirtualMachineId\": \"\",\n      \"StorageVirtualMachineRoot\": {{faker 'datatype.boolean'}},\n      \"TieringPolicy\": {\n        \"CoolingPeriod\": {{faker 'datatype.number'}},\n        \"Name\": \"\"\n      },\n      \"UUID\": \"\",\n      \"OntapVolumeType\": \"\"\n    },\n    \"ResourceARN\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"VolumeId\": \"\",\n    \"VolumeType\": \"\",\n    \"LifecycleTransitionReason\": {\n      \"Message\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "08479e9a-d0db-47ab-bbd7-db2568c82c8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22271d67-f9b5-4ddb-aa4e-f2162ff6861a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IncompatibleParameterError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22d0c88f-6afb-4ed8-83b8-ed39593708b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65007b09-33bc-49ef-9d44-d566c53f1d45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MissingVolumeConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ab15f2b-4816-437a-a646-db49abad83a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "VolumeNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}