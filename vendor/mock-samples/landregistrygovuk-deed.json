{
  "uuid": "72679171-3d51-4042-8481-2ada69ce230a",
  "lastMigration": 24,
  "name": "Deed API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "eab53a7c-aa4d-4b56-93b2-cb2b61b29651",
      "documentation": "Deed",
      "method": "post",
      "endpoint": "deed/",
      "responses": [
        {
          "uuid": "b08d4a22-d27d-4579-bf03-5d71f4f191b2",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "URL to the GET endpoint for the deed is returned on successful creation.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a1229682-5307-45df-a145-6ac32116d207",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request due to invalid schema. Response will include 1 or more schema errors\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8210f420-1495-4aad-a4e5-114390a54ed2",
      "documentation": "Deed",
      "method": "get",
      "endpoint": "deed/:deed_reference",
      "responses": [
        {
          "uuid": "df24d7da-d740-4e1c-a223-bbe69fc0106c",
          "body": "{\n  \"deed\": {\n    \"additional_provisions\": [\n      {\n        \"additional_provision_code\": \"\",\n        \"description\": \"\"\n      }\n    ],\n    \"borrowers\": [\n      {\n        \"forename\": \"\",\n        \"id\": \"\",\n        \"middle_name\": \"\",\n        \"surname\": \"\",\n        \"token\": \"\"\n      }\n    ],\n    \"charge_clause\": {\n      \"cre_code\": \"\",\n      \"description\": \"\"\n    },\n    \"deed_status\": \"\",\n    \"effective_clause\": \"\",\n    \"lender\": {\n      \"address\": \"\",\n      \"description\": \"\",\n      \"name\": \"\"\n    },\n    \"md_ref\": \"\",\n    \"property_address\": \"\",\n    \"title_number\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A specific deed is returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cdf3be5-7c54-49a6-ba82-e9d14cc4652e",
          "body": "{\n  \"code\": {{faker 'datatype.number'}},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Deed not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}