{
  "uuid": "673fde56-8dd1-44bf-bbb6-0fa3d17b11dd",
  "lastMigration": 24,
  "name": "Software Plan RP",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4d3505fc-9a29-41c0-a9a0-595104944e32",
      "documentation": "Register to Microsoft.SoftwarePlan resource provider.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.SoftwarePlan/register",
      "responses": [
        {
          "uuid": "8c5d3c7d-605a-40df-8b19-2a92762b2c4d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - Microsoft.SoftwarePlan is registered",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5160aa37-60fe-4eed-9562-1996ea580dd0",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4379ddb2-b366-42f1-a79a-5a0cde2ff8ba",
      "documentation": "Get all hybrid use benefits associated with an ARM resource.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits",
      "responses": [
        {
          "uuid": "c00fa3fa-264c-4412-8cd4-038aaa82d293",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans at that scope",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdf9cf29-b346-44e8-81d7-191f952737f7",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "547d8acd-864a-46c6-ba3a-83e768a6aac8",
      "documentation": "Deletes a given plan ID",
      "method": "delete",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "26ac6cd0-9117-46ec-bab2-83710e654c07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully deleted the given plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6f52bec8-2295-45dc-95c5-397ead022fc8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - there was no plan to delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6432838-31ee-407c-9466-639ee0786c5a",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "41f7f3f2-b26d-4227-8efc-6aaf3c0068e2",
      "documentation": "Gets a given plan ID",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "d39b1c37-d7a2-484e-8c9f-ca3ed63bf45d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10c34475-5554-4c72-a5bf-1a005575d152",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "266c09d9-8765-45e0-80af-04d96f0387cc",
      "documentation": "Updates an existing hybrid use benefit",
      "method": "patch",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "3b64d296-04c1-425b-9432-d51869642867",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully updated the given hybrid use benefit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a6a7be29-e5b7-4a9c-9b91-0660c25a991b",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3f8b22da-3147-49ae-b340-8cb7990105a2",
      "documentation": "Create a new hybrid use benefit under a given scope",
      "method": "put",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "d4e274f8-4e38-4c80-9f04-b3f08c26ea55",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b7c7a34d-6428-482b-a010-378e17f1547b",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4ca5dab4-076b-4646-81e2-41f47013582e",
      "documentation": "Gets the version history of a hybrid use benefit",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId/revisions",
      "responses": [
        {
          "uuid": "c6f12346-739c-4016-bf57-e8b751eba96b",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans ordered by revision",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d71b3963-a1f5-4085-ad05-47f722ec4836",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1706b05-456f-42f6-8c80-9090b9e18415",
      "documentation": "Get operations.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/operations",
      "responses": [
        {
          "uuid": "c648fb0f-1f27-4d45-b666-031733eada54",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List all the operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5157b58b-809d-45da-b7bf-d05328c379ff",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}