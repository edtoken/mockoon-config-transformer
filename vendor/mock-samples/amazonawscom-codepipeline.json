{
  "uuid": "adf3292b-709e-495a-b1eb-9a9c5b5cc5d0",
  "lastMigration": 24,
  "name": "AWS CodePipeline",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "109bfaad-90c9-46b9-91a2-f193238100cf",
      "documentation": "Returns information about a specified job and whether that job has been received by the job worker. Used for custom actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.AcknowledgeJob",
      "responses": [
        {
          "uuid": "0c7e13f3-4453-430e-a06e-17b4f20666b8",
          "body": "{\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f8df93a-b937-455e-908b-08a198ae2e31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91da5a99-7911-403c-a9fe-e0fd19741066",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNonceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75bf7603-1eb6-4639-a133-9098e0aba10a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "207ff8fa-3080-4af8-b6bb-979941bb5947",
      "documentation": "Confirms a job worker has received the specified job. Used for partner actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.AcknowledgeThirdPartyJob",
      "responses": [
        {
          "uuid": "acecac10-5d02-444f-ae45-f09859adc12a",
          "body": "{\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "36c5f654-8c85-4726-8086-e23262222dd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f69893ba-d52f-403e-937b-c78384a3a751",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNonceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c343a2bc-3868-4857-87c7-dee22e92a121",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f38f3fa-85dc-41f6-ae34-b4ae3b4563f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidClientTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67cfed8b-79b5-4753-8d57-301d9c77ee05",
      "documentation": "Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType",
      "responses": [
        {
          "uuid": "0f5b603a-561e-4fef-adc7-b9d704f75166",
          "body": "{\n  \"actionType\": {\n    \"id\": {\n      \"category\": \"\",\n      \"owner\": \"\",\n      \"provider\": \"\",\n      \"version\": \"\"\n    },\n    \"settings\": {\n      \"thirdPartyConfigurationUrl\": \"\",\n      \"entityUrlTemplate\": \"\",\n      \"executionUrlTemplate\": \"\",\n      \"revisionUrlTemplate\": \"\"\n    },\n    \"actionConfigurationProperties\": [\n      {\n        \"name\": \"\",\n        \"required\": {{faker 'datatype.boolean'}},\n        \"key\": {{faker 'datatype.boolean'}},\n        \"secret\": {{faker 'datatype.boolean'}},\n        \"queryable\": {{faker 'datatype.boolean'}},\n        \"description\": \"\",\n        \"type\": \"\"\n      }\n    ],\n    \"inputArtifactDetails\": {\n      \"minimumCount\": {{faker 'datatype.number'}},\n      \"maximumCount\": {{faker 'datatype.number'}}\n    },\n    \"outputArtifactDetails\": {\n      \"minimumCount\": {{faker 'datatype.number'}},\n      \"maximumCount\": {{faker 'datatype.number'}}\n    }\n  },\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91209b63-13e3-41b5-8380-430b5a82962a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8a3f1f0-6b04-4897-b1ab-10a59473f68e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca3eb6cb-1d5c-4399-a6f5-1bcb3819f861",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7285e95-b7c9-4d97-b6d8-09910a322cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1949d6d-91e7-47b9-be7b-6091134bc58d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ceed7da-445b-4314-b02b-57248004f1e6",
      "documentation": "<p>Creates a pipeline.</p> <note> <p>In the pipeline structure, you must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.CreatePipeline",
      "responses": [
        {
          "uuid": "e8db8076-bcfc-417a-8ae7-385b801a84d8",
          "body": "{\n  \"pipeline\": {\n    \"name\": \"\",\n    \"roleArn\": \"\",\n    \"artifactStore\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"encryptionKey\": {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    },\n    \"artifactStores\": {},\n    \"stages\": [\n      {\n        \"name\": \"\",\n        \"blockers\": [\n          {\n            \"name\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"actions\": [\n          {\n            \"name\": \"\",\n            \"actionTypeId\": {\n              \"category\": \"\",\n              \"owner\": \"\",\n              \"provider\": \"\",\n              \"version\": \"\"\n            },\n            \"runOrder\": {{faker 'datatype.number'}},\n            \"configuration\": {},\n            \"outputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"inputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"roleArn\": \"\",\n            \"region\": \"\",\n            \"namespace\": \"\"\n          }\n        ]\n      }\n    ],\n    \"version\": {{faker 'datatype.number'}}\n  },\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba137299-2662-4241-9c68-d9da4c02dbac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08a98fc0-44a0-4037-b9fe-58c9cfb8a8f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNameInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ca683a2-63c9-4262-9f9d-161a206aac98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStageDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1834e3c7-a8f3-45cc-b9e9-d1aa4eea6379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidActionDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b8eea96-35e3-4450-8a7b-0b2da8cfa984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBlockerDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cf52497-1065-40fd-a1c8-3508c6ff7fd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidStructureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a90c18ab-69de-4648-8879-a6c286d57f26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f93e833-e9c2-4456-8de0-9a9a63c554a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "690871a0-3ecd-4698-8d8f-b8369783f9b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d362902-e550-4d38-b7cc-2fd8256d30dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3525fab-7713-4704-98f8-cc4bd3cf9bce",
      "documentation": "<p>Marks a custom action as deleted. <code>PollForJobs</code> for the custom action fails after the action is marked for deletion. Used for custom actions only.</p> <important> <p>To re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.DeleteCustomActionType",
      "responses": [
        {
          "uuid": "838c61b7-d79d-4197-861b-6c0105023302",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f6cede07-4aba-48ae-b1c1-2c51a8ecd123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8a6203a-f735-44da-b705-889c5cffbcf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "da254a75-d87e-472e-acb4-c00810df8d4a",
      "documentation": "Deletes the specified pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.DeletePipeline",
      "responses": [
        {
          "uuid": "54eaad00-7d97-4d3b-ab40-4933309217f3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5b7bcc31-e42c-4c5f-ab19-fbb4205fa9da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99b6c153-4b82-4c0b-b3fb-326ee7646a16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a6da72eb-8084-4e9b-aa68-0042508d22e7",
      "documentation": "Deletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline from starting a pipeline every time an external event occurs. The API returns successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.DeleteWebhook",
      "responses": [
        {
          "uuid": "e8d36a5c-cb9a-4d1d-9c14-f3424e33282e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b285638-70f7-496e-9f02-56d432ec3924",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca184496-8b92-4689-aff9-fce835b5ac33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9266296e-0349-4249-ac2f-e7d44ab3729c",
      "documentation": "Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently supported only for webhooks that target an action type of GitHub.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.DeregisterWebhookWithThirdParty",
      "responses": [
        {
          "uuid": "79119c21-4d81-4750-b826-b3adacae1a0e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df7f0b0f-6f4a-4ef8-b56b-06ff0ccce55f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c6ae1e8-20c4-4aec-9bab-b0ad9fdbe62a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "WebhookNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31674915-72fd-4522-8316-5c13b0a9d5ae",
      "documentation": "Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.DisableStageTransition",
      "responses": [
        {
          "uuid": "af8845c9-849e-46e2-ba0f-dd9ee96dbb02",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce896b36-ecd0-448b-a748-f6631cd0f441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "87714344-d578-4732-9e58-21b8365e4586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd148704-a572-40f4-a0ec-4e195784a70f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StageNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eafe5104-02f5-4d9e-b52a-b43da7485147",
      "documentation": "Enables artifacts in a pipeline to transition to a stage in a pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.EnableStageTransition",
      "responses": [
        {
          "uuid": "3d3837d9-c90b-492e-ac19-29989e35f405",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f29ba13e-18cc-4f77-835c-f8bb740661ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1c32233-7431-4876-b1b1-6cdb83a43d67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46bf35f2-a71e-44d6-b0c5-0e7b46e9c801",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StageNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc991a4f-ebcd-47b6-ad5b-0e40fb6af7ab",
      "documentation": "Returns information about an action type created for an external provider, where the action is to be used by customers of the external provider. The action can be created with any supported integration model.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetActionType",
      "responses": [
        {
          "uuid": "1a1da139-2198-429d-8873-228b9775d4e1",
          "body": "{\n  \"actionType\": {\n    \"description\": \"\",\n    \"executor\": {\n      \"configuration\": {\n        \"lambdaExecutorConfiguration\": {\n          \"lambdaFunctionArn\": \"\"\n        },\n        \"jobWorkerExecutorConfiguration\": {\n          \"pollingAccounts\": [\n            \"\"\n          ],\n          \"pollingServicePrincipals\": [\n            \"\"\n          ]\n        }\n      },\n      \"type\": \"\",\n      \"policyStatementsTemplate\": \"\",\n      \"jobTimeout\": {{faker 'datatype.number'}}\n    },\n    \"id\": {\n      \"category\": \"\",\n      \"owner\": \"\",\n      \"provider\": \"\",\n      \"version\": \"\"\n    },\n    \"inputArtifactDetails\": {\n      \"minimumCount\": {{faker 'datatype.number'}},\n      \"maximumCount\": {{faker 'datatype.number'}}\n    },\n    \"outputArtifactDetails\": {\n      \"minimumCount\": {{faker 'datatype.number'}},\n      \"maximumCount\": {{faker 'datatype.number'}}\n    },\n    \"permissions\": {\n      \"allowedAccounts\": [\n        \"\"\n      ]\n    },\n    \"properties\": \"\",\n    \"urls\": {\n      \"configurationUrl\": \"\",\n      \"entityUrlTemplate\": \"\",\n      \"executionUrlTemplate\": \"\",\n      \"revisionUrlTemplate\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc8d9751-121f-4b0d-8d42-9b6be3a4d47f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActionTypeNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd44c290-a428-4214-9b98-c2cdf17e1626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ceb053f7-af2a-4b50-bbef-a4a4eafc5d38",
      "documentation": "<p>Returns information about a job. Used for custom actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetJobDetails",
      "responses": [
        {
          "uuid": "05d50fe5-d409-429a-90dc-2605e289cdc9",
          "body": "{\n  \"jobDetails\": {\n    \"id\": \"\",\n    \"data\": {\n      \"actionTypeId\": {\n        \"category\": \"\",\n        \"owner\": \"\",\n        \"provider\": \"\",\n        \"version\": \"\"\n      },\n      \"actionConfiguration\": {\n        \"configuration\": {}\n      },\n      \"pipelineContext\": {\n        \"pipelineName\": \"\",\n        \"stage\": {\n          \"name\": \"\"\n        },\n        \"action\": {\n          \"name\": \"\",\n          \"actionExecutionId\": \"\"\n        },\n        \"pipelineArn\": \"\",\n        \"pipelineExecutionId\": \"\"\n      },\n      \"inputArtifacts\": [\n        {\n          \"name\": \"\",\n          \"revision\": \"\",\n          \"location\": {\n            \"type\": \"\",\n            \"s3Location\": {\n              \"bucketName\": \"\",\n              \"objectKey\": \"\"\n            }\n          }\n        }\n      ],\n      \"outputArtifacts\": [\n        {\n          \"name\": \"\",\n          \"revision\": \"\",\n          \"location\": {\n            \"type\": \"\",\n            \"s3Location\": {\n              \"bucketName\": \"\",\n              \"objectKey\": \"\"\n            }\n          }\n        }\n      ],\n      \"artifactCredentials\": {\n        \"accessKeyId\": \"\",\n        \"secretAccessKey\": \"\",\n        \"sessionToken\": \"\"\n      },\n      \"continuationToken\": \"\",\n      \"encryptionKey\": {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    },\n    \"accountId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9057b66-9869-4573-9762-cfadb8b93791",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d45a6972-0826-4a00-9bdb-4dfd69297d44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0baad133-cc5a-417b-83f5-5e0b867ce0a2",
      "documentation": "Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetPipeline",
      "responses": [
        {
          "uuid": "e255797b-1e7c-4c92-bd92-43a63c5e4fdd",
          "body": "{\n  \"pipeline\": {\n    \"name\": \"\",\n    \"roleArn\": \"\",\n    \"artifactStore\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"encryptionKey\": {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    },\n    \"artifactStores\": {},\n    \"stages\": [\n      {\n        \"name\": \"\",\n        \"blockers\": [\n          {\n            \"name\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"actions\": [\n          {\n            \"name\": \"\",\n            \"actionTypeId\": {\n              \"category\": \"\",\n              \"owner\": \"\",\n              \"provider\": \"\",\n              \"version\": \"\"\n            },\n            \"runOrder\": {{faker 'datatype.number'}},\n            \"configuration\": {},\n            \"outputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"inputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"roleArn\": \"\",\n            \"region\": \"\",\n            \"namespace\": \"\"\n          }\n        ]\n      }\n    ],\n    \"version\": {{faker 'datatype.number'}}\n  },\n  \"metadata\": {\n    \"pipelineArn\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"updated\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7fcd666a-a11e-4ac3-a46d-27c82048127a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fcb7ea99-1b79-40e2-af06-ef5f8d5db51f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e2223b0-d80a-4860-ab2f-389ad927afbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "418d6a54-53d3-4648-8caf-c08b1d0158fe",
      "documentation": "Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetPipelineExecution",
      "responses": [
        {
          "uuid": "f10b26ef-e8e7-453f-bd9d-1f7c8c9cc867",
          "body": "{\n  \"pipelineExecution\": {\n    \"pipelineName\": \"\",\n    \"pipelineVersion\": {{faker 'datatype.number'}},\n    \"pipelineExecutionId\": \"\",\n    \"status\": \"\",\n    \"statusSummary\": \"\",\n    \"artifactRevisions\": [\n      {\n        \"name\": \"\",\n        \"revisionId\": \"\",\n        \"revisionChangeIdentifier\": \"\",\n        \"revisionSummary\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"revisionUrl\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "169f5e69-ad77-47d3-a5f3-5d58243a167a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae666f54-763e-4d61-b000-ebf527c57ca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96a9b9a0-f0fb-4eb8-beb0-11ba18a85483",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5895ea5-f132-42cf-89e9-06a3540a277c",
      "documentation": "<p>Returns information about the state of a pipeline, including the stages and actions.</p> <note> <p>Values returned in the <code>revisionId</code> and <code>revisionUrl</code> fields indicate the source revision information, such as the commit ID, for the current state.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetPipelineState",
      "responses": [
        {
          "uuid": "1014874e-f50a-4c9b-99ba-ac6bb8aa6300",
          "body": "{\n  \"pipelineName\": \"\",\n  \"pipelineVersion\": {{faker 'datatype.number'}},\n  \"stageStates\": [\n    {\n      \"stageName\": \"\",\n      \"inboundExecution\": {\n        \"pipelineExecutionId\": \"\",\n        \"status\": \"\"\n      },\n      \"inboundTransitionState\": {\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"lastChangedBy\": \"\",\n        \"lastChangedAt\": \"{{faker 'date.recent' 365}}\",\n        \"disabledReason\": \"\"\n      },\n      \"actionStates\": [\n        {\n          \"actionName\": \"\",\n          \"currentRevision\": {\n            \"revisionId\": \"\",\n            \"revisionChangeId\": \"\",\n            \"created\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"latestExecution\": {\n            \"actionExecutionId\": \"\",\n            \"status\": \"\",\n            \"summary\": \"\",\n            \"lastStatusChange\": \"{{faker 'date.recent' 365}}\",\n            \"token\": \"\",\n            \"lastUpdatedBy\": \"\",\n            \"externalExecutionId\": \"\",\n            \"externalExecutionUrl\": \"\",\n            \"percentComplete\": {{faker 'datatype.number'}},\n            \"errorDetails\": {\n              \"code\": \"\",\n              \"message\": \"\"\n            }\n          },\n          \"entityUrl\": \"\",\n          \"revisionUrl\": \"\"\n        }\n      ],\n      \"latestExecution\": {\n        \"pipelineExecutionId\": \"\",\n        \"status\": \"\"\n      }\n    }\n  ],\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"updated\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d8790fc0-91ba-4058-b960-84ac8bc61831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cbb2aad6-21a1-4c8d-8d2f-8b771af28679",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0625967d-8860-4425-9463-3945222bc39f",
      "documentation": "<p>Requests the details of a job for a third party action. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.GetThirdPartyJobDetails",
      "responses": [
        {
          "uuid": "e80fffef-55dc-4a54-b1cd-8e21fe30c460",
          "body": "{\n  \"jobDetails\": {\n    \"id\": \"\",\n    \"data\": {\n      \"actionTypeId\": {\n        \"category\": \"\",\n        \"owner\": \"\",\n        \"provider\": \"\",\n        \"version\": \"\"\n      },\n      \"actionConfiguration\": {\n        \"configuration\": {}\n      },\n      \"pipelineContext\": {\n        \"pipelineName\": \"\",\n        \"stage\": {\n          \"name\": \"\"\n        },\n        \"action\": {\n          \"name\": \"\",\n          \"actionExecutionId\": \"\"\n        },\n        \"pipelineArn\": \"\",\n        \"pipelineExecutionId\": \"\"\n      },\n      \"inputArtifacts\": [\n        {\n          \"name\": \"\",\n          \"revision\": \"\",\n          \"location\": {\n            \"type\": \"\",\n            \"s3Location\": {\n              \"bucketName\": \"\",\n              \"objectKey\": \"\"\n            }\n          }\n        }\n      ],\n      \"outputArtifacts\": [\n        {\n          \"name\": \"\",\n          \"revision\": \"\",\n          \"location\": {\n            \"type\": \"\",\n            \"s3Location\": {\n              \"bucketName\": \"\",\n              \"objectKey\": \"\"\n            }\n          }\n        }\n      ],\n      \"artifactCredentials\": {\n        \"accessKeyId\": \"\",\n        \"secretAccessKey\": \"\",\n        \"sessionToken\": \"\"\n      },\n      \"continuationToken\": \"\",\n      \"encryptionKey\": {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    },\n    \"nonce\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f3db2de-f1ae-4886-acf1-b6888de7e57b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0b8a476-2fb6-43a7-932d-7deab7d8c941",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b78748b-76cc-4de1-8227-6ea236306c6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8ba3310-a485-4596-9ecf-0e901a508ee2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6087d69e-b608-4b94-b92d-f28422e4a6db",
      "documentation": "Lists the action executions that have occurred in a pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListActionExecutions",
      "responses": [
        {
          "uuid": "fc090f16-cd2c-4f99-939c-c4cb5ccb7654",
          "body": "{\n  \"actionExecutionDetails\": [\n    {\n      \"pipelineExecutionId\": \"\",\n      \"actionExecutionId\": \"\",\n      \"pipelineVersion\": {{faker 'datatype.number'}},\n      \"stageName\": \"\",\n      \"actionName\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"input\": {\n        \"actionTypeId\": {\n          \"category\": \"\",\n          \"owner\": \"\",\n          \"provider\": \"\",\n          \"version\": \"\"\n        },\n        \"configuration\": {},\n        \"resolvedConfiguration\": {},\n        \"roleArn\": \"\",\n        \"region\": \"\",\n        \"inputArtifacts\": [\n          {\n            \"name\": \"\",\n            \"s3location\": {\n              \"bucket\": \"\",\n              \"key\": \"\"\n            }\n          }\n        ],\n        \"namespace\": \"\"\n      },\n      \"output\": {\n        \"outputArtifacts\": [\n          {\n            \"name\": \"\",\n            \"s3location\": {\n              \"bucket\": \"\",\n              \"key\": \"\"\n            }\n          }\n        ],\n        \"executionResult\": {\n          \"externalExecutionId\": \"\",\n          \"externalExecutionSummary\": \"\",\n          \"externalExecutionUrl\": \"\"\n        },\n        \"outputVariables\": {}\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "514e1fcb-7693-464a-918c-ee7acb45aa22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfc08100-75a2-496a-ba2f-0cf8bfb3421c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30cf7afb-b5dc-4437-b856-e1c852db58b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4af6f493-2fd8-437d-a323-958ee5052e76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7959933c-74d1-4946-8f47-17e56101b198",
      "documentation": "Gets a summary of all AWS CodePipeline action types associated with your account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListActionTypes",
      "responses": [
        {
          "uuid": "037d58f1-e04a-48e8-bdc8-c7af496f4c5b",
          "body": "{\n  \"actionTypes\": [\n    {\n      \"id\": {\n        \"category\": \"\",\n        \"owner\": \"\",\n        \"provider\": \"\",\n        \"version\": \"\"\n      },\n      \"settings\": {\n        \"thirdPartyConfigurationUrl\": \"\",\n        \"entityUrlTemplate\": \"\",\n        \"executionUrlTemplate\": \"\",\n        \"revisionUrlTemplate\": \"\"\n      },\n      \"actionConfigurationProperties\": [\n        {\n          \"name\": \"\",\n          \"required\": {{faker 'datatype.boolean'}},\n          \"key\": {{faker 'datatype.boolean'}},\n          \"secret\": {{faker 'datatype.boolean'}},\n          \"queryable\": {{faker 'datatype.boolean'}},\n          \"description\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"inputArtifactDetails\": {\n        \"minimumCount\": {{faker 'datatype.number'}},\n        \"maximumCount\": {{faker 'datatype.number'}}\n      },\n      \"outputArtifactDetails\": {\n        \"minimumCount\": {{faker 'datatype.number'}},\n        \"maximumCount\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3083dd09-8ebc-44a9-af8a-8ee2d743c062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bee69c47-cdfe-4980-87e9-c5eb3ca405d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b4c0e6d-fc93-4d69-af82-5fcc3936370c",
      "documentation": "Gets a summary of the most recent executions for a pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListPipelineExecutions",
      "responses": [
        {
          "uuid": "dfffae8b-e371-4ccf-84ed-1b6d9e8a6660",
          "body": "{\n  \"pipelineExecutionSummaries\": [\n    {\n      \"pipelineExecutionId\": \"\",\n      \"status\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"sourceRevisions\": [\n        {\n          \"actionName\": \"\",\n          \"revisionId\": \"\",\n          \"revisionSummary\": \"\",\n          \"revisionUrl\": \"\"\n        }\n      ],\n      \"trigger\": {\n        \"triggerType\": \"\",\n        \"triggerDetail\": \"\"\n      },\n      \"stopTrigger\": {\n        \"reason\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e59b3e1-f0aa-40b8-a606-7e37346d60a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c0cdea6-0b29-48c6-92c4-26158f72c920",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8e9a12e-e6aa-45f2-b91a-ba1b6a9b773e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0b338b2-3e51-4c7b-b162-5160c95f3e6b",
      "documentation": "Gets a summary of all of the pipelines associated with your account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListPipelines",
      "responses": [
        {
          "uuid": "862ca24b-a62d-48f4-b6c8-6e476a615bf3",
          "body": "{\n  \"pipelines\": [\n    {\n      \"name\": \"\",\n      \"version\": {{faker 'datatype.number'}},\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"updated\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2a5b420-ff31-4908-ba35-252fc34e4677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0cf62f3a-9103-4f33-9cc0-3ffe9a3b19f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd07afb3-2fd9-4960-a377-91c943dac177",
      "documentation": "Gets the set of key-value pairs (metadata) that are used to manage the resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListTagsForResource",
      "responses": [
        {
          "uuid": "15f87aba-d658-442c-ba72-9e9d2fe47987",
          "body": "{\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "571039eb-d87a-40f8-8cea-3be5e5c985ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30cf0057-71da-4a90-89e4-9d1e4bf73054",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a22306e-c389-4dff-9806-b94b830a99c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc34d8f2-c167-430b-be7f-2adeff385932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64a5722a-a9a7-4e3f-9f69-c1811a15e644",
      "documentation": "Gets a listing of all the webhooks in this AWS Region for this account. The output lists all webhooks and includes the webhook URL and ARN and the configuration for each webhook.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.ListWebhooks",
      "responses": [
        {
          "uuid": "92871336-0a2c-4f64-9adf-bf0c69033f36",
          "body": "{\n  \"webhooks\": [\n    {\n      \"definition\": {\n        \"name\": \"\",\n        \"targetPipeline\": \"\",\n        \"targetAction\": \"\",\n        \"filters\": [\n          {\n            \"jsonPath\": \"\",\n            \"matchEquals\": \"\"\n          }\n        ],\n        \"authentication\": \"\",\n        \"authenticationConfiguration\": {\n          \"AllowedIPRange\": \"\",\n          \"SecretToken\": \"\"\n        }\n      },\n      \"url\": \"\",\n      \"errorMessage\": \"\",\n      \"errorCode\": \"\",\n      \"lastTriggered\": \"{{faker 'date.recent' 365}}\",\n      \"arn\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56b09728-a596-486e-91af-0f456dac69c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1834c5df-679d-4632-9c56-348809440641",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30276b4e-7464-4130-a886-3063081403cb",
      "documentation": "<p>Returns information about any jobs for AWS CodePipeline to act on. <code>PollForJobs</code> is valid only for action types with \"Custom\" in the owner field. If the action type contains \"AWS\" or \"ThirdParty\" in the owner field, the <code>PollForJobs</code> action returns an error.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PollForJobs",
      "responses": [
        {
          "uuid": "2f74797d-900c-4648-81c0-bdd3665b7edd",
          "body": "{\n  \"jobs\": [\n    {\n      \"id\": \"\",\n      \"data\": {\n        \"actionTypeId\": {\n          \"category\": \"\",\n          \"owner\": \"\",\n          \"provider\": \"\",\n          \"version\": \"\"\n        },\n        \"actionConfiguration\": {\n          \"configuration\": {}\n        },\n        \"pipelineContext\": {\n          \"pipelineName\": \"\",\n          \"stage\": {\n            \"name\": \"\"\n          },\n          \"action\": {\n            \"name\": \"\",\n            \"actionExecutionId\": \"\"\n          },\n          \"pipelineArn\": \"\",\n          \"pipelineExecutionId\": \"\"\n        },\n        \"inputArtifacts\": [\n          {\n            \"name\": \"\",\n            \"revision\": \"\",\n            \"location\": {\n              \"type\": \"\",\n              \"s3Location\": {\n                \"bucketName\": \"\",\n                \"objectKey\": \"\"\n              }\n            }\n          }\n        ],\n        \"outputArtifacts\": [\n          {\n            \"name\": \"\",\n            \"revision\": \"\",\n            \"location\": {\n              \"type\": \"\",\n              \"s3Location\": {\n                \"bucketName\": \"\",\n                \"objectKey\": \"\"\n              }\n            }\n          }\n        ],\n        \"artifactCredentials\": {\n          \"accessKeyId\": \"\",\n          \"secretAccessKey\": \"\",\n          \"sessionToken\": \"\"\n        },\n        \"continuationToken\": \"\",\n        \"encryptionKey\": {\n          \"id\": \"\",\n          \"type\": \"\"\n        }\n      },\n      \"nonce\": \"\",\n      \"accountId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e25aeb3-f9a7-400d-91cb-6c04e830dfdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "730af08e-8dac-4137-a7fa-d04ddb8714e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActionTypeNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cd9cc77-f90d-4b65-9f8b-96fbafb5a038",
      "documentation": "<p>Determines whether there are any third party jobs for a job worker to act on. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PollForThirdPartyJobs",
      "responses": [
        {
          "uuid": "44b11b3e-cabd-4601-9c15-791c13694d20",
          "body": "{\n  \"jobs\": [\n    {\n      \"clientId\": \"\",\n      \"jobId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "315eb181-8655-4752-a8be-9594126a36da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActionTypeNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72becdcf-780b-4ee0-ab2f-5e24a0d2f30a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ab1e79c-da61-455e-baf7-ae508a58d08e",
      "documentation": "Provides information to AWS CodePipeline about new revisions to a source.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutActionRevision",
      "responses": [
        {
          "uuid": "3e5c1a25-3e91-4a57-a9c5-ed8af7137709",
          "body": "{\n  \"newRevision\": {{faker 'datatype.boolean'}},\n  \"pipelineExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "557817c7-5dab-4809-905a-fa8487b84f99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96db3fa4-250b-46fc-b5ce-2ce221b9b930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "StageNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f279f070-5e24-4178-9c64-1c877a7c01b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ActionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff0336a0-05a8-4489-b7be-d03311d59064",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60952659-fdb8-4b09-8494-e2ca79d2b679",
      "documentation": "Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutApprovalResult",
      "responses": [
        {
          "uuid": "be4794db-a97b-4ebf-8647-0b6a8424ffb8",
          "body": "{\n  \"approvedAt\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdec9133-35a7-47ff-b7af-0454e31ae7b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39c7f3ff-5a76-4ae5-bb3c-bf223b77c15a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalAlreadyCompletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "051d9122-41b0-4afb-957f-b2438ae4a2bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8dc9675-6ecf-481b-8dbd-9b4b72a17261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StageNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74163265-0fef-48e3-887e-25759170a537",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ActionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e85c896-9535-40ee-a18c-1b3871931a8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "165757aa-1196-4e7a-9379-78ac9b45b273",
      "documentation": "Represents the failure of a job as returned to the pipeline by a job worker. Used for custom actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutJobFailureResult",
      "responses": [
        {
          "uuid": "c68150a6-358b-42f8-92c9-7cb06f27811a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93b6f652-9262-471d-89a9-ff935ec5472e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a3a734b-f7cf-4d2d-a212-898cabaf319e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c404737-bb71-4258-ac28-14ca8e147d67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb14fd23-bb70-4483-a5fe-3d6bb4ad3860",
      "documentation": "Represents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutJobSuccessResult",
      "responses": [
        {
          "uuid": "98f2b6fb-ed51-4eb1-ba1b-34061718a649",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fd3ab4b2-ab88-4d00-9fcc-3257e30a9363",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "933234a4-f7ea-4ece-8df0-e34864930bdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c13243ce-bbb8-4e79-b0fa-03b522cc3bc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7704bf40-da7a-48af-ac18-a70b4b4e5fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OutputVariablesSizeExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17fabf98-0e2b-4291-ae82-c986fa8410b4",
      "documentation": "Represents the failure of a third party job as returned to the pipeline by a job worker. Used for partner actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobFailureResult",
      "responses": [
        {
          "uuid": "dab023d3-72df-45d1-b6f2-74acf1b6e62a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67d0d407-0fe5-41cd-931b-d9bbdb10c5fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "712ff6f8-f53d-4c4d-9f4a-34afc557fd17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e11485d0-d482-4dd0-9dcd-f7bd1488d23f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d91123ae-5b8b-45fc-9eae-7be632b2fe10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidClientTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4bc59dc0-8cae-47c8-94e7-295e5dfd9688",
      "documentation": "Represents the success of a third party job as returned to the pipeline by a job worker. Used for partner actions only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobSuccessResult",
      "responses": [
        {
          "uuid": "d1372078-49a3-46c0-a497-9c2408d6fb00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8489b770-b2a8-42f4-bcfc-b5b65563527a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03205ef7-7ecc-433c-8f31-4f05b9289f84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "JobNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6262f2b-9933-485d-8032-54bc127644be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c68bb00-51e9-477c-a8bc-6d66dc411308",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidClientTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d19f8f7-f12e-408c-91fa-b1e1032f3c9d",
      "documentation": "Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there's a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.PutWebhook",
      "responses": [
        {
          "uuid": "25e13b8f-3daf-4bb7-8cd3-cce79d8dc7c4",
          "body": "{\n  \"webhook\": {\n    \"definition\": {\n      \"name\": \"\",\n      \"targetPipeline\": \"\",\n      \"targetAction\": \"\",\n      \"filters\": [\n        {\n          \"jsonPath\": \"\",\n          \"matchEquals\": \"\"\n        }\n      ],\n      \"authentication\": \"\",\n      \"authenticationConfiguration\": {\n        \"AllowedIPRange\": \"\",\n        \"SecretToken\": \"\"\n      }\n    },\n    \"url\": \"\",\n    \"errorMessage\": \"\",\n    \"errorCode\": \"\",\n    \"lastTriggered\": \"{{faker 'date.recent' 365}}\",\n    \"arn\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04a3fe67-f628-4abe-ae25-b5b4e7698029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c4787e5-34a0-4bfa-8a53-4fa6c6bd84b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef674168-2b71-4f7a-8d5f-f48f9b537fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidWebhookFilterPatternException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "996a1c64-7817-4b92-adf0-367496f24c21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidWebhookAuthenticationParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "070e2e93-845a-4176-9fd0-5de04b7a30ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69aa502e-216f-4ba5-8c72-46be9bbec60e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05e45da8-3d2a-498c-8a40-4746e2440495",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89493764-6519-430e-8627-e59f7624d349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d97f1d7-88e5-4d03-b088-2ca2d20df5b6",
      "documentation": "Configures a connection between the webhook that was created and the external tool with events to be detected.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.RegisterWebhookWithThirdParty",
      "responses": [
        {
          "uuid": "59cadab8-af69-4748-a95f-1ad5c26436d2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18621a22-d36b-447b-831e-940b526c12af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52fc7f4a-3e85-40fe-97ff-27be425e41f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "WebhookNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51e84c1e-b716-4ca6-a8d6-b88a698ffa3e",
      "documentation": "Resumes the pipeline execution by retrying the last failed actions in a stage. You can retry a stage immediately if any of the actions in the stage fail. When you retry, all actions that are still in progress continue working, and failed actions are triggered again.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.RetryStageExecution",
      "responses": [
        {
          "uuid": "fdfa2b1a-b513-439e-a62d-fa96bbcf31fe",
          "body": "{\n  \"pipelineExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d739b7da-f1ad-4dbb-88d1-d3a41020003b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35e95f67-052d-4f2d-b968-581bdb27825a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb0d131c-799e-4be0-b4f4-7dbb83b3e8e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "623f0e9c-8799-4f1d-9b57-0468980423df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StageNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71964b7a-3951-45ec-a52a-6c825ab17daf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StageNotRetryableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a666ee54-0b69-4483-8523-5e4738ec12f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotLatestPipelineExecutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83c6e21d-47e8-4d5b-bf12-e03fa3715fba",
      "documentation": "Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.StartPipelineExecution",
      "responses": [
        {
          "uuid": "b7c3c17a-6275-4259-8958-1ba2f6ffa1d0",
          "body": "{\n  \"pipelineExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b45fbc55-0912-4fed-bb09-d8e21474bec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4010d986-9e68-4b94-8e8f-6945240d83cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "743efec9-2c76-4219-b150-2eecbec5bcea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de57d88f-c43f-4d1a-b5f6-06598022927f",
      "documentation": "Stops the specified pipeline execution. You choose to either stop the pipeline execution by completing in-progress actions without starting subsequent actions, or by abandoning in-progress actions. While completing or abandoning in-progress actions, the pipeline execution is in a <code>Stopping</code> state. After all in-progress actions are completed or abandoned, the pipeline execution is in a <code>Stopped</code> state.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.StopPipelineExecution",
      "responses": [
        {
          "uuid": "1f825bd3-d890-428f-b4e1-33732d89edee",
          "body": "{\n  \"pipelineExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3226de5c-aeb0-4f40-98f6-0179b62558a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "24fd8317-57fa-4f00-acff-4d00d80f1ce2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80c12ecf-08df-4242-bcd4-e5bc2fbb4a09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3337335c-7c9d-4f38-ad7d-86914b99e189",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineExecutionNotStoppableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "052b852a-08df-4eae-841a-c5dc6b773a32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicatedStopRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13365f5a-8a93-4f80-8d3c-c6579a88952b",
      "documentation": "Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.TagResource",
      "responses": [
        {
          "uuid": "1ed90d5c-e67d-4e41-b518-54decae659d6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1616ef63-81b0-4006-8ba2-c4f462eae7ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f25f3d9-3d27-4131-85f2-c84829475b51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14e6b008-95b0-467c-ac77-31fe4a07b36f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af6325df-ce0a-49c8-bc5a-b7569217e7a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "172a9e83-b72d-44bb-b27d-0194605ca693",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9c384b1-7359-4cea-a34a-981e7a452f6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0d0157f-165f-4483-adea-7dc3e4d5bd66",
      "documentation": "Removes tags from an AWS resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.UntagResource",
      "responses": [
        {
          "uuid": "084b2d76-5dd9-43fd-8628-3b5ec8def39c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e143221c-c570-4654-9051-7e76d7e2a76c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f14e5394-f7d7-442a-aa11-e5f61c05869f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74cfb727-28c8-4a1f-9b1d-6d38ca04202d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9575dec3-1e6e-45a7-b8e8-c7e643f160fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ea00b22-f00d-4963-908c-4b4284a951d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "774c03e3-94f2-49be-b4ee-e61bf11337fd",
      "documentation": "Updates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider. Use a JSON file with the action definition and <code>UpdateActionType</code> to provide the full structure.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.UpdateActionType",
      "responses": [
        {
          "uuid": "d3e790ea-9dba-409a-9389-b882818ec7b0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3732b7e8-32ce-4822-9fd3-405130a41098",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "095795ab-890d-4c92-8902-adb9e31d7a44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54aec4e8-a425-4c2f-afd5-68128a3e9567",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ActionTypeNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1427cc7d-7b23-430a-b7b0-16a09a0cc733",
      "documentation": "Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure and <code>UpdatePipeline</code> to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodePipeline_20150709.UpdatePipeline",
      "responses": [
        {
          "uuid": "2c9e52ba-7f37-45f0-9ad0-9226e09f4651",
          "body": "{\n  \"pipeline\": {\n    \"name\": \"\",\n    \"roleArn\": \"\",\n    \"artifactStore\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"encryptionKey\": {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    },\n    \"artifactStores\": {},\n    \"stages\": [\n      {\n        \"name\": \"\",\n        \"blockers\": [\n          {\n            \"name\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"actions\": [\n          {\n            \"name\": \"\",\n            \"actionTypeId\": {\n              \"category\": \"\",\n              \"owner\": \"\",\n              \"provider\": \"\",\n              \"version\": \"\"\n            },\n            \"runOrder\": {{faker 'datatype.number'}},\n            \"configuration\": {},\n            \"outputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"inputArtifacts\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"roleArn\": \"\",\n            \"region\": \"\",\n            \"namespace\": \"\"\n          }\n        ]\n      }\n    ],\n    \"version\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6c074c1a-6d48-4087-af5f-c54029ef46d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ab56bd8-483f-483d-9e89-efe277826212",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStageDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f837120b-aeb3-4f20-b82f-ddb70d505c4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidActionDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cce9cd3e-70fb-444f-8e2c-5a92ad9ee71a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidBlockerDeclarationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f2c8602-d72a-4e4d-88ba-5e153392a015",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidStructureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26582bb7-d885-4571-b16b-f1edea58e577",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}