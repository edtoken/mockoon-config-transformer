{
  "uuid": "5620a2a7-55b2-4dc1-9a05-d4f0b5fab610",
  "lastMigration": 24,
  "name": "ShipEngine API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f8ec7c25-c127-4865-8c00-8ee91c38f24f",
      "documentation": "Parse an address",
      "method": "put",
      "endpoint": "v1/addresses/recognize",
      "responses": [
        {
          "uuid": "5c2c8453-3d8e-4e41-b4aa-66461962bbf5",
          "body": "{\n  \"address\": {\n    \"address_line1\": \"1999 Bishop Grandin Blvd.\",\n    \"address_line2\": \"Unit 408\",\n    \"address_line3\": \"Building #7\",\n    \"address_residential_indicator\": \"no\",\n    \"city_locality\": \"Winnipeg\",\n    \"company_name\": \"The Home Depot\",\n    \"country_code\": \"\",\n    \"name\": \"John Doe\",\n    \"phone\": \"+1 204-253-9411 ext. 123\",\n    \"postal_code\": \"\",\n    \"state_province\": \"Manitoba\"\n  },\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'datatype.number'}},\n      \"result\": {},\n      \"score\": {{faker 'datatype.float'}},\n      \"start_index\": {{faker 'datatype.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'datatype.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22e1f3c5-7da5-4d40-9d71-0b3aabeba07b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b72724e-7983-46b0-8395-f1179119f31d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05737c38-a621-44d1-bff5-fc117c110504",
      "documentation": "Validate An Address",
      "method": "post",
      "endpoint": "v1/addresses/validate",
      "responses": [
        {
          "uuid": "28ab7ae0-55c7-4389-889f-65e8eb84c3a6",
          "body": "[\n  {\n    \"matched_address\": {},\n    \"messages\": [],\n    \"original_address\": {},\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3261eb7a-8a4f-4e66-991f-654c5de1b6cf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07133249-5983-4850-9631-e38c361b26d1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "712e8f9b-f83d-466b-bd9d-e15ce563d140",
      "documentation": "List Batches",
      "method": "get",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "ac9bf6d2-50a7-4e93-91e2-76fbc5a3a351",
          "body": "{\n  \"batches\": [\n    {\n      \"batch_errors_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_id\": \"\",\n      \"batch_labels_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_notes\": \"Batch for morning shipment\",\n      \"batch_shipments_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"completed\": 1,\n      \"count\": 2,\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"errors\": 2,\n      \"external_batch_id\": \"\",\n      \"form_download\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"forms\": 3,\n      \"label_download\": {\n        \"href\": \"\",\n        \"pdf\": \"\",\n        \"png\": \"\",\n        \"zpl\": \"\"\n      },\n      \"label_format\": \"pdf\",\n      \"label_layout\": \"4x6\",\n      \"processed_at\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"warnings\": 1\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 10,\n  \"total\": 10\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e6fd7c55-6f64-4a2e-bff2-30508a759fb4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c7830e2-14ba-4075-99c3-7300a25e0113",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4161b2a-6048-42a2-ac04-a67f5afe5f97",
      "documentation": "Create A Batch",
      "method": "post",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "e4752199-4f6d-4496-98d6-a2ba103eeb68",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "675b3967-07ce-43b5-a251-685c135c8d99",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "740d6950-995b-4b74-bf90-50c712049ca1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c22549e-c4d0-42e8-8826-f294a676aa6d",
      "documentation": "Get Batch By External ID",
      "method": "get",
      "endpoint": "v1/batches/external_batch_id/:external_batch_id",
      "responses": [
        {
          "uuid": "fb38d652-9209-413d-894d-8d0a729ad120",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "47e89ecb-cac2-4724-a04d-f158e5fce9d9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac528cce-53a7-4acb-a42a-f676f364a4ff",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac6240df-3ae9-4273-b41a-6000d391036e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb660098-b2f7-4f58-9da6-4e67a9b5fcec",
      "documentation": "Delete Batch By Id",
      "method": "delete",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "1aa7aa14-9f58-438b-b77d-e8b1b0972596",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce385f2f-889d-4b5f-a42d-25df9f239480",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a5cfd57-87a5-42a2-980c-ceaac1728add",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "854c07fe-79a2-4a98-8eff-4284dba7ad64",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b010599-9d37-4226-950b-24df8a0ad9ec",
      "documentation": "Get Batch By ID",
      "method": "get",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "591c82a2-35c0-4bae-a1cd-f6326cb22a1c",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bbddcbe4-122e-4855-9f00-e74f26927252",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2e0ebf6-7003-46b9-be7a-756c980647c1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6635cfb-d532-4b0e-af99-93a9efb90e9b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5f437f8-2768-48c3-9f24-ebf99079462c",
      "documentation": "Update Batch By Id",
      "method": "put",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "fb3ec320-de74-4c8d-a7e8-c33054bca9bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f31f2713-fa54-4bea-a852-9c066541c9b8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f2cc29c-1af6-45dd-977f-c0ae029775d5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1ee29d0-9b00-42e5-a50f-215e90d82770",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e30c8d72-6b1b-49ef-a23f-cd98e5721d76",
      "documentation": "Add to a Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/add",
      "responses": [
        {
          "uuid": "341d0f44-ab01-4bc9-b8cf-c0623f87c2bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8c5069fe-0c39-4b5e-8b60-5a6e478b4f18",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97532e8a-0d8a-46d7-988f-8f4bf181f8fc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8234970d-d07a-49ed-9a8a-aac93316807f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "baae1e86-10ae-4fd9-a2ba-6560d6d53046",
      "documentation": "Get Batch Errors",
      "method": "get",
      "endpoint": "v1/batches/:batch_id/errors",
      "responses": [
        {
          "uuid": "29773597-b842-4160-a105-0c4ef4f8c6b3",
          "body": "{\n  \"errors\": [],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "607cf398-ad3f-4021-bcd4-7463eb1fc2a3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e67e9320-7496-4f6b-9b4e-8faaf4620db6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22e0e8e4-c6b0-4204-ae4f-773394e6b6a5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "feb2e232-c3d1-43aa-b695-f1fb1c6f7b1c",
      "documentation": "Process Batch ID Labels",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/process/labels",
      "responses": [
        {
          "uuid": "3f5922d1-a5d0-41c4-9468-53c31c06331e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a1784dc7-4024-4507-a757-70732660d31e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a2d9e72-9007-4ddb-b6ea-46387775a5e8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22c0755a-afa7-4b6e-99cb-4c31e4d12616",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf41efda-2296-4f4f-84a4-56f420a58016",
      "documentation": "Remove From Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/remove",
      "responses": [
        {
          "uuid": "14253c6b-22c3-471e-acb4-00a38e23036d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c50e900-f07b-4cb9-9645-b05ec5204e36",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cb62e52-7508-499a-8592-5bec482f0f7a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "884d56a4-be36-4aca-827e-cc443c72238d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8def3dff-72e0-46c4-8bdd-c8834f6ba1e9",
      "documentation": "List Carriers",
      "method": "get",
      "endpoint": "v1/carriers",
      "responses": [
        {
          "uuid": "cd7e6eba-721c-4196-b424-e8e05efc527d",
          "body": "{\n  \"carriers\": [\n    {\n      \"account_number\": \"account_570827\",\n      \"balance\": 3799.52,\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"friendly_name\": \"Stamps.com\",\n      \"has_multi_package_supporting_services\": {{faker 'datatype.boolean'}},\n      \"nickname\": \"ShipEngine Account - Stamps.com\",\n      \"options\": [\n        {\n          \"default_value\": \"\",\n          \"description\": \"\",\n          \"name\": \"contains_alcohol\"\n        }\n      ],\n      \"packages\": [\n        {\n          \"description\": \"Packaging for laptops\",\n          \"dimensions\": {\n            \"height\": {{faker 'datatype.float'}},\n            \"length\": {{faker 'datatype.float'}},\n            \"unit\": \"inch\",\n            \"width\": {{faker 'datatype.float'}}\n          },\n          \"name\": \"laptop_box\",\n          \"package_code\": \"\",\n          \"package_id\": \"\"\n        }\n      ],\n      \"primary\": {{faker 'datatype.boolean'}},\n      \"requires_funded_amount\": {{faker 'datatype.boolean'}},\n      \"services\": [\n        {\n          \"carrier_code\": \"\",\n          \"carrier_id\": \"\",\n          \"domestic\": {{faker 'datatype.boolean'}},\n          \"international\": {{faker 'datatype.boolean'}},\n          \"is_multi_package_supported\": {{faker 'datatype.boolean'}},\n          \"name\": \"USPS First Class Mail\",\n          \"service_code\": \"usps_media_mail\"\n        }\n      ],\n      \"supports_label_messages\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d54e8974-eaef-4df7-96c2-6c8f2a9c91b6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ecc90262-5f8b-49ea-84d3-1f34bb0b250a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5d9ce84e-1a84-4a87-a30f-03127803b9cc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6de0f88b-d864-448e-9409-88d8dc699662",
      "documentation": "Get Carrier By ID",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id",
      "responses": [
        {
          "uuid": "0e9e3c9f-aa02-4303-ba25-450885d2611a",
          "body": "{\n  \"account_number\": \"account_570827\",\n  \"balance\": 3799.52,\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"friendly_name\": \"Stamps.com\",\n  \"has_multi_package_supporting_services\": {{faker 'datatype.boolean'}},\n  \"nickname\": \"ShipEngine Account - Stamps.com\",\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ],\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ],\n  \"primary\": {{faker 'datatype.boolean'}},\n  \"requires_funded_amount\": {{faker 'datatype.boolean'}},\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'datatype.boolean'}},\n      \"international\": {{faker 'datatype.boolean'}},\n      \"is_multi_package_supported\": {{faker 'datatype.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ],\n  \"supports_label_messages\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4daec6a-75fc-4904-a57e-affb57f9593d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "148eea84-962f-4905-b61e-da22cb381b2c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e7e90a1-ba85-4a09-ae12-36600eebd2f4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce677066-1fdc-4cc2-a052-c29e7f5fc540",
      "documentation": "Add Funds To Carrier",
      "method": "put",
      "endpoint": "v1/carriers/:carrier_id/add_funds",
      "responses": [
        {
          "uuid": "0cd0fef4-caf2-427d-be8f-5c16a1349ed2",
          "body": "{\n  \"balance\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "099bd01c-ea44-4bde-b74f-08f0c9c5efda",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25185e06-303a-4f9d-94ad-3a901f2ceec5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bea51378-4e18-4117-a19c-c76a39ff936c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7509e16a-e0e1-48dc-85ea-824f23dcb2dc",
      "documentation": "Get Carrier Options",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/options",
      "responses": [
        {
          "uuid": "b48d92c4-821d-49b1-9f62-09a4720ec6a0",
          "body": "{\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4f4ca0c5-e3fb-4a24-ae38-10750ad91ede",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41e2ccf5-7a02-42a7-96f1-4b394c9e3139",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6afbf773-52b4-4106-b1df-f342324e48ea",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f12088d-f9bf-49e4-b543-c836ebe6fe3f",
      "documentation": "List Carrier Package Types",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/packages",
      "responses": [
        {
          "uuid": "9e92ef53-2803-4c60-9c4a-6fb1973bdd67",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf2c5a92-972c-4fb4-85dd-bcdf2fbf196b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "238c8a9a-96e2-4557-854c-dbaf15996d84",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "981d74fe-dd88-4ae4-ae64-5fa0236f0118",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "71e42c03-c8fc-498d-ae86-33b714cb2609",
      "documentation": "List Carrier Services",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/services",
      "responses": [
        {
          "uuid": "bb9b16be-d71c-4ba9-9353-628e784fa907",
          "body": "{\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'datatype.boolean'}},\n      \"international\": {{faker 'datatype.boolean'}},\n      \"is_multi_package_supported\": {{faker 'datatype.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f976f1f-b728-4674-bc5c-748dbeeb41b3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46207a2a-e8e5-4772-9398-e45ee3832aca",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ba0896f-7e82-4f1f-a493-bd3a68320369",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "825a1d67-a785-420c-83a3-d4f826f76321",
      "documentation": "Connect a carrier account",
      "method": "post",
      "endpoint": "v1/connections/carriers/:carrier_name",
      "responses": [
        {
          "uuid": "048675e2-d49d-4695-9dd7-a1668ebee593",
          "body": "{\n  \"carrier_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "177de5a0-1313-418a-8766-b672ea334e02",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "214650d7-a8fc-4026-8447-ee65b9840923",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfe56455-9f12-4167-8c4a-598cff67ef36",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f90d73b8-5feb-4f4e-a525-8c579dc64783",
      "documentation": "Disconnect a carrier",
      "method": "delete",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id",
      "responses": [
        {
          "uuid": "63d1ea02-c3a8-4b5d-8b0a-9d414af25c5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18d402b3-8c69-4d91-90f1-fb69096e6a8a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e545a62d-0cc2-4691-b606-ef78cc335c52",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7fe0e41a-e5c0-4327-97a5-c2f7466d2be4",
      "documentation": "Get carrier settings",
      "method": "get",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "7cbe75a7-f74e-4fe9-baf2-6cc4f6d18e20",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6607f7c9-bd9a-4adf-9697-f41466086b13",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc7ba1dd-858f-4e3f-bf3e-08674665fd98",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e97bc9f-1d3e-4105-8174-8af5b6d88908",
      "documentation": "Update carrier settings",
      "method": "put",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "1c522e9f-1c31-4f3c-ac12-22e793b60037",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1edf56a5-fc73-4d36-9d0b-636f79567fad",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e746fd7-62e6-4ab0-8e9d-ec35425b45f3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "adcbc024-4ef0-406c-b1a7-cd065c69c478",
      "documentation": "Disconnect a Shipsurance Account",
      "method": "delete",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "ad081b6d-050a-4b22-8506-7ece5f5513fc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4063dd93-888d-469b-9802-3c94c0add562",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca5277af-25fa-4c1f-bbda-884ec0bca516",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce0334cf-2695-4651-800d-908a2ba710cc",
      "documentation": "Connect a Shipsurance Account",
      "method": "post",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "8c76b081-4e85-4708-99a0-baf341a06e2b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3161ffa8-0921-45e1-9367-b8437957a893",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c315f9-5582-4ca0-afeb-75dc8e581454",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3b83724-617e-4fde-82c9-3485cffdf288",
      "documentation": "Download File",
      "method": "get",
      "endpoint": "v1/downloads/:dir/:subdir/:filename",
      "responses": [
        {
          "uuid": "9c84f1f7-fa21-427d-a851-a110fec3d1b5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/pdf"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e8d4f22-a8c0-4cfa-b306-1878d51b5c0e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6caa325c-d050-45bd-9bff-24213747b4a1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e32892d-2c0c-433d-8805-200c8f0ac039",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59167fd5-01c7-4085-8387-c4d971761d11",
      "documentation": "List Webhooks",
      "method": "get",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "0aa068e7-294e-4ad0-804b-d24b6d2a1e98",
          "body": "[\n  {\n    \"event\": \"\",\n    \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n    \"webhook_id\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "78e301fa-7af7-4cbe-8815-e9609831c294",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac9ec88a-c485-465d-aaf5-13f60477f823",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ee0b222-47a9-4095-9aab-d26a7342d5a5",
      "documentation": "Create a Webhook",
      "method": "post",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "5ce86017-9fcc-4207-ac47-72fabb07b826",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a350c362-0818-4f6c-a4fb-b9f94ae76a0d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4026d87-48b8-4221-a3e5-4438d0338ba0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The request conflicts with an existing resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83651a22-8755-47f1-8452-e046c5a1fd26",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c511e05-515c-43a5-8e37-f2a0e51a8777",
      "documentation": "Delete Webhook By ID",
      "method": "delete",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "aec81421-4a3f-4efb-9220-dac3cc7b26bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e390329e-0936-4801-afd9-cb68693bcf4f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8924eec3-57c3-4a63-be76-d9b86024adde",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a778914b-d340-4ec4-b1f1-7b4092bb17c6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "74eaa6e2-ffd0-4195-9a0b-992c5f744b78",
      "documentation": "Get Webhook By ID",
      "method": "get",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "9e15c807-09b6-4b54-827d-c1c21846a325",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab74a1b5-41cc-4764-847a-acaf71b10d61",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f3ab2cb-e173-4402-b371-3a4deeebeea5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c72b86b9-e223-4049-a469-1e7998042953",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f72d3666-ff6b-4fec-b18f-c41a24bd6bcb",
      "documentation": "Update a Webhook",
      "method": "put",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "38c4caf4-31d9-4d02-bd07-290bda51f50f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7792e9b9-3e6a-425c-8f85-6cb59474eeef",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0b74a6f-7409-422e-b14a-21c480316438",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3723eb3-54bc-4eaf-9eee-0626a8ea9808",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0a53b69-0bb3-4e8c-9b7f-2cfe5265c6cf",
      "documentation": "Add Funds To Insurance",
      "method": "patch",
      "endpoint": "v1/insurance/shipsurance/add_funds",
      "responses": [
        {
          "uuid": "5e0abb8b-ea04-4787-9fdf-8d3a08a3520e",
          "body": "{\n  \"amount\": {{faker 'datatype.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3e9ea5fc-507b-49fc-ba05-08dbf6f33374",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d16fdc4-cc7c-43bb-b6f1-ab4ef8092d42",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e3576ea2-a544-42b7-be12-5c16d859be97",
      "documentation": "Get Insurance Funds Balance",
      "method": "get",
      "endpoint": "v1/insurance/shipsurance/balance",
      "responses": [
        {
          "uuid": "2669aaef-3c0d-48d5-af1f-01f23ec9b436",
          "body": "{\n  \"amount\": {{faker 'datatype.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "47b37f1a-c633-49ab-b488-6c8f36fcc088",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "addc0aca-f7fd-43ed-add7-f64765abf5f0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d62a071-6456-4d5e-801d-907d1e33e28a",
      "documentation": "List labels",
      "method": "get",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "605edbe9-7549-4cf6-abab-24cd96101e27",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 4,\n  \"total\": 2750\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "82b126b4-81b5-4e9c-a055-2e6ce7a4abaa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77cebfeb-21b9-4bcf-b2f4-a0e2d5a0cb40",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e695b756-2473-4279-ab78-7a8eeb711c63",
      "documentation": "Purchase Label",
      "method": "post",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "4ff2d5fd-748b-45a2-8dd8-873a702a9f10",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "34b10ee4-f08d-4845-a6b4-ca2b1e7831ab",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8e1b855-1fe1-42fe-b3b8-769ff460a110",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18e93837-4d2e-4518-b01b-7ba76257bff0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3783e79d-7ec9-45af-9e18-e090718ba2f3",
      "documentation": "Get Label By External Shipment ID",
      "method": "get",
      "endpoint": "v1/labels/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "b542c1d7-d89b-4408-900b-fefb83a0e852",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "450e2e07-0253-4c6c-aa28-82b4a6c5b8c1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "580e138c-cdb9-4206-af23-ead8113334dc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee9de886-934a-419e-9c4b-344dc617eb32",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6c7b112-de97-424f-98ac-a9cb6ffe13de",
      "documentation": "Purchase Label with Rate ID",
      "method": "post",
      "endpoint": "v1/labels/rates/:rate_id",
      "responses": [
        {
          "uuid": "613e3f51-5019-45b6-8dcc-6efc76d648f2",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "326c1b40-a6ef-42a8-b03b-353e5e3c2860",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1535d385-5663-4893-953e-382c672a7541",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "461cbf85-1f51-443b-b39d-d9db34af4f54",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61735973-5b00-4c90-a844-fa920d97d04c",
      "documentation": "Purchase Label with Shipment ID",
      "method": "post",
      "endpoint": "v1/labels/shipment/:shipment_id",
      "responses": [
        {
          "uuid": "a6463189-6959-4c78-8aa5-5a2c3ac77524",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9321d51b-94e7-4221-97fe-46026ee65eb3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a5a1ab0-dae0-4ddd-be44-c48ac402915c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e1d3eeb-03fb-4c25-a52c-07f6811e5dd9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f64c34bd-7f7f-405f-b5b6-6574698959b2",
      "documentation": "Get Label By ID",
      "method": "get",
      "endpoint": "v1/labels/:label_id",
      "responses": [
        {
          "uuid": "374d229f-cf32-4e67-a78a-9c471e40ec6b",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8363dad8-a8dc-45a4-8028-6fc0518d5ef1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8cd5201-3cd2-462d-bd43-ce5bc3db1848",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08c8f3f7-a0d7-4e71-a85d-0c2f81f01857",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbef8737-86a7-482c-8a15-85d02efabc86",
      "documentation": "Create a return label",
      "method": "post",
      "endpoint": "v1/labels/:label_id/return",
      "responses": [
        {
          "uuid": "3d2dde89-9e8a-49d2-a69b-4f99d1feb450",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'datatype.boolean'}},\n  \"is_return_label\": {{faker 'datatype.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'datatype.boolean'}},\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'datatype.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7409a2bc-c2c1-45f6-aede-aaf66f953655",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e846bee8-c8e7-45e2-ab0b-a58785641ac7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48941bbb-aa78-49f6-afa4-ee3859ab1a25",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8da60621-4f66-4fba-9d89-5dc96b9736ee",
      "documentation": "Get Label Tracking Information",
      "method": "get",
      "endpoint": "v1/labels/:label_id/track",
      "responses": [
        {
          "uuid": "61c50344-6458-47b2-bc80-ed3a15815eb1",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'datatype.float'}},\n      \"longitude\": {{faker 'datatype.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41b15a4d-fc61-4903-84df-a7e45b79a795",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c31b5aa0-825e-4eeb-a9f5-1efcc2b3e6f9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41fe0ce0-c985-4273-af15-02b1080bf506",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08efdc12-2767-4265-97da-dc812391c051",
      "documentation": "Void a Label By ID",
      "method": "put",
      "endpoint": "v1/labels/:label_id/void",
      "responses": [
        {
          "uuid": "471ea425-0be0-4490-a616-bdc8c53d4bea",
          "body": "{\n  \"approved\": {{faker 'datatype.boolean'}},\n  \"message\": \"Request for refund submitted.  This label has been voided.\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "917e812f-c261-4868-b6c4-830eac4d4687",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "041f6e5a-9361-4606-bb68-a249d566722f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb649838-58c2-44eb-b4fe-c7e862da50a1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b20cdb9c-f9a3-4f52-9dc3-736f4255b7a9",
      "documentation": "List Manifests",
      "method": "get",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "b6815e66-c446-4698-8a12-d0ec22e1bede",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"manifests\": [],\n  \"page\": 3,\n  \"pages\": 4,\n  \"total\": 3\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71c426be-510d-44cc-b5e2-b769400f5d82",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd858150-3226-44bb-b028-ea2566bf8c6f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27134b0a-e621-4ce1-9346-331b7c945158",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "763b43e0-3387-4f6e-b6e2-7624fb0573cd",
      "documentation": "Create Manifest",
      "method": "post",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "870b454a-ccce-44da-a8b6-1eb1e9f0389a",
          "body": "{\n  \"manifests\": [\n    {\n      \"carrier_id\": \"\",\n      \"created_at\": \"2019-07-12T13:37:39.050Z\",\n      \"form_id\": \"\",\n      \"manifest_download\": {\n        \"href\": \"\"\n      },\n      \"manifest_id\": \"\",\n      \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n      \"shipments\": 100,\n      \"submission_id\": 9.475711899564878e+21,\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4406f226-c3fc-43c6-8187-35b2aee2d702",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6720b4fc-c09c-4455-bc41-c19f395a0f50",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2eca8f33-1c14-4d49-93bf-4d158635e5ce",
      "documentation": "Get Manifest By Id",
      "method": "get",
      "endpoint": "v1/manifests/:manifest_id",
      "responses": [
        {
          "uuid": "5571a0b2-58e4-4e40-b219-c35e79265360",
          "body": "{\n  \"carrier_id\": \"\",\n  \"created_at\": \"2019-07-12T13:37:39.050Z\",\n  \"form_id\": \"\",\n  \"manifest_download\": {\n    \"href\": \"\"\n  },\n  \"manifest_id\": \"\",\n  \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n  \"shipments\": 100,\n  \"submission_id\": 9.475711899564878e+21,\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c04bbdaf-e5b2-4fb5-a0f6-35a96e70a986",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "616d889b-24e4-4855-be6d-bf34949a3d59",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81e9c36b-5108-46e1-aed3-21d4048799e6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10ac5b06-4541-47c9-906e-be354c3aaebc",
      "documentation": "List Custom Package Types",
      "method": "get",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "2772a051-6687-4f54-a43a-8e24ced79f84",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f80249e0-5f82-46a2-bc3c-e66e5ec5ac5d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d756fc34-d123-4beb-ac7a-6aa2a5233f59",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "851f52f8-3d2a-4d1f-9143-3e57acb2108a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b658590-5094-42d9-88af-9148e9408419",
      "documentation": "Create Custom Package Type",
      "method": "post",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "7ad27932-d34b-4f39-8684-67326c90d141",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'datatype.float'}},\n    \"length\": {{faker 'datatype.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'datatype.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20b97676-d35e-44cc-9750-11272d4cbe9c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a4525ca-f6c8-4e6e-bd6a-55d713d5c1a1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c8d5a31-652b-468f-bddf-f018e07cec67",
      "documentation": "Delete A Custom Package By ID",
      "method": "delete",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "acae3e7a-7dd0-47c5-8762-469254b9c563",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a85e8fc-a046-49a5-85c3-cb86784e89e7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25412975-f205-4877-8643-6e9573e01be0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62e9effb-4e82-47d3-90b2-d7ce4f78e646",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5fe8b9bd-7c1f-4ccd-8dab-b26191dda187",
      "documentation": "Get Custom Package Type By ID",
      "method": "get",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "399f629c-04f9-47be-942d-82760144b758",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'datatype.float'}},\n    \"length\": {{faker 'datatype.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'datatype.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88374abb-f3e7-475d-84c6-a65c697dd13f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e5d5112-33cf-45ff-8229-16dd1ed39126",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2cbbed51-220d-4121-939b-724e2631888b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a45f325d-4dd2-40f1-ab07-fc3afaaf6a9f",
      "documentation": "Update Custom Package Type By ID",
      "method": "put",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "87a22bff-c40a-4a5d-a23a-dab0eccd0545",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07846026-f516-41aa-a9da-397fcb5e72a5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "438aee34-8fd3-46cb-b86a-99bc24f849fe",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "144155d8-2793-421e-9ee5-285865a483dc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "86229b00-1cc4-473f-bdd7-f5824931066d",
      "documentation": "Get Shipping Rates",
      "method": "post",
      "endpoint": "v1/rates",
      "responses": [
        {
          "uuid": "f267bb14-0061-4954-a6ea-585bd1e122b1",
          "body": "{\n  \"advanced_options\": {\n    \"bill_to_account\": \"\",\n    \"bill_to_country_code\": \"\",\n    \"bill_to_party\": \"\",\n    \"bill_to_postal_code\": \"\",\n    \"collect_on_delivery\": {\n      \"payment_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"payment_type\": \"\"\n    },\n    \"contains_alcohol\": {{faker 'datatype.boolean'}},\n    \"custom_field1\": \"\",\n    \"custom_field2\": \"\",\n    \"custom_field3\": \"\",\n    \"delivered_duty_paid\": {{faker 'datatype.boolean'}},\n    \"dry_ice\": {{faker 'datatype.boolean'}},\n    \"dry_ice_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.float'}}\n    },\n    \"freight_class\": 77.5,\n    \"non_machinable\": {{faker 'datatype.boolean'}},\n    \"saturday_delivery\": {{faker 'datatype.boolean'}},\n    \"use_ups_ground_freight_pricing\": {{faker 'datatype.boolean'}}\n  },\n  \"carrier_id\": \"\",\n  \"confirmation\": \"none\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"customs\": {\n    \"contents\": \"merchandise\",\n    \"customs_items\": [],\n    \"non_delivery\": \"return_to_sender\"\n  },\n  \"external_order_id\": \"\",\n  \"external_shipment_id\": \"\",\n  \"insurance_provider\": \"none\",\n  \"items\": [],\n  \"modified_at\": \"{{faker 'date.recent' 365}}\",\n  \"order_source_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'datatype.float'}},\n        \"length\": {{faker 'datatype.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'datatype.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      }\n    }\n  ],\n  \"return_to\": {},\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"ship_from\": {},\n  \"ship_to\": {},\n  \"shipment_id\": \"\",\n  \"shipment_status\": \"pending\",\n  \"tags\": [],\n  \"total_weight\": {\n    \"unit\": \"\",\n    \"value\": {{faker 'datatype.float'}}\n  },\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4be25092-fe16-49e4-99c0-c807f186031b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d36f945d-bb31-48d3-a801-9dc00aaa5bb7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f114903e-89d7-4fbe-8f00-de1fd874160b",
      "documentation": "Get Bulk Rates",
      "method": "post",
      "endpoint": "v1/rates/bulk",
      "responses": [
        {
          "uuid": "86e1201c-344b-4cf2-9d1a-aa1c1003ee0a",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"error_code\": \"\",\n        \"error_source\": \"\",\n        \"error_type\": \"\",\n        \"message\": \"Body of request cannot be null.\"\n      }\n    ],\n    \"rate_request_id\": \"\",\n    \"shipment_id\": \"\",\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca98db15-4c32-41fc-a418-90a22bd8fabf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e245beac-5a63-4148-b0b1-1711ea0e1cc1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7848d37c-764c-46ad-9e40-9f1d92025029",
      "documentation": "Estimate Rates",
      "method": "post",
      "endpoint": "v1/rates/estimate",
      "responses": [
        {
          "uuid": "2a5b98b3-6ac9-492d-88b0-0cd0fa502eb3",
          "body": "[\n  {\n    \"carrier_code\": \"\",\n    \"carrier_delivery_days\": \"\",\n    \"carrier_friendly_name\": \"\",\n    \"carrier_id\": \"\",\n    \"carrier_nickname\": \"\",\n    \"confirmation_amount\": {\n      \"amount\": {{faker 'datatype.float'}},\n      \"currency\": \"\"\n    },\n    \"delivery_days\": 5,\n    \"error_messages\": [\n      \"\"\n    ],\n    \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n    \"guaranteed_service\": {{faker 'datatype.boolean'}},\n    \"insurance_amount\": {\n      \"amount\": {{faker 'datatype.float'}},\n      \"currency\": \"\"\n    },\n    \"negotiated_rate\": {{faker 'datatype.boolean'}},\n    \"other_amount\": {\n      \"amount\": {{faker 'datatype.float'}},\n      \"currency\": \"\"\n    },\n    \"package_type\": \"package\",\n    \"rate_id\": \"\",\n    \"rate_type\": \"\",\n    \"service_code\": \"\",\n    \"service_type\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"shipping_amount\": {\n      \"amount\": {{faker 'datatype.float'}},\n      \"currency\": \"\"\n    },\n    \"tax_amount\": {\n      \"amount\": {{faker 'datatype.float'}},\n      \"currency\": \"\"\n    },\n    \"trackable\": {{faker 'datatype.boolean'}},\n    \"validation_status\": \"\",\n    \"warning_messages\": [\n      \"\"\n    ],\n    \"zone\": 6\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4888cb00-d4d9-45ac-aec8-980046b3fb32",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3aa58919-fae9-4e30-baf7-16e127b39c4e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5af1d295-e887-49de-8d9d-edfb25cfb1e3",
      "documentation": "Get Rate By ID",
      "method": "get",
      "endpoint": "v1/rates/:rate_id",
      "responses": [
        {
          "uuid": "65fa6f09-ffde-49e0-a8df-ce7a9b330fb3",
          "body": "{\n  \"carrier_code\": \"\",\n  \"carrier_delivery_days\": \"\",\n  \"carrier_friendly_name\": \"\",\n  \"carrier_id\": \"\",\n  \"carrier_nickname\": \"\",\n  \"confirmation_amount\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"delivery_days\": 5,\n  \"error_messages\": [\n    \"\"\n  ],\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"guaranteed_service\": {{faker 'datatype.boolean'}},\n  \"insurance_amount\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"negotiated_rate\": {{faker 'datatype.boolean'}},\n  \"other_amount\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"package_type\": \"package\",\n  \"rate_id\": \"\",\n  \"rate_type\": \"\",\n  \"service_code\": \"\",\n  \"service_type\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipping_amount\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"tax_amount\": {\n    \"amount\": {{faker 'datatype.float'}},\n    \"currency\": \"\"\n  },\n  \"trackable\": {{faker 'datatype.boolean'}},\n  \"validation_status\": \"\",\n  \"warning_messages\": [\n    \"\"\n  ],\n  \"zone\": 6\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "61ea4aef-fd6c-4518-883b-5b99a5b05fd5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85ddb8ff-7144-4265-b2a4-d8687b8e7c3b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67362891-6754-4336-a9b0-7e0f44108e94",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4732b311-f1b0-4da5-909f-324a2c12f266",
      "documentation": "List Shipments",
      "method": "get",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "916fbbac-82d3-4aff-9567-68ad5fdbc43c",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": \"????\",\n  \"pages\": {{faker 'datatype.number'}},\n  \"shipments\": [\n    {}\n  ],\n  \"total\": 1990\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "135ded92-e7d2-4641-9655-9cee623db03d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7826c0b-1dfe-4a1d-8195-a6fd0d706803",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e798ff5f-13a2-4d63-84e6-05b7e5f9e0f6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7f1d0221-a860-4616-a38b-7aa6768308a3",
      "documentation": "Create Shipments",
      "method": "post",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "8824b227-f138-4d4c-8955-aaefff957204",
          "body": "{\n  \"has_errors\": {{faker 'datatype.boolean'}},\n  \"shipments\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc2ee3d4-c256-4140-9a34-86bbebb00159",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1eb4e64e-7bfb-4f53-adf8-962198c23239",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "548a58fd-09bf-4db3-a1a1-e75a9d17265e",
      "documentation": "Get Shipment By External ID",
      "method": "get",
      "endpoint": "v1/shipments/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "34355304-cf81-4af3-8bcc-869cd346288b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73fb58ed-4f94-451f-bfa9-3d5f2e5fdf07",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc41f799-aef0-4ebd-a8a6-287b1504d981",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "254bb2f6-f5cd-4270-9ebd-1272f3fddd29",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e032727d-2dce-488d-ba28-244a6eda6de7",
      "documentation": "Parse shipping info",
      "method": "put",
      "endpoint": "v1/shipments/recognize",
      "responses": [
        {
          "uuid": "ac4fdffc-e0e8-4ce2-855d-551de612cf9c",
          "body": "{\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'datatype.number'}},\n      \"result\": {},\n      \"score\": {{faker 'datatype.float'}},\n      \"start_index\": {{faker 'datatype.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'datatype.float'}},\n  \"shipment\": {\n    \"advanced_options\": {\n      \"bill_to_account\": \"\",\n      \"bill_to_country_code\": \"\",\n      \"bill_to_party\": \"\",\n      \"bill_to_postal_code\": \"\",\n      \"collect_on_delivery\": {\n        \"payment_amount\": {\n          \"amount\": {{faker 'datatype.float'}},\n          \"currency\": \"\"\n        },\n        \"payment_type\": \"\"\n      },\n      \"contains_alcohol\": {{faker 'datatype.boolean'}},\n      \"custom_field1\": \"\",\n      \"custom_field2\": \"\",\n      \"custom_field3\": \"\",\n      \"delivered_duty_paid\": {{faker 'datatype.boolean'}},\n      \"dry_ice\": {{faker 'datatype.boolean'}},\n      \"dry_ice_weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.float'}}\n      },\n      \"freight_class\": 77.5,\n      \"non_machinable\": {{faker 'datatype.boolean'}},\n      \"saturday_delivery\": {{faker 'datatype.boolean'}},\n      \"use_ups_ground_freight_pricing\": {{faker 'datatype.boolean'}}\n    },\n    \"carrier_id\": \"\",\n    \"confirmation\": \"none\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"customs\": {\n      \"contents\": \"merchandise\",\n      \"customs_items\": [],\n      \"non_delivery\": \"return_to_sender\"\n    },\n    \"external_order_id\": \"\",\n    \"external_shipment_id\": \"\",\n    \"insurance_provider\": \"none\",\n    \"items\": [],\n    \"modified_at\": \"{{faker 'date.recent' 365}}\",\n    \"order_source_code\": \"\",\n    \"packages\": [\n      {\n        \"dimensions\": {\n          \"height\": {{faker 'datatype.float'}},\n          \"length\": {{faker 'datatype.float'}},\n          \"unit\": \"inch\",\n          \"width\": {{faker 'datatype.float'}}\n        },\n        \"external_package_id\": \"\",\n        \"insured_value\": [\n          {\n            \"amount\": 0,\n            \"currency\": \"usd\"\n          }\n        ],\n        \"label_messages\": {\n          \"reference1\": \"\",\n          \"reference2\": \"\",\n          \"reference3\": \"\"\n        },\n        \"package_code\": \"\",\n        \"tracking_number\": \"\",\n        \"weight\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.float'}}\n        }\n      }\n    ],\n    \"return_to\": {},\n    \"service_code\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"ship_from\": {},\n    \"ship_to\": {},\n    \"shipment_id\": \"\",\n    \"shipment_status\": \"pending\",\n    \"tags\": [],\n    \"total_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.float'}}\n    },\n    \"warehouse_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e6a16f86-9264-43c4-b77a-914f01a9a4be",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14dd9374-7a04-4a59-8a14-35a25f48e2f3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "021d8c21-356f-4e4a-beeb-d7da2ba91917",
      "documentation": "Get Shipment By ID",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "8c112e1f-20e6-4193-88fd-ad591c05c4ce",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "907ee133-efa2-4f5c-a128-5a4d103c2c9b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "879e0211-4b5e-41d4-8161-67923d8518d4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9724325b-41ab-473b-a249-bcf1d72e2a16",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f507ec21-1c2b-4525-92c8-0c9220b4ba3e",
      "documentation": "Update Shipment By ID",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "0b41588d-bf07-48a5-90ab-aefa9433d389",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0897c6de-77ae-408a-97ab-affb16673faa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dee1ce28-cb5e-4b4c-9f11-d4dbfb5f5905",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ae55371-a1d3-48d2-86ca-000734cfb622",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a34ea446-02f8-4219-9208-577caedc5309",
      "documentation": "Cancel a Shipment",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id/cancel",
      "responses": [
        {
          "uuid": "1a19a752-8334-44fe-beb6-1caa46430c58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e818b15-8e80-444e-ab4a-d915c1f440b4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7555bb49-3266-4f4e-978d-2a5120854251",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a5736e7-f53e-494b-ab37-735c89eb2e51",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "589fcfd6-a7ee-4412-a381-bb09f603aa39",
      "documentation": "Get Shipment Errors",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/errors",
      "responses": [
        {
          "uuid": "5b8844b8-b41c-440a-8b4a-59710e08e4dd",
          "body": "{\n  \"errors\": [\n    {\n      \"error\": \"\",\n      \"external_shipment_id\": \"\",\n      \"shipment_id\": \"\"\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71009d46-20c2-4b43-b278-230e61e0a8c7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d79459a8-76a1-49a4-a31f-4805fce686aa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73545ed0-80d6-4002-a626-3198e1c9a26d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5ebaa39-eed6-4f0c-adbb-ad4b39754db4",
      "documentation": "Get Shipment Rates",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/rates",
      "responses": [
        {
          "uuid": "c8def0ce-cb57-4158-b75d-b75da97f0466",
          "body": "{\n  \"created_at\": \"\",\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"invalid_rates\": [],\n  \"rate_request_id\": \"\",\n  \"rates\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_delivery_days\": \"\",\n      \"carrier_friendly_name\": \"\",\n      \"carrier_id\": \"\",\n      \"carrier_nickname\": \"\",\n      \"confirmation_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"delivery_days\": 5,\n      \"error_messages\": [\n        \"\"\n      ],\n      \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n      \"guaranteed_service\": {{faker 'datatype.boolean'}},\n      \"insurance_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"negotiated_rate\": {{faker 'datatype.boolean'}},\n      \"other_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"package_type\": \"package\",\n      \"rate_id\": \"\",\n      \"rate_type\": \"\",\n      \"service_code\": \"\",\n      \"service_type\": \"\",\n      \"ship_date\": \"{{faker 'date.recent' 365}}\",\n      \"shipping_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"tax_amount\": {\n        \"amount\": {{faker 'datatype.float'}},\n        \"currency\": \"\"\n      },\n      \"trackable\": {{faker 'datatype.boolean'}},\n      \"validation_status\": \"\",\n      \"warning_messages\": [\n        \"\"\n      ],\n      \"zone\": 6\n    }\n  ],\n  \"shipment_id\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "307edc2b-0620-49c7-96db-c9d6408c349f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67a7aea6-a4b1-4fe0-a6a5-ce3585c310e2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3d7a67a-b346-49ba-b9de-7db569ac2322",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5991d1d7-614c-48c1-b831-314d279d1e3e",
      "documentation": "Remove Tag from Shipment",
      "method": "delete",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "c99ac40e-b926-4c37-a35e-186d1639cea4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d13c7523-418f-4c9a-b2df-74e9f13c3680",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7060048d-b945-401f-8f46-143de6fd513c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7688fd5f-4503-44b8-8cce-aa47113ae86a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8e5f639-694e-4813-8b80-f2ea35e2ef0f",
      "documentation": "Add Tag to Shipment",
      "method": "post",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "02c49d58-a302-4e8f-9dd9-24e1c31149d7",
          "body": "{\n  \"shipment_id\": \"\",\n  \"tag\": {\n    \"name\": \"Fragile\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fdae501-9c4a-479b-9bde-9dde1b89add3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "259922c1-794f-4841-868c-d3f359548390",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46e73a02-133a-4709-abfd-004b13a79d1f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "791434ec-85c4-4a65-80ec-072ecf8deb08",
      "documentation": "Get Tags",
      "method": "get",
      "endpoint": "v1/tags",
      "responses": [
        {
          "uuid": "bcb19919-2312-4ea4-9d93-537916dd3d51",
          "body": "{\n  \"tags\": [\n    {\n      \"name\": \"Fragile\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f8a25029-90b8-4317-9010-855e483cfa4f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0d25200-43be-4d24-a93f-0a37574140ed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af92bf94-c1c0-4043-b8bb-88b55084fb10",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b0ebc3e-fd2d-4685-8197-f4713b3bde9f",
      "documentation": "Delete Tag",
      "method": "delete",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "e208673a-ec62-461c-8c15-8823caab0456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "01425981-9d75-4711-9ac6-8aa45f274b49",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf4edc21-2f1f-4abf-b92f-2b7714c39ff9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "373b7805-4268-4584-9ee5-25a52412aa9b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2996f13-20c8-4d51-95dc-b8dad3e69265",
      "documentation": "Create a New Tag",
      "method": "post",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "3d6c62c3-71e4-4cf3-82eb-90c4fa91ceda",
          "body": "{\n  \"name\": \"Fragile\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "490217cd-da2c-4d91-a088-2914f90ba2b3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f89e6e1e-104f-4765-b930-15e82590f4a9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62a26729-07b9-42e0-9bbb-577936eb5640",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4ed8caf-6deb-4bc3-88f9-d44ea05178cd",
      "documentation": "Update Tag Name",
      "method": "put",
      "endpoint": "v1/tags/:tag_name/:new_tag_name",
      "responses": [
        {
          "uuid": "9d7f2d9e-cb0a-4f2c-b9bb-cd3271308647",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f3a7b87d-d178-425e-8c12-6bf0c0d1bab8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21b81b54-0426-4fd7-9db3-4ddeb24bf35d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fe85702-f9e0-42a9-b06a-60c4a1b6e839",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e589368f-9b43-47b5-bc11-4b16422fff70",
      "documentation": "Get Tracking Information",
      "method": "get",
      "endpoint": "v1/tracking",
      "responses": [
        {
          "uuid": "88bdc514-7b64-4366-8893-47831836a533",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'datatype.float'}},\n      \"longitude\": {{faker 'datatype.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "251c2f03-94f4-4c94-8c58-7e9822db9064",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71187d8a-ea67-4f75-ab83-561e1a180b76",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae60bfd3-3865-4d48-b278-044eca45a879",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d25a32a-d62e-4dda-81cf-6b16d2c4393e",
      "documentation": "Start Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/start",
      "responses": [
        {
          "uuid": "88bc0274-03cb-4043-9b80-56bdf07b619f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4b109c33-be05-47f2-a2f6-4eddc5c1c57d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11fee5a4-bb15-4be3-a97f-de2b2c9f15ea",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c752eae-7631-4e1b-af1e-5baee882c8c3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52fabdfd-1fdf-4291-a9a9-b1fa16480cac",
      "documentation": "Stop Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/stop",
      "responses": [
        {
          "uuid": "9e38527d-e0a0-4e40-b69c-1a882c3bd328",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad831c4d-188a-41ab-a732-b91b564757d0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac252d93-ecd3-45b7-b448-ed1e9722afd8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee46005f-fd8a-44b9-a6fc-92959227b15f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "112bf6fc-5ee7-4215-b779-8b48657d7f16",
      "documentation": "List Warehouses",
      "method": "get",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "202bb449-f94f-4a19-8503-e9b549c83019",
          "body": "{\n  \"warehouses\": [\n    {\n      \"created_at\": \"2019-06-25T18:12:35.583Z\",\n      \"name\": \"Zero Cool HQ\",\n      \"origin_address\": {},\n      \"return_address\": {},\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3998418-4a91-4ef3-9e21-a90bf5b48a27",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3daccea8-c332-4c7b-adf0-feb6173a0575",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61950e84-14ae-4a5d-a4c0-3f54fa404a78",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "21ba0b8f-7b4f-45e3-bd18-e5d1c9ad68b5",
      "documentation": "Create Warehouse",
      "method": "post",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "52e8ea26-5d73-44e2-8a83-01648d88cd24",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e2dd8ce-5b13-461c-b226-53ae1e7ecdd4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e585f2ec-bac1-4993-8076-20c6b1272a5a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "160cd138-5c2d-4785-b36e-cc65fa3ff13d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4219d1d9-0bbb-4d88-bf60-4018673fbb95",
      "documentation": "Delete Warehouse By ID",
      "method": "delete",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "d2469127-576d-4681-b9a0-ca8ad2c5a411",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a80b1d80-b263-4f54-87f0-d60ab9373d0c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9cbccb8-0330-47c3-bb38-ce7d4b57b664",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77e7fa95-bc7d-4846-872e-6ec3ac81e60e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37625f71-44ff-4ad5-a91e-76333175d645",
      "documentation": "Get Warehouse By Id",
      "method": "get",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "dd601913-2b04-44fc-8875-972aeec0cbf1",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ece44513-ae0b-45c6-a18e-cf58558ddd10",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "868f8948-34a7-4866-b9cd-7267e712df4d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0cb76e4e-f9a4-4dc8-8073-b8cbf17bc0e1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "65afe903-aa4b-445c-8e35-f3db6e29e1b7",
      "documentation": "Update WareHouse By Id",
      "method": "put",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "ddbe050f-8815-4ffd-8046-6056f624bbaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89bbc75a-50ad-4ca3-b553-be362d3c3461",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a24786a-890c-4137-9474-7ecf3a2589a8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9153b93a-1a09-4a0f-93ae-ea9df2e16897",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'datatype.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}