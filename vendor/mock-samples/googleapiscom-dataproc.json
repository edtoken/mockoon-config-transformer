{
  "uuid": "fd36af89-48b5-42ee-9ada-efa74d51f144",
  "lastMigration": 24,
  "name": "Cloud Dataproc API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f654bcab-6b63-4796-9730-00425e3f2528",
      "documentation": "Lists all regions/{region}/clusters in a project alphabetically.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters",
      "responses": [
        {
          "uuid": "82d20e94-a71a-4506-afda-95babc6ae6c4",
          "body": "{\n  \"clusters\": [\n    {\n      \"clusterName\": \"\",\n      \"clusterUuid\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'datatype.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n            \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n            \"enableVtpm\": {{faker 'datatype.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'datatype.number'}},\n                  \"minNodeCount\": {{faker 'datatype.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"bootDiskKmsKey\": \"\",\n                  \"localSsdCount\": {{faker 'datatype.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'datatype.boolean'}},\n                  \"spot\": {{faker 'datatype.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'datatype.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        }\n      },\n      \"labels\": {},\n      \"metrics\": {\n        \"hdfsMetrics\": {},\n        \"yarnMetrics\": {}\n      },\n      \"projectId\": \"\",\n      \"status\": {\n        \"detail\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING' 'REPAIRING')}}\",\n        \"stateStartTime\": \"\",\n        \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n      },\n      \"statusHistory\": [\n        {\n          \"detail\": \"\",\n          \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING' 'REPAIRING')}}\",\n          \"stateStartTime\": \"\",\n          \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n        }\n      ],\n      \"virtualClusterConfig\": {\n        \"auxiliaryServicesConfig\": {\n          \"metastoreConfig\": {\n            \"dataprocMetastoreService\": \"\"\n          },\n          \"sparkHistoryServerConfig\": {\n            \"dataprocCluster\": \"\"\n          }\n        },\n        \"kubernetesClusterConfig\": {\n          \"gkeClusterConfig\": {\n            \"gkeClusterTarget\": \"\",\n            \"namespacedGkeDeploymentTarget\": {\n              \"clusterNamespace\": \"\",\n              \"targetGkeCluster\": \"\"\n            },\n            \"nodePoolTarget\": [\n              {\n                \"nodePool\": \"\",\n                \"nodePoolConfig\": {\n                  \"autoscaling\": {\n                    \"maxNodeCount\": {{faker 'datatype.number'}},\n                    \"minNodeCount\": {{faker 'datatype.number'}}\n                  },\n                  \"config\": {\n                    \"accelerators\": [\n                      {\n                        \"acceleratorCount\": \"\",\n                        \"acceleratorType\": \"\",\n                        \"gpuPartitionSize\": \"\"\n                      }\n                    ],\n                    \"bootDiskKmsKey\": \"\",\n                    \"localSsdCount\": {{faker 'datatype.number'}},\n                    \"machineType\": \"\",\n                    \"minCpuPlatform\": \"\",\n                    \"preemptible\": {{faker 'datatype.boolean'}},\n                    \"spot\": {{faker 'datatype.boolean'}}\n                  },\n                  \"locations\": [\n                    \"\"\n                  ]\n                },\n                \"roles\": [\n                  \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n                ]\n              }\n            ]\n          },\n          \"kubernetesNamespace\": \"\",\n          \"kubernetesSoftwareConfig\": {\n            \"componentVersion\": {},\n            \"properties\": {}\n          }\n        },\n        \"stagingBucket\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d43240f8-44ef-4cdf-8278-064a5931aa8e",
      "documentation": "Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters",
      "responses": [
        {
          "uuid": "5f95922e-2c2e-4271-b1be-8b44d78fe5fd",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fcc10189-019c-4b4d-88f0-0e09048a3537",
      "documentation": "Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
      "method": "delete",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "c2b06a14-c7e0-480d-b66a-3baaff812991",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a9ad728-9f42-466c-915c-6d6ef2c4c2e7",
      "documentation": "Gets the resource representation for a cluster in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "3d67f812-6f46-42ed-b565-6e14599721db",
          "body": "{\n  \"clusterName\": \"\",\n  \"clusterUuid\": \"\",\n  \"config\": {\n    \"autoscalingConfig\": {\n      \"policyUri\": \"\"\n    },\n    \"configBucket\": \"\",\n    \"dataprocMetricConfig\": {\n      \"metrics\": [\n        {\n          \"metricOverrides\": [\n            \"\"\n          ],\n          \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n        }\n      ]\n    },\n    \"encryptionConfig\": {\n      \"gcePdKmsKeyName\": \"\"\n    },\n    \"endpointConfig\": {\n      \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n      \"httpPorts\": {}\n    },\n    \"gceClusterConfig\": {\n      \"confidentialInstanceConfig\": {\n        \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n      },\n      \"internalIpOnly\": {{faker 'datatype.boolean'}},\n      \"metadata\": {},\n      \"networkUri\": \"\",\n      \"nodeGroupAffinity\": {\n        \"nodeGroupUri\": \"\"\n      },\n      \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n      \"reservationAffinity\": {\n        \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n        \"key\": \"\",\n        \"values\": [\n          \"\"\n        ]\n      },\n      \"serviceAccount\": \"\",\n      \"serviceAccountScopes\": [\n        \"\"\n      ],\n      \"shieldedInstanceConfig\": {\n        \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n        \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n        \"enableVtpm\": {{faker 'datatype.boolean'}}\n      },\n      \"subnetworkUri\": \"\",\n      \"tags\": [\n        \"\"\n      ],\n      \"zoneUri\": \"\"\n    },\n    \"gkeClusterConfig\": {\n      \"gkeClusterTarget\": \"\",\n      \"namespacedGkeDeploymentTarget\": {\n        \"clusterNamespace\": \"\",\n        \"targetGkeCluster\": \"\"\n      },\n      \"nodePoolTarget\": [\n        {\n          \"nodePool\": \"\",\n          \"nodePoolConfig\": {\n            \"autoscaling\": {\n              \"maxNodeCount\": {{faker 'datatype.number'}},\n              \"minNodeCount\": {{faker 'datatype.number'}}\n            },\n            \"config\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": \"\",\n                  \"acceleratorType\": \"\",\n                  \"gpuPartitionSize\": \"\"\n                }\n              ],\n              \"bootDiskKmsKey\": \"\",\n              \"localSsdCount\": {{faker 'datatype.number'}},\n              \"machineType\": \"\",\n              \"minCpuPlatform\": \"\",\n              \"preemptible\": {{faker 'datatype.boolean'}},\n              \"spot\": {{faker 'datatype.boolean'}}\n            },\n            \"locations\": [\n              \"\"\n            ]\n          },\n          \"roles\": [\n            \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n          ]\n        }\n      ]\n    },\n    \"initializationActions\": [\n      {\n        \"executableFile\": \"\",\n        \"executionTimeout\": \"\"\n      }\n    ],\n    \"lifecycleConfig\": {\n      \"autoDeleteTime\": \"\",\n      \"autoDeleteTtl\": \"\",\n      \"idleDeleteTtl\": \"\",\n      \"idleStartTime\": \"\"\n    },\n    \"masterConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'datatype.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'datatype.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'datatype.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'datatype.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n    },\n    \"metastoreConfig\": {\n      \"dataprocMetastoreService\": \"\"\n    },\n    \"secondaryWorkerConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'datatype.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'datatype.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'datatype.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'datatype.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n    },\n    \"securityConfig\": {\n      \"identityConfig\": {\n        \"userServiceAccountMapping\": {}\n      },\n      \"kerberosConfig\": {\n        \"crossRealmTrustAdminServer\": \"\",\n        \"crossRealmTrustKdc\": \"\",\n        \"crossRealmTrustRealm\": \"\",\n        \"crossRealmTrustSharedPasswordUri\": \"\",\n        \"enableKerberos\": {{faker 'datatype.boolean'}},\n        \"kdcDbKeyUri\": \"\",\n        \"keyPasswordUri\": \"\",\n        \"keystorePasswordUri\": \"\",\n        \"keystoreUri\": \"\",\n        \"kmsKeyUri\": \"\",\n        \"realm\": \"\",\n        \"rootPrincipalPasswordUri\": \"\",\n        \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n        \"truststorePasswordUri\": \"\",\n        \"truststoreUri\": \"\"\n      }\n    },\n    \"softwareConfig\": {\n      \"imageVersion\": \"\",\n      \"optionalComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n      ],\n      \"properties\": {}\n    },\n    \"tempBucket\": \"\",\n    \"workerConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'datatype.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'datatype.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'datatype.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'datatype.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n    }\n  },\n  \"labels\": {},\n  \"metrics\": {\n    \"hdfsMetrics\": {},\n    \"yarnMetrics\": {}\n  },\n  \"projectId\": \"\",\n  \"status\": {\n    \"detail\": \"\",\n    \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING' 'REPAIRING')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"detail\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING' 'REPAIRING')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"virtualClusterConfig\": {\n    \"auxiliaryServicesConfig\": {\n      \"metastoreConfig\": {\n        \"dataprocMetastoreService\": \"\"\n      },\n      \"sparkHistoryServerConfig\": {\n        \"dataprocCluster\": \"\"\n      }\n    },\n    \"kubernetesClusterConfig\": {\n      \"gkeClusterConfig\": {\n        \"gkeClusterTarget\": \"\",\n        \"namespacedGkeDeploymentTarget\": {\n          \"clusterNamespace\": \"\",\n          \"targetGkeCluster\": \"\"\n        },\n        \"nodePoolTarget\": [\n          {\n            \"nodePool\": \"\",\n            \"nodePoolConfig\": {\n              \"autoscaling\": {\n                \"maxNodeCount\": {{faker 'datatype.number'}},\n                \"minNodeCount\": {{faker 'datatype.number'}}\n              },\n              \"config\": {\n                \"accelerators\": [\n                  {\n                    \"acceleratorCount\": \"\",\n                    \"acceleratorType\": \"\",\n                    \"gpuPartitionSize\": \"\"\n                  }\n                ],\n                \"bootDiskKmsKey\": \"\",\n                \"localSsdCount\": {{faker 'datatype.number'}},\n                \"machineType\": \"\",\n                \"minCpuPlatform\": \"\",\n                \"preemptible\": {{faker 'datatype.boolean'}},\n                \"spot\": {{faker 'datatype.boolean'}}\n              },\n              \"locations\": [\n                \"\"\n              ]\n            },\n            \"roles\": [\n              \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n            ]\n          }\n        ]\n      },\n      \"kubernetesNamespace\": \"\",\n      \"kubernetesSoftwareConfig\": {\n        \"componentVersion\": {},\n        \"properties\": {}\n      }\n    },\n    \"stagingBucket\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c539b88-70ee-4bb9-ab37-874332420c8c",
      "documentation": "Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.",
      "method": "patch",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "fd282804-5fef-4c50-bd0d-4d57595e70fd",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f4c3ac3-2068-4860-a0a2-7be95fe9d99a",
      "documentation": "Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:diagnose",
      "responses": [
        {
          "uuid": "a96a8949-de63-4520-8d02-067c42f2a128",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07d50c4e-be3b-49ef-b0cd-a2339525b797",
      "documentation": "Repairs a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:repair",
      "responses": [
        {
          "uuid": "fce7b3aa-ec34-4dae-b2c3-0b1354d5e9ae",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fdd085cd-9fb7-47a2-80d2-5b6dd9bbbcfc",
      "documentation": "Starts a cluster in a project.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:start",
      "responses": [
        {
          "uuid": "24716f53-2bdb-4d92-8641-5ab0f8eb3535",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c58b2b0-1396-4c88-9ae4-95f90c87555e",
      "documentation": "Stops a cluster in a project.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:stop",
      "responses": [
        {
          "uuid": "d81d88c2-90f7-4c20-8454-c2b614ce7a34",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2fce8d58-ba15-407a-b57d-dd87b98a8972",
      "documentation": "Lists regions/{region}/jobs in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs",
      "responses": [
        {
          "uuid": "f8c0f802-6b8d-424c-9327-11579b34065d",
          "body": "{\n  \"jobs\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"driverControlFilesUri\": \"\",\n      \"driverOutputResourceUri\": \"\",\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"jobUuid\": \"\",\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"placement\": {\n        \"clusterLabels\": {},\n        \"clusterName\": \"\",\n        \"clusterUuid\": \"\"\n      },\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"reference\": {\n        \"jobId\": \"\",\n        \"projectId\": \"\"\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n        \"maxFailuresTotal\": {{faker 'datatype.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"status\": {\n        \"details\": \"\",\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n        \"stateStartTime\": \"\",\n        \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n      },\n      \"statusHistory\": [\n        {\n          \"details\": \"\",\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n          \"stateStartTime\": \"\",\n          \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n        }\n      ],\n      \"trinoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"yarnApplications\": [\n        {\n          \"name\": \"\",\n          \"progress\": {{faker 'datatype.float'}},\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n          \"trackingUrl\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d89d75b5-fc1a-4a1e-8a02-6b700e8bfb57",
      "documentation": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
      "method": "delete",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "3c36ab2d-8ce8-4857-8468-372e23b55f3b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e810dff9-32c0-4e78-abd6-a3bfd65f998e",
      "documentation": "Gets the resource representation for a job in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "4e3a336c-fd03-4583-94d2-0dd83616a4cd",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n    \"maxFailuresTotal\": {{faker 'datatype.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"trinoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'datatype.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b17c2e69-6e6d-410f-844f-05a69f950368",
      "documentation": "Updates a job in a project.",
      "method": "patch",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "3316746b-6677-4641-95de-3f0270708dd5",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n    \"maxFailuresTotal\": {{faker 'datatype.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"trinoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'datatype.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bffebdd3-fe9c-4d31-9326-2a10bed1165f",
      "documentation": "Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId:cancel",
      "responses": [
        {
          "uuid": "bd861ee7-9629-4057-a251-c783e12b36b1",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n    \"maxFailuresTotal\": {{faker 'datatype.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"trinoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'datatype.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6644a1b9-8d79-4fd7-9e36-876c3bc2440d",
      "documentation": "Submits a job to a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs:submit",
      "responses": [
        {
          "uuid": "5dab8894-a095-4321-84e5-56de8af76d6b",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n    \"maxFailuresTotal\": {{faker 'datatype.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"trinoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'datatype.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'datatype.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6092ab66-18d0-45e3-9889-e95ed1e3ab19",
      "documentation": "Submits job to a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs:submitAsOperation",
      "responses": [
        {
          "uuid": "e20bb133-f436-4537-a200-a68a27892afa",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf80566b-86d5-4426-9d32-590ba55d1761",
      "documentation": "Deletes a workflow template. It does not cancel in-progress workflows.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "e576004a-8784-4398-af34-34bfa65e8c5c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9ea70c1-c87f-405f-9b89-85037caeecde",
      "documentation": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "67bab494-a32d-451a-ab1d-a847b5a8c945",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n        \"maxFailuresTotal\": {{faker 'datatype.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\",\n      \"trinoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'datatype.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n            \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n            \"enableVtpm\": {{faker 'datatype.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'datatype.number'}},\n                  \"minNodeCount\": {{faker 'datatype.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"bootDiskKmsKey\": \"\",\n                  \"localSsdCount\": {{faker 'datatype.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'datatype.boolean'}},\n                  \"spot\": {{faker 'datatype.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'datatype.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8da220b8-6ce1-4b89-9bd4-2aff50ae2448",
      "documentation": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version.",
      "method": "put",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "fc3155d7-a74a-4420-b30d-7edb0ff7ed34",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n        \"maxFailuresTotal\": {{faker 'datatype.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\",\n      \"trinoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'datatype.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n            \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n            \"enableVtpm\": {{faker 'datatype.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'datatype.number'}},\n                  \"minNodeCount\": {{faker 'datatype.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"bootDiskKmsKey\": \"\",\n                  \"localSsdCount\": {{faker 'datatype.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'datatype.boolean'}},\n                  \"spot\": {{faker 'datatype.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'datatype.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fcd646b-7a32-494f-af42-43f4164b7b4b",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "db403589-52f4-492d-a553-6e6be7ee92be",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9a003a7-858b-4ae6-a1d8-5724d1307f30",
      "documentation": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
      "method": "post",
      "endpoint": "v1/:name:instantiate",
      "responses": [
        {
          "uuid": "2377237f-5533-4a81-9a79-7fd1ccff4905",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "673ab59a-4c8b-43fc-a359-b50fc5624843",
      "documentation": "Lists autoscaling policies in the project.",
      "method": "get",
      "endpoint": "v1/:parent/autoscalingPolicies",
      "responses": [
        {
          "uuid": "f98cadb8-a6c3-4d71-8149-b5e0b671feee",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"policies\": [\n    {\n      \"basicAlgorithm\": {\n        \"cooldownPeriod\": \"\",\n        \"sparkStandaloneConfig\": {\n          \"gracefulDecommissionTimeout\": \"\",\n          \"scaleDownFactor\": {{faker 'datatype.float'}},\n          \"scaleDownMinWorkerFraction\": {{faker 'datatype.float'}},\n          \"scaleUpFactor\": {{faker 'datatype.float'}},\n          \"scaleUpMinWorkerFraction\": {{faker 'datatype.float'}}\n        },\n        \"yarnConfig\": {\n          \"gracefulDecommissionTimeout\": \"\",\n          \"scaleDownFactor\": {{faker 'datatype.float'}},\n          \"scaleDownMinWorkerFraction\": {{faker 'datatype.float'}},\n          \"scaleUpFactor\": {{faker 'datatype.float'}},\n          \"scaleUpMinWorkerFraction\": {{faker 'datatype.float'}}\n        }\n      },\n      \"id\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"secondaryWorkerConfig\": {\n        \"maxInstances\": {{faker 'datatype.number'}},\n        \"minInstances\": {{faker 'datatype.number'}},\n        \"weight\": {{faker 'datatype.number'}}\n      },\n      \"workerConfig\": {\n        \"maxInstances\": {{faker 'datatype.number'}},\n        \"minInstances\": {{faker 'datatype.number'}},\n        \"weight\": {{faker 'datatype.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9eff38eb-da50-4cd5-bc86-cfa90340036d",
      "documentation": "Creates new autoscaling policy.",
      "method": "post",
      "endpoint": "v1/:parent/autoscalingPolicies",
      "responses": [
        {
          "uuid": "71359b63-8769-4949-ba3a-0ea379505e3d",
          "body": "{\n  \"basicAlgorithm\": {\n    \"cooldownPeriod\": \"\",\n    \"sparkStandaloneConfig\": {\n      \"gracefulDecommissionTimeout\": \"\",\n      \"scaleDownFactor\": {{faker 'datatype.float'}},\n      \"scaleDownMinWorkerFraction\": {{faker 'datatype.float'}},\n      \"scaleUpFactor\": {{faker 'datatype.float'}},\n      \"scaleUpMinWorkerFraction\": {{faker 'datatype.float'}}\n    },\n    \"yarnConfig\": {\n      \"gracefulDecommissionTimeout\": \"\",\n      \"scaleDownFactor\": {{faker 'datatype.float'}},\n      \"scaleDownMinWorkerFraction\": {{faker 'datatype.float'}},\n      \"scaleUpFactor\": {{faker 'datatype.float'}},\n      \"scaleUpMinWorkerFraction\": {{faker 'datatype.float'}}\n    }\n  },\n  \"id\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"secondaryWorkerConfig\": {\n    \"maxInstances\": {{faker 'datatype.number'}},\n    \"minInstances\": {{faker 'datatype.number'}},\n    \"weight\": {{faker 'datatype.number'}}\n  },\n  \"workerConfig\": {\n    \"maxInstances\": {{faker 'datatype.number'}},\n    \"minInstances\": {{faker 'datatype.number'}},\n    \"weight\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11bddcb0-c2ce-4a70-9b03-e7d4d53ef343",
      "documentation": "Lists batch workloads.",
      "method": "get",
      "endpoint": "v1/:parent/batches",
      "responses": [
        {
          "uuid": "db03ebfd-ab58-47de-b281-66300b4cc592",
          "body": "{\n  \"batches\": [\n    {\n      \"createTime\": \"\",\n      \"creator\": \"\",\n      \"environmentConfig\": {\n        \"executionConfig\": {\n          \"idleTtl\": \"\",\n          \"kmsKey\": \"\",\n          \"networkTags\": [\n            \"\"\n          ],\n          \"networkUri\": \"\",\n          \"serviceAccount\": \"\",\n          \"subnetworkUri\": \"\"\n        },\n        \"peripheralsConfig\": {\n          \"metastoreService\": \"\",\n          \"sparkHistoryServerConfig\": {\n            \"dataprocCluster\": \"\"\n          }\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"operation\": \"\",\n      \"pysparkBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"mainPythonFileUri\": \"\",\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"runtimeConfig\": {\n        \"containerImage\": \"\",\n        \"properties\": {},\n        \"version\": \"\"\n      },\n      \"runtimeInfo\": {\n        \"diagnosticOutputUri\": \"\",\n        \"endpoints\": {},\n        \"outputUri\": \"\"\n      },\n      \"sparkBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\"\n      },\n      \"sparkRBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"mainRFileUri\": \"\"\n      },\n      \"sparkSqlBatch\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"queryFileUri\": \"\",\n        \"queryVariables\": {}\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'CANCELLING' 'CANCELLED' 'SUCCEEDED' 'FAILED')}}\",\n      \"stateHistory\": [\n        {\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'CANCELLING' 'CANCELLED' 'SUCCEEDED' 'FAILED')}}\",\n          \"stateMessage\": \"\",\n          \"stateStartTime\": \"\"\n        }\n      ],\n      \"stateMessage\": \"\",\n      \"stateTime\": \"\",\n      \"uuid\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f835681-1730-42f4-99dd-06ea0fedcbdd",
      "documentation": "Creates a batch workload that executes asynchronously.",
      "method": "post",
      "endpoint": "v1/:parent/batches",
      "responses": [
        {
          "uuid": "4eb216b1-e396-4be5-85c2-660ef64ebd50",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca2441ec-1996-4e72-ae2a-12b00a4da3a2",
      "documentation": "Lists workflows that match the specified filter in the request.",
      "method": "get",
      "endpoint": "v1/:parent/workflowTemplates",
      "responses": [
        {
          "uuid": "7835b947-239e-45b2-9d0a-c9f243cfd7b2",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"templates\": [\n    {\n      \"createTime\": \"\",\n      \"dagTimeout\": \"\",\n      \"id\": \"\",\n      \"jobs\": [\n        {\n          \"hadoopJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainClass\": \"\",\n            \"mainJarFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"hiveJob\": {\n            \"continueOnFailure\": {{faker 'datatype.boolean'}},\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"labels\": {},\n          \"pigJob\": {\n            \"continueOnFailure\": {{faker 'datatype.boolean'}},\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"prerequisiteStepIds\": [\n            \"\"\n          ],\n          \"prestoJob\": {\n            \"clientTags\": [\n              \"\"\n            ],\n            \"continueOnFailure\": {{faker 'datatype.boolean'}},\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"outputFormat\": \"\",\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            }\n          },\n          \"pysparkJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainPythonFileUri\": \"\",\n            \"properties\": {},\n            \"pythonFileUris\": [\n              \"\"\n            ]\n          },\n          \"scheduling\": {\n            \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n            \"maxFailuresTotal\": {{faker 'datatype.number'}}\n          },\n          \"sparkJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainClass\": \"\",\n            \"mainJarFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"sparkRJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainRFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"sparkSqlJob\": {\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"stepId\": \"\",\n          \"trinoJob\": {\n            \"clientTags\": [\n              \"\"\n            ],\n            \"continueOnFailure\": {{faker 'datatype.boolean'}},\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"outputFormat\": \"\",\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            }\n          }\n        }\n      ],\n      \"labels\": {},\n      \"name\": \"\",\n      \"parameters\": [\n        {\n          \"description\": \"\",\n          \"fields\": [\n            \"\"\n          ],\n          \"name\": \"\",\n          \"validation\": {\n            \"regex\": {\n              \"regexes\": [\n                \"\"\n              ]\n            },\n            \"values\": {\n              \"values\": [\n                \"\"\n              ]\n            }\n          }\n        }\n      ],\n      \"placement\": {\n        \"clusterSelector\": {\n          \"clusterLabels\": {},\n          \"zone\": \"\"\n        },\n        \"managedCluster\": {\n          \"clusterName\": \"\",\n          \"config\": {\n            \"autoscalingConfig\": {\n              \"policyUri\": \"\"\n            },\n            \"configBucket\": \"\",\n            \"dataprocMetricConfig\": {\n              \"metrics\": [\n                {\n                  \"metricOverrides\": [\n                    \"\"\n                  ],\n                  \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n                }\n              ]\n            },\n            \"encryptionConfig\": {\n              \"gcePdKmsKeyName\": \"\"\n            },\n            \"endpointConfig\": {\n              \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n              \"httpPorts\": {}\n            },\n            \"gceClusterConfig\": {\n              \"confidentialInstanceConfig\": {\n                \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n              },\n              \"internalIpOnly\": {{faker 'datatype.boolean'}},\n              \"metadata\": {},\n              \"networkUri\": \"\",\n              \"nodeGroupAffinity\": {\n                \"nodeGroupUri\": \"\"\n              },\n              \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n              \"reservationAffinity\": {\n                \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n                \"key\": \"\",\n                \"values\": [\n                  \"\"\n                ]\n              },\n              \"serviceAccount\": \"\",\n              \"serviceAccountScopes\": [\n                \"\"\n              ],\n              \"shieldedInstanceConfig\": {\n                \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n                \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n                \"enableVtpm\": {{faker 'datatype.boolean'}}\n              },\n              \"subnetworkUri\": \"\",\n              \"tags\": [\n                \"\"\n              ],\n              \"zoneUri\": \"\"\n            },\n            \"gkeClusterConfig\": {\n              \"gkeClusterTarget\": \"\",\n              \"namespacedGkeDeploymentTarget\": {\n                \"clusterNamespace\": \"\",\n                \"targetGkeCluster\": \"\"\n              },\n              \"nodePoolTarget\": [\n                {\n                  \"nodePool\": \"\",\n                  \"nodePoolConfig\": {\n                    \"autoscaling\": {\n                      \"maxNodeCount\": {{faker 'datatype.number'}},\n                      \"minNodeCount\": {{faker 'datatype.number'}}\n                    },\n                    \"config\": {\n                      \"accelerators\": [\n                        {\n                          \"acceleratorCount\": \"\",\n                          \"acceleratorType\": \"\",\n                          \"gpuPartitionSize\": \"\"\n                        }\n                      ],\n                      \"bootDiskKmsKey\": \"\",\n                      \"localSsdCount\": {{faker 'datatype.number'}},\n                      \"machineType\": \"\",\n                      \"minCpuPlatform\": \"\",\n                      \"preemptible\": {{faker 'datatype.boolean'}},\n                      \"spot\": {{faker 'datatype.boolean'}}\n                    },\n                    \"locations\": [\n                      \"\"\n                    ]\n                  },\n                  \"roles\": [\n                    \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n                  ]\n                }\n              ]\n            },\n            \"initializationActions\": [\n              {\n                \"executableFile\": \"\",\n                \"executionTimeout\": \"\"\n              }\n            ],\n            \"lifecycleConfig\": {\n              \"autoDeleteTime\": \"\",\n              \"autoDeleteTtl\": \"\",\n              \"idleDeleteTtl\": \"\",\n              \"idleStartTime\": \"\"\n            },\n            \"masterConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'datatype.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'datatype.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'datatype.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'datatype.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n            },\n            \"metastoreConfig\": {\n              \"dataprocMetastoreService\": \"\"\n            },\n            \"secondaryWorkerConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'datatype.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'datatype.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'datatype.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'datatype.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n            },\n            \"securityConfig\": {\n              \"identityConfig\": {\n                \"userServiceAccountMapping\": {}\n              },\n              \"kerberosConfig\": {\n                \"crossRealmTrustAdminServer\": \"\",\n                \"crossRealmTrustKdc\": \"\",\n                \"crossRealmTrustRealm\": \"\",\n                \"crossRealmTrustSharedPasswordUri\": \"\",\n                \"enableKerberos\": {{faker 'datatype.boolean'}},\n                \"kdcDbKeyUri\": \"\",\n                \"keyPasswordUri\": \"\",\n                \"keystorePasswordUri\": \"\",\n                \"keystoreUri\": \"\",\n                \"kmsKeyUri\": \"\",\n                \"realm\": \"\",\n                \"rootPrincipalPasswordUri\": \"\",\n                \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n                \"truststorePasswordUri\": \"\",\n                \"truststoreUri\": \"\"\n              }\n            },\n            \"softwareConfig\": {\n              \"imageVersion\": \"\",\n              \"optionalComponents\": [\n                \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n              ],\n              \"properties\": {}\n            },\n            \"tempBucket\": \"\",\n            \"workerConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'datatype.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'datatype.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'datatype.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'datatype.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n            }\n          },\n          \"labels\": {}\n        }\n      },\n      \"updateTime\": \"\",\n      \"version\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "464b5490-a6dd-4b96-9d90-cb7d0d59bc30",
      "documentation": "Creates new workflow template.",
      "method": "post",
      "endpoint": "v1/:parent/workflowTemplates",
      "responses": [
        {
          "uuid": "c702cef3-0913-4b81-a9ab-3a98b8f906d0",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'datatype.number'}},\n        \"maxFailuresTotal\": {{faker 'datatype.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\",\n      \"trinoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'datatype.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'datatype.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'datatype.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'datatype.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'datatype.boolean'}},\n            \"enableSecureBoot\": {{faker 'datatype.boolean'}},\n            \"enableVtpm\": {{faker 'datatype.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'datatype.number'}},\n                  \"minNodeCount\": {{faker 'datatype.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"bootDiskKmsKey\": \"\",\n                  \"localSsdCount\": {{faker 'datatype.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'datatype.boolean'}},\n                  \"spot\": {{faker 'datatype.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'datatype.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'datatype.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'datatype.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'datatype.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'datatype.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'datatype.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'datatype.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE' 'SPOT')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b34f4700-26e7-414c-b676-db52314c440a",
      "documentation": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
      "method": "post",
      "endpoint": "v1/:parent/workflowTemplates:instantiateInline",
      "responses": [
        {
          "uuid": "4d6f4082-1ceb-4761-9ae5-892b0474ee60",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0fc3fa15-3b8f-4d6e-a1d3-1f69e92d16ce",
      "documentation": "Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.",
      "method": "post",
      "endpoint": "v1/:project/:region/:cluster:injectCredentials",
      "responses": [
        {
          "uuid": "5a3e048f-8d7e-442c-94b9-f26edf327452",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "062e1ad5-8c6e-48aa-9e5f-104d69218d5a",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "post",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "aa3e882a-5f3b-43e7-9be0-1ec1145ac7fb",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb264b21-1d01-4d90-bc09-41c91d2df21d",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "39aef15b-7770-4f05-8790-86ac9bc669ff",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46da8305-f46b-4afb-9efc-9c63f5bf42af",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "762ecbbc-363b-4567-98b5-ed2da6fa72f2",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}