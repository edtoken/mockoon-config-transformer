{
  "uuid": "5522dddb-d03a-48ef-8878-4f96c74f917b",
  "lastMigration": 24,
  "name": "Amazon Relational Database Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "41b494c0-0a67-42f4-99e8-f610756bf1d3",
      "documentation": "<p>Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "c05b4ee1-46c3-45db-9edd-843ae05be2c6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75238bd9-a2d9-4510-8dc2-dc7388e25047",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74f3f620-9c6e-4336-97c2-b91d1b29b193",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "959c058c-3f83-43e2-9629-f5b70a7a71f1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb71ea63-fd20-42e0-b63a-8535760589ae",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf01a733-655e-40c1-90c7-aa1d9467beeb",
      "documentation": "<p>Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "8b2b6064-1131-435e-a0c2-55933549456d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb10f438-602e-4b55-892a-fce2ab340d3f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52f4e74e-73f3-4cc8-bdeb-5e3820f5f47c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "603e86ad-4e6e-4ae7-9daa-b2fcd2c0d24a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b2eaace-f22b-4735-a156-176fdb9772ce",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf012d3a-6010-41d4-834f-4ae20caad5fb",
      "documentation": "<p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=AddRoleToDBInstance",
      "responses": [
        {
          "uuid": "0651fc27-26a7-4a89-b088-434fff26aa5f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d3ad350-332f-44c8-88cf-0201d5d11445",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fab094e-50b1-4802-8c1e-db4d636425a9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca4bd340-de04-47af-8475-0f465dbbd6db",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8703a1eb-cb2e-40b4-8166-004a1640cee4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17d369c7-4b25-4d3d-aa6f-1b3ea64cd9d2",
      "documentation": "<p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=AddRoleToDBInstance",
      "responses": [
        {
          "uuid": "5f04859d-ec79-4561-b3dc-05cd16e802e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e631fd5-79fc-4dd8-9aeb-7377691b0bda",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6ea8851-43c8-41ad-b239-970874bbbff7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f78509c9-ba06-4e7a-9cfb-1a9f7afae968",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48133457-3a9a-4a05-92b8-f7bc7339d252",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "33b78015-9c47-4193-b2e2-cfe6bc60e4b0",
      "documentation": "Adds a source identifier to an existing RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "0cf52892-82ba-4fdf-8aad-5c934551121e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91bf1c4f-e95f-49be-9152-fadb287ff153",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d12961b-1781-4933-93dd-c0ed31783baf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87e1cbe9-6c33-4a3c-8b79-4779504a74ba",
      "documentation": "Adds a source identifier to an existing RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "68039bf9-5fda-44d5-b6d0-ac053bf1329a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "712ef3cb-39ab-4daf-abd2-23d0ef6a5a0c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f603e7c0-7d34-4d01-9d27-bf63ef5efc5d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3d4af1d-87ae-4c58-8f42-4ec7a0f2ec46",
      "documentation": "<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
      "method": "get",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "e5d8192e-7c88-4254-ad5e-4f825ce0732c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2c63ecb-f1e0-41aa-8e3e-a7a08f9f492f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "82c2d332-2709-471e-8338-bbcc7542dc08",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a64a4b3-cb3a-412c-ac83-a40d1d6a6587",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ec20149-e38e-4a3b-8474-1f6ea5ca3f12",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "885d23b0-ed9f-4d92-9bfe-fd3a3b7c0f66",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bb6d771-eba4-4187-9d15-3d63e3609fc6",
      "documentation": "<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
      "method": "post",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "ce16943b-4abd-4239-807a-6d12d5f58fee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "02553c42-2411-4c52-b0ce-292a5270a613",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "663c1afe-6fcf-4926-b718-6caecae34496",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d852e2a7-37ea-4b51-85c6-49abd0b4a148",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67be2e73-7cd3-43b5-bc41-4fceb1009f4d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01cbbd2a-e19c-4164-9600-a7b5762ea4ab",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e01fc5ed-5010-481f-85c3-044466b3c8d2",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "get",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "b5706844-ea2f-4af7-9c5e-31209198710d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "03b12c5a-cd06-461b-aad0-5cfbbef7d5b7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3ad87e0-f9cb-4a3c-b01f-5bc9ce1cd76e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4562f8e4-6420-4fda-806d-4873ad3def2a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "024e4013-f9f9-4923-a1ca-9e6f4d085383",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "post",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "3bcbd937-a6bd-451c-b287-c837684f4062",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "adbe34a9-94aa-498f-a4cd-0a9f73cae5e4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e41084df-b232-43bc-96d9-45f49b5490bd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a2664f7-e2f9-4776-b351-8f10ea62a115",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bfd568c-c89c-4443-92a9-9693dcf19c91",
      "documentation": "<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "get",
      "endpoint": "#Action=AuthorizeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "ce86a678-e983-4c23-8478-656b8158e1bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ec5a060-582a-46e6-b0eb-8c36d5fa2363",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e522d840-8204-40ee-828d-157c0e31bce2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eed5fcdc-fa1d-435d-893a-6b4229856da4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da46175e-884d-4dc9-94dd-e43066407dc9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4bfd8b6-e3e8-4791-94df-aa534ed9b4e2",
      "documentation": "<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "post",
      "endpoint": "#Action=AuthorizeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "ca3864c6-fc31-4068-a539-03e0a585e357",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5db727b4-5576-4491-a021-c384db3c3e7f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "64455535-9f34-4bfe-91b2-8cfbb5c84c51",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b4f07ef-6a29-41bd-98ae-630dbab15c72",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2f1b36f-e0a5-4af2-8e7f-c68afc0a4066",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb18d027-4e2b-47af-872f-8322fcaa5548",
      "documentation": "<p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html\"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=BacktrackDBCluster",
      "responses": [
        {
          "uuid": "34d889b6-7b7e-44c4-9ec3-a14c5bd52d10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "290b7330-7110-428f-b6b3-73bfbfa506b2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ec5b2c9-7c79-4b44-a7aa-6013c902f7a9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a01806a2-669a-4ef2-accc-1b4f422b9e5a",
      "documentation": "<p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html\"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=BacktrackDBCluster",
      "responses": [
        {
          "uuid": "64e4b9e3-ac94-431b-ac66-1c2a91b7d25f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "443a7433-b4db-4bc7-99d0-00b5f5ed9792",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef07eb50-b666-4a8a-8530-7a3284a0dffe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "73727127-e2e5-43fb-b3e3-8488498b6f52",
      "documentation": "Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn't removed. ",
      "method": "get",
      "endpoint": "#Action=CancelExportTask",
      "responses": [
        {
          "uuid": "98ed0853-96c2-4abb-9679-fdd9e39c4e93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14527822-9368-4688-82e8-7a65380e2854",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33bc6e12-b998-42e4-980d-2464738b0d2a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExportTaskStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d205cd25-c31d-4001-8a52-9d40b81797ca",
      "documentation": "Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn't removed. ",
      "method": "post",
      "endpoint": "#Action=CancelExportTask",
      "responses": [
        {
          "uuid": "b7bd62b2-c997-4283-8f4b-e06451767197",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a3f606e-5f6f-42fa-a371-09ffb3479bc3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ff62140-b56a-4f88-8844-b1b6b6b9b444",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExportTaskStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5301a70f-49d8-4532-ad05-24fea33a5a82",
      "documentation": "<p>Copies the specified DB cluster parameter group.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "91b81dee-9e7c-4487-b4b2-acd01df5c27b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f91dbe2e-fadb-4f29-a783-40e889fd7435",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "221ab22f-9161-48cd-8647-deed7029c7a3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e5d5d66-1caa-4991-9ee6-cde778c2aef5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "931e0927-cefa-4df9-8268-e2a532c95451",
      "documentation": "<p>Copies the specified DB cluster parameter group.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "ccc19f57-be38-4d9a-b9c2-0cc55c83c49d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73c7213d-b6bf-4377-8b1c-534ef6eecc2b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00982b89-40e1-4ec9-8242-c02f048f7e1e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eba3e487-f90a-4b87-a023-4e0bcc529bf9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91d02b42-6fb7-4d4d-a798-d2f8b1aa01e9",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source Amazon Web Services Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services KMS key identifier for the customer master key (CMK) to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination Amazon Web Services Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Amazon Web Services Region.</p> </note> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one Amazon Web Services Region to another, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html\"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "fbc27555-9f25-46a1-8f7a-8145ef6ab6d8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29448899-a92c-4327-abe5-4b68dc97deb4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "429d6613-34a4-4e35-ba24-059d3802042f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77ecf14b-3e8e-4d5f-b575-1617b5fb82b2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cf3621b-6999-4bc9-8ee9-43ef47501461",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f3d54e9-f04c-41dd-9f3a-ec8f6af144f1",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08fbef5d-65d4-40c1-ae84-c30fc594cadd",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2245516f-1fc3-47c0-a13e-345c1cb2fd44",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source Amazon Web Services Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services KMS key identifier for the customer master key (CMK) to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination Amazon Web Services Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Amazon Web Services Region.</p> </note> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one Amazon Web Services Region to another, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html\"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "0812249b-cbe8-4705-af75-49795837983f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e65eb257-013b-424c-bed8-d9a87fa95cf8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f052fbfb-ab04-41a5-bc43-0511165f9805",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2aefca5-ae92-4fc6-9a7d-48c505630e94",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd1d0f9d-09ab-4668-bcd7-73499b74fed8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e98340d-c1b6-43e4-91fa-cdca7cdf9165",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c2c809e-e583-4db9-8d8f-79012cd99ded",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8038134f-0a72-487b-99cf-721a4952e5f3",
      "documentation": "Copies the specified DB parameter group.",
      "method": "get",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "71dd167b-9ec3-4716-b85e-738c49fcc77e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "992fa382-a0a5-4788-bf3b-f4e07eb6c266",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5c1f972-1a1e-446f-b91b-6030331e1e13",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c659700-3027-4258-af42-76834fb79ac3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f1b5176-765d-4ec7-aa29-c1dd7f80d5eb",
      "documentation": "Copies the specified DB parameter group.",
      "method": "post",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "756a7e98-fefd-4bd2-8de5-fa73102c6b01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cd3f003a-aa41-4a7a-a17c-0699018e9537",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97c9d968-ed77-4d14-8f16-d012a6b572d7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfa05bd7-170e-4c19-98c0-df7e78be6691",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22ebc515-3df8-42ad-8ce6-601d9eaf110c",
      "documentation": "<p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> action is the destination Amazon Web Services Region for the DB snapshot copy. </p> <p>For more information about copying snapshots, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot\">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=CopyDBSnapshot",
      "responses": [
        {
          "uuid": "67d1ec79-4ca5-448c-8894-8ea23b457616",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88afc692-52fe-48fd-850f-f9d8b576c055",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51a2e049-cfa7-4f9f-80c1-78a0a12c8372",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c70f643-63e8-4ba4-a2de-8f3c7840e551",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92851b0b-0ed4-4550-9ecf-e5feb0dc5920",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33f487ce-68f9-468b-9ea3-28e651b03f8f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62f1c79e-fe74-4034-a021-05ce1988200c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d502081c-6d6f-4a1f-9240-1170706c7869",
      "documentation": "<p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> action is the destination Amazon Web Services Region for the DB snapshot copy. </p> <p>For more information about copying snapshots, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot\">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=CopyDBSnapshot",
      "responses": [
        {
          "uuid": "48b2907b-6ac2-409c-85ca-e144fd58264d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5268ffd5-025e-478e-b88d-e7ff55ba4510",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2993ac60-e605-4318-8774-51dafb9655a0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f0443ae-d4f6-41b6-b711-d7be3075229e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "23e5430e-b0ca-415f-918b-22978e031098",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e153ae5-7a40-4538-b983-660e30d79d26",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "628d346c-8c97-46d5-b802-7df2428fb9a8",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "456be622-6bc1-4070-a074-1650b0b276dc",
      "documentation": "Copies the specified option group.",
      "method": "get",
      "endpoint": "#Action=CopyOptionGroup",
      "responses": [
        {
          "uuid": "4250d8ae-eb5c-440f-bf0c-e8509c6a6dac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d94f0b7-36ea-438b-80c4-df0343fa1b30",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f75e167e-1c5f-4cac-b877-36923b86e948",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4536255b-c4c8-4738-b7c2-0415933a1cd9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9e2358c-4558-4613-a825-757582a08a8f",
      "documentation": "Copies the specified option group.",
      "method": "post",
      "endpoint": "#Action=CopyOptionGroup",
      "responses": [
        {
          "uuid": "f5984070-10a7-4567-87cf-8c488a6f6cc8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63d3ca16-0085-4378-9a51-5e0050318e30",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bd52fed-01bb-464c-97e5-0f19234d109d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff670c1d-7865-471f-8972-5c817764a981",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8458bbda-864f-43fa-9fca-cb90c8410692",
      "documentation": "<p>Creates a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=CreateCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "17e90573-a516-4d45-99bf-8d64abc136a9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbadb3ad-e157-4735-b98f-dfec4d83ba81",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "201cdb5c-c5e9-4e06-9974-d50c1f5f366b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "CustomAvailabilityZoneQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb7f3ff6-0586-4ded-aa8f-6de853238b40",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66baaa3c-d84c-4804-86f8-4cfa4b26106f",
      "documentation": "<p>Creates a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=CreateCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "9b0cc0b6-35f5-4a0e-8601-8524213d2531",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a560f2da-f684-4c30-8d05-8e9129da041b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85267290-c3b2-4a22-acab-bc4b45e60fa2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "CustomAvailabilityZoneQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "931e76a7-79b0-448b-a1f9-5da51b73f4e5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4dcc100-66a8-444d-b56c-127cb882d50f",
      "documentation": "<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL or PostgreSQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "17628f1d-6da6-4f86-8b29-dcc70e056397",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b28ccdb-8754-4fda-ae1f-f1f2520a91c2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "484e1b14-43c2-4368-85bd-1638a964b8f0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65de9d10-9fc4-462a-8be4-f81202f939f7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d211de9-7969-4401-95a5-1a543c65607d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab3ea21d-ea30-4a55-a92d-31e910e05199",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eca4d167-f46a-42b5-bce6-4abfcfa823b9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e73f17c1-b617-420d-a641-aea9cc1b578f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41072c6b-c000-4e3a-8a9c-0c96400ebf4e",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a41588aa-df6e-4846-89fb-619e950d36d2",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be9ded4e-6132-4131-bfab-5ecfbc671801",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1df9b6c2-9670-4bc8-bf34-64758d3f62b2",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "165e23ee-e8b9-41ef-93c0-cb07b7bce3fc",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcc39008-568d-4a16-90b8-bd644d8c67ae",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f61d91a9-027b-4a4f-80ae-8c4fbaa38337",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9568891d-186b-42c7-812f-f559d9e7f2f9",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d55bd152-352f-4f2d-bc6e-94a9ce9e63aa",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d604bc7d-8042-432d-ab56-977d33765547",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfccbbd4-47ee-44ab-9dcf-7bab8107b05f",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "947a33bd-89c4-42d2-a6e9-9025bd1b1cd1",
      "documentation": "<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL or PostgreSQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "7861ef00-60a3-4346-997b-0066dbcd4eba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b457ad0f-4534-44a2-b6f8-204ef7c98ccc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08c9c7b8-a6ea-4889-8e3a-d751be2d8320",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c7b37f71-0e0e-4f27-a34f-9d48d4d01ce2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c519d0eb-2e92-4700-b7f2-df07da2f6f30",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d10f369e-5415-4f4a-abbb-85a85270fce2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76a085a4-e975-4b8b-9c2c-35ac546f2644",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0917dc3d-b947-4c6c-917b-4b0001f05a61",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2318d962-a111-4baf-8596-7d6ab04d5291",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d158afb-2de9-478c-a56a-a47291d5be7c",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25bfec00-924c-4e9f-9bdd-e4735e059021",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc9e0711-40f2-4a28-a0a3-d3e11f57d300",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdb2bd4f-5665-4344-986f-a912769aacf6",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ce8b6b9-6c84-4f30-b82c-4c0eab2f22d1",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9dbf95c0-d381-4cd2-9c3a-303d5f122c94",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de2cc9d6-dadf-4608-b4af-4417ed0fba46",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e294f319-d8c1-4baa-b9dd-c2e25287453e",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72f17008-cb95-4371-a45d-25023ab7334f",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b184baff-47b3-46c5-8463-ca25290e4562",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "140c824c-c460-4f90-a5a9-921006ca2f36",
      "documentation": "<p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "18c07433-1ca5-4025-9b41-cb4798c0e258",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ddc30ae-6e84-486a-b54e-04ed2601eaca",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3420320a-d0c0-42f9-9956-a6c70ad97381",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "105fed21-be3e-490d-881c-c5b127674325",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1de41eb-c7d3-4c7a-a8b6-1114bfbb44b5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b66e99f-340e-4f60-bf32-0c987522e6e7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a242093-8e35-438a-b814-24df350656f2",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "435bfafb-83d3-4294-b5dc-9e0c707179db",
      "documentation": "<p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "08d1e56b-3c58-43cf-873d-068c712b2a04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "79c1e2ba-22eb-4eda-b4cd-aabdfc66b834",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38c8ad5e-e52f-4185-97b6-dfde890ffe8c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f16eea30-f05d-408b-93ea-d1c0db552f22",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bcd9a676-6e15-44ff-9354-14e764706ce0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b577800-d351-40bd-b227-3e80113f6752",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcdf59fa-cb26-407e-a849-5c34872007a3",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0035e0d8-d43a-431e-a28b-61efb52c9eec",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "0e399d7e-b0c6-4662-a9a0-f7cb372536ea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5241cbc9-8523-4efd-8e76-cdf1b3ce19bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78d40748-cabb-4362-9528-0c355460d9e8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "40eeaf46-1e74-4683-8ce2-c10b6dc176a8",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "c4a82ac5-324a-4b29-90d1-8e443713d8ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cb440a0-620b-4d4e-9d8d-313d3b98f351",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "35f95d89-07b7-44c2-bde2-05fe93fdbf7c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "db5bb225-cd00-481a-b5a1-44affc42655f",
      "documentation": "<p>Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "076c7070-eb9e-48a4-827e-3414aefa1694",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "797b46fa-1b2d-4ae6-a706-6b74c2facebd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee3a81b2-102a-478b-885b-628618d18563",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c85d0c05-1b33-4663-963f-080296a23739",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "583782d6-2bec-4552-8f1d-ca96ddf7911c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca7c6c6e-df3c-4f88-94f5-99562c72b37d",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4131ccee-4869-43d4-8808-139b2859cf78",
      "documentation": "<p>Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "f7e49b4f-c282-4c4d-aabf-c51800a93837",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b3018980-8519-4327-8fb8-db6f988089b3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88f33ded-007b-49ff-8c41-e3a88fd0ad87",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "104388ef-7521-46f5-b7d6-0050a1ec3387",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "028e335d-aa48-4bfe-82a3-82abc2ac94f5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c41f5be8-1854-45aa-acec-6c94f0696151",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9227223-7010-4915-9d67-5fac63d4b61d",
      "documentation": "Creates a new DB instance.",
      "method": "get",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "d3103051-9739-46e0-9f1d-4d465f6838d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d65bc6ca-553a-444c-a7ab-09d32185f4ed",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df039d4b-57e7-4cf6-991e-7a9f853c1c42",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dfd2eeb7-70a8-4f77-b06f-04ba4e74d308",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39096ea9-fbb5-4c2a-a9a7-277cbc2bdcbd",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c347bca6-77b1-4345-9511-620d810978e0",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "346567f6-85eb-4602-b3ad-163b8e078e45",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6150e98c-824c-4cb6-97cf-fd2c25c66b1e",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38889d86-3b08-47e4-a60c-474a75b15538",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2884f988-1ec8-43cf-a100-3bf6467fa000",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1aad984e-9131-47ab-874c-6007ead5deb8",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3533ed44-d042-43b1-a368-95dcee7fbe69",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b75875e4-cd45-4fa3-bc08-5f9705e9ded9",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "034d4f55-de19-4c33-99c1-5ace3735e15f",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "374a6104-c710-4040-84d5-06294c03ff7e",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e08a883d-8563-433b-a2b4-54fe0e5de4e5",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92a3885f-322a-4268-a2e3-24862be5b9be",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a354e4e-809a-4250-a33d-80d45fa1c8a2",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8c1cfdd-cbaa-44a1-8b2f-549a8803524d",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f294e37e-ffce-4b50-a3df-5921d043304d",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a08f2aa-4c6e-4461-9018-09c56a5cd80d",
      "documentation": "Creates a new DB instance.",
      "method": "post",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "ab425ab2-b4c1-48ba-9ceb-8dae24eec585",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "af58bda8-45a9-4e58-9240-b630b40fe8b8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eefda759-c73d-43ee-8a96-a8913cc813fe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46b2c797-86d1-486b-81a0-1db791e1876b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b68a594-e5e4-4d9c-8823-5e47b4ea044b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a9682ae-e251-4bd8-9e95-6c9c571c9ffb",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e39443b-2344-484f-b43f-1db572f21dda",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a07ab2a4-d8b9-4000-a6c9-426fe969a4ea",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d63833d2-4a22-4502-aa35-a77989fb5782",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6eab49d5-93f5-4b14-8de8-e08eed9d804a",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4ae038ad-ca86-41d5-993d-4f05bc6ee927",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9753d59b-3407-4d14-8b26-57f7bce64ce2",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4cd169c-fa34-46e2-9940-f1444e0195a7",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d7bc80e-55b4-4e0b-9f48-1e1fb97a1bc8",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56c85705-be99-4239-93c9-3eef5fbd072b",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eae60f5d-78e4-49eb-954f-c9f273aa61ab",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "24612214-e8a1-430b-9a31-d84c410f4635",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "041fbeb3-30e3-46d5-b10d-e50849f929e6",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbb6cbf0-70b7-4844-aeca-247ada15dc87",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fa56510-59ce-43db-8c22-c18f2e61a73c",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e77720d0-eebe-4902-a3e5-2791799f3024",
      "documentation": "<p>Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html\">Working with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.</p> <important> <p>Your source DB instance must have backup retention enabled. </p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBInstanceReadReplica",
      "responses": [
        {
          "uuid": "610fc7d5-ee4d-4c67-b9bb-ca97d8e59c11",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "027fd959-ed2a-45ce-a55e-87df3d680daa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "623f7178-d2a9-43a9-ba16-61093b2a3c2b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "268e3d24-d19e-4f18-bca4-65998720337e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "931bcba5-e808-4ccc-b884-5d5bcbba2cbf",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2bed48d9-efcf-4a85-9900-f8e28bae93fb",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f342dbd-a7f6-4dbf-a77b-6487115b4b34",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6e15dff-6272-4eca-9ed1-339fe2dbe301",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84b8d8e0-5eff-4fb0-adc9-1ae3d99486de",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14fad335-e52e-4af7-b106-3dc9ca450d78",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf7967ba-f8f3-4fdb-a9d0-763957c91ab9",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "133ee89f-dce6-457a-ba3c-442283c28e5a",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff7c8850-0872-4494-9001-df84e087fb7d",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7706a629-8653-453f-b02c-7debdbc395ad",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c736fff-7ed3-43ac-8145-ef6964dd683f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c0b3d3f-0ef1-4cfd-8168-ae8ac9e0a011",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupNotAllowedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "486643e9-bf24-4ccc-9d9c-3a1bca15a920",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidDBSubnetGroupFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68d530e2-829d-441c-96aa-dd072112c2dd",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d041c7db-6e76-4c72-bd81-360ec47f6487",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "858835e4-27de-4fc4-80fc-6b1b8d4ad566",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36e47be4-96ff-4daa-9198-19e9ae7b3ab5",
      "documentation": "<p>Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html\">Working with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.</p> <important> <p>Your source DB instance must have backup retention enabled. </p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBInstanceReadReplica",
      "responses": [
        {
          "uuid": "4d8e902a-2feb-456b-9669-7d0660ab3051",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc25375d-b9b0-4a91-bc2c-a27586248252",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40384312-12bc-4cf0-831a-6cf36f914615",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f85e12cc-d6e1-4747-80c0-e9c8455a1761",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34cd71f7-4235-48e7-aa50-04aafb82662f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5555a78-bb3e-48c4-baf0-d24b15d36d90",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fba2478-700d-4d6d-8a15-68fbe65f20e7",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be505c03-eef0-4ed3-ae2a-9b21c427fea5",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77a22b87-0244-43c8-a540-81f883bf329f",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f9b154f-12bb-473d-9f99-77324f9ef4f7",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f2f18ec-1cc0-4165-aabd-593546741ba1",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bcd6094-6b85-4e59-8b2b-62fa2af5b019",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f336d8a1-2791-4b95-8727-3aa7afd23ef2",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1295ef3-9c4a-444b-8069-8ca08f03ede3",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ddd1706e-bc92-40a6-8080-b765a7cafa4d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e902c68-9fdc-4f84-9405-69639bcd89f8",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupNotAllowedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a5be5f5-35bc-48d7-9277-c6361ddaeabe",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidDBSubnetGroupFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0b5f543-0478-42ed-9dd5-32c024ea93db",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efa392a0-5f8b-4cc3-8bb9-e3df7e80690a",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84347714-e3e8-4fae-be7b-54dd79dd7697",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df7e81b4-6c7d-4381-8e4f-c70965888c5c",
      "documentation": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "fc4e6e14-045e-406a-9343-b2fbd1d7d7fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d405298-7206-4e07-830c-1f75ce69e6d1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fea19331-2d6b-4a5c-9494-fa792bd29070",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1ee2d1e-a6ea-4098-b42a-4208a614876a",
      "documentation": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "cba1b53b-157f-4b42-9512-97a62245a64b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d379c9b-6e2b-4e3d-9b06-21f4d2026f93",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "165b1a90-1897-4250-a119-2bb4c70af4e3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35336c58-f095-4c81-a856-59b533f410bc",
      "documentation": "Creates a new DB proxy.",
      "method": "get",
      "endpoint": "#Action=CreateDBProxy",
      "responses": [
        {
          "uuid": "68e6b72f-2ba8-494d-b144-be3ed274b0e1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e8d5bf95-76ff-47fb-9cf1-0302bdc06e52",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c08dd6b8-0a10-441a-a141-1f80ab0f086d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f91403e1-e4ac-44ad-a460-8a5774b6ec17",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7eef5ea-79fd-40be-a699-a265345084a8",
      "documentation": "Creates a new DB proxy.",
      "method": "post",
      "endpoint": "#Action=CreateDBProxy",
      "responses": [
        {
          "uuid": "aa865f8d-7a23-4889-8b65-9e89d6fc996d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "317d3ab3-84fc-45b5-8fdb-1718cdac204e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bd73fab-6038-48f3-b913-b7de78719b93",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49c1c840-bdf7-445f-9248-623ec693b6b3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a72a03eb-60bc-4000-a333-a19fa0e1947e",
      "documentation": " Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC. ",
      "method": "get",
      "endpoint": "#Action=CreateDBProxyEndpoint",
      "responses": [
        {
          "uuid": "07208f76-2c65-4b76-b9e7-9e1e476ff47b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e7f08617-5bb3-43b4-b48b-ce22da9e1095",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd029eea-82a8-44aa-9e68-a9ec45c0951a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20561ad4-2433-4932-b7a9-020e46f2935b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48da6062-28b7-49ca-bc96-23f374853934",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "233efb73-a129-4574-8e44-b14b08a0c59f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "efa78363-88fe-4c23-a4e2-8a1ff6e3cc82",
      "documentation": " Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC. ",
      "method": "post",
      "endpoint": "#Action=CreateDBProxyEndpoint",
      "responses": [
        {
          "uuid": "ad27fbb8-d00b-4846-8940-88831fd485ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "621b9a0c-2429-474d-ae46-297c7c2d4708",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c99c1b3-fb80-4add-b165-65bba94bba15",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "599574e8-da9f-4c2a-b6df-1e9e50a5fa13",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18a11194-c7d3-4899-899d-04f279a5902f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a618fcc0-c626-4696-a4fb-4d2cd1e128dc",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "273f9ec4-6183-40e2-bec6-fd78b1075119",
      "documentation": "<p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <note> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBSecurityGroup",
      "responses": [
        {
          "uuid": "7242a384-86fd-43cb-8b12-3a622cb720f7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09b979c2-c66a-4305-9b45-d4872f85f46c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfcac375-c364-4d22-ad1b-80d3a2548bac",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "123bedab-18f5-4cf4-87e2-abeb074d9c37",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSecurityGroupNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12403575-e971-4d64-ab45-4eeaf3e748cc",
      "documentation": "<p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <note> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBSecurityGroup",
      "responses": [
        {
          "uuid": "42a0767d-6d88-4192-b01d-8739aa2f1df1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38e8e740-f349-42ac-9bad-b092e6f842bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "645c34e8-5939-44bd-a865-90e0123e9a8d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "549d0f56-f03b-4a92-81a9-ced265c2919f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSecurityGroupNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57fba41d-8d55-4ca2-bf57-a6bcebcd2aa2",
      "documentation": "Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.",
      "method": "get",
      "endpoint": "#Action=CreateDBSnapshot",
      "responses": [
        {
          "uuid": "cb2b49aa-f783-4c8d-9447-69095fed2bb4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc4d731a-44e9-4f41-9403-0e7d7a4ca067",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "964e3d06-3959-4221-b0b2-3f0355662247",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08ae011a-9992-4732-b48b-dbe2d3c91a42",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bd5a6a8-c605-4687-9450-aad0e9029520",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0224a74a-c62c-4252-9544-10f4d26798dc",
      "documentation": "Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.",
      "method": "post",
      "endpoint": "#Action=CreateDBSnapshot",
      "responses": [
        {
          "uuid": "135ae53a-e353-4914-9602-1cf768e517ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6d08842f-ae2d-4a86-97af-8f75284f6673",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "814a6298-bfe1-46a7-a8ef-f25016656467",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77317928-49a9-4438-a8f7-9b0b2e1428ae",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc8d195f-491d-42e7-ad24-ee9735178371",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "448b7ca2-1e75-4bfc-b2bc-603ee0507a45",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "get",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "0ec42027-a9d4-4e84-83f2-75e664ac2b0a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e843e4c4-041d-4cca-a7ef-28ca390e002a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09a4c14c-6037-4d2c-8548-55316ad7caa7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7faddecc-0c57-4d5b-a96b-c19a0abec608",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bcf3e686-2b99-475e-a97d-ff99bacc47bf",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "672966ab-4fff-4f72-9b51-23461f4f53ce",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d1eff354-ad3b-44e6-aa70-317d0883b004",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "b42be771-231a-45bc-a6fc-14796684fb71",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f1a2549-8715-4904-bd30-636aaa198c87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fa6020f-17e5-48da-a7a7-0ad573d82e30",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b5b4525-cb75-495a-895e-de6ed78cf48a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "888fcbb1-c89b-49ba-8742-8e2023a6ecc6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d44b947-fa9d-4c2d-9657-33ade68a19d9",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ad1e620-e75a-4e56-af81-66bfe6834d2d",
      "documentation": "<p>Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIdentifier</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIdentifier</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <note> <p>RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "b60f7a97-1060-4974-a3c9-d3c4ce384765",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7467dc79-9779-45ff-8a5e-68f6a0625128",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "19f96f4b-86de-481e-a856-e5976dc470d8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf03391a-5ba6-459f-94d5-b6b334f09eab",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e208bd0-422d-47be-8239-6deb47c0ae52",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a1693e3-d044-49a5-90b9-0341420d2eba",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01073660-e2ce-469c-a910-1f826aecbe66",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be53df01-2790-4cb7-ab00-01b6f1d95a8d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b9615f2-753a-4a2b-95bd-afa01da6bcbf",
      "documentation": "<p>Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIdentifier</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIdentifier</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <note> <p>RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "a11c2de0-654e-4f6c-9286-42ff2d77fba0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cca8c56e-4968-4c39-94c9-370984e23a05",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61a4f95c-9b9a-437f-8fae-8a0fb0eeea52",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b49ca88-c4e5-45c0-8295-6e4014f7b473",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b156d6bc-ccab-42b9-8e2e-f914caa3203a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dec9d0d8-c222-4747-aa13-7958c6a8138a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8cd0c82c-f2e2-4b16-9b8f-9d957998674e",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9dea176-1397-4627-aa73-8ad596260773",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd0383bc-e1fa-4740-bf4a-3bb784724835",
      "documentation": "<p> Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem. </p> <p> You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateGlobalCluster",
      "responses": [
        {
          "uuid": "ffda454f-e992-4902-aeed-406d19bc6251",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a798e4d0-49d1-4466-adbd-ad16cc822d5d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "925e2675-8d93-4ae9-906b-1ae3d9437bf1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "GlobalClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c16d659-d91a-4f87-b1ad-55f4d915ea40",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8a9ab84-068c-4fb0-b64a-7c6bd719d5b6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9bee4aa5-2ae4-45e2-855a-a93d5007c665",
      "documentation": "<p> Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem. </p> <p> You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateGlobalCluster",
      "responses": [
        {
          "uuid": "2677ffa4-b334-42fe-91eb-fa6c4ff0e460",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "35a5b1f4-048f-44db-82f2-b646032b60c9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ca49559-9fc8-4656-bebd-e03b534c3c80",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "GlobalClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09f7f10c-99d3-4583-8104-5c665015d31d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06925cd3-9607-4fe7-b6ca-385a75b9ab5b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7e80060e-5047-4eae-9ede-e87cfca54a36",
      "documentation": "Creates a new option group. You can create up to 20 option groups.",
      "method": "get",
      "endpoint": "#Action=CreateOptionGroup",
      "responses": [
        {
          "uuid": "53810a69-aeb9-4426-ad90-bd72a4f4d442",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3084fc84-96e0-4d17-8ebd-856763ecfc87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a7bd4e8-de59-4ac5-8eec-4f6783febbbd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56f5e8cb-b280-41ed-a7d4-8c6f5991ad58",
      "documentation": "Creates a new option group. You can create up to 20 option groups.",
      "method": "post",
      "endpoint": "#Action=CreateOptionGroup",
      "responses": [
        {
          "uuid": "fbecee2d-150f-4b7f-bb5c-acca243e151c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d56cc07e-f2a5-4bfe-9acc-d8998d63308e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0a5c282-598b-44a2-afd5-634e00769454",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa116f3b-faa3-4095-8e99-522d6c40eb5e",
      "documentation": "<p>Deletes a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=DeleteCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "bd013cea-a18e-4233-884f-b14f7977b35b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a560c9d-177a-4888-85cd-85f1d0e4943c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7331121f-9555-4457-a910-275eac976846",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "34aed321-a971-4327-b930-026fead4dbfa",
      "documentation": "<p>Deletes a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=DeleteCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "e007f94d-9deb-4792-a439-c31c4450a21f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6c7f3649-4bd5-4c61-b87f-d71dd57ac01b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59c0bd01-8259-4dd0-a57d-99c058003a76",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75df0352-0ccc-486f-aa5e-fb74def94047",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "39e69631-bfb2-43f9-bb4e-996c810c1391",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a5caa66f-e18b-4ef3-9cd3-fe4c528260d6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc80ec2f-c762-43d1-9c66-a26768ce1037",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d88a622a-4f88-4b1f-8272-c0115427564a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ebfb0433-cbfe-4a84-bf37-db56f2e6db8b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c81b88b8-0b2d-44d2-96f6-5c78fe8e701a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "483ffa3e-b3d1-48b1-8b01-95beae8c3660",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "9df73e79-ac2b-4745-a892-aa4f34579f1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "201221e6-f3cc-428f-9765-1cad754d0a3d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d94db96-f344-4d22-aa7f-ba619f148dc5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1caae244-521b-408d-a379-0b83687c2408",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc0b736f-2247-4edd-a0a8-164c461b10fc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53aeaeb0-f8d3-4707-b2f2-f5f5d996c4c4",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8eaf9511-9d38-4ce3-bac5-b4af2ccf23aa",
      "documentation": "<p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "52b31c89-2239-47bf-96c0-f561ef8cbf7c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d225a4f-78dc-44e2-8344-2a1ab65819d3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1050869d-78db-4743-ae2e-b389832bf496",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e84f5fef-ba23-4c69-a896-43a0695943f5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad640642-ad04-49de-97e7-947cdad55a0c",
      "documentation": "<p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "83f65a3e-e0a5-405f-8196-62b2c7df739a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0e2eecd-7ec2-46de-a15d-a66e83ccab02",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63739b6d-629e-4d18-87ff-a8c270060ad8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1acaaeb4-995c-446c-82a3-5b6376e0db74",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "400584f3-dd9e-47ba-99d9-b2603991c526",
      "documentation": "<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "7f650782-6619-4859-a421-08e11d85bb26",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "05ce49eb-616b-441d-aa8e-f7fbbf30fac7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba2f24ef-533d-408a-8cfa-c0cfdbfe4cb4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8017ea0e-989a-465a-a8a0-690f0a2e2e50",
      "documentation": "<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "a12358b8-90ba-4f6b-bd30-4c85d9312352",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "28021d35-cfaa-452d-9cbb-5510323ef564",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0e18008-9a51-430b-89e4-985b7c89e084",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5f67069-a889-448c-add1-1f3b86f68e25",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "22da3415-5bb8-4b82-aad8-f77a586cabec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "071645ba-0673-464b-b776-468142a8c999",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b12fa5c-80f3-4f38-883e-f4df7396fd18",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "191ab4e6-66b3-4873-bf7f-c7ce4e819e1c",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "c98d8d6f-ee94-477c-812d-8de78d68a7d7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c83c4a5-4567-4a2a-9c76-5ec98d2198d6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adde94ef-1278-430f-81c9-12b9eb90626d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7a04ff4-216b-41a3-ae78-5dc4155db100",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "198ffc16-3b7f-4006-bc2c-a7eaa7a1c493",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29680f21-5ce5-43fd-b180-cf6692a25d85",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7825e84b-e32c-4a05-b7c9-6d85ccda9419",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "033f2e24-4eb6-4a18-a340-e1074edbc90b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40efab9f-2451-45f6-bdc9-6f767a838aad",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c85e872-3db7-4719-ba46-5320a411e9f6",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51c34fc1-1b53-45cf-9d24-0020bb1b93c0",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8111420f-0917-4a41-8efd-ae46a2aa0e69",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "76b790ff-9ddd-4196-9f32-45031f715b91",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "785afda2-891b-47bf-bff7-9701ba699b71",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cc1aef1-6454-4d2f-86c8-7e4efa766460",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57f5247f-8e27-470b-b75c-1769dfb9ccbe",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "791b2b03-25bd-40ed-a541-9db68941571c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e354f40-5a77-4c3f-ae81-46f2abf984b5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69b337fa-e493-43e4-a55a-8a920965b198",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "888c17f9-dbe6-4e5e-88d3-5751480399df",
      "documentation": "Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.",
      "method": "get",
      "endpoint": "#Action=DeleteDBInstanceAutomatedBackup",
      "responses": [
        {
          "uuid": "53ac9f71-ad19-4d64-a7fa-57ac2f4c00cd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e98730a9-ffae-40ad-93f7-1e2025c6ea75",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceAutomatedBackupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "99d5249c-ebc8-4c40-a3fd-4f078e576243",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7baa45c-cb01-4fcb-839d-b34648b80c22",
      "documentation": "Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.",
      "method": "post",
      "endpoint": "#Action=DeleteDBInstanceAutomatedBackup",
      "responses": [
        {
          "uuid": "f8687634-135b-4825-bbe3-b9c49d5fe7b0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df0dfdda-face-45dc-b379-4ef5fa415503",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceAutomatedBackupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9aba7564-aae3-462e-b99e-9ef010365e29",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "da20229d-1b70-4282-a521-7380047b7c34",
      "documentation": "Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.",
      "method": "get",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "e8721f15-564a-4bb1-84bb-8c817e2e6644",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "513ec54a-9af5-4bd9-8acf-db5c391547ce",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6898f5f-4d5e-45b8-903b-1ec1976fe82e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "68c52f8b-3cf7-428b-ab6c-a9cea2bf1154",
      "documentation": "Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.",
      "method": "post",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "f8bb3ec0-6c03-4420-bba1-c161b7cfb7d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "910b4d52-eec4-46bc-b266-56fa9028de84",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88dde266-7b62-48d1-bb47-cd4f404b7309",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dc88f0c9-84e4-4817-b9fd-ed041d559b5d",
      "documentation": "Deletes an existing DB proxy.",
      "method": "get",
      "endpoint": "#Action=DeleteDBProxy",
      "responses": [
        {
          "uuid": "ea92d22c-b18f-443b-a67a-f003257e009b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bad17696-1900-4d94-be71-60ab2e2fe07d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db281f5d-5321-4b8e-985f-c612a9abd5db",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66496bba-a593-405b-ad45-ee0137d2f970",
      "documentation": "Deletes an existing DB proxy.",
      "method": "post",
      "endpoint": "#Action=DeleteDBProxy",
      "responses": [
        {
          "uuid": "82567855-d0a4-4847-98bd-3407e5251eb0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1916bfbd-20fa-4cda-adb8-58d1aec5515b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c95b4e-8e43-46d5-9e56-24ee10ffbd96",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52e6f0fe-d1df-4a12-a2a1-d2770e6d5d30",
      "documentation": "Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.",
      "method": "get",
      "endpoint": "#Action=DeleteDBProxyEndpoint",
      "responses": [
        {
          "uuid": "186d40d6-1d1e-424d-8aa5-f2ac61da744f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cdd83318-0c6b-457a-809e-4438602ef5cc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fc62049-a8c3-4071-bbbc-5155f9306366",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2649a323-26c4-423f-b020-91d9f12d2868",
      "documentation": "Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.",
      "method": "post",
      "endpoint": "#Action=DeleteDBProxyEndpoint",
      "responses": [
        {
          "uuid": "58c07403-3d29-4412-8b0b-a62d3cd648aa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c10dbeb0-00f4-4df4-bc73-95f851d6632b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da9a6820-0c04-47f8-bff1-39be0e6d2c00",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56e0f7ab-7a94-477d-80fb-053dd645cd35",
      "documentation": "<p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSecurityGroup",
      "responses": [
        {
          "uuid": "b6c610d2-cecc-4764-89f7-c37f7695019e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6d78bab-4478-4708-8ae7-2801e671a3ac",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14613c86-a617-4df6-bf47-61b8d251f7c0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7db2295c-0452-472e-b50c-614ec00db9b8",
      "documentation": "<p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSecurityGroup",
      "responses": [
        {
          "uuid": "74ece39c-95cd-403b-a0cb-92de38ae52ac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ce455eba-d1c6-4177-a5b7-cf86a29a4432",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c165a1-d503-496c-9246-74ba0c9da5f0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d776dc4-16d5-495f-8eb7-4849304f53a8",
      "documentation": "<p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSnapshot",
      "responses": [
        {
          "uuid": "0141f433-d79f-4e9c-aadc-465af26a428c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4625617b-0ce8-43e5-a851-ab41e294f862",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00d7ebf3-5b33-4268-9baf-083e05f66432",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7462d017-4ee6-420d-92e0-85343233ae79",
      "documentation": "<p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSnapshot",
      "responses": [
        {
          "uuid": "0a573eda-dec4-4edd-b1ba-d6e5833a59ab",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fb6955e5-e026-4d08-85a7-215f3b9f0cae",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cb59a52-8f6d-4dff-b431-582fa7e119c2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "909f4578-997e-4daf-962a-50300b45180d",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "b1238603-6a41-41b2-8366-7223b5c9ad27",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9451466-2542-4db1-8832-b785c479bb76",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26a22576-96cc-4a46-8992-009a8158a519",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e914f91a-f679-438a-9fb2-dcba28e8914d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52e563f3-977a-40d4-a733-88f856fae01c",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "34e6125d-fd8a-4f4f-8fb7-6e17583bd829",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "30b8e526-22eb-4230-9cd4-5ead2d29a3cc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "095f382f-c464-452f-ba62-ca2e72015b82",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aad51ef9-b7bf-4e1c-b41d-ce0e7a7a65ec",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b31fc067-ea64-4fd7-8582-1edab95ed2f8",
      "documentation": "Deletes an RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "6cfec3a8-80ea-4c8b-9f45-663bd854b2b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "feae2f7b-ba1e-48bf-885d-a236c82706f9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "caea21f4-d21e-4864-8fd2-5129dba0c8e3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e280f27-91b9-4610-89ce-f068d0ad57b7",
      "documentation": "Deletes an RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "61fe116a-f6e4-4aee-a0b6-44322ba8e94b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e74ab55c-29e7-43da-a150-fc7677e67bd2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc9f29f8-6a38-46dc-8499-ff0bee4c1c5b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2fd27604-cd76-4e59-8d9c-bdddc1ab1ede",
      "documentation": "<p> Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteGlobalCluster",
      "responses": [
        {
          "uuid": "39d7a8e6-6a64-45fb-93cd-c29bbef18a0a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5aa365eb-c351-4055-b991-ad79c3fd5262",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e5ec915-0f3b-41d8-8e28-55eb4dff7655",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57942d65-ee57-4653-ba7d-30b4eed09b51",
      "documentation": "<p> Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteGlobalCluster",
      "responses": [
        {
          "uuid": "6f19254e-a987-4974-a23a-d4eb0e4a2a9d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c8e7d49-1f18-4abd-aaa9-2578762f96f4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ba012d47-581b-4354-924d-34867ff4874c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ff71a7f-346b-4fef-b9e8-874ea4b6795c",
      "documentation": "Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "get",
      "endpoint": "#Action=DeleteInstallationMedia",
      "responses": [
        {
          "uuid": "3a8d79e0-e193-4b29-83cb-c68f5fe8167b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "703fce04-ab78-422c-bbe5-58f410854848",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7046ff0e-9203-4468-beb5-3feba4f09964",
      "documentation": "Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "post",
      "endpoint": "#Action=DeleteInstallationMedia",
      "responses": [
        {
          "uuid": "80ee2dfe-fcf3-428f-88a8-925d25147fc4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a2e933b-c41a-4bbe-b0fd-561a635db2d8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94d643b3-820c-484f-bb0f-054e666d8a43",
      "documentation": "Deletes an existing option group.",
      "method": "get",
      "endpoint": "#Action=DeleteOptionGroup",
      "responses": [
        {
          "uuid": "036a0cf1-9b92-4677-b98d-7e1a5aa4305a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "672461e9-7cae-41b8-b5b8-e3e8e019e599",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc32405b-cb1e-4baa-80f8-d419aa417b2a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6df1f389-1126-4ffb-aa53-816e184cae2e",
      "documentation": "Deletes an existing option group.",
      "method": "post",
      "endpoint": "#Action=DeleteOptionGroup",
      "responses": [
        {
          "uuid": "2266978b-ec52-4395-9eca-c2d592099965",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e1a9fee-f7ad-4a11-91e3-0b951893549f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "961694da-60b1-4a2a-8096-1e46bb449b7d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3e045f3-85a1-4f41-8784-28c79d71b213",
      "documentation": "Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=DeregisterDBProxyTargets",
      "responses": [
        {
          "uuid": "35657605-7b05-4ccc-beb6-3a059653d7e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d01ebaab-e7f4-4815-81ba-1f446b2a201f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0730141d-e9f8-42ec-b9f3-35a6074dc5da",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee6722ab-d8ed-4891-8dee-1d03f74d127e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3d1ac70-fc1e-47b4-9f1d-75c26546073a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "44677652-b4cd-4b70-9ade-bef2659ce234",
      "documentation": "Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=DeregisterDBProxyTargets",
      "responses": [
        {
          "uuid": "fb63af06-d209-4549-ad70-d7cb504402d9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2822283-8397-44cd-9111-cc388e3593d2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d5370ed-d9f8-4766-b725-cc5e1e61ffa7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8455a7c7-9698-4d5d-99b0-c8cdc5e4f5fb",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f23ec052-9c1a-49d1-b8df-54c904e281ed",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "397f8622-5869-4bc6-9645-47ad91bd2336",
      "documentation": "<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "b35f6d83-7c2c-421b-92fc-e5dc4f7a511d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17e194b3-f833-4b9b-8e4f-1306c2750b63",
      "documentation": "<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "676c6d04-21ff-416d-9291-96a10647d62f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "339bee1e-a818-4b0d-9411-e80a99ca821d",
      "documentation": "Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.",
      "method": "get",
      "endpoint": "#Action=DescribeCertificates",
      "responses": [
        {
          "uuid": "0a2d4406-c2ef-456a-b1a5-39ec65488dc4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22f23516-c8b1-4db1-aee8-a5f8e30caf9d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75dfc3d6-e8e4-47cf-8d6a-125226dc66b8",
      "documentation": "Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.",
      "method": "post",
      "endpoint": "#Action=DescribeCertificates",
      "responses": [
        {
          "uuid": "eca754a8-4f82-4b20-bbf6-4df1687c13d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ac89117-c0a8-4fe6-8321-e82f27c5191e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04232847-95e8-46bc-9254-a2472720dd53",
      "documentation": "<p>Returns information about custom Availability Zones (AZs).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=DescribeCustomAvailabilityZones",
      "responses": [
        {
          "uuid": "a98c41cd-3d1e-4488-880e-9c2192de0065",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ac94196-811b-43a2-bc09-7c881735aca5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4806742b-d051-47c8-aa44-05bf3c01398f",
      "documentation": "<p>Returns information about custom Availability Zones (AZs).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=DescribeCustomAvailabilityZones",
      "responses": [
        {
          "uuid": "f13756dc-7912-4363-9705-6923c331a299",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f531208b-c84d-44c5-a310-6350cfd96bf9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a692a55c-7f18-4e90-839c-a9f45319bee0",
      "documentation": "<p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterBacktracks",
      "responses": [
        {
          "uuid": "9e630a5f-5dcc-4f58-9aa9-005d4274d1e0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "76b3f162-29ca-43a9-9d19-efdea859ce59",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39b8b76e-136d-4887-a83c-038cda5a4ef7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterBacktrackNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aeecb229-c493-4f00-a32d-432639ae5635",
      "documentation": "<p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterBacktracks",
      "responses": [
        {
          "uuid": "057b4842-d1dd-4cc8-b18c-2c2d45ee09d9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29806ccc-156d-4786-ae65-336a50245efc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69d1b719-95aa-4730-b48c-44b3ae41585a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterBacktrackNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba1b8554-c2a9-4d4a-9b35-442a536a2734",
      "documentation": "<p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "7196ae9d-6a21-40dc-b6ec-98a5c8e85e79",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04a8a178-2c24-4673-ba30-f717199fd12d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92fa45b0-f3d8-45ab-905d-a2086122d6d9",
      "documentation": "<p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "99c263cf-ce50-460f-9320-6791ee7e6062",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8930b2e0-9db4-4b1a-adc5-07369d41eecc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46cb308e-b100-45e4-b3f5-4950838a3471",
      "documentation": "<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "a8ba6b87-52a7-411a-a18f-fa2ba6d5f57f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68b177b2-f309-49a7-ae07-31d274198856",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "487e4c59-2ffe-4ac6-8e1e-2ef764306f7b",
      "documentation": "<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "2d276c34-48cd-4972-a511-cf7d9093da1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ca3e70e-208e-4a2d-85bd-4f0a86e61907",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ecd5496-4027-41e2-80c2-671898907a1c",
      "documentation": "<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "68052c0c-2b1d-4afa-8be0-17d03a80e007",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a71c6fa0-9b65-4d14-aa72-72cb1b6c4f6b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2dc173c9-b618-423e-b6c7-e6a8f8f9b9f0",
      "documentation": "<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "c55e82d8-3aa3-47bf-8d6b-a8b680b84b6e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "415d3735-26c4-4e71-b6c9-36c59fd1340f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43618e58-c988-4ede-96e3-386126ec72d8",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "35502299-217a-4605-8a2e-1a727e42127f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b058fc6f-fb83-4bfd-ac76-9a4b2411f458",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "092d32f7-49d8-4ec6-95a6-5cd6a8655cb9",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "45ed206a-c8b5-42c7-85d4-8f184f3c9938",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d36eabec-9474-4b34-b6d8-1aba1527a296",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bcb1e0c9-1286-4d15-a59e-777916eb8459",
      "documentation": "<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "392a03d1-437a-47a2-a3b6-4210c4cf7043",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10cc7d3b-a898-4ae3-ab22-9ba3c3dd8be6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b76cf25f-f812-4a98-b104-819a7b228848",
      "documentation": "<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "e2efb380-48ca-44fc-88ee-8df46e745c01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "df5e89c0-588c-4431-aca7-18b120684363",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb462aa7-ed26-4583-aecc-d0d335830878",
      "documentation": "<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "0ed9598c-4683-401f-9905-441a03b35578",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6eef1d5d-a37d-45f6-baa0-d7ba187359e1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "540dae42-63de-4758-841b-8d279ea32648",
      "documentation": "<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "71c0a104-186c-48fd-82f7-a018fdf90a97",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d266fc4c-ae08-4aba-bfa1-c9aaf87b121b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4661b8f2-487b-4d5e-b05b-4251c76481e4",
      "documentation": "Returns a list of the available DB engines.",
      "method": "get",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "3804fdbf-e6c2-4260-af0b-0d9c8877de85",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "69eabd1c-30a9-4bac-8595-ce9072f6cec5",
      "documentation": "Returns a list of the available DB engines.",
      "method": "post",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "398d603f-6f52-4936-91d7-25da3c4d722e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12c237bb-5133-43b8-8069-f6cec0cf5792",
      "documentation": "<p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBInstanceAutomatedBackups",
      "responses": [
        {
          "uuid": "48020655-9d78-4d41-823c-b230b427baa0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f96bae1-d178-4b61-b029-b9e7334553c8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb2f4974-86ca-4168-b425-e4591af6bf07",
      "documentation": "<p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBInstanceAutomatedBackups",
      "responses": [
        {
          "uuid": "100692da-c0f5-4d7d-9440-756a5268a0b8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57fb90bc-6c6c-40a7-aa6b-788cf9d2bb5e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03c0dab6-8018-4c25-9e8c-deaaaca57370",
      "documentation": "<p>Returns information about provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "37244557-a18d-4805-9303-27d4583f4b77",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ce3606c-2661-4f83-a054-a652d649f45b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "43a29830-4247-4754-8c5b-f9e6620971a8",
      "documentation": "<p>Returns information about provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "bbc954c8-b39d-42bc-9341-8faa7e82dcee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9592dd92-0d25-4dfc-8d49-f368133ca9f9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b988ec3-c5cd-4010-817c-c88a05c8124d",
      "documentation": "Returns a list of DB log files for the DB instance.",
      "method": "get",
      "endpoint": "#Action=DescribeDBLogFiles",
      "responses": [
        {
          "uuid": "96cc9da7-963c-4ca3-aeb4-2e056311b145",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f21b591d-cadc-4804-b2e0-dbc56b03996c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ae20585-2d84-4e78-91ba-8dba9973ff11",
      "documentation": "Returns a list of DB log files for the DB instance.",
      "method": "post",
      "endpoint": "#Action=DescribeDBLogFiles",
      "responses": [
        {
          "uuid": "abeac326-d3e6-4e09-86f5-cc02798fbe89",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fabedcc2-9271-4ef4-857a-8dfe2e37ed7a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54bdbf8a-8f3d-44df-bd08-f7b9e3e42de4",
      "documentation": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "66911e4e-eb81-4dbd-999b-234ac2f99c3b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62a8b101-aab7-4362-972e-379c7ffe6889",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2a883e1-d2e9-45c2-9da7-9ca5eeba0bca",
      "documentation": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "18280955-e104-4c5d-8d19-7da1d3d52c21",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d11b534-6570-4601-badd-cee994b74502",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87605161-46f6-47fb-8839-52dc53704b5f",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "fda1e4df-9167-4efd-a165-36049148991b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c65d5c02-03c2-4d8d-92f7-a042fc0f028d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1994433f-37fb-4e8e-a9d1-8300212728cc",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "1cc1bdca-eff6-4897-a338-0d8c48f3e0ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d36611b-6a14-4668-afba-290c9abd7966",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1840be34-4872-4baf-9d58-0d10c3787dbf",
      "documentation": "Returns information about DB proxies.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxies",
      "responses": [
        {
          "uuid": "364d6fcb-a2af-4c34-891f-4d5254065611",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e8d5207-53b1-4319-a8c2-593d28e1b439",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd7c99e4-5713-439b-b8ce-3c71122c36e9",
      "documentation": "Returns information about DB proxies.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxies",
      "responses": [
        {
          "uuid": "ee2dd9db-01e5-46c7-8662-0085bb50bdfe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f77cacf-1495-4c01-9ffb-970cf2762b88",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83bd1f18-477f-4c8f-8b57-b3f1f6e928c8",
      "documentation": "Returns information about DB proxy endpoints.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyEndpoints",
      "responses": [
        {
          "uuid": "f6e9be30-319a-4324-8d4b-bb2d5f367a43",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68715e56-e038-4491-a0c6-7ea6f1029169",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c801bede-063c-43db-bfd2-253b1fa990ca",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51c6ec2d-6ca3-49f0-afbf-5670efa34c56",
      "documentation": "Returns information about DB proxy endpoints.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyEndpoints",
      "responses": [
        {
          "uuid": "978f4530-e4ed-4707-8dff-2fd874fbf297",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e0dd932-6ab7-4fb9-9ec5-560b611046f0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e66d1a5d-881e-4949-850c-3739ea1ac799",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56df2034-e9be-471a-9ff7-6e283e9a4b3d",
      "documentation": "Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyTargetGroups",
      "responses": [
        {
          "uuid": "cc30e99a-6f5e-4b33-b203-55f1dfa73079",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f45e258c-6715-4302-b9ed-468b2b742045",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b495786e-0158-4179-9b7b-952b0118b95e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec00973a-3acc-4963-9882-d66724cc53d9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea8baede-7a5f-44b0-892c-72b2fcb57634",
      "documentation": "Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyTargetGroups",
      "responses": [
        {
          "uuid": "c8e8d21c-0018-45fc-a5f9-b8d471d67070",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "363c531a-0a50-4b20-9d5e-1665966b08bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bd5c5d6-e2ff-4f49-8fe9-562fba3419e1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70e813d8-508c-48ee-97c0-2ee0dffe8d95",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f24c5352-a238-4d61-b619-2efd549d843b",
      "documentation": "Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyTargets",
      "responses": [
        {
          "uuid": "2f55d562-3e4a-4e6f-990d-cfb8252e44fb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dfa72b00-2e70-49c0-a5c4-ad1353523245",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "054ac938-2365-4aad-acf9-b88bf3a08835",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29f5d3d4-2982-4b40-9ea8-2820abb842d1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11ca810d-7467-4358-b775-da0a97279425",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9832f3f1-59ca-4ee3-be36-99d6e9dffd2c",
      "documentation": "Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyTargets",
      "responses": [
        {
          "uuid": "990bb614-ba88-4040-8baa-36d7a88a10da",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "14e47d04-9103-4466-bf63-1520d44c2a10",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d219aa5-4c2c-4872-9424-d54ddae636c5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7fa23d82-070a-467e-aeac-fb1cd00ce043",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50791ce7-93b0-4ad9-9306-e9d3e0074b18",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8351c8fb-74ef-4daa-96ad-c0d62646c425",
      "documentation": " Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. ",
      "method": "get",
      "endpoint": "#Action=DescribeDBSecurityGroups",
      "responses": [
        {
          "uuid": "c82eb41e-4204-4008-8909-e8e45f3344aa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d1c01e17-ec9f-447e-a803-0aa8d6b954a0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "25759b45-5dcd-4967-a97c-b7cdc4a4237d",
      "documentation": " Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. ",
      "method": "post",
      "endpoint": "#Action=DescribeDBSecurityGroups",
      "responses": [
        {
          "uuid": "41491807-cdba-4e61-8933-b76537238617",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cdd2a9c-d2af-4464-9610-e9ee15d418bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3fa04d7c-979c-490e-97a5-5b4b2d82b7e9",
      "documentation": "<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBSnapshotAttributes",
      "responses": [
        {
          "uuid": "b9974328-29c4-404c-9de4-ca88f171dc93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e93d44cf-8a21-4977-9b3f-620099532d9b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23788862-3001-4a6e-8c74-3a1f729c0b33",
      "documentation": "<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBSnapshotAttributes",
      "responses": [
        {
          "uuid": "de4b928c-bf5f-48c4-af7e-38fe3958202c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7f82f1ed-dcf1-4364-9dbc-e82432bbc758",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "744ff636-46b1-4094-947a-aaa6be70be1e",
      "documentation": "Returns information about DB snapshots. This API action supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeDBSnapshots",
      "responses": [
        {
          "uuid": "b6826c6e-bd3a-4c1b-8eb3-d2589f44a861",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69701fdb-b31b-4954-b65d-fb0822a97bb5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c99b6ff-68b0-4e88-8e3a-d6ffdfd1223e",
      "documentation": "Returns information about DB snapshots. This API action supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeDBSnapshots",
      "responses": [
        {
          "uuid": "420afab5-c210-4e05-ac0a-3594cba00201",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1795a507-e791-4a4a-950d-18a3290f1132",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9bf1b98-ef33-478c-9463-44a15c3f54b0",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "554cc65a-324e-473d-aaae-c357f9bf6c63",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95192301-e499-4fe5-9951-5ba9683861e4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bfc856af-2c41-4228-b325-963635f67ea4",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "7f31aee2-8f36-4ff1-9293-5f8731d7801a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4f3e9608-6a2a-4db9-813e-5e276c64621d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32432a81-6a36-452d-8a1a-ec081ea3c601",
      "documentation": "<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "5e6ba69c-53b1-4f23-91e1-2bdb9537a8d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa0fbda3-68e1-41de-af03-ed457931b79c",
      "documentation": "<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "679db4de-54af-4b52-8a47-5168ef024be4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "caf0f995-e764-4fee-b4db-daa31d2b8c6c",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "5d4b306f-2bf2-4178-bb54-1b44bd740baf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c3043b9d-e716-4e76-9bfb-1589ff35ea6f",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "9ef0f329-2ba5-4e95-afc9-15f02a51540f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "909a2897-b31d-490c-b517-bafd13f95b7b",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "get",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "3dd33528-c679-4717-9a36-b40c5a3ef40f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b2d0ae3d-43a9-4faf-831f-2333de124834",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "post",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "d68b5543-d3f5-46b5-9482-a6e177853430",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9ca7554-f93a-42ae-9e91-103ffc727892",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "b3582443-856f-4ddd-8ebb-503791e795a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23f84e2b-9521-49eb-ace5-777fb8197250",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d84c93b-3a9b-4c9b-be0b-e310e920bfae",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "be8e50c0-77b7-48df-bba4-fd3ee1b4aed1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "43ecc94a-7829-4575-9c2c-f1ceea98b2cc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "960d2d3a-d046-4c88-b890-b16d6bf6b0fd",
      "documentation": "<p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots for the past 14 days. Events specific to a particular DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots group can be obtained by providing the name as a parameter.</p> <note> <p>By default, the past hour of events are returned.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "2b141f96-f4c3-45cc-8efb-899f975254d8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22364e16-d4d2-4d73-896d-9203ecddb7e8",
      "documentation": "<p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots for the past 14 days. Events specific to a particular DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots group can be obtained by providing the name as a parameter.</p> <note> <p>By default, the past hour of events are returned.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "458b780d-ec65-4687-bd37-c9fcc9610a06",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3f08569a-70ca-4cc0-aef4-b758bfacdf04",
      "documentation": "Returns information about a snapshot export to Amazon S3. This API operation supports pagination. ",
      "method": "get",
      "endpoint": "#Action=DescribeExportTasks",
      "responses": [
        {
          "uuid": "0a6b9310-3830-4c0d-a3e5-b0d602df9825",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "150aa59d-ec43-4d5b-bb1e-b04a1e086a32",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d31df23f-7bf6-4226-b2bb-80351a702c3b",
      "documentation": "Returns information about a snapshot export to Amazon S3. This API operation supports pagination. ",
      "method": "post",
      "endpoint": "#Action=DescribeExportTasks",
      "responses": [
        {
          "uuid": "1b9755e3-593f-4fc3-b324-6acfdbbafabd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72d1a5d0-06d3-46ec-886a-32e9be4c1423",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4828ee6a-97aa-4cb5-a044-d18e257cd58e",
      "documentation": "<p> Returns information about Aurora global database clusters. This API supports pagination. </p> <p> For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeGlobalClusters",
      "responses": [
        {
          "uuid": "02f20420-c136-4f68-bfe2-752028c8712d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "50ef9e38-4bc2-46fa-9a68-55f93531fd53",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b1688c9-63b7-4240-b1e6-ce6d48482f41",
      "documentation": "<p> Returns information about Aurora global database clusters. This API supports pagination. </p> <p> For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeGlobalClusters",
      "responses": [
        {
          "uuid": "50c2a249-8f65-45b0-8879-3e7663026e72",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d21f5730-ae58-48f7-a4d5-4a3f426babc0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8e9ac6d-693c-4f85-9790-ad2d74cefaed",
      "documentation": "Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "get",
      "endpoint": "#Action=DescribeInstallationMedia",
      "responses": [
        {
          "uuid": "c393ac67-f50f-4017-87f2-5de5162e9d7a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6139104d-1d35-47f1-a397-dfd1280b1592",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dcafdb14-c159-4fb2-919e-c9a7882ce61b",
      "documentation": "Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "post",
      "endpoint": "#Action=DescribeInstallationMedia",
      "responses": [
        {
          "uuid": "ddc9deaa-2945-4f84-8195-a86f3753232a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2f414988-a214-43f9-a19b-864977dfbaa1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fe826f56-f66e-427a-8d93-c1530ede41f2",
      "documentation": "Describes all available options.",
      "method": "get",
      "endpoint": "#Action=DescribeOptionGroupOptions",
      "responses": [
        {
          "uuid": "6d6186ef-f329-45ba-89de-39c693db1bc4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bee01b4f-0893-4651-9d1e-a1f5d31363c0",
      "documentation": "Describes all available options.",
      "method": "post",
      "endpoint": "#Action=DescribeOptionGroupOptions",
      "responses": [
        {
          "uuid": "e6f489c4-57eb-49cf-ad8e-b487b0cc96c4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea15e940-5b0e-4a87-90b0-1632ddaced70",
      "documentation": "Describes the available option groups.",
      "method": "get",
      "endpoint": "#Action=DescribeOptionGroups",
      "responses": [
        {
          "uuid": "4b20a178-84c8-4a69-b452-8dbe13909489",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0fba56f-9f3f-4b6c-97ca-595807b56b43",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b3bb515-4ecb-4e8a-bfb0-cbca5918ce15",
      "documentation": "Describes the available option groups.",
      "method": "post",
      "endpoint": "#Action=DescribeOptionGroups",
      "responses": [
        {
          "uuid": "55de872d-c2f2-4d0d-a9dd-0dca24e9e9d8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f4f031a-b742-4bd8-ab21-578d91fa3e14",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4f87341a-1660-4c3c-90e1-2e818a9eebef",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "get",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "c44bf411-8593-4134-b1f2-2b00f3d4ea04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffd9aad5-6bb9-4ca8-bdaf-ee71e2d95a4d",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "post",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "dcc25e38-e8bc-432c-b465-97658521c4b3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "739ccbfe-facc-4bc8-87d9-64165c352a20",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "get",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "99787ed3-3d01-4ad0-81d4-6bb1a271c1be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "db7c8418-5271-4110-93bf-110a9a33fe99",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b7a48766-c1f8-44ce-a123-df7af2885e5f",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "post",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "db8c8220-fd5d-4a95-9446-b4f84d8bdd19",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d41df68b-4334-4724-b6a6-7bc2a3d66e6a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f25285de-2573-455c-ab02-4bdde1506c94",
      "documentation": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
      "method": "get",
      "endpoint": "#Action=DescribeReservedDBInstances",
      "responses": [
        {
          "uuid": "68c4ec24-e58e-4441-a520-28488958d096",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f28b27e-a14b-4267-9a0c-42be34548bad",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97d424ba-bd01-448c-a3d6-2eb9c996076e",
      "documentation": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
      "method": "post",
      "endpoint": "#Action=DescribeReservedDBInstances",
      "responses": [
        {
          "uuid": "3146ecfd-44e8-46e9-989a-d815c5007a05",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b209542f-5f6e-4e1f-a16d-1fd8e9e00c3d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de4d7566-212e-427d-80bd-905785b2005d",
      "documentation": "Lists available reserved DB instance offerings.",
      "method": "get",
      "endpoint": "#Action=DescribeReservedDBInstancesOfferings",
      "responses": [
        {
          "uuid": "358c84c6-9cf4-45f2-a477-88d77b09bd09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00578c74-0fc3-411e-b8b8-9068ee0fe7f2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "593a4b09-2945-4fb6-aed0-7108b7536fe7",
      "documentation": "Lists available reserved DB instance offerings.",
      "method": "post",
      "endpoint": "#Action=DescribeReservedDBInstancesOfferings",
      "responses": [
        {
          "uuid": "a3cbe010-568f-4f0b-9a99-ec7ac85fa666",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "de21e93b-ae8f-409d-afcb-202ebfbc679d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ab9df8ec-f337-494c-81b2-808e2e31a612",
      "documentation": "Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from. This API action supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeSourceRegions",
      "responses": [
        {
          "uuid": "b211967c-6e62-48e6-9536-402f54989432",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fafdc2b0-e83c-4f1c-ba4e-2adb8cc512eb",
      "documentation": "Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from. This API action supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeSourceRegions",
      "responses": [
        {
          "uuid": "e2718739-54a7-4a11-983c-dc220f3fe58a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00551621-38a8-448b-b26a-74752fc4ccb3",
      "documentation": "You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>. ",
      "method": "get",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "eefaed04-e4e7-4ecc-b0f8-1b4780f537a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8cb499d0-2c70-4f48-9b9d-19f938852158",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7fc6752d-466a-4a8f-ae52-cce03c0f5293",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2815c858-94cd-4d4e-b8d3-a45235b4d4c0",
      "documentation": "You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>. ",
      "method": "post",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "87da9976-18a4-4091-bb41-26715677a40e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e511a81-a3b1-4e24-83cb-c2497f515acf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "85b06908-6457-40ec-ab6f-dc8b37431afe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2ee06a52-c76e-482d-8f07-549cef5597ca",
      "documentation": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
      "method": "get",
      "endpoint": "#Action=DownloadDBLogFilePortion",
      "responses": [
        {
          "uuid": "98cb0671-27fd-45a1-b530-b4b4dff1d438",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c8eaef6-b4c3-4ac0-8812-08eb37507db8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ab62195-14e6-46e2-a430-c22fea7e89ab",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBLogFileNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ccba2df-9402-4373-b8d6-51089a5744ac",
      "documentation": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
      "method": "post",
      "endpoint": "#Action=DownloadDBLogFilePortion",
      "responses": [
        {
          "uuid": "d3994e17-45d4-48e4-8eeb-5e85c94d1299",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7889fc20-e7c0-438e-8259-a8958d889566",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b3b11152-2b16-45cf-9d6a-27529b04d4ec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBLogFileNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc2edd9a-dc0c-4baa-aa47-a12bcfd9bc07",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "166f6d49-167e-40ce-910b-1ffc4d78346b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf6a203a-c784-4dab-a46b-ddae17e55756",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32c82a5b-766d-4255-bafb-26cd86178912",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa5809bb-7ac6-474c-9ee6-58fe0c263c9c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "efaafad5-34de-4c3d-9765-b4333401823b",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "453821ce-b5d4-4583-bf9b-c4ddc62f9ae8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "157ef57f-c39c-4fa1-88ed-4b825fdc262b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9420db34-8a0b-4c9e-8450-5134cfa20452",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79dd4c8a-a282-42e4-8aa9-7f081d1fab78",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e007da83-1f36-47f4-bce9-00ecaf0c0395",
      "documentation": "<p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover\">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology. </p> </note>",
      "method": "get",
      "endpoint": "#Action=FailoverGlobalCluster",
      "responses": [
        {
          "uuid": "5cd9f878-cbdd-4114-be84-45d89b739230",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eecabfc8-d916-4dbb-8d48-8069a670caa3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af2cfc73-4e05-4cb2-a39c-cb0507dece18",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "480ff3ca-120b-44bc-b057-db7d8afdd5a8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e704e6b9-a261-41ab-8800-170f383c02f1",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09147972-7569-425d-9268-e24363a7f884",
      "documentation": "<p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover\">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology. </p> </note>",
      "method": "post",
      "endpoint": "#Action=FailoverGlobalCluster",
      "responses": [
        {
          "uuid": "edd329f6-5329-407d-a784-dcbef1ae613f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8822fc0a-dfc6-41a6-abf8-a73dd1e2f1ee",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c7bfdc0-ff12-4771-844c-71ab0783ad62",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c528eb4a-75de-45a0-9938-673e8b2f5849",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6005f1bb-a7ce-4ced-afe4-ca8b56f173e7",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fb79ebe-c37d-464a-be71-196b14a5364a",
      "documentation": "Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.",
      "method": "get",
      "endpoint": "#Action=ImportInstallationMedia",
      "responses": [
        {
          "uuid": "61eb5678-5ec9-46e0-ba0e-c2189230dba2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f211a65a-936d-4d9a-a540-b7454d4cf873",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bf3156a-9826-4de8-b95d-0ec53f151db0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InstallationMediaAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb1f1c9a-3c7e-41b5-ad82-bb58324f2241",
      "documentation": "Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.",
      "method": "post",
      "endpoint": "#Action=ImportInstallationMedia",
      "responses": [
        {
          "uuid": "34fd9a1f-e33b-42ce-a941-6371731733e9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7de559da-72f2-429e-a000-111aba88579f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae843e05-79c1-4d8d-9460-58ff08987e48",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InstallationMediaAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c384727-390a-4218-9e34-af75d84dd286",
      "documentation": "<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "5511128f-35e2-40b2-b3fa-b512e725ad1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4402c647-3c69-4e5d-944d-697b5882ec83",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da305612-50ff-458b-a721-d1ad78458f2b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "004fb080-de10-4558-bd54-26d838081288",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdd3664b-3174-4dd2-bf43-1bba2daf3d4a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17d4aaef-13c9-485c-9504-64100f8bfa5d",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "024ba7fa-2182-4560-a3ee-3feaa9355372",
      "documentation": "<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "70985cd8-c6a5-4501-884e-7211245f7798",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "829164d8-1bcc-47e1-86e5-cd38e56d0dfa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4ae53f5-1b9c-463d-86f0-349d5040feb1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4dd5bb7c-f04f-4c5b-90ae-c3cd64fee31e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5165e6cc-dfdf-4b69-b1c4-4307b70e4ec0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ef66914-fb5f-44be-a460-66432befcc11",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11be303a-b4de-419d-b808-85893ed8c47f",
      "documentation": "<p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyCertificates",
      "responses": [
        {
          "uuid": "dfa69ada-65ec-4704-87a7-8efffe292f32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64313bea-3a7a-473a-9115-a78f9a758c82",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4450e9b0-989e-4f4c-bca5-5fd98f9fda36",
      "documentation": "<p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyCertificates",
      "responses": [
        {
          "uuid": "eb583fc8-44c9-4f68-bbcf-024d85873a38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bce80ec1-dab9-47e0-af67-82b3c8dcdfec",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03a5462f-fe9c-4619-8857-530e64992fa8",
      "documentation": "<p>Set the capacity of an Aurora Serverless DB cluster to a specific value.</p> <p>Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html\">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless from finding a scaling point might be dropped. For more information about scaling points, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling\"> Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyCurrentDBClusterCapacity",
      "responses": [
        {
          "uuid": "8acce386-8109-4ba0-b8e6-0d24b0b642a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e1818d0-a10a-4519-a85b-e1d36070735e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ffdd9d1-be3c-41a3-a68c-1fe130743d07",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c3a848e-351d-4661-a7ed-00cb81458b4b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f71e91cc-d34e-4ab5-9700-521fb5cb5da8",
      "documentation": "<p>Set the capacity of an Aurora Serverless DB cluster to a specific value.</p> <p>Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html\">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless from finding a scaling point might be dropped. For more information about scaling points, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling\"> Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyCurrentDBClusterCapacity",
      "responses": [
        {
          "uuid": "c02b6c8c-2cb3-4e4a-bdaa-b27b96bddab6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80255368-30ea-471b-9ed8-b405bf88a953",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40464542-7101-4a5a-bd25-d8c5ab5f3633",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "668e57d4-ede6-4b04-8e31-485d84c62bf6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff3b04b0-23ce-412a-801e-6619551e9f2b",
      "documentation": "<p>Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "9e674fc5-d190-407c-bbb6-cb0359271bd4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80f84ae1-e767-491e-a77c-ef09edc9671c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a76df3c0-d8b2-475d-9925-abfda33b63a8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03b887b3-cba4-4cab-b95b-826031ae989c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8730e793-ea18-457d-ae07-e5e74533c3c2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdca233e-121c-4671-abf2-6f840978ffa2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6132c2de-5e3f-4d7e-af5d-35502cc81169",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96a8192b-dc36-42e7-a18a-3a4049d87ca9",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94384423-8096-4460-b559-7f86df891463",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc0058b1-eb13-480b-af58-2d6cfd9153fe",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9160e02e-2a1f-40b2-8cec-0e5b8d8479be",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6be6c0d2-6482-4879-bc84-ba45c90b5436",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8256c897-d80e-452a-bb04-d7155d00e964",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ee0b25f-8d50-41e4-b355-b380db254be8",
      "documentation": "<p>Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "3ef21f1c-5a00-4dc6-aa99-2bc06c6fbd8c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f4a8c02-d085-44dc-b816-2b74916198ca",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5281b47-0181-4f88-a0ce-0ac4f51f730c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abe9d983-c592-4b49-878f-86b45265872f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74ec9f86-08b2-469d-81f7-100e10502e59",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "882bab25-25f8-4114-8097-0d89aaf5e5f5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa45127a-8252-4d8e-84aa-5347b76ec7c1",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3b8e002-f16e-4342-b5c7-04f8bff3ca67",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fab2680b-2e85-44c2-861c-9443336f4649",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e73f670-00ad-47e1-9955-c3d5c660177a",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "197e47ea-b616-4385-a7a3-99eb5db5352b",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0c1b249-4d46-4f9d-a763-5f6c505358ce",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b05505b-4582-4dfa-a4f6-5daba9756f3a",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ea9b216-259c-45a7-afb0-868c7d2f37b5",
      "documentation": "<p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "92a4564a-f9f4-494d-80dd-eca821267f6c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4567ce1b-a48f-4c77-9b66-f276a717b131",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3774623-5302-4a2d-a473-419e6c6d6870",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dd1427a-6218-4e0d-bd0f-15b7a24cce5e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6ae3149-76b4-4cb6-b0be-6091b69c9f18",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33555483-5d46-419d-b44b-cc9e55c23369",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf37f39d-fa7f-483f-8f0d-8649f506c970",
      "documentation": "<p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "58d813bd-6c2b-4b3c-88b4-decd61a5deec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f248f616-1032-42bb-8e24-76c5a3b432bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8ca8144-b020-4a5c-926c-1784a563f395",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34e944a7-43a8-474b-9e98-b7a16e336c30",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d77623b-5d31-4cc2-be51-c0bc45930e03",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75cb2791-d88c-4f82-9a95-699189725fa2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9cc47cd-4647-43c0-a083-ba8892a48921",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "31354377-4c88-4c80-afa4-a1c629702cf0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26b10820-5ee3-4636-b7f8-eefe9907fc7a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e84a932b-3472-4cc0-8b2a-b300675175cd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30fec1c4-437f-4d6b-9f62-c2602db28490",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "04b7f84a-4245-422f-8ff0-fc5544c2c881",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5503a9b-1549-4b3c-84e0-50c106a60038",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5ee39345-8d86-4024-8fed-a87ec49d7412",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1022bf38-5d7e-4694-b904-5296bfdee62d",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "9c521527-41f9-4f79-8fd3-c70bbc6f0c6f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04053afb-49b6-431d-b2c2-a5b67f6daa00",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31fdfbea-610c-4770-8c96-da9662bab68e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08a735b7-b628-4d18-9418-13622a85267e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9cd8bdc4-d037-46d4-ace6-ab1cb1a42eff",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "5687d71f-215e-4e2e-a805-f1c4e47680a9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0f5af282-7f2b-4769-b280-ef05eb7c43df",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f991ba9-2e69-49d5-ac8d-0ff85b02fc2b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9cb224a-647a-4b22-be97-8928c95e04a2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8906bbe-b086-465b-af08-ce7bf23a9780",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>. ",
      "method": "get",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "7fbd3ad0-7e8d-43ca-a7b3-b6412d52e7bc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d9ad46ae-7878-4ee5-96da-6acf081264d1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f720b126-9489-4283-b46d-2d72833b7f6f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c84949a3-f4e8-4b45-a468-9c055009b770",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1fbd4d5-41a6-43f8-be0f-382c86c9d5bb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5bae512-e2d3-42d2-af5a-f556b970b340",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83a21503-04b2-4a88-b1fb-c232590b624b",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08865e2a-f007-4db9-a20a-ede869e96475",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "31499d29-25f1-4bee-b3e0-e2647a81c5f2",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52fa9574-f6fe-48ee-807f-c22e90b701cc",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2706c39-24bb-4049-908c-85a7e8d3b683",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93b52cb3-da8e-4c1d-84d3-3396e263b4b3",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04db2b23-f7f2-4450-a2b1-1f338f114ce6",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b66593bc-b676-42bc-958f-f1ec62f1cec1",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59c6b2a0-43f3-4bdf-bb16-a1910033ec68",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "306e8f3c-f05e-4ec5-ae55-121d721f5c38",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27a529a9-976e-4c98-9622-38aeaf27d021",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3994b1f-efc3-4270-8d20-7aa70568fadc",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4174d1b4-4382-44d1-8e4f-827718db00ee",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b51a51ad-d4a6-4b85-9ecd-6b89968f760e",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1afe46cc-3503-4e84-aa44-1c168c38a833",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>. ",
      "method": "post",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "2c39002b-ec01-4f93-af3d-eaa0b0e017c7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0790550e-9352-450f-9fc3-f14948d6bcf5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41f130bb-3e9b-40d2-a24e-ebbacebe40d1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91b0f7cb-111c-46bd-92f7-f1e62520af2f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b38d1a2c-b654-4e08-8c74-c75309f6b418",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d25c838-369a-4843-bac5-aec7dcb2ddc1",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e87753df-e190-4ba6-9ab9-368e893d9606",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94c70970-9dbb-4579-83ef-f7ad7684bb58",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0edbd376-51b0-4872-ba46-5c93dda17265",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12c8975e-adb8-4d52-91f9-6d8ecacf3a20",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6bf7c5a3-3eac-44c2-acef-cf7938ae3d1a",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac1c71ee-b3ff-413d-9897-08a2c9fb52d4",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20c3c1b5-fa76-4613-bb31-03e646be8b5a",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec1880f9-0f63-4d25-b981-93dd61641cf9",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b522755-12ff-493f-82c4-38cc04a4e9ea",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c784cdb9-aa8c-42c0-92b7-56c523b4c978",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fa52bad-ddcb-42b2-883c-398436351f90",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34717dc8-62cc-48de-a128-64efbe83bce4",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "235b771d-ce78-4d51-8cab-1a1a96ea1fb3",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8adb97e3-3865-4a7e-ad5e-65c09d729c7f",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "45e0afa1-9f30-4836-9c21-f443b2391a16",
      "documentation": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "b67fa65b-6efa-4f25-af6d-2d595438496a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bbca2913-e7d3-478e-9e57-383eb9bbb69c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e77a16ab-0644-42b7-a8a3-bbd17de84d85",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8527a301-df3d-485b-a45b-c166ba0fc119",
      "documentation": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "57091b80-5ca3-441d-87bf-fa8b950bdefc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7f3e1f92-0893-4d06-b544-1aea75a9adca",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "696101b2-33e1-4d45-98fb-22c96d349f44",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c676e4a-5cb2-4b00-b068-62be9f6204a2",
      "documentation": "Changes the settings for an existing DB proxy.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxy",
      "responses": [
        {
          "uuid": "f4aaf672-e115-4286-a059-891d9d2595ab",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c488e9ac-dfb6-4fc5-b069-6e85914724ab",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92a7df9e-1cfa-47b6-bcbb-77d89b855d0b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77fa0e31-97ae-4ac6-9b4a-260a6028e1ea",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfb3e169-ca62-4d98-8bcf-fc8fe696e5e9",
      "documentation": "Changes the settings for an existing DB proxy.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxy",
      "responses": [
        {
          "uuid": "b1410c2c-4578-4085-808f-4152bc9f3725",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "633a62d1-54b5-46b7-9193-03ceea1b82b4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7394d462-a2d9-48f0-91a6-af241310e496",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2c4fe84-751a-4c58-9c94-77c52d661ca0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a004baf6-8718-4614-95a6-60d1caaf5e30",
      "documentation": "Changes the settings for an existing DB proxy endpoint.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxyEndpoint",
      "responses": [
        {
          "uuid": "07142de6-e45c-4f95-8ec9-f379f0e0f99b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc4cdb1b-1cd7-4862-beaf-ff33147613fa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49982146-e487-47ed-863e-56346f3e3ec2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b584fee-1106-4302-9022-73e61cf57475",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f928057-aa7b-4a9b-9af3-a71dc9dcc656",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de0c7889-477b-4e30-bd5d-d9f9e73372d7",
      "documentation": "Changes the settings for an existing DB proxy endpoint.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxyEndpoint",
      "responses": [
        {
          "uuid": "baa4f677-3e0a-4ac4-976d-6120cabf3573",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ab670e8-e02c-4d25-9b27-a1c78d99b11b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "440b38c4-6e8d-42b1-9377-d91e6096808a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fca2e485-32ec-4eef-a76a-982f1e74ba3c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c65da6f2-5b3c-47a5-b817-683a763d6b5a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8e199da-8942-49b6-8878-d03ba0ca55db",
      "documentation": "Modifies the properties of a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxyTargetGroup",
      "responses": [
        {
          "uuid": "06f64294-1225-497f-bb24-726f5dfc5b6d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea0bc4a1-d668-4f72-abe4-86f38c4868ba",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84bfaafc-e528-4a67-9251-4ede5b7e4edf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "622eabf9-3f3f-41ff-bd1f-8409ac76dff0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ee71df31-afa3-42f9-a149-ec14b6eedb7f",
      "documentation": "Modifies the properties of a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxyTargetGroup",
      "responses": [
        {
          "uuid": "1f6595a7-c196-4268-abe8-2795a8724250",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fb04fef6-9780-4858-83e4-5117d7b8d2fe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80478a5f-54ac-48e2-a02c-d8724235627a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd9b5430-d4e6-4f4a-a8ba-06a267387085",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59e46b5d-4e06-4450-a1df-a9426d3cd537",
      "documentation": "<p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. </p>",
      "method": "get",
      "endpoint": "#Action=ModifyDBSnapshot",
      "responses": [
        {
          "uuid": "f5dc02da-68d4-4617-928b-c385dada5f41",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71813769-aa86-4a08-ab09-df9941ac2c0a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a05a71c3-eb7a-48d1-a18f-130f8f9f1789",
      "documentation": "<p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. </p>",
      "method": "post",
      "endpoint": "#Action=ModifyDBSnapshot",
      "responses": [
        {
          "uuid": "bff7e11e-3168-4352-8f38-798baa250b07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8ec9cd7-9ee4-425c-8472-30c2a4ebfd1c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7427a718-e7bb-452b-aacc-a4c28da308dc",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyDBSnapshotAttribute",
      "responses": [
        {
          "uuid": "b07afd15-9c7e-4aa5-a2f1-efd81091b352",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba04bf05-fc26-4ff6-af81-f37620602396",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9e14c1a-9167-4a5b-b1d3-f85c7c675380",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a7009aab-431c-4f70-8bbd-985d0f1a27db",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23f4cc10-e373-414a-80cd-55a66b557ef5",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyDBSnapshotAttribute",
      "responses": [
        {
          "uuid": "18558093-185e-4306-bb6a-deeb5517329f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46dc9748-a257-4daa-ac95-cb92863ce1ac",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48f7692f-da1c-431c-8004-753cd778cef3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "586f3257-5cfc-474f-8bb1-0a858f3a9190",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a3abcfa-7501-4784-b305-47020616cb49",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "get",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "e64fc255-fd1b-41c7-97ff-0e55d6aa5d3c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5711de85-a7f5-4c5f-b7d8-186f8c1b1e07",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "96621a41-e47e-4c02-a9d2-13a0fba86f82",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf0821b9-0d00-4798-84f4-a21ff248a52b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fee2557-f0ff-47dc-a307-ca7aafa97190",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59e9ad7d-9c7c-4465-b99b-0d6403dc39d8",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a12058a-984d-414e-ac81-8b9c08d779f1",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "ec416f0e-ea05-4a74-9edc-d8819582d80e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "488b482e-6b07-4aeb-917c-9733234ca0e4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff77e6c6-49d1-47bc-848d-7fb0a11422ba",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c63b0d62-0508-49b2-910d-622c90ccde12",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8720037-6541-487a-9260-cc14b5e4b2cc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "439b5630-57d1-4cee-9500-eb520a9cf0a0",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce09d2fe-8805-4f03-b49b-e81fbe37b655",
      "documentation": "<p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "8cd0e9e2-5bc0-4a81-b527-bba3a7bb1f24",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26ea0d72-286e-46ad-a839-548a0a876e89",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16611ac5-0bd8-4792-8a76-4f680e2ba331",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3efd024-58ef-450f-94e0-8108421ffa84",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a0273be-d341-4960-84a6-55a317394c4b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91710463-4fc9-4073-b0fb-f151b4a9e89a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd8aefe4-1037-4147-b04c-e9755f3f227f",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e0403015-ae0e-480d-a513-5a15c9363660",
      "documentation": "<p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "4c8cd0d4-1ce0-4b77-b459-b131b0382431",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aad4da4b-0a09-425d-9bc9-4aca9508f3bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39f5b22b-4edf-4a03-a041-82fe6501cb71",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7867ae80-dc91-4de6-b98d-18ee190f5a7b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a02a2b2d-74f0-42b8-b152-7cf0ec98033b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "69407f9f-2276-47df-a630-fd9544d442c7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ae7b8b9-62bb-4791-81e8-bc5e7df395a8",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6531719-a7e5-420e-980a-beb5f1f129c9",
      "documentation": "<p> Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyGlobalCluster",
      "responses": [
        {
          "uuid": "575550ae-6db5-45ac-8a66-2c689b8bca6a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "721e2556-99ef-4fa1-923e-1212aecefddf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d360498-77ad-4990-abe8-162a0bcf2ed5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a86e7c49-e657-4d80-af03-b9f57ae8c424",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff5fbe47-afca-4c28-a164-2e4452833087",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60061a6d-9b4a-4762-8b4a-288498adcdb5",
      "documentation": "<p> Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyGlobalCluster",
      "responses": [
        {
          "uuid": "f7919846-8d0c-4b1e-9fae-69a0cf318aa4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d0bc70b8-d35b-4ad0-a7d4-04b1beec4751",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7fb3a232-4819-43f5-aef4-929d645f6c59",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "26bbcfae-72d8-4ecd-b416-380f31b07037",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b7d2c88-0d10-42e5-974c-792be29fc620",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20b3fe3f-3b31-487d-9a86-94486db42527",
      "documentation": "Modifies an existing option group.",
      "method": "get",
      "endpoint": "#Action=ModifyOptionGroup",
      "responses": [
        {
          "uuid": "fbceccd4-a61f-460f-9584-ada47340243a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72200167-f4db-4b6b-bf50-11b5f60bd900",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac6e0d8d-3339-4d64-9891-e4b7a533ee22",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "628aa363-f6af-4151-a651-e94b390b00df",
      "documentation": "Modifies an existing option group.",
      "method": "post",
      "endpoint": "#Action=ModifyOptionGroup",
      "responses": [
        {
          "uuid": "9ef744f2-2f8a-4782-b58a-4cf464307c87",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67292f0b-25b3-4838-8273-7c1f3ff4a9ac",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2337447e-ba62-4b40-a040-f46240d795d9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8fe5cfe-02d1-4c94-9f91-bf2e802bb438",
      "documentation": "<p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.</p> </li> </ul> </note>",
      "method": "get",
      "endpoint": "#Action=PromoteReadReplica",
      "responses": [
        {
          "uuid": "1ca517fb-13b0-4738-92b9-37758f251179",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1c4da10c-ff0e-4ae2-8651-389c64a75c1d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16828925-72b5-4d90-acff-30bd2a6fca6f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9685b010-2eee-4773-b3bd-96b08da57a7e",
      "documentation": "<p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.</p> </li> </ul> </note>",
      "method": "post",
      "endpoint": "#Action=PromoteReadReplica",
      "responses": [
        {
          "uuid": "832a55b8-cdf7-4540-8b12-d82e73f4b799",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fdb8bec9-0f6c-4036-bdc0-5661c32ab4cf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d522c93b-c4a2-41fb-9ef7-70437a7ddef8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d110d034-a574-4315-a9bd-87fdbc620763",
      "documentation": "<p>Promotes a read replica DB cluster to a standalone DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "c40a15ec-84a6-4094-8b81-530dcdb136c1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b0a4c4aa-9d89-4fe8-ba45-cdf84dfe7c87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "879b4169-edd7-48aa-bb28-9febe760b336",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9fca3c1-bb26-46e1-9bcb-2296b7ba3b8d",
      "documentation": "<p>Promotes a read replica DB cluster to a standalone DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "83454375-7b7c-407c-a323-87cc52c31c23",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc31e742-844c-47f6-9e25-b884241d01d2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bdcc777-de77-4313-b3a7-cdaa2fab5299",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a12d06b-c6a9-427d-9781-f5ff70f621df",
      "documentation": "Purchases a reserved DB instance offering.",
      "method": "get",
      "endpoint": "#Action=PurchaseReservedDBInstancesOffering",
      "responses": [
        {
          "uuid": "29a7b5ec-3602-4b30-be7b-97363c500ea4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9d718723-3974-4dad-b3f9-fd05b490262a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4909ef97-5bf4-409f-b787-277ae45d58fe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ReservedDBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5882efca-0d22-41f8-a899-56043384c27a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ReservedDBInstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5044f4c-a9db-4037-88b9-358112030f88",
      "documentation": "Purchases a reserved DB instance offering.",
      "method": "post",
      "endpoint": "#Action=PurchaseReservedDBInstancesOffering",
      "responses": [
        {
          "uuid": "0a1039dc-ee7b-433d-8df2-2b5e357c450f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7b598f2-a39d-4cc9-a8a1-531f118eac09",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5d87f1a-d102-4119-acbf-d3d44cb17d66",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ReservedDBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7f68fb4-82b2-4cf6-94d5-07a9f44a2bc6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ReservedDBInstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6c5730d7-c424-4803-a3a7-aed77264848b",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p> <p>For more information about rebooting, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html\">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "5a13c09a-85e3-43a2-ad74-e87d9791cb5e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dd6c3605-4679-4d05-8571-047ad4372734",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d076eb5d-90a9-4506-ba6b-45001368e7d7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b492eed6-689e-4001-8685-66af3614c643",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p> <p>For more information about rebooting, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html\">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "2d0f1068-bf2d-4309-9729-f38205951589",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d5e541e-9eb6-419b-9b19-9ee9b53c66cf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "01ff1534-4ecb-4077-9633-021bc55cfed4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d87c25f7-5230-4ddc-ace9-d5497c424c87",
      "documentation": "Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=RegisterDBProxyTargets",
      "responses": [
        {
          "uuid": "0bea8b87-b166-4093-b644-140dc320f1d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f41b2c3b-6832-4d69-aa7d-6e0bdd128d96",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09f063c5-a7f9-4d0a-b1d7-0e4f5dcceb95",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25f722e6-cbac-4bd1-983d-d7c64e2b093c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29facbdd-f971-46cf-a595-37c8838cf562",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d35ec84-f2c3-4de8-9f4d-bb92ac9fd128",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetAlreadyRegisteredFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ef3a49d-06ca-48c8-aacb-49d8bff899a0",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a6cd0e8-2a5e-4f52-8393-7ccfe1b1ac27",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c764765e-59e9-4ffe-9aa1-40760cf007e0",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66d6cc7c-973d-4d0e-a886-55aa045fc494",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InsufficientAvailableIPsInSubnetFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93fd7b92-3bd7-4f25-9ed1-746b1eab4437",
      "documentation": "Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=RegisterDBProxyTargets",
      "responses": [
        {
          "uuid": "78cc2f4d-f8b0-43d9-9b8a-92824b0c72a3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26bc92f0-51b9-4f3b-9e4f-198b7639924a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f40d864b-e57a-434a-9e73-c95ac1e7c99e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7af271e4-7426-4773-ac4a-82c51ac5f336",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86b70cec-01d1-463d-88fa-77c0013f9ff8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2775083a-e1f9-476e-998f-73573cea57c5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetAlreadyRegisteredFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b400a9f-1d3d-46b8-aa2d-a0b052019947",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "614959b8-3008-47a2-8ff0-2a3b63527261",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdc2e99a-e6ea-46b4-b101-531460244063",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bdb88df4-6077-4f44-9051-ace11bb41b6f",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InsufficientAvailableIPsInSubnetFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8350025b-2214-4de1-8c6b-e5f064339331",
      "documentation": "<p> Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RemoveFromGlobalCluster",
      "responses": [
        {
          "uuid": "0a10afba-f4a1-4be3-aeb1-fdd6860d1dc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aa83878f-dca6-4650-9c0c-2e1c0a194f60",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ade511ea-27ec-4d16-9469-243665aed63f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78519970-655c-436e-8791-e5a38d65238c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7142e2c-07f3-4ec9-8e0d-b37865251f84",
      "documentation": "<p> Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RemoveFromGlobalCluster",
      "responses": [
        {
          "uuid": "68c59962-0d01-41b5-ac7a-5951b81f0a3e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cef62f6a-845f-4499-9fa7-900814cc8343",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8d0863d-69f2-4919-bb22-6f4b2adca833",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79b02d00-8d76-433e-ba31-e14a31ddabb4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98c13fbb-3ca4-4a84-8d67-8725c2150c85",
      "documentation": "<p>Disassociates an Amazon Web Services Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf </a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "3cf58b31-b539-4293-b351-cf3185b9bf10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d51a0900-e705-4ca0-abd7-d997e6007f7b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef480c55-e4a0-4ce3-97b7-739f2467cab2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57ac31d6-42c3-43c7-8501-a0a3e36da3c0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "965b903b-8554-4e9c-a4da-06537f07569b",
      "documentation": "<p>Disassociates an Amazon Web Services Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf </a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "779261f6-4bc1-4dc9-93e4-f50288b39a53",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "540165ff-b2d2-48cf-b8eb-3758b291c6df",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d358905-8399-4043-9b64-0d7a7d04974e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1821673d-d093-42dc-b723-54af47dfc44a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2db2f8ec-4a29-489b-b0b4-ab97509dce5f",
      "documentation": "Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.",
      "method": "get",
      "endpoint": "#Action=RemoveRoleFromDBInstance",
      "responses": [
        {
          "uuid": "85513190-0edb-430b-9bb0-6bc7f47b8b4a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4227ad03-8bcb-4b1a-b595-6f569de9824a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa3faa92-4962-4cc6-8b7c-e57b877c1ecd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b9333f6-92dd-45bc-bde3-812b6f133d85",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "712b9bda-a85f-4deb-bff7-c6ca789c03b1",
      "documentation": "Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.",
      "method": "post",
      "endpoint": "#Action=RemoveRoleFromDBInstance",
      "responses": [
        {
          "uuid": "f82450c6-5507-4fd3-99fa-30b3cfa98786",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5444061e-0195-430f-a73b-ddd78fb969e7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bb96686-39d8-4be0-b6cd-7acfb1d0da2e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d108844-1e05-4db9-b1b6-36c0be34b065",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3bfdad4c-1aa4-4d3d-b9c9-eeffe1e5fd18",
      "documentation": "Removes a source identifier from an existing RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "3c6f2d81-9c02-4358-9937-d79d0f948fa8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29483aca-32b2-43f1-b13f-dc02b4520ebe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a969bf1-d753-4041-800b-b0fedeb42fde",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f328f0df-745b-43c5-bf51-7cf823fb1b54",
      "documentation": "Removes a source identifier from an existing RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "89aec28f-d2ee-4b45-a312-c6fdb6d7206c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ab5d9a84-243e-451f-8324-1396246de892",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "167aa394-71b1-4921-810e-dd90b110d528",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92f33357-67de-46f6-95f4-fc075bbf5391",
      "documentation": "<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "074804e8-30c3-4356-ac76-6d3e5be18e14",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00650f08-b497-4020-9510-afa6ecaef022",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "654dfb67-26e7-4a18-b81b-dd2d1e6056fe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c2ab1ef-50c8-4fdd-b509-1fc638e6d324",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0398bea7-571c-4b35-ae91-09bddbe4b0fe",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2df6af1-87d5-4445-b768-8c3054f0a505",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a4beebb2-ed7b-42c2-ba67-2e6456d226c5",
      "documentation": "<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "4fd2e81b-53a9-4161-8e1b-ed9257e1a20e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0c4b68dc-7253-478a-b800-a5eab5e72777",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c49e435-66e1-487c-a42e-7d8d991f15f9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8eaf24f7-73e9-47fa-b944-8760ca314e42",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c19a19f0-d903-473f-b526-ba8d76bc149c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e962503-8210-4bde-b68e-bcdda83a150b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a41a33f-23b8-4a4e-9250-f7b3781ac518",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "a288aeca-3c66-4995-baea-a1d840cefea3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b0665cd-16e4-4e34-aa62-2ee2704404fd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3cf3b468-752b-4dba-bab6-640993264cee",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e824807-700b-4ac6-b590-871e073b2a84",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "b0858bf5-a8b0-44a3-a53d-9bc793f6d033",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "585a1e22-32d9-4932-98ce-1702b57f272d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "367ae910-3fe1-41ed-9cd5-2b8be20677fc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1189ca35-6411-424a-8fec-566a9bec2e3d",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
      "method": "get",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "69d19b25-e1bc-4267-a6d5-95b1324d185f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ffab1209-bb93-4017-ad45-fc8eb4e8093a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a488051-5e8a-40b3-b758-816a1dd27c17",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2be75e0f-cfa2-4f4f-9916-39f660f37993",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
      "method": "post",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "5c48973e-6d3d-4489-a014-d2fc692aa1f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90804fbb-d96f-4660-9b0b-bfe2fed57672",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2900e21e-cb32-4c8b-9564-151adc18664e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "750b6f14-0c8b-4e79-abd9-f22c8bb291f0",
      "documentation": "<p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3\"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterFromS3",
      "responses": [
        {
          "uuid": "d6eb337e-b0b1-4c85-a790-b34f9eef1c59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8a7a84a-da57-4820-8ae3-f3ab344d9b5d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b071fea-f7a1-4b10-ab96-b70cd6711e1b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b39fb051-bf4c-4ea8-a8fd-c6cecebf6688",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b352f7da-edc9-4bf8-96d0-e5cf89878cbc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac490f0c-3667-4a59-bcef-575b317b90ec",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7e1a6bb-6442-40bd-b0fa-37171c2798e6",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "813b5f0f-5c83-49bb-8a33-c971f87ebbd2",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84708b9f-94e3-40e8-ba8b-58335cd5d38c",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da6262bd-1e89-4a6a-a849-bf22853a8de4",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1a4462d-2260-457e-83ab-aa0b22933c72",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3756a6d9-38d1-4310-baf8-a5ae38a99c98",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eed2825c-13a3-469e-8e72-0d908ce20ed6",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ade1138-e3e8-4454-a341-ab3be2952ce9",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7a34f3b-9735-4ff0-935b-4cc9eacb2c3f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94b87e70-2ae0-4221-80b8-d04c7e027856",
      "documentation": "<p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3\"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterFromS3",
      "responses": [
        {
          "uuid": "9d81d31b-945a-4c31-be04-19f283e09276",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8f149309-15ef-413e-b88d-5d3360cb28eb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b632f6fc-5367-49c6-9b6d-51229f888f3e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e5d92c0-51fb-4686-a462-fa9ab2b2058d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6de48d5-0ce7-4830-a385-0ae407f1723e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6df7d2a0-a9eb-4eff-b717-3b958eb9536a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c05d69b-5866-408d-ae12-315458f46a96",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae5c3ccf-4eb5-4ee6-a60a-62e9e5d221a8",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de000762-8f07-4457-9a46-41d01a4054d2",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8e82679-f8fe-4d56-ac5c-d7de1c89ce88",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "939f4663-d164-4223-a55c-c6aa2dba53a2",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6d8f27d-69d5-4981-8e31-660513233a0e",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0eca1d2a-2e27-492e-8520-2b120d4c6eeb",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce88a2e3-b8c5-4d51-b44f-2b6b96e92cfc",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7fb0c3c-4d42-4fc6-a3e5-70bc3212c7ca",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbf5fc80-b180-4cd7-843a-1ea9f783ea97",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "b2f8f3ee-2cb9-4c31-b2d4-e76174936214",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "460de110-9c45-471d-bb6b-25cac0059dd5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea869712-ed3b-4b0a-a872-36890bc83051",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5761b84a-8c2f-45b9-b9f1-49673af180de",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a44b0f4e-aacb-4ec8-bc84-4a31a282c735",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a10e05a6-c367-4e32-83e5-491d4f60b9d3",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13bbc93d-a87d-4e07-8dc8-972c7400c1ef",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17189c10-eb22-4ba7-b44b-ec0bf03009d6",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc58b3d0-73a3-4dea-a943-cdce9ef9d52f",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcc7a968-1d00-4cae-860f-e04db21b3e13",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e078f49a-b1a3-4148-9c89-574f1dfb74bd",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c858479-9675-4801-b48f-8ef7537f83d9",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40ab4616-fc12-4588-ab72-9ab44057e9de",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8b79b9a-1179-4865-b5a3-0c622d7f1ec7",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "058c2af7-9119-488f-8018-ae68b6e5b07f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af21e011-dc9d-4803-ac2d-c87f2b2f8c73",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90abbc15-4984-4278-ad5b-36a43f0071c4",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b2d0d80-ed2a-4453-9b14-f89a64adfdde",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "430f0151-ae36-4535-af80-7407bc2a8b95",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4d80d68-4258-4806-a55a-18dc1eedab93",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ef0cbdd-dcaf-406a-9ce6-35dbd553706c",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "22102ea0-40de-45c8-b6fd-059fdd44f006",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea23ae1c-99e4-4dd6-83cc-455e20e5604b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e906ffb9-50fd-4fcd-9eb1-966fc2062316",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9477b11-dc95-4906-8dbf-6c5435f11524",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7aa1286c-4850-4b70-a572-9205681f3015",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4992334d-f9ba-47e8-8c17-8bda7e130fe1",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "504034fe-297c-4c7c-a080-9d9733de80e8",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b8dbb47-36d3-44cf-a270-759f4cfefb32",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c65c8a0-4adc-458a-b1d0-a391c94525aa",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e413986c-da0e-4867-a09c-4696d795c6fd",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ef42607-0fa9-4168-8a21-3c8b057a7551",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c577ad9d-6072-43d1-8510-1ed8e7e7dc7d",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae66693c-3dd3-4526-927d-28403fa8b447",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d402aec-0d80-412a-9bb2-598a7ca2692c",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66cf1033-a28d-408d-b258-bb6fb5f80d23",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a9aa5288-3855-4ae1-8333-873317d78c3e",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04117beb-6c2f-4a15-9fca-c45d4bdd4e76",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8999c8a2-e3d5-45aa-9897-d61ed625a267",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e122c23-72e3-46c8-a9d7-040bf2bdbdd6",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f3c3525-c3c0-4948-a7c6-f7667d445c9e",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9246ba1-8a23-4c67-bbed-a488e2fad487",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "2c3b5227-3cc4-4942-b349-6d975ad91279",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b2137f59-3dca-45d0-b7c1-f60e34903762",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de0e5e7c-64c2-4048-a88b-98b2b39700c5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d13032d5-e0bf-47ae-89d8-20e743e60851",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "badec92e-789c-4f9f-9353-ac112042ee3c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e68c3304-2e51-45e4-93af-da6d5b1f76f6",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09a3644b-a81b-47ab-b51e-a2ec1aac4ec9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe0584fa-7669-4cca-9499-c3db78924ccd",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e972e7c-ed43-4be6-a17d-4f7105824342",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a98e21a4-466d-46f0-b5ba-8ba031042d5e",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d40ed29-c6d7-4636-b05f-f30b2c45793a",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2948b3fa-dd71-48b8-a629-daaa58f38a51",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70bb24bc-7486-4f73-aa9a-fce31ff51618",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70f00af5-f631-4749-8fb1-d7e57cb5b897",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e75c2c5-f3ff-41b1-a90d-c7c55bb8f40d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abef8fe0-9b24-44f7-a598-3d1776db44f8",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c78c2fb-c905-4e1a-8aeb-01d5b45ecbd3",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e0fbdf3-32be-48cf-b3a7-8ceae14299d8",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "205350d4-0150-4fbd-9daa-846402c8903d",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "474b8acf-dcfd-4504-b3e5-23801342b2fd",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "a4a30354-27cb-4f53-9d00-31860455a3a3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aaf1a69c-26e3-4b0c-afc6-657211a7cc49",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "222b68b4-2b8a-44fd-ab0e-3a51c09b1ee0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a4154c8-aab3-4ec3-82ae-a91a965a8539",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bd27a486-e697-4210-998d-f8c707ca25d6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38152878-41b9-45bd-992f-39323c41e020",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0b860af-4c90-42de-bbbd-d5b477f07ba4",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "748c46c6-c17a-49ad-bef7-3332b7292529",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f4b0565-c81d-4cc6-965a-ec249e0f490f",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3618fada-ea5d-4264-afb0-9ef614463676",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c288833-1197-440b-813f-f1e14f86e25c",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8f7643f-8546-4893-b15f-67d31e788c3e",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7089b83e-1573-4727-abd9-395afb0efb1f",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac1bcb0d-6c7d-4dff-bcb9-6a5a6e3e768d",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c454baf0-1091-4fe9-a4d5-493931b56fee",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86b234cf-9249-4a08-8070-e1796300f361",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88b9c6d8-e133-48fe-8b72-21e836d87b95",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e16774c-a73b-4567-be2f-e2f1eecf5f33",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72cada5f-5c95-4d08-991f-fd9d4ef67e11",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea4f32c7-ced5-49d9-94c8-71cd555e1f32",
      "documentation": "<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceFromDBSnapshot",
      "responses": [
        {
          "uuid": "ec92d170-063b-48b1-b033-dceb70eedd2b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39c00035-1b6b-46cf-8f28-80feb5df239f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eabbec29-7a09-4afb-bb5a-dc8ad8ba99d8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9a465e1-7c3d-44b1-a830-ab4ae7d53102",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a5c53cb-56c3-4730-9594-e49de5b89589",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6d5827a-765e-4cab-bdd1-3ba8d7f9fd7f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9e283e0-6ecd-4eba-af94-288425d10cfe",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8f1350b-3872-434b-a298-076381c3e11b",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "005da583-ab67-4c3a-8f03-448ba9e1f497",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4dae08fc-c2a6-4be6-8b50-64c8ac916630",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "124942b9-a548-4f1b-9f4b-08ec3a16c304",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0a7d97e-4dbb-45f9-9d07-95b708d45efc",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c06b02ac-dd97-47b7-ac0a-02d22317fdc6",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12f28e2e-1aa8-443d-bd52-c9c1528c7dde",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2677059-c28e-4545-bbd5-061e3e27a043",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dcc47fcd-8f53-4620-8afa-4a4be7168a68",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef90aef3-1a43-4235-aeec-a46ecc0d9b64",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9573bc61-2f01-4404-80a0-3f2e564f4fbb",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f15032a-b71b-4c32-8bec-8e2d75ad696f",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9cf92a7-c6a4-4b45-865a-76fbea5d307e",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d03b3d09-7b05-4047-81c6-edb98f6bada5",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d247e4fc-7c4d-40fd-bdee-a4ccc221b935",
      "documentation": "<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceFromDBSnapshot",
      "responses": [
        {
          "uuid": "be7624a0-4875-4992-9d93-e5dcc644edbf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "765ca4b2-b988-4202-b034-b17fa03669b3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "018ad772-17cd-4751-b76e-3a991ac9cef1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51fbe428-d35d-46cb-9281-ad0924190787",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c522c3b3-c583-470f-b2ab-5e06aa0afe37",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1807a0aa-8d1c-4683-a9ae-771e6402d404",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29602ca3-4e37-4147-a2de-d49270feef46",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f40ba6ed-e978-46bd-9434-42dc2bcb1b30",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5baf9f8-aa90-4745-9a63-f59ea2319a19",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0234f37-b2d7-4275-9341-3bb47cf211fe",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8663f03d-a367-4412-a7dd-6884a5c63837",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86584e81-1901-4fca-b9c4-63983c235aab",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8e958791-6043-409c-9b02-75f44c274eda",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d878e8e0-13b2-436f-bdda-50d9a9ac7929",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12665c97-1d2b-42ec-9c62-431034467c89",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d55146d1-1b69-426c-9e4d-f6bbe751ff3f",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f66f8fdc-c939-464c-a4a3-7a811b293485",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8626856-e6a4-488e-b17e-2ae707ae79a1",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abdd06c9-66bb-4410-850b-21eb80e2cc5a",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "945006ac-f21b-4ebf-a385-422d6cb97967",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90a72657-659d-40ee-919c-13f38f04dd12",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80338567-6f78-4024-8a8e-584d89eb7b6c",
      "documentation": "Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html\">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceFromS3",
      "responses": [
        {
          "uuid": "d0a7d90f-f406-4906-9d16-0039a3bcbb08",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e193965b-a043-4668-8213-4f50826a23a2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "76003d41-d480-4596-b547-a464e0171680",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a19b3725-f17d-46b8-8a3f-826c3fa9dc1d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "905f5b65-0629-4a4f-aaff-f35a16255453",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d561543-18d8-4f13-9ac2-4fff46d64499",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d152df8d-9d4c-4f80-832e-b2d15f30abd5",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "effff881-d6e6-433e-b526-be80917bd59f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e5610b6-8844-4ec1-8b58-a01d9b7104b5",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e3d9a42-f9ea-4b5c-9fb8-e29fe5f93aec",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "baa1d496-1b2c-4cee-ac97-2e0dca49b74c",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e41a4b94-df31-4c2a-9d52-6799023278a3",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d84c0434-1425-40ff-9601-55a754101919",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "218bf4cd-5036-4159-aa30-623f62b6b429",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7eeda76-1fa1-474e-b04a-a598e9b8cae0",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5689e2c-715a-4361-91e2-bb2cdd789137",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be7579af-3591-45a6-93f8-f97aff01c87b",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ce6ac2b-12ba-48d2-b26e-09c3d0bc31a4",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f05fd632-51d0-4bd2-a53a-2616a3526adb",
      "documentation": "Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html\">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceFromS3",
      "responses": [
        {
          "uuid": "907be91d-ca62-44f0-8fe5-975fd887da76",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "98dfba8b-ad8e-41d2-b87a-03ce0a68de7c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51d6ef4c-72ed-446a-8619-535d712a644c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20e862ec-4e40-44f3-9bb7-beb75a7a1965",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "253909dd-4415-4c13-a0ca-42912e55f606",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49d65f97-4c7e-4598-8019-7b00cc02c41c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3af0d6d8-8ff0-47e6-8066-6e8b11a37abd",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b1f4d9f-aee8-4deb-93ce-08509827f424",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58f3b75b-ba92-4e2f-abf5-66acb26091ae",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db37491e-862f-43a6-9631-698469197d74",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "678a8ef7-e251-4434-90eb-05bdde7ed70a",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83f0c194-e280-4693-a8b7-58d3a2ef7c6d",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30212e56-6d62-40af-8fc5-a3f569e4925b",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34905d24-12f1-4b94-af9f-1fa6999c3129",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77655051-1f4f-47bc-94ae-10b3d5abf467",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a861dea0-7fc4-4af1-ac86-3a88cec1a6cd",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a31b8b1a-3320-4a01-8078-641fc4d67b85",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd1f4c57-dd1d-4fc8-a4b9-85d0ccc87ad2",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b0df6c87-dac5-42e4-9221-cd55dce561d9",
      "documentation": "<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceToPointInTime",
      "responses": [
        {
          "uuid": "a5643ee5-3002-4041-86ee-024de2c572b8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71c9a2e5-f5bf-4710-8dbc-55fb4a9dd096",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07b1b94e-f8f2-4ed1-b34f-e7f2c56a3736",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "13f12736-9efd-4f5f-af53-e62603c9a044",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f39502e-6109-44a8-bb2e-b91b7d931037",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb7b6494-6426-43b8-811a-eec486614cd5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "765933b4-fd80-4d2c-9d9c-e074468f4044",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PointInTimeRestoreNotEnabledFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "658fc136-90c4-44f7-8a1d-71f8e9a4abe4",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7e90898-0d0c-4756-af97-e967b709146b",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a72e85ae-e0f2-4171-97b1-dc262cce0f87",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a4e2c28-7715-4678-8aee-dfa786c1caab",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9ce0757-3d4a-42ae-a470-4f4823fb8b17",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02fd5a7d-c463-47b2-a83b-375c68729272",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2073b216-1679-4276-9a87-ca1dbbde5581",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6505030e-3b22-4831-9283-cd8c719d7cc8",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "634e4c65-752d-4b3a-9e0d-462738b340bc",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bd5c585-a268-4c88-b335-5858ef1de219",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "450dc34e-be73-4751-8b28-53b93be6dc96",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3501c40d-5f66-4373-b3e3-f6ac5c6894c2",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "406019c0-4b9a-4acd-b13f-ae84e5370652",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f213013-7da3-4286-8afd-ba3e7adb663d",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ab7d6dc-2728-4969-b5d6-9a97825e8e61",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b715430-c350-485a-924f-e17d43f93f80",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3cb360a9-482d-4d32-9f68-be02d12b3465",
      "documentation": "<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceToPointInTime",
      "responses": [
        {
          "uuid": "db824fb7-0767-4a64-b2f5-5a878a063cf7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b24d0b9-6623-4373-8e8d-09e2afc2ed86",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c67ecf1-9d8b-4a4b-9e16-12541bd2b9d7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39c7c15f-0f4c-480f-aec9-d6beb961f879",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f5644df-ab58-4369-bd0c-90c7883c1b25",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "367ace10-fa1c-4600-b435-33f6d2beea8b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f047858-996b-44b2-851a-eabd4328be90",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PointInTimeRestoreNotEnabledFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b6817b5-13f4-49f8-8973-55e380416fab",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0e49709-d7e7-4dd2-b987-369282a66e8c",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "abd163b0-095b-408b-bf7d-3cf142aed03f",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f5c9222-1dac-4895-863f-24abd5bc2764",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "318233a9-dbc9-4544-95a1-a370afec689a",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d29e0490-fe73-47aa-8bf6-161a70c85a47",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0e131e1-46da-41f9-93fb-ca6d86f20f45",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27083654-c2ca-41bb-9b51-0449985a3a36",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e609449b-5c35-4148-8fa3-629ad7ef7109",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9b38905-3e2e-4ee6-8545-62f266b270fe",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27b35590-2462-4ac1-984a-309c715b52be",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "760638f4-0bb9-4abe-8cc2-19ab0cc4517c",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e8483f6d-2118-4691-a30d-87adf7e3bbe8",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "06dd80d5-5f2b-463a-9a50-5799821a3a29",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05220955-af04-4fd8-97f0-0fb1781a10b6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab281c88-a63b-4ac3-bfaf-fbb2657ad2b5",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b03b3312-ebc7-4302-ab1f-47558d956f1c",
      "documentation": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).",
      "method": "get",
      "endpoint": "#Action=RevokeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "85e9d27f-9c8f-42cb-864a-cf2e370f7db8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee136134-aa4e-49b1-adcf-234daa54595b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "373743d8-388b-466d-9c7e-86009dba5bc1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a121430-5881-458c-98a0-a561ceb2db84",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f4879fc9-05e7-43d0-9145-f9cdb94cac5a",
      "documentation": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).",
      "method": "post",
      "endpoint": "#Action=RevokeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "9390cf16-c003-4468-be30-f4dbd8e93c65",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c4486363-97ba-4169-b2c2-e6a311687b9d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0bac75a-7b9c-46aa-91e3-196152577771",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "328431a7-2dc9-42b3-8da6-5bbced3f8a6b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6d516c9a-4421-4a33-bcc8-1442f4bce4f4",
      "documentation": "Starts a database activity stream to monitor activity on the database. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.",
      "method": "get",
      "endpoint": "#Action=StartActivityStream",
      "responses": [
        {
          "uuid": "2cafa7c0-51ca-4a9d-a146-34278d89408a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3eed095-a2e7-4b51-87d2-640f0fa73a6b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d45e930-6203-4afb-a5eb-97c070e3de61",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "894c187f-9133-4708-99b9-f866769acf5b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd0c9700-dc01-44ec-a3e2-613264add48f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f53914dc-c92c-4f7e-9308-054a19ff8671",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b7d01ad-2644-40d0-a83c-8ac623547142",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3647155f-1ca1-4be3-8222-1c9443c14930",
      "documentation": "Starts a database activity stream to monitor activity on the database. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.",
      "method": "post",
      "endpoint": "#Action=StartActivityStream",
      "responses": [
        {
          "uuid": "cb1ca775-0821-4923-a63f-4a699becea7e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1788954a-17c7-4b31-bb20-7b1539a19141",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b86af69-79ce-40f9-9853-47e92f48a241",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a6fce05-0b8d-43e9-a505-f3f3f7802774",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f4253fc-c012-413b-a4f6-c94ef2f6c2c5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d55c2ac7-db1c-424d-9c66-704dc6fbe48a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec56b46c-bd63-4524-8985-82adbd94ef42",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdb58fd2-7ebf-4a38-a27d-5a0552065856",
      "documentation": "<p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "ee8c4d61-80d2-4e76-b4bd-d1dab22b1725",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee9ee922-46e6-4d71-9b7b-effb4a68ae30",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec8be767-58fd-4321-a539-d74bcea05f8e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6e01010-98c5-42d8-b48e-d985e222bb60",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13f3c572-8366-41df-ba9b-0b8d6ef2801d",
      "documentation": "<p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "1dc18a04-ccb5-4fdd-a0c7-a85c55f79671",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8bbb0f07-c405-482c-ba3b-6a0686ef2ed1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "804954ab-de4f-4987-ab12-cb09d6a90666",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d17c9700-85d9-471b-b58d-7e9ad71d8b30",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "319c2234-c680-40b2-8197-6bab1f7c5975",
      "documentation": "<p> Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html\"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead. </p> </note>",
      "method": "get",
      "endpoint": "#Action=StartDBInstance",
      "responses": [
        {
          "uuid": "bb8e9437-b7ff-41a1-b331-840a7b20bcfa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dc995d6f-565d-4cc0-90f1-2f686d3ed0b1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd171f31-77aa-4422-8bb8-e2eef8366512",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6158044c-fa09-4577-88ae-8c529cfbf962",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ca69f6a-7063-4433-bfe8-9385a765dc19",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b29dde18-190c-474f-b771-96a301affa7f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92353f82-dc01-4d7f-b65c-4d3ac9435b2f",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "748e3a5c-c459-488a-a0fa-550a1313b589",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4035b40e-abcd-4f7e-8013-bd5ec0e91a49",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86e6ddd7-ea3c-4948-a43a-ffde7a45fad1",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40093120-8eb0-4f88-8acc-bafbf4a3b3b7",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8d65833-8abb-4f13-9a40-8bfaa112d8af",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbdb7bc1-a273-46fa-9950-880a4b7dfd07",
      "documentation": "<p> Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html\"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead. </p> </note>",
      "method": "post",
      "endpoint": "#Action=StartDBInstance",
      "responses": [
        {
          "uuid": "4c6aaea4-3629-404d-870f-24f78d3e3202",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "44995f8b-6767-4634-b564-d0a42507a6db",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16ffd50b-ba42-456b-96bd-b5e18d14d8d9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4e57a88-9c35-4ffb-98fa-d9753ec3b460",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee72e0c1-6f66-4028-bf94-f005e4f4e98d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d718cc75-3dd8-4c7f-aaaf-8c648bb59a4b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf5b1a84-34c9-4078-9ee0-6a039c9d5e3c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7cdafff8-da00-45b2-be7b-86041d179f0f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a90b646-0b92-4c9e-97f1-adc8416ef889",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b7dd8f3-2fac-40a9-b780-c116c727d47d",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f354f52-baa8-4135-91bd-c7d7404c547d",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e19e4ce-3d2f-4642-a434-e261658e1e3b",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b901b557-0eca-432e-93e8-c351eb113e21",
      "documentation": "<p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=StartDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "7601f9cb-bcda-4020-968b-906f8090a17a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18d170e4-467e-448d-819a-5a40bd32425a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34cd27e7-6cd8-49b7-8a66-1ec2816642c3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c31c621-ad5b-462d-bce8-c99a8a31c2e8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ed6b341-c617-44fb-b8a6-16893d1162e7",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3e858a8c-78d6-4d76-a4e8-d7c56815b75c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1127dfe-1485-4dcb-8a6d-bad27e353be3",
      "documentation": "<p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=StartDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "fef47fa6-0431-4f2a-8db1-c5c1d2b4b804",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fb52b123-7c6f-4e3a-87e7-b7d774494944",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1ca682e-ad8f-47a6-982d-1fe5f58a5744",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1019f07-6ff1-4d71-9c77-569bbca09fd8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "58c1cce6-a2d0-4c1b-adfd-eeae95279448",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5f94396c-b181-4db4-bba6-654db590b414",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fcd1f80-1b46-4636-8a54-670c3fb13348",
      "documentation": "Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket. ",
      "method": "get",
      "endpoint": "#Action=StartExportTask",
      "responses": [
        {
          "uuid": "bbeb023e-256f-457f-8d13-81aa6b85a845",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7225239a-d18f-4f3e-95b7-07caa7f3dbcf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d85798e6-bef1-4e8d-8836-29cc8ac0d5bb",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c79cb4e-5e19-484e-9068-d36483e3b704",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ExportTaskAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f288f5e-95a1-4ce4-8a80-f0d125b78e49",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b5775db-12bc-415e-abe1-d130f72b3693",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "IamRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d78b198-25f2-437e-bcad-f844efdb068a",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "IamRoleMissingPermissionsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "099fe1b7-0c9c-4789-8dd0-e7f44f0838b4",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidExportOnlyFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c227fc5a-092f-4337-b26f-2d8670aa46f2",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91ff5a37-a5f5-4b9c-b5bd-a4702979af3d",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidExportSourceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f980363b-9c87-4ea1-bdd4-8b22ebcc8ff1",
      "documentation": "Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket. ",
      "method": "post",
      "endpoint": "#Action=StartExportTask",
      "responses": [
        {
          "uuid": "04e2be85-8767-4835-ab70-4dff0478d82a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e67d934-451c-4c74-998f-5b9f470561df",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66931ae8-2da5-455e-adc0-d5560f0047bf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "389e886d-1822-47eb-a3ca-2386d9510a41",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ExportTaskAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b630576-a991-4f3f-a06f-f3e8223d2ae9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3478797-1e05-4e93-a430-74a8ca99783b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "IamRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "915d324f-feed-43f2-8d8c-9402264a8277",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "IamRoleMissingPermissionsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df7ed3c0-41c6-41a0-8e75-e8910a820ef6",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidExportOnlyFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "591ab44f-2537-46c7-8d27-44ea5015e0a5",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9982d56b-e71b-4d04-8933-345930bdc6cc",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidExportSourceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e624f7b-467e-4777-85e3-8f9781ea2bba",
      "documentation": "<p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=StopActivityStream",
      "responses": [
        {
          "uuid": "ff3047b1-5d46-411d-94f7-c8c2cf3b1cad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "398157db-d172-4738-9f78-50b1708a6f5a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34bce90c-3543-4f03-894c-21ddc873d45d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ccaa1ca-b9b7-49f7-b68e-99f4cc791d1b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "25f9979b-deee-4ac4-bf72-b795446904c4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "755532b8-cc18-4c24-b0ff-6a9435eaf620",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "328b2eb2-2b86-4d59-a949-71df84ad6538",
      "documentation": "<p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=StopActivityStream",
      "responses": [
        {
          "uuid": "8fffe542-9f46-4d73-97ae-b109c69f3475",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1684cec9-0f94-441f-afd9-350e4eac78dc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "67bd8bc5-93a8-4da0-acf3-718323973fd6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac1c1ce8-b826-4516-8120-b505c20a5d70",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f85c46da-a70a-41be-96e7-5969a0ff8122",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d189a07b-baff-4434-a8a4-fd6f4c4e7b3f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9a6f3b7-985d-464c-af37-f0621240b535",
      "documentation": "<p> Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "55a25cc4-541d-4bd6-a494-bc2ea64765c7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "632ed79c-f556-4cae-af30-551d419e2775",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9954ae46-fdda-4fa9-b50c-fc90d6075711",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b3e5621-fae9-4e7b-9335-4e93e4ef2a3d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0031350-6655-4fb8-ba9c-3b098790e0dc",
      "documentation": "<p> Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "c44740ae-e286-47a0-a543-0b3e98285615",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e259a1c-88f1-4c3f-a4ea-9f2ce1748cbc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60e7ba67-df22-42c6-aefa-5308b86809c9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e8b0260-aa02-44e0-b5e0-8858e1e99abc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0190fb1c-cb22-441e-b898-f6160ef0f278",
      "documentation": "<p> Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html\"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead. </p> </note>",
      "method": "get",
      "endpoint": "#Action=StopDBInstance",
      "responses": [
        {
          "uuid": "14087714-9afb-4824-8527-190a5a3f12be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3445656b-79a9-4d73-89ec-3cece9579914",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89bf1022-b7e2-47ca-89af-32af95c455dc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf27e8b8-a46b-46c7-a5c6-8de9a6a27c7c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08d38e57-6abd-48f9-b60d-d2984f86f95f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2403335-af5b-4aff-9e1b-a34768d589bf",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38d2c68b-44ce-49ab-b01f-ccdb5c9cd1d9",
      "documentation": "<p> Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html\"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead. </p> </note>",
      "method": "post",
      "endpoint": "#Action=StopDBInstance",
      "responses": [
        {
          "uuid": "0bd53473-3068-4124-90c1-3f1bc3a14938",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "177bbc3b-2682-48ed-98d7-9dd4eff9f9a3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad8ab257-78c8-4ae7-b34e-2a00381067d7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8137a3fa-b8a1-4e4b-b6db-a912916c750d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f9db80d-9105-4a4e-967d-749128f1d00f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "993dd0a9-c627-4214-8160-a3c8f25c25b4",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3874289a-6dcd-4e0c-98fe-9365eb249260",
      "documentation": "<p>Stops automated backup replication for a DB instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=StopDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "6a594fb1-e28f-489c-96ab-2ba2fb0412f8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d967747-61ca-467c-b86f-7ba1ecb5baf4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ff8515e2-c6ac-41e3-8352-9b942436de53",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8bdd554-0954-4c01-b3c9-86e1d79c5683",
      "documentation": "<p>Stops automated backup replication for a DB instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=StopDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "c6985637-6f75-48a3-a8d7-b2057dd6b8ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80b64c1b-52b0-4b0c-8824-e7cb3a0100d3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4684f0ee-6289-4882-a7fb-fcfeea873be2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}