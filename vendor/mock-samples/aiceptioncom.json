{
  "uuid": "44df0ec5-7bb7-45fe-be18-3d6cd526ec8e",
  "lastMigration": 24,
  "name": "AIception Interactive",
  "endpointPrefix": "api/v2.1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "04566986-8b57-4cb6-a811-917bc89be601",
      "documentation": "Image contains nudity or sexually explicit content? [ image_url -> id ]",
      "method": "post",
      "endpoint": "adult_content",
      "responses": [
        {
          "uuid": "c524c6ac-2833-4b86-bf56-70960927ff04",
          "body": "{\n  \"answer\": {{faker 'datatype.number'}},\n  \"image_url\": \"\",\n  \"this_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Task succesfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "337b12cb-cd79-484d-a62c-5bb9ec8891e4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Task could not be created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b04eba25-74c5-4c0c-84a1-c62369c36b2c",
      "documentation": "Gets the adult_content task [ id -> adult content task ]",
      "method": "get",
      "endpoint": "adult_content/:taskId",
      "responses": [
        {
          "uuid": "0d3edb8b-fae4-4c9e-a189-1ce4df1993ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the adult_content task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ea8ce204-bd60-4ad1-a306-99fa87cff9f4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Task does not exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e593d2e-d803-4db2-b4d1-743a235ba192",
      "documentation": "Create an artistic image [ image_url, style_url -> id ]",
      "method": "post",
      "endpoint": "artistic_image",
      "responses": [
        {
          "uuid": "ba379615-8eb9-4ea8-a888-56e159e91913",
          "body": "{\n  \"answer\": {{faker 'datatype.number'}},\n  \"image_url\": \"\",\n  \"this_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Task succesfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "156610bc-9beb-41eb-9265-d784b4f50c79",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Task could not be created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e678e598-437b-4aa8-8014-b280186f8d5f",
      "documentation": "Gets a artistic image by task id [ id -> artistic image task ]",
      "method": "get",
      "endpoint": "artistic_image/:taskId",
      "responses": [
        {
          "uuid": "7ecb1d3c-0d81-44d9-8e20-7eed0274274a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the artistic_image task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "245145a4-26cd-4899-84df-b7c138d2b460",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Task does not exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e80bd0fe-7c48-4331-8c9c-ccd7b37939e9",
      "documentation": "What is that object? [ image_url -> id ]",
      "method": "post",
      "endpoint": "detect_object",
      "responses": [
        {
          "uuid": "0f08c91b-0383-49d1-ac9b-1ea6ceb40ce9",
          "body": "{\n  \"answer\": {{faker 'datatype.number'}},\n  \"image_url\": \"\",\n  \"this_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Task succesfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a4f0d4d0-f6ea-4c8e-9a27-5e61dd3a3828",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Task could not be created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87912611-6d84-4e5b-8e44-e083a9c69dbb",
      "documentation": "Gets the detect_object task [ id -> detect object task]",
      "method": "get",
      "endpoint": "detect_object/:taskId",
      "responses": [
        {
          "uuid": "e9d6a34f-479e-4e25-a6c4-b9dec1b0fc86",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the detect_object task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a37dfdc1-71e7-44cc-a36b-a342ed0a901c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Task does not exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02b48cf0-490b-486a-927b-010e5ba37803",
      "documentation": "Find all faces in the image [ image_url -> id ]",
      "method": "post",
      "endpoint": "face",
      "responses": [
        {
          "uuid": "9df756ec-79d7-458b-a851-c4a5ece31a40",
          "body": "{\n  \"answer\": {{faker 'datatype.number'}},\n  \"image_url\": \"\",\n  \"this_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Task succesfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27e8448a-1926-46e2-9ab5-82a66088b551",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Task could not be created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ca30727-3aae-4178-8694-a116f94478db",
      "documentation": "Gets the face task [ id -> face task ]",
      "method": "get",
      "endpoint": "face/:taskId",
      "responses": [
        {
          "uuid": "3ec4b633-84dd-4d5b-8f03-04b55c4c6ab3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the face task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ef61ee0-b9fb-453b-aabc-e4bae434ec6f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Task does not exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bad2f759-09ba-43ab-902c-9a3ebebfcb76",
      "documentation": "How old is the person in the image? [ image_url -> id ]",
      "method": "post",
      "endpoint": "face_age",
      "responses": [
        {
          "uuid": "608c8c95-670d-47fa-b2d5-f4fb667c987a",
          "body": "{\n  \"answer\": {{faker 'datatype.number'}},\n  \"image_url\": \"\",\n  \"this_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Task succesfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86b603af-e33a-4426-9596-011abf055a9d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Task could not be created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c462fd7-0b54-4ff7-804d-d66ac535e1ca",
      "documentation": "Gets the face_age task [ id -> face age task ]",
      "method": "get",
      "endpoint": "face_age/:taskId",
      "responses": [
        {
          "uuid": "03b05c62-e3bb-4b59-af7a-2cea69f3a094",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the face_age task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "302e093f-d0fc-4272-8df8-82b8f6332828",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Task does not exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}